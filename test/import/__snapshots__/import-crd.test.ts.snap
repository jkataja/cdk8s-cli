// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`classPrefix can be used to add a prefix to all construct class names Foo 1`] = `
Object {
  "author": Object {
    "name": "generated@generated.com",
    "roles": Array [
      "author",
    ],
  },
  "dependencies": Object {
    "cdk8s": "999.999.999",
    "constructs": "3.3.104",
  },
  "dependencyClosure": Object {
    "cdk8s": Object {
      "targets": Object {
        "dotnet": Object {
          "namespace": "Org.Cdk8s",
          "packageId": "Org.Cdk8s",
        },
        "go": Object {
          "moduleName": "github.com/cdk8s-team/cdk8s-core-go",
        },
        "java": Object {
          "maven": Object {
            "artifactId": "cdk8s",
            "groupId": "org.cdk8s",
          },
          "package": "org.cdk8s",
        },
        "js": Object {
          "npm": "cdk8s",
        },
        "python": Object {
          "distName": "cdk8s",
          "module": "cdk8s",
        },
      },
    },
    "constructs": Object {
      "targets": Object {
        "dotnet": Object {
          "namespace": "Constructs",
          "packageId": "Constructs",
        },
        "go": Object {
          "moduleName": "github.com/aws/constructs-go",
        },
        "java": Object {
          "maven": Object {
            "artifactId": "constructs",
            "groupId": "software.constructs",
          },
          "package": "software.constructs",
        },
        "js": Object {
          "npm": "constructs",
        },
        "python": Object {
          "distName": "constructs",
          "module": "constructs",
        },
      },
    },
  },
  "description": "stableexamplecom",
  "fingerprint": "<fingerprint>",
  "homepage": "http://generated",
  "jsiiVersion": "1.32.0 (build 3f4fe23)",
  "license": "UNLICENSED",
  "metadata": Object {
    "jsii": Object {
      "pacmak": Object {
        "hasDefaultInterfaces": true,
      },
    },
  },
  "name": "stableexamplecom",
  "repository": Object {
    "type": "git",
    "url": "http://generated",
  },
  "schema": "jsii/0.10.0",
  "targets": Object {
    "js": Object {
      "npm": "stableexamplecom",
    },
  },
  "types": Object {
    "stableexamplecom.CronTabSpec": Object {
      "assembly": "stableexamplecom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "CronTabSpec",
        },
      },
      "fqn": "stableexamplecom.CronTabSpec",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "stable.example.com.ts",
        "line": 72,
      },
      "name": "CronTabSpec",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "CronTabSpec#cronSpec",
            },
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "stable.example.com.ts",
            "line": 76,
          },
          "name": "cronSpec",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "CronTabSpec#image",
            },
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "stable.example.com.ts",
            "line": 81,
          },
          "name": "image",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "CronTabSpec#replicas",
            },
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "stable.example.com.ts",
            "line": 86,
          },
          "name": "replicas",
          "optional": true,
          "type": Object {
            "primitive": "number",
          },
        },
      ],
    },
    "stableexamplecom.FooCronTab": Object {
      "assembly": "stableexamplecom",
      "base": "cdk8s.ApiObject",
      "docs": Object {
        "custom": Object {
          "schema": "CronTab",
        },
      },
      "fqn": "stableexamplecom.FooCronTab",
      "initializer": Object {
        "docs": Object {
          "summary": "Defines a \\"CronTab\\" API object.",
        },
        "locationInModule": Object {
          "filename": "stable.example.com.ts",
          "line": 39,
        },
        "parameters": Array [
          Object {
            "docs": Object {
              "summary": "the scope in which to define this object.",
            },
            "name": "scope",
            "type": Object {
              "fqn": "constructs.Construct",
            },
          },
          Object {
            "docs": Object {
              "summary": "a scope-local name for the object.",
            },
            "name": "id",
            "type": Object {
              "primitive": "string",
            },
          },
          Object {
            "docs": Object {
              "summary": "initialization props.",
            },
            "name": "props",
            "optional": true,
            "type": Object {
              "fqn": "stableexamplecom.FooCronTabProps",
            },
          },
        ],
      },
      "kind": "class",
      "locationInModule": Object {
        "filename": "stable.example.com.ts",
        "line": 10,
      },
      "methods": Array [
        Object {
          "docs": Object {
            "remarks": "This can be used to inline resource manifests inside other objects (e.g. as templates).",
            "summary": "Renders a Kubernetes manifest for \\"CronTab\\".",
          },
          "locationInModule": Object {
            "filename": "stable.example.com.ts",
            "line": 26,
          },
          "name": "manifest",
          "parameters": Array [
            Object {
              "docs": Object {
                "summary": "initialization props.",
              },
              "name": "props",
              "optional": true,
              "type": Object {
                "fqn": "stableexamplecom.FooCronTabProps",
              },
            },
          ],
          "returns": Object {
            "type": Object {
              "primitive": "any",
            },
          },
          "static": true,
        },
      ],
      "name": "FooCronTab",
      "properties": Array [
        Object {
          "const": true,
          "docs": Object {
            "summary": "Returns the apiVersion and kind for \\"CronTab\\".",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "stable.example.com.ts",
            "line": 14,
          },
          "name": "GVK",
          "static": true,
          "type": Object {
            "fqn": "cdk8s.GroupVersionKind",
          },
        },
      ],
    },
    "stableexamplecom.FooCronTabProps": Object {
      "assembly": "stableexamplecom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "CronTab",
        },
      },
      "fqn": "stableexamplecom.FooCronTabProps",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "stable.example.com.ts",
        "line": 47,
      },
      "name": "FooCronTabProps",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "CronTab#spec",
            },
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "stable.example.com.ts",
            "line": 51,
          },
          "name": "spec",
          "optional": true,
          "type": Object {
            "fqn": "stableexamplecom.CronTabSpec",
          },
        },
      ],
    },
    "stableexamplecom.FooOtherCronTab": Object {
      "assembly": "stableexamplecom",
      "base": "cdk8s.ApiObject",
      "docs": Object {
        "custom": Object {
          "schema": "OtherCronTab",
        },
      },
      "fqn": "stableexamplecom.FooOtherCronTab",
      "initializer": Object {
        "docs": Object {
          "summary": "Defines a \\"OtherCronTab\\" API object.",
        },
        "locationInModule": Object {
          "filename": "stable.example.com.ts",
          "line": 140,
        },
        "parameters": Array [
          Object {
            "docs": Object {
              "summary": "the scope in which to define this object.",
            },
            "name": "scope",
            "type": Object {
              "fqn": "constructs.Construct",
            },
          },
          Object {
            "docs": Object {
              "summary": "a scope-local name for the object.",
            },
            "name": "id",
            "type": Object {
              "primitive": "string",
            },
          },
          Object {
            "docs": Object {
              "summary": "initialization props.",
            },
            "name": "props",
            "optional": true,
            "type": Object {
              "fqn": "stableexamplecom.FooOtherCronTabProps",
            },
          },
        ],
      },
      "kind": "class",
      "locationInModule": Object {
        "filename": "stable.example.com.ts",
        "line": 111,
      },
      "methods": Array [
        Object {
          "docs": Object {
            "remarks": "This can be used to inline resource manifests inside other objects (e.g. as templates).",
            "summary": "Renders a Kubernetes manifest for \\"OtherCronTab\\".",
          },
          "locationInModule": Object {
            "filename": "stable.example.com.ts",
            "line": 127,
          },
          "name": "manifest",
          "parameters": Array [
            Object {
              "docs": Object {
                "summary": "initialization props.",
              },
              "name": "props",
              "optional": true,
              "type": Object {
                "fqn": "stableexamplecom.FooOtherCronTabProps",
              },
            },
          ],
          "returns": Object {
            "type": Object {
              "primitive": "any",
            },
          },
          "static": true,
        },
      ],
      "name": "FooOtherCronTab",
      "properties": Array [
        Object {
          "const": true,
          "docs": Object {
            "summary": "Returns the apiVersion and kind for \\"OtherCronTab\\".",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "stable.example.com.ts",
            "line": 115,
          },
          "name": "GVK",
          "static": true,
          "type": Object {
            "fqn": "cdk8s.GroupVersionKind",
          },
        },
      ],
    },
    "stableexamplecom.FooOtherCronTabProps": Object {
      "assembly": "stableexamplecom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "OtherCronTab",
        },
      },
      "fqn": "stableexamplecom.FooOtherCronTabProps",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "stable.example.com.ts",
        "line": 148,
      },
      "name": "FooOtherCronTabProps",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "OtherCronTab#spec",
            },
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "stable.example.com.ts",
            "line": 152,
          },
          "name": "spec",
          "optional": true,
          "type": Object {
            "fqn": "stableexamplecom.OtherCronTabSpec",
          },
        },
      ],
    },
    "stableexamplecom.OtherCronTabSpec": Object {
      "assembly": "stableexamplecom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "OtherCronTabSpec",
        },
      },
      "fqn": "stableexamplecom.OtherCronTabSpec",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "stable.example.com.ts",
        "line": 173,
      },
      "name": "OtherCronTabSpec",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "OtherCronTabSpec#cronSpec",
            },
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "stable.example.com.ts",
            "line": 177,
          },
          "name": "cronSpec",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "OtherCronTabSpec#image",
            },
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "stable.example.com.ts",
            "line": 182,
          },
          "name": "image",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "OtherCronTabSpec#replicas",
            },
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "stable.example.com.ts",
            "line": 187,
          },
          "name": "replicas",
          "optional": true,
          "type": Object {
            "primitive": "number",
          },
        },
      ],
    },
  },
  "version": "0.0.0",
}
`;

exports[`snapshots elastic.yaml 1`] = `
Object {
  "author": Object {
    "name": "generated@generated.com",
    "roles": Array [
      "author",
    ],
  },
  "dependencies": Object {
    "cdk8s": "999.999.999",
    "constructs": "3.3.104",
  },
  "dependencyClosure": Object {
    "cdk8s": Object {
      "targets": Object {
        "dotnet": Object {
          "namespace": "Org.Cdk8s",
          "packageId": "Org.Cdk8s",
        },
        "go": Object {
          "moduleName": "github.com/cdk8s-team/cdk8s-core-go",
        },
        "java": Object {
          "maven": Object {
            "artifactId": "cdk8s",
            "groupId": "org.cdk8s",
          },
          "package": "org.cdk8s",
        },
        "js": Object {
          "npm": "cdk8s",
        },
        "python": Object {
          "distName": "cdk8s",
          "module": "cdk8s",
        },
      },
    },
    "constructs": Object {
      "targets": Object {
        "dotnet": Object {
          "namespace": "Constructs",
          "packageId": "Constructs",
        },
        "go": Object {
          "moduleName": "github.com/aws/constructs-go",
        },
        "java": Object {
          "maven": Object {
            "artifactId": "constructs",
            "groupId": "software.constructs",
          },
          "package": "software.constructs",
        },
        "js": Object {
          "npm": "constructs",
        },
        "python": Object {
          "distName": "constructs",
          "module": "constructs",
        },
      },
    },
  },
  "description": "elasticsearchk8selasticco",
  "fingerprint": "<fingerprint>",
  "homepage": "http://generated",
  "jsiiVersion": "1.32.0 (build 3f4fe23)",
  "license": "UNLICENSED",
  "metadata": Object {
    "jsii": Object {
      "pacmak": Object {
        "hasDefaultInterfaces": true,
      },
    },
  },
  "name": "elasticsearchk8selasticco",
  "repository": Object {
    "type": "git",
    "url": "http://generated",
  },
  "schema": "jsii/0.10.0",
  "targets": Object {
    "js": Object {
      "npm": "elasticsearchk8selasticco",
    },
  },
  "types": Object {
    "elasticsearchk8selasticco.Elasticsearch": Object {
      "assembly": "elasticsearchk8selasticco",
      "base": "cdk8s.ApiObject",
      "docs": Object {
        "custom": Object {
          "schema": "Elasticsearch",
        },
        "summary": "Elasticsearch represents an Elasticsearch resource in a Kubernetes cluster.",
      },
      "fqn": "elasticsearchk8selasticco.Elasticsearch",
      "initializer": Object {
        "docs": Object {
          "summary": "Defines a \\"Elasticsearch\\" API object.",
        },
        "locationInModule": Object {
          "filename": "elasticsearch.k8s.elastic.co.ts",
          "line": 39,
        },
        "parameters": Array [
          Object {
            "docs": Object {
              "summary": "the scope in which to define this object.",
            },
            "name": "scope",
            "type": Object {
              "fqn": "constructs.Construct",
            },
          },
          Object {
            "docs": Object {
              "summary": "a scope-local name for the object.",
            },
            "name": "id",
            "type": Object {
              "primitive": "string",
            },
          },
          Object {
            "docs": Object {
              "summary": "initialization props.",
            },
            "name": "props",
            "optional": true,
            "type": Object {
              "fqn": "elasticsearchk8selasticco.ElasticsearchProps",
            },
          },
        ],
      },
      "kind": "class",
      "locationInModule": Object {
        "filename": "elasticsearch.k8s.elastic.co.ts",
        "line": 10,
      },
      "methods": Array [
        Object {
          "docs": Object {
            "remarks": "This can be used to inline resource manifests inside other objects (e.g. as templates).",
            "summary": "Renders a Kubernetes manifest for \\"Elasticsearch\\".",
          },
          "locationInModule": Object {
            "filename": "elasticsearch.k8s.elastic.co.ts",
            "line": 26,
          },
          "name": "manifest",
          "parameters": Array [
            Object {
              "docs": Object {
                "summary": "initialization props.",
              },
              "name": "props",
              "optional": true,
              "type": Object {
                "fqn": "elasticsearchk8selasticco.ElasticsearchProps",
              },
            },
          ],
          "returns": Object {
            "type": Object {
              "primitive": "any",
            },
          },
          "static": true,
        },
      ],
      "name": "Elasticsearch",
      "properties": Array [
        Object {
          "const": true,
          "docs": Object {
            "summary": "Returns the apiVersion and kind for \\"Elasticsearch\\".",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "elasticsearch.k8s.elastic.co.ts",
            "line": 14,
          },
          "name": "GVK",
          "static": true,
          "type": Object {
            "fqn": "cdk8s.GroupVersionKind",
          },
        },
      ],
    },
    "elasticsearchk8selasticco.ElasticsearchProps": Object {
      "assembly": "elasticsearchk8selasticco",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "Elasticsearch",
        },
        "summary": "Elasticsearch represents an Elasticsearch resource in a Kubernetes cluster.",
      },
      "fqn": "elasticsearchk8selasticco.ElasticsearchProps",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "elasticsearch.k8s.elastic.co.ts",
        "line": 49,
      },
      "name": "ElasticsearchProps",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "Elasticsearch#metadata",
            },
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "elasticsearch.k8s.elastic.co.ts",
            "line": 53,
          },
          "name": "metadata",
          "optional": true,
          "type": Object {
            "primitive": "any",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "Elasticsearch#spec",
            },
            "summary": "ElasticsearchSpec holds the specification of an Elasticsearch cluster.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "elasticsearch.k8s.elastic.co.ts",
            "line": 60,
          },
          "name": "spec",
          "optional": true,
          "type": Object {
            "fqn": "elasticsearchk8selasticco.ElasticsearchSpec",
          },
        },
      ],
    },
    "elasticsearchk8selasticco.ElasticsearchSpec": Object {
      "assembly": "elasticsearchk8selasticco",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "ElasticsearchSpec",
        },
        "summary": "ElasticsearchSpec holds the specification of an Elasticsearch cluster.",
      },
      "fqn": "elasticsearchk8selasticco.ElasticsearchSpec",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "elasticsearch.k8s.elastic.co.ts",
        "line": 84,
      },
      "name": "ElasticsearchSpec",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ElasticsearchSpec#nodeSets",
            },
            "remarks": "See: https://www.elastic.co/guide/en/cloud-on-k8s/current/k8s-orchestration.html",
            "summary": "NodeSets allow specifying groups of Elasticsearch nodes sharing the same configuration and Pod templates.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "elasticsearch.k8s.elastic.co.ts",
            "line": 111,
          },
          "name": "nodeSets",
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "fqn": "elasticsearchk8selasticco.ElasticsearchSpecNodeSets",
              },
              "kind": "array",
            },
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ElasticsearchSpec#version",
            },
            "summary": "Version of Elasticsearch.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "elasticsearch.k8s.elastic.co.ts",
            "line": 160,
          },
          "name": "version",
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ElasticsearchSpec#auth",
            },
            "summary": "Auth contains user authentication and authorization security settings for Elasticsearch.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "elasticsearch.k8s.elastic.co.ts",
            "line": 90,
          },
          "name": "auth",
          "optional": true,
          "type": Object {
            "fqn": "elasticsearchk8selasticco.ElasticsearchSpecAuth",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ElasticsearchSpec#http",
            },
            "summary": "HTTP holds HTTP layer settings for Elasticsearch.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "elasticsearch.k8s.elastic.co.ts",
            "line": 97,
          },
          "name": "http",
          "optional": true,
          "type": Object {
            "fqn": "elasticsearchk8selasticco.ElasticsearchSpecHttp",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ElasticsearchSpec#image",
            },
            "summary": "Image is the Elasticsearch Docker image to deploy.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "elasticsearch.k8s.elastic.co.ts",
            "line": 104,
          },
          "name": "image",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ElasticsearchSpec#podDisruptionBudget",
            },
            "remarks": "The default budget selects all cluster pods and sets \`maxUnavailable\` to 1. To disable, set \`PodDisruptionBudget\` to the empty value (\`{}\` in YAML).",
            "summary": "PodDisruptionBudget provides access to the default pod disruption budget for the Elasticsearch cluster.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "elasticsearch.k8s.elastic.co.ts",
            "line": 118,
          },
          "name": "podDisruptionBudget",
          "optional": true,
          "type": Object {
            "fqn": "elasticsearchk8selasticco.ElasticsearchSpecPodDisruptionBudget",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ElasticsearchSpec#remoteClusters",
            },
            "summary": "RemoteClusters enables you to establish uni-directional connections to a remote Elasticsearch cluster.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "elasticsearch.k8s.elastic.co.ts",
            "line": 125,
          },
          "name": "remoteClusters",
          "optional": true,
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "fqn": "elasticsearchk8selasticco.ElasticsearchSpecRemoteClusters",
              },
              "kind": "array",
            },
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ElasticsearchSpec#secureSettings",
            },
            "summary": "SecureSettings is a list of references to Kubernetes secrets containing sensitive configuration options for Elasticsearch.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "elasticsearch.k8s.elastic.co.ts",
            "line": 132,
          },
          "name": "secureSettings",
          "optional": true,
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "fqn": "elasticsearchk8selasticco.ElasticsearchSpecSecureSettings",
              },
              "kind": "array",
            },
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ElasticsearchSpec#serviceAccountName",
            },
            "remarks": "a remote Elasticsearch cluster) in a different namespace. Can only be used if ECK is enforcing RBAC on references.",
            "summary": "ServiceAccountName is used to check access from the current resource to a resource (eg.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "elasticsearch.k8s.elastic.co.ts",
            "line": 139,
          },
          "name": "serviceAccountName",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ElasticsearchSpec#transport",
            },
            "summary": "Transport holds transport layer settings for Elasticsearch.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "elasticsearch.k8s.elastic.co.ts",
            "line": 146,
          },
          "name": "transport",
          "optional": true,
          "type": Object {
            "fqn": "elasticsearchk8selasticco.ElasticsearchSpecTransport",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ElasticsearchSpec#updateStrategy",
            },
            "summary": "UpdateStrategy specifies how updates to the cluster should be performed.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "elasticsearch.k8s.elastic.co.ts",
            "line": 153,
          },
          "name": "updateStrategy",
          "optional": true,
          "type": Object {
            "fqn": "elasticsearchk8selasticco.ElasticsearchSpecUpdateStrategy",
          },
        },
      ],
    },
    "elasticsearchk8selasticco.ElasticsearchSpecAuth": Object {
      "assembly": "elasticsearchk8selasticco",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "ElasticsearchSpecAuth",
        },
        "summary": "Auth contains user authentication and authorization security settings for Elasticsearch.",
      },
      "fqn": "elasticsearchk8selasticco.ElasticsearchSpecAuth",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "elasticsearch.k8s.elastic.co.ts",
        "line": 193,
      },
      "name": "ElasticsearchSpecAuth",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ElasticsearchSpecAuth#fileRealm",
            },
            "summary": "FileRealm to propagate to the Elasticsearch cluster.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "elasticsearch.k8s.elastic.co.ts",
            "line": 199,
          },
          "name": "fileRealm",
          "optional": true,
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "fqn": "elasticsearchk8selasticco.ElasticsearchSpecAuthFileRealm",
              },
              "kind": "array",
            },
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ElasticsearchSpecAuth#roles",
            },
            "summary": "Roles to propagate to the Elasticsearch cluster.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "elasticsearch.k8s.elastic.co.ts",
            "line": 206,
          },
          "name": "roles",
          "optional": true,
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "fqn": "elasticsearchk8selasticco.ElasticsearchSpecAuthRoles",
              },
              "kind": "array",
            },
          },
        },
      ],
    },
    "elasticsearchk8selasticco.ElasticsearchSpecAuthFileRealm": Object {
      "assembly": "elasticsearchk8selasticco",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "ElasticsearchSpecAuthFileRealm",
        },
        "summary": "FileRealmSource references users to create in the Elasticsearch cluster.",
      },
      "fqn": "elasticsearchk8selasticco.ElasticsearchSpecAuthFileRealm",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "elasticsearch.k8s.elastic.co.ts",
        "line": 497,
      },
      "name": "ElasticsearchSpecAuthFileRealm",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ElasticsearchSpecAuthFileRealm#secretName",
            },
            "summary": "SecretName is the name of the secret.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "elasticsearch.k8s.elastic.co.ts",
            "line": 503,
          },
          "name": "secretName",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
      ],
    },
    "elasticsearchk8selasticco.ElasticsearchSpecAuthRoles": Object {
      "assembly": "elasticsearchk8selasticco",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "ElasticsearchSpecAuthRoles",
        },
        "summary": "RoleSource references roles to create in the Elasticsearch cluster.",
      },
      "fqn": "elasticsearchk8selasticco.ElasticsearchSpecAuthRoles",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "elasticsearch.k8s.elastic.co.ts",
        "line": 526,
      },
      "name": "ElasticsearchSpecAuthRoles",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ElasticsearchSpecAuthRoles#secretName",
            },
            "summary": "SecretName is the name of the secret.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "elasticsearch.k8s.elastic.co.ts",
            "line": 532,
          },
          "name": "secretName",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
      ],
    },
    "elasticsearchk8selasticco.ElasticsearchSpecHttp": Object {
      "assembly": "elasticsearchk8selasticco",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "ElasticsearchSpecHttp",
        },
        "summary": "HTTP holds HTTP layer settings for Elasticsearch.",
      },
      "fqn": "elasticsearchk8selasticco.ElasticsearchSpecHttp",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "elasticsearch.k8s.elastic.co.ts",
        "line": 230,
      },
      "name": "ElasticsearchSpecHttp",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ElasticsearchSpecHttp#service",
            },
            "summary": "Service defines the template for the associated Kubernetes Service object.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "elasticsearch.k8s.elastic.co.ts",
            "line": 236,
          },
          "name": "service",
          "optional": true,
          "type": Object {
            "fqn": "elasticsearchk8selasticco.ElasticsearchSpecHttpService",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ElasticsearchSpecHttp#tls",
            },
            "summary": "TLS defines options for configuring TLS for HTTP.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "elasticsearch.k8s.elastic.co.ts",
            "line": 243,
          },
          "name": "tls",
          "optional": true,
          "type": Object {
            "fqn": "elasticsearchk8selasticco.ElasticsearchSpecHttpTls",
          },
        },
      ],
    },
    "elasticsearchk8selasticco.ElasticsearchSpecHttpService": Object {
      "assembly": "elasticsearchk8selasticco",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "ElasticsearchSpecHttpService",
        },
        "summary": "Service defines the template for the associated Kubernetes Service object.",
      },
      "fqn": "elasticsearchk8selasticco.ElasticsearchSpecHttpService",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "elasticsearch.k8s.elastic.co.ts",
        "line": 555,
      },
      "name": "ElasticsearchSpecHttpService",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ElasticsearchSpecHttpService#metadata",
            },
            "remarks": "The name and namespace provided here are managed by ECK and will be ignored.",
            "summary": "ObjectMeta is the metadata of the service.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "elasticsearch.k8s.elastic.co.ts",
            "line": 561,
          },
          "name": "metadata",
          "optional": true,
          "type": Object {
            "primitive": "any",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ElasticsearchSpecHttpService#spec",
            },
            "summary": "Spec is the specification of the service.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "elasticsearch.k8s.elastic.co.ts",
            "line": 568,
          },
          "name": "spec",
          "optional": true,
          "type": Object {
            "fqn": "elasticsearchk8selasticco.ElasticsearchSpecHttpServiceSpec",
          },
        },
      ],
    },
    "elasticsearchk8selasticco.ElasticsearchSpecHttpServiceSpec": Object {
      "assembly": "elasticsearchk8selasticco",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "ElasticsearchSpecHttpServiceSpec",
        },
        "summary": "Spec is the specification of the service.",
      },
      "fqn": "elasticsearchk8selasticco.ElasticsearchSpecHttpServiceSpec",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "elasticsearch.k8s.elastic.co.ts",
        "line": 886,
      },
      "name": "ElasticsearchSpecHttpServiceSpec",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ElasticsearchSpecHttpServiceSpec#clusterIP",
            },
            "remarks": "If an address is specified manually and is not in use by others, it will be allocated to the service; otherwise, creation of the service will fail. This field can not be changed through updates. Valid values are \\"None\\", empty string (\\"\\"), or a valid IP address. \\"None\\" can be specified for headless services when proxying is not required. Only applies to types ClusterIP, NodePort, and LoadBalancer. Ignored if type is ExternalName. More info: https://kubernetes.io/docs/concepts/services-networking/service/#virtual-ips-and-service-proxies",
            "summary": "clusterIP is the IP address of the service and is usually assigned randomly by the master.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "elasticsearch.k8s.elastic.co.ts",
            "line": 892,
          },
          "name": "clusterIp",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ElasticsearchSpecHttpServiceSpec#externalIPs",
            },
            "remarks": "These IPs are not managed by Kubernetes.  The user is responsible for ensuring that traffic arrives at a node with this IP.  A common example is external load-balancers that are not part of the Kubernetes system.",
            "summary": "externalIPs is a list of IP addresses for which nodes in the cluster will also accept traffic for this service.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "elasticsearch.k8s.elastic.co.ts",
            "line": 899,
          },
          "name": "externalIPs",
          "optional": true,
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "primitive": "string",
              },
              "kind": "array",
            },
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ElasticsearchSpecHttpServiceSpec#externalName",
            },
            "remarks": "No proxying will be involved. Must be a valid RFC-1123 hostname (https://tools.ietf.org/html/rfc1123) and requires Type to be ExternalName.",
            "summary": "externalName is the external reference that kubedns or equivalent will return as a CNAME record for this service.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "elasticsearch.k8s.elastic.co.ts",
            "line": 906,
          },
          "name": "externalName",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ElasticsearchSpecHttpServiceSpec#externalTrafficPolicy",
            },
            "remarks": "\\"Local\\" preserves the client source IP and avoids a second hop for LoadBalancer and Nodeport type services, but risks potentially imbalanced traffic spreading. \\"Cluster\\" obscures the client source IP and may cause a second hop to another node, but should have good overall load-spreading.",
            "summary": "externalTrafficPolicy denotes if this Service desires to route external traffic to node-local or cluster-wide endpoints.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "elasticsearch.k8s.elastic.co.ts",
            "line": 913,
          },
          "name": "externalTrafficPolicy",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ElasticsearchSpecHttpServiceSpec#healthCheckNodePort",
            },
            "remarks": "If not specified, HealthCheckNodePort is created by the service api backend with the allocated nodePort. Will use user-specified nodePort value if specified by the client. Only effects when Type is set to LoadBalancer and ExternalTrafficPolicy is set to Local.",
            "summary": "healthCheckNodePort specifies the healthcheck nodePort for the service.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "elasticsearch.k8s.elastic.co.ts",
            "line": 920,
          },
          "name": "healthCheckNodePort",
          "optional": true,
          "type": Object {
            "primitive": "number",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ElasticsearchSpecHttpServiceSpec#ipFamily",
            },
            "summary": "ipFamily specifies whether this Service has a preference for a particular IP family (e.g. IPv4 vs. IPv6).  If a specific IP family is requested, the clusterIP field will be allocated from that family, if it is available in the cluster.  If no IP family is requested, the cluster's primary IP family will be used. Other IP fields (loadBalancerIP, loadBalancerSourceRanges, externalIPs) and controllers which allocate external load-balancers should use the same IP family.  Endpoints for this Service will be of this family.  This field is immutable after creation. Assigning a ServiceIPFamily not available in the cluster (e.g. IPv6 in IPv4 only cluster) is an error condition and will fail during clusterIP assignment.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "elasticsearch.k8s.elastic.co.ts",
            "line": 927,
          },
          "name": "ipFamily",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ElasticsearchSpecHttpServiceSpec#loadBalancerIP",
            },
            "remarks": "This feature depends on whether the underlying cloud-provider supports specifying the loadBalancerIP when a load balancer is created. This field will be ignored if the cloud-provider does not support the feature.",
            "summary": "Only applies to Service Type: LoadBalancer LoadBalancer will get created with the IP specified in this field.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "elasticsearch.k8s.elastic.co.ts",
            "line": 934,
          },
          "name": "loadBalancerIp",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ElasticsearchSpecHttpServiceSpec#loadBalancerSourceRanges",
            },
            "remarks": "This field will be ignored if the cloud-provider does not support the feature.\\" More info: https://kubernetes.io/docs/tasks/access-application-cluster/configure-cloud-provider-firewall/",
            "summary": "If specified and supported by the platform, this will restrict traffic through the cloud-provider load-balancer will be restricted to the specified client IPs.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "elasticsearch.k8s.elastic.co.ts",
            "line": 941,
          },
          "name": "loadBalancerSourceRanges",
          "optional": true,
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "primitive": "string",
              },
              "kind": "array",
            },
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ElasticsearchSpecHttpServiceSpec#ports",
            },
            "remarks": "More info: https://kubernetes.io/docs/concepts/services-networking/service/#virtual-ips-and-service-proxies",
            "summary": "The list of ports that are exposed by this service.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "elasticsearch.k8s.elastic.co.ts",
            "line": 948,
          },
          "name": "ports",
          "optional": true,
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "fqn": "elasticsearchk8selasticco.ElasticsearchSpecHttpServiceSpecPorts",
              },
              "kind": "array",
            },
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ElasticsearchSpecHttpServiceSpec#publishNotReadyAddresses",
            },
            "remarks": "The default value is false. The primary use case for setting this field is to use a StatefulSet's Headless Service to propagate SRV records for its Pods without respect to their readiness for purpose of peer discovery.",
            "summary": "publishNotReadyAddresses, when set to true, indicates that DNS implementations must publish the notReadyAddresses of subsets for the Endpoints associated with the Service.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "elasticsearch.k8s.elastic.co.ts",
            "line": 955,
          },
          "name": "publishNotReadyAddresses",
          "optional": true,
          "type": Object {
            "primitive": "boolean",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ElasticsearchSpecHttpServiceSpec#selector",
            },
            "remarks": "If empty or not present, the service is assumed to have an external process managing its endpoints, which Kubernetes will not modify. Only applies to types ClusterIP, NodePort, and LoadBalancer. Ignored if type is ExternalName. More info: https://kubernetes.io/docs/concepts/services-networking/service/",
            "summary": "Route service traffic to pods with label keys and values matching this selector.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "elasticsearch.k8s.elastic.co.ts",
            "line": 962,
          },
          "name": "selector",
          "optional": true,
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "primitive": "string",
              },
              "kind": "map",
            },
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ElasticsearchSpecHttpServiceSpec#sessionAffinity",
            },
            "default": "None. More info: https://kubernetes.io/docs/concepts/services-networking/service/#virtual-ips-and-service-proxies",
            "remarks": "Used to maintain session affinity. Enable client IP based session affinity. Must be ClientIP or None. Defaults to None. More info: https://kubernetes.io/docs/concepts/services-networking/service/#virtual-ips-and-service-proxies",
            "summary": "Supports \\"ClientIP\\" and \\"None\\".",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "elasticsearch.k8s.elastic.co.ts",
            "line": 970,
          },
          "name": "sessionAffinity",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ElasticsearchSpecHttpServiceSpec#sessionAffinityConfig",
            },
            "summary": "sessionAffinityConfig contains the configurations of session affinity.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "elasticsearch.k8s.elastic.co.ts",
            "line": 977,
          },
          "name": "sessionAffinityConfig",
          "optional": true,
          "type": Object {
            "fqn": "elasticsearchk8selasticco.ElasticsearchSpecHttpServiceSpecSessionAffinityConfig",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ElasticsearchSpecHttpServiceSpec#topologyKeys",
            },
            "remarks": "Topology keys must be valid label keys and at most 16 keys may be specified. Endpoints are chosen based on the first topology key with available backends. If this field is specified and all entries have no backends that match the topology of the client, the service has no backends for that client and connections should fail. The special value \\"*\\" may be used to mean \\"any topology\\". This catch-all value, if used, only makes sense as the last value in the list. If this is not specified or empty, no topology constraints will be applied.",
            "summary": "topologyKeys is a preference-order list of topology keys which implementations of services should use to preferentially sort endpoints when accessing this Service, it can not be used at the same time as externalTrafficPolicy=Local.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "elasticsearch.k8s.elastic.co.ts",
            "line": 984,
          },
          "name": "topologyKeys",
          "optional": true,
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "primitive": "string",
              },
              "kind": "array",
            },
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ElasticsearchSpecHttpServiceSpec#type",
            },
            "default": "ClusterIP. Valid options are ExternalName, ClusterIP, NodePort, and LoadBalancer. \\"ExternalName\\" maps to the specified externalName. \\"ClusterIP\\" allocates a cluster-internal IP address for load-balancing to endpoints. Endpoints are determined by the selector or if that is not specified, by manual construction of an Endpoints object. If clusterIP is \\"None\\", no virtual IP is allocated and the endpoints are published as a set of endpoints rather than a stable IP. \\"NodePort\\" builds on ClusterIP and allocates a port on every node which routes to the clusterIP. \\"LoadBalancer\\" builds on NodePort and creates an external load-balancer (if supported in the current cloud) which routes to the clusterIP. More info: https://kubernetes.io/docs/concepts/services-networking/service/#publishing-services-service-types",
            "remarks": "Defaults to ClusterIP. Valid options are ExternalName, ClusterIP, NodePort, and LoadBalancer. \\"ExternalName\\" maps to the specified externalName. \\"ClusterIP\\" allocates a cluster-internal IP address for load-balancing to endpoints. Endpoints are determined by the selector or if that is not specified, by manual construction of an Endpoints object. If clusterIP is \\"None\\", no virtual IP is allocated and the endpoints are published as a set of endpoints rather than a stable IP. \\"NodePort\\" builds on ClusterIP and allocates a port on every node which routes to the clusterIP. \\"LoadBalancer\\" builds on NodePort and creates an external load-balancer (if supported in the current cloud) which routes to the clusterIP. More info: https://kubernetes.io/docs/concepts/services-networking/service/#publishing-services-service-types",
            "summary": "type determines how the Service is exposed.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "elasticsearch.k8s.elastic.co.ts",
            "line": 992,
          },
          "name": "type",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
      ],
    },
    "elasticsearchk8selasticco.ElasticsearchSpecHttpServiceSpecPorts": Object {
      "assembly": "elasticsearchk8selasticco",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "ElasticsearchSpecHttpServiceSpecPorts",
        },
        "summary": "ServicePort contains information on service's port.",
      },
      "fqn": "elasticsearchk8selasticco.ElasticsearchSpecHttpServiceSpecPorts",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "elasticsearch.k8s.elastic.co.ts",
        "line": 1440,
      },
      "name": "ElasticsearchSpecHttpServiceSpecPorts",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ElasticsearchSpecHttpServiceSpecPorts#port",
            },
            "summary": "The port that will be exposed by this service.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "elasticsearch.k8s.elastic.co.ts",
            "line": 1461,
          },
          "name": "port",
          "type": Object {
            "primitive": "number",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ElasticsearchSpecHttpServiceSpecPorts#name",
            },
            "remarks": "This must be a DNS_LABEL. All ports within a ServiceSpec must have unique names. When considering the endpoints for a Service, this must match the 'name' field in the EndpointPort. Optional if only one ServicePort is defined on this service.",
            "summary": "The name of this port within the service.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "elasticsearch.k8s.elastic.co.ts",
            "line": 1446,
          },
          "name": "name",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ElasticsearchSpecHttpServiceSpecPorts#nodePort",
            },
            "default": "to auto-allocate a port if the ServiceType of this Service requires one. More info: https://kubernetes.io/docs/concepts/services-networking/service/#type-nodeport",
            "remarks": "Usually assigned by the system. If specified, it will be allocated to the service if unused or else creation of the service will fail. Default is to auto-allocate a port if the ServiceType of this Service requires one. More info: https://kubernetes.io/docs/concepts/services-networking/service/#type-nodeport",
            "summary": "The port on each node on which this service is exposed when type=NodePort or LoadBalancer.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "elasticsearch.k8s.elastic.co.ts",
            "line": 1454,
          },
          "name": "nodePort",
          "optional": true,
          "type": Object {
            "primitive": "number",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ElasticsearchSpecHttpServiceSpecPorts#protocol",
            },
            "default": "TCP.",
            "remarks": "Supports \\"TCP\\", \\"UDP\\", and \\"SCTP\\". Default is TCP.",
            "summary": "The IP protocol for this port.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "elasticsearch.k8s.elastic.co.ts",
            "line": 1469,
          },
          "name": "protocol",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ElasticsearchSpecHttpServiceSpecPorts#targetPort",
            },
            "remarks": "Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME. If this is a string, it will be looked up as a named port in the target Pod's container ports. If this is not specified, the value of the 'port' field is used (an identity map). This field is ignored for services with clusterIP=None, and should be omitted or set equal to the 'port' field. More info: https://kubernetes.io/docs/concepts/services-networking/service/#defining-a-service",
            "summary": "Number or name of the port to access on the pods targeted by the service.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "elasticsearch.k8s.elastic.co.ts",
            "line": 1476,
          },
          "name": "targetPort",
          "optional": true,
          "type": Object {
            "fqn": "elasticsearchk8selasticco.ElasticsearchSpecHttpServiceSpecPortsTargetPort",
          },
        },
      ],
    },
    "elasticsearchk8selasticco.ElasticsearchSpecHttpServiceSpecPortsTargetPort": Object {
      "assembly": "elasticsearchk8selasticco",
      "docs": Object {
        "custom": Object {
          "schema": "ElasticsearchSpecHttpServiceSpecPortsTargetPort",
        },
        "remarks": "Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME. If this is a string, it will be looked up as a named port in the target Pod's container ports. If this is not specified, the value of the 'port' field is used (an identity map). This field is ignored for services with clusterIP=None, and should be omitted or set equal to the 'port' field. More info: https://kubernetes.io/docs/concepts/services-networking/service/#defining-a-service",
        "summary": "Number or name of the port to access on the pods targeted by the service.",
      },
      "fqn": "elasticsearchk8selasticco.ElasticsearchSpecHttpServiceSpecPortsTargetPort",
      "kind": "class",
      "locationInModule": Object {
        "filename": "elasticsearch.k8s.elastic.co.ts",
        "line": 1907,
      },
      "methods": Array [
        Object {
          "locationInModule": Object {
            "filename": "elasticsearch.k8s.elastic.co.ts",
            "line": 1908,
          },
          "name": "fromNumber",
          "parameters": Array [
            Object {
              "name": "value",
              "type": Object {
                "primitive": "number",
              },
            },
          ],
          "returns": Object {
            "type": Object {
              "fqn": "elasticsearchk8selasticco.ElasticsearchSpecHttpServiceSpecPortsTargetPort",
            },
          },
          "static": true,
        },
        Object {
          "locationInModule": Object {
            "filename": "elasticsearch.k8s.elastic.co.ts",
            "line": 1911,
          },
          "name": "fromString",
          "parameters": Array [
            Object {
              "name": "value",
              "type": Object {
                "primitive": "string",
              },
            },
          ],
          "returns": Object {
            "type": Object {
              "fqn": "elasticsearchk8selasticco.ElasticsearchSpecHttpServiceSpecPortsTargetPort",
            },
          },
          "static": true,
        },
      ],
      "name": "ElasticsearchSpecHttpServiceSpecPortsTargetPort",
      "properties": Array [
        Object {
          "immutable": true,
          "locationInModule": Object {
            "filename": "elasticsearch.k8s.elastic.co.ts",
            "line": 1914,
          },
          "name": "value",
          "type": Object {
            "primitive": "any",
          },
        },
      ],
    },
    "elasticsearchk8selasticco.ElasticsearchSpecHttpServiceSpecSessionAffinityConfig": Object {
      "assembly": "elasticsearchk8selasticco",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "ElasticsearchSpecHttpServiceSpecSessionAffinityConfig",
        },
        "summary": "sessionAffinityConfig contains the configurations of session affinity.",
      },
      "fqn": "elasticsearchk8selasticco.ElasticsearchSpecHttpServiceSpecSessionAffinityConfig",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "elasticsearch.k8s.elastic.co.ts",
        "line": 1503,
      },
      "name": "ElasticsearchSpecHttpServiceSpecSessionAffinityConfig",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ElasticsearchSpecHttpServiceSpecSessionAffinityConfig#clientIP",
            },
            "summary": "clientIP contains the configurations of Client IP based session affinity.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "elasticsearch.k8s.elastic.co.ts",
            "line": 1509,
          },
          "name": "clientIp",
          "optional": true,
          "type": Object {
            "fqn": "elasticsearchk8selasticco.ElasticsearchSpecHttpServiceSpecSessionAffinityConfigClientIp",
          },
        },
      ],
    },
    "elasticsearchk8selasticco.ElasticsearchSpecHttpServiceSpecSessionAffinityConfigClientIp": Object {
      "assembly": "elasticsearchk8selasticco",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "ElasticsearchSpecHttpServiceSpecSessionAffinityConfigClientIp",
        },
        "summary": "clientIP contains the configurations of Client IP based session affinity.",
      },
      "fqn": "elasticsearchk8selasticco.ElasticsearchSpecHttpServiceSpecSessionAffinityConfigClientIp",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "elasticsearch.k8s.elastic.co.ts",
        "line": 1924,
      },
      "name": "ElasticsearchSpecHttpServiceSpecSessionAffinityConfigClientIp",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ElasticsearchSpecHttpServiceSpecSessionAffinityConfigClientIp#timeoutSeconds",
            },
            "remarks": "The value must be >0 && <=86400(for 1 day) if ServiceAffinity == \\"ClientIP\\". Default value is 10800(for 3 hours).",
            "summary": "timeoutSeconds specifies the seconds of ClientIP type session sticky time.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "elasticsearch.k8s.elastic.co.ts",
            "line": 1930,
          },
          "name": "timeoutSeconds",
          "optional": true,
          "type": Object {
            "primitive": "number",
          },
        },
      ],
    },
    "elasticsearchk8selasticco.ElasticsearchSpecHttpTls": Object {
      "assembly": "elasticsearchk8selasticco",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "ElasticsearchSpecHttpTls",
        },
        "summary": "TLS defines options for configuring TLS for HTTP.",
      },
      "fqn": "elasticsearchk8selasticco.ElasticsearchSpecHttpTls",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "elasticsearch.k8s.elastic.co.ts",
        "line": 592,
      },
      "name": "ElasticsearchSpecHttpTls",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ElasticsearchSpecHttpTls#certificate",
            },
            "remarks": "The referenced secret should contain the following:
- \`ca.crt\`: The certificate authority (optional). - \`tls.crt\`: The certificate (or a chain). - \`tls.key\`: The private key to the first certificate in the certificate chain.",
            "summary": "Certificate is a reference to a Kubernetes secret that contains the certificate and private key for enabling TLS.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "elasticsearch.k8s.elastic.co.ts",
            "line": 599,
          },
          "name": "certificate",
          "optional": true,
          "type": Object {
            "fqn": "elasticsearchk8selasticco.ElasticsearchSpecHttpTlsCertificate",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ElasticsearchSpecHttpTls#selfSignedCertificate",
            },
            "summary": "SelfSignedCertificate allows configuring the self-signed certificate generated by the operator.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "elasticsearch.k8s.elastic.co.ts",
            "line": 606,
          },
          "name": "selfSignedCertificate",
          "optional": true,
          "type": Object {
            "fqn": "elasticsearchk8selasticco.ElasticsearchSpecHttpTlsSelfSignedCertificate",
          },
        },
      ],
    },
    "elasticsearchk8selasticco.ElasticsearchSpecHttpTlsCertificate": Object {
      "assembly": "elasticsearchk8selasticco",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "ElasticsearchSpecHttpTlsCertificate",
        },
        "remarks": "The referenced secret should contain the following:
- \`ca.crt\`: The certificate authority (optional). - \`tls.crt\`: The certificate (or a chain). - \`tls.key\`: The private key to the first certificate in the certificate chain.",
        "summary": "Certificate is a reference to a Kubernetes secret that contains the certificate and private key for enabling TLS.",
      },
      "fqn": "elasticsearchk8selasticco.ElasticsearchSpecHttpTlsCertificate",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "elasticsearch.k8s.elastic.co.ts",
        "line": 1030,
      },
      "name": "ElasticsearchSpecHttpTlsCertificate",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ElasticsearchSpecHttpTlsCertificate#secretName",
            },
            "summary": "SecretName is the name of the secret.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "elasticsearch.k8s.elastic.co.ts",
            "line": 1036,
          },
          "name": "secretName",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
      ],
    },
    "elasticsearchk8selasticco.ElasticsearchSpecHttpTlsSelfSignedCertificate": Object {
      "assembly": "elasticsearchk8selasticco",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "ElasticsearchSpecHttpTlsSelfSignedCertificate",
        },
        "summary": "SelfSignedCertificate allows configuring the self-signed certificate generated by the operator.",
      },
      "fqn": "elasticsearchk8selasticco.ElasticsearchSpecHttpTlsSelfSignedCertificate",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "elasticsearch.k8s.elastic.co.ts",
        "line": 1059,
      },
      "name": "ElasticsearchSpecHttpTlsSelfSignedCertificate",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ElasticsearchSpecHttpTlsSelfSignedCertificate#disabled",
            },
            "summary": "Disabled indicates that the provisioning of the self-signed certifcate should be disabled.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "elasticsearch.k8s.elastic.co.ts",
            "line": 1065,
          },
          "name": "disabled",
          "optional": true,
          "type": Object {
            "primitive": "boolean",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ElasticsearchSpecHttpTlsSelfSignedCertificate#subjectAltNames",
            },
            "summary": "SubjectAlternativeNames is a list of SANs to include in the generated HTTP TLS certificate.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "elasticsearch.k8s.elastic.co.ts",
            "line": 1072,
          },
          "name": "subjectAltNames",
          "optional": true,
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "fqn": "elasticsearchk8selasticco.ElasticsearchSpecHttpTlsSelfSignedCertificateSubjectAltNames",
              },
              "kind": "array",
            },
          },
        },
      ],
    },
    "elasticsearchk8selasticco.ElasticsearchSpecHttpTlsSelfSignedCertificateSubjectAltNames": Object {
      "assembly": "elasticsearchk8selasticco",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "ElasticsearchSpecHttpTlsSelfSignedCertificateSubjectAltNames",
        },
        "summary": "SubjectAlternativeName represents a SAN entry in a x509 certificate.",
      },
      "fqn": "elasticsearchk8selasticco.ElasticsearchSpecHttpTlsSelfSignedCertificateSubjectAltNames",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "elasticsearch.k8s.elastic.co.ts",
        "line": 1532,
      },
      "name": "ElasticsearchSpecHttpTlsSelfSignedCertificateSubjectAltNames",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ElasticsearchSpecHttpTlsSelfSignedCertificateSubjectAltNames#dns",
            },
            "summary": "DNS is the DNS name of the subject.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "elasticsearch.k8s.elastic.co.ts",
            "line": 1538,
          },
          "name": "dns",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ElasticsearchSpecHttpTlsSelfSignedCertificateSubjectAltNames#ip",
            },
            "summary": "IP is the IP address of the subject.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "elasticsearch.k8s.elastic.co.ts",
            "line": 1545,
          },
          "name": "ip",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
      ],
    },
    "elasticsearchk8selasticco.ElasticsearchSpecNodeSets": Object {
      "assembly": "elasticsearchk8selasticco",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "ElasticsearchSpecNodeSets",
        },
        "summary": "NodeSet is the specification for a group of Elasticsearch nodes sharing the same configuration and a Pod template.",
      },
      "fqn": "elasticsearchk8selasticco.ElasticsearchSpecNodeSets",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "elasticsearch.k8s.elastic.co.ts",
        "line": 267,
      },
      "name": "ElasticsearchSpecNodeSets",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ElasticsearchSpecNodeSets#count",
            },
            "summary": "Count of Elasticsearch nodes to deploy.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "elasticsearch.k8s.elastic.co.ts",
            "line": 280,
          },
          "name": "count",
          "type": Object {
            "primitive": "number",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ElasticsearchSpecNodeSets#name",
            },
            "remarks": "Becomes a part of the Elasticsearch node.name setting.",
            "summary": "Name of this set of nodes.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "elasticsearch.k8s.elastic.co.ts",
            "line": 287,
          },
          "name": "name",
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ElasticsearchSpecNodeSets#config",
            },
            "summary": "Config holds the Elasticsearch configuration.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "elasticsearch.k8s.elastic.co.ts",
            "line": 273,
          },
          "name": "config",
          "optional": true,
          "type": Object {
            "primitive": "any",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ElasticsearchSpecNodeSets#podTemplate",
            },
            "summary": "PodTemplate provides customisation options (labels, annotations, affinity rules, resource requests, and so on) for the Pods belonging to this NodeSet.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "elasticsearch.k8s.elastic.co.ts",
            "line": 294,
          },
          "name": "podTemplate",
          "optional": true,
          "type": Object {
            "primitive": "any",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ElasticsearchSpecNodeSets#volumeClaimTemplates",
            },
            "remarks": "Every claim in this list must have a matching volumeMount in one of the containers defined in the PodTemplate. Items defined here take precedence over any default claims added by the operator with the same name. See: https://www.elastic.co/guide/en/cloud-on-k8s/current/k8s-volume-claim-templates.html",
            "summary": "VolumeClaimTemplates is a list of persistent volume claims to be used by each Pod in this NodeSet.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "elasticsearch.k8s.elastic.co.ts",
            "line": 301,
          },
          "name": "volumeClaimTemplates",
          "optional": true,
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "fqn": "elasticsearchk8selasticco.ElasticsearchSpecNodeSetsVolumeClaimTemplates",
              },
              "kind": "array",
            },
          },
        },
      ],
    },
    "elasticsearchk8selasticco.ElasticsearchSpecNodeSetsVolumeClaimTemplates": Object {
      "assembly": "elasticsearchk8selasticco",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "ElasticsearchSpecNodeSetsVolumeClaimTemplates",
        },
        "summary": "PersistentVolumeClaim is a user's request for and claim to a persistent volume.",
      },
      "fqn": "elasticsearchk8selasticco.ElasticsearchSpecNodeSetsVolumeClaimTemplates",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "elasticsearch.k8s.elastic.co.ts",
        "line": 630,
      },
      "name": "ElasticsearchSpecNodeSetsVolumeClaimTemplates",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ElasticsearchSpecNodeSetsVolumeClaimTemplates#apiVersion",
            },
            "remarks": "Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
            "summary": "APIVersion defines the versioned schema of this representation of an object.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "elasticsearch.k8s.elastic.co.ts",
            "line": 636,
          },
          "name": "apiVersion",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ElasticsearchSpecNodeSetsVolumeClaimTemplates#kind",
            },
            "remarks": "Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
            "summary": "Kind is a string value representing the REST resource this object represents.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "elasticsearch.k8s.elastic.co.ts",
            "line": 643,
          },
          "name": "kind",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ElasticsearchSpecNodeSetsVolumeClaimTemplates#metadata",
            },
            "remarks": "More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata",
            "summary": "Standard object's metadata.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "elasticsearch.k8s.elastic.co.ts",
            "line": 650,
          },
          "name": "metadata",
          "optional": true,
          "type": Object {
            "primitive": "any",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ElasticsearchSpecNodeSetsVolumeClaimTemplates#spec",
            },
            "remarks": "More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims",
            "summary": "Spec defines the desired characteristics of a volume requested by a pod author.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "elasticsearch.k8s.elastic.co.ts",
            "line": 657,
          },
          "name": "spec",
          "optional": true,
          "type": Object {
            "fqn": "elasticsearchk8selasticco.ElasticsearchSpecNodeSetsVolumeClaimTemplatesSpec",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ElasticsearchSpecNodeSetsVolumeClaimTemplates#status",
            },
            "remarks": "Read-only. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims",
            "summary": "Status represents the current information/status of a persistent volume claim.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "elasticsearch.k8s.elastic.co.ts",
            "line": 664,
          },
          "name": "status",
          "optional": true,
          "type": Object {
            "fqn": "elasticsearchk8selasticco.ElasticsearchSpecNodeSetsVolumeClaimTemplatesStatus",
          },
        },
      ],
    },
    "elasticsearchk8selasticco.ElasticsearchSpecNodeSetsVolumeClaimTemplatesSpec": Object {
      "assembly": "elasticsearchk8selasticco",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "ElasticsearchSpecNodeSetsVolumeClaimTemplatesSpec",
        },
        "remarks": "More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims",
        "summary": "Spec defines the desired characteristics of a volume requested by a pod author.",
      },
      "fqn": "elasticsearchk8selasticco.ElasticsearchSpecNodeSetsVolumeClaimTemplatesSpec",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "elasticsearch.k8s.elastic.co.ts",
        "line": 1096,
      },
      "name": "ElasticsearchSpecNodeSetsVolumeClaimTemplatesSpec",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ElasticsearchSpecNodeSetsVolumeClaimTemplatesSpec#accessModes",
            },
            "remarks": "More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#access-modes-1",
            "summary": "AccessModes contains the desired access modes the volume should have.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "elasticsearch.k8s.elastic.co.ts",
            "line": 1102,
          },
          "name": "accessModes",
          "optional": true,
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "primitive": "string",
              },
              "kind": "array",
            },
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ElasticsearchSpecNodeSetsVolumeClaimTemplatesSpec#dataSource",
            },
            "remarks": "If the provisioner can support VolumeSnapshot data source, it will create a new volume and data will be restored to the volume at the same time. If the provisioner does not support VolumeSnapshot data source, volume will not be created and the failure will be reported as an event. In the future, we plan to support more data source types and the behavior of the provisioner may change.",
            "summary": "This field requires the VolumeSnapshotDataSource alpha feature gate to be enabled and currently VolumeSnapshot is the only supported data source.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "elasticsearch.k8s.elastic.co.ts",
            "line": 1109,
          },
          "name": "dataSource",
          "optional": true,
          "type": Object {
            "fqn": "elasticsearchk8selasticco.ElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecDataSource",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ElasticsearchSpecNodeSetsVolumeClaimTemplatesSpec#resources",
            },
            "remarks": "More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#resources",
            "summary": "Resources represents the minimum resources the volume should have.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "elasticsearch.k8s.elastic.co.ts",
            "line": 1116,
          },
          "name": "resources",
          "optional": true,
          "type": Object {
            "fqn": "elasticsearchk8selasticco.ElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecResources",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ElasticsearchSpecNodeSetsVolumeClaimTemplatesSpec#selector",
            },
            "summary": "A label query over volumes to consider for binding.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "elasticsearch.k8s.elastic.co.ts",
            "line": 1123,
          },
          "name": "selector",
          "optional": true,
          "type": Object {
            "fqn": "elasticsearchk8selasticco.ElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecSelector",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ElasticsearchSpecNodeSetsVolumeClaimTemplatesSpec#storageClassName",
            },
            "remarks": "More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#class-1",
            "summary": "Name of the StorageClass required by the claim.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "elasticsearch.k8s.elastic.co.ts",
            "line": 1130,
          },
          "name": "storageClassName",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ElasticsearchSpecNodeSetsVolumeClaimTemplatesSpec#volumeMode",
            },
            "remarks": "Value of Filesystem is implied when not included in claim spec. This is a beta feature.",
            "summary": "volumeMode defines what type of volume is required by the claim.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "elasticsearch.k8s.elastic.co.ts",
            "line": 1137,
          },
          "name": "volumeMode",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ElasticsearchSpecNodeSetsVolumeClaimTemplatesSpec#volumeName",
            },
            "summary": "VolumeName is the binding reference to the PersistentVolume backing this claim.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "elasticsearch.k8s.elastic.co.ts",
            "line": 1144,
          },
          "name": "volumeName",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
      ],
    },
    "elasticsearchk8selasticco.ElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecDataSource": Object {
      "assembly": "elasticsearchk8selasticco",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "ElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecDataSource",
        },
        "remarks": "If the provisioner can support VolumeSnapshot data source, it will create a new volume and data will be restored to the volume at the same time. If the provisioner does not support VolumeSnapshot data source, volume will not be created and the failure will be reported as an event. In the future, we plan to support more data source types and the behavior of the provisioner may change.",
        "summary": "This field requires the VolumeSnapshotDataSource alpha feature gate to be enabled and currently VolumeSnapshot is the only supported data source.",
      },
      "fqn": "elasticsearchk8selasticco.ElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecDataSource",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "elasticsearch.k8s.elastic.co.ts",
        "line": 1569,
      },
      "name": "ElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecDataSource",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecDataSource#kind",
            },
            "summary": "Kind is the type of resource being referenced.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "elasticsearch.k8s.elastic.co.ts",
            "line": 1582,
          },
          "name": "kind",
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecDataSource#name",
            },
            "summary": "Name is the name of resource being referenced.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "elasticsearch.k8s.elastic.co.ts",
            "line": 1589,
          },
          "name": "name",
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecDataSource#apiGroup",
            },
            "remarks": "If APIGroup is not specified, the specified Kind must be in the core API group. For any other third-party types, APIGroup is required.",
            "summary": "APIGroup is the group for the resource being referenced.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "elasticsearch.k8s.elastic.co.ts",
            "line": 1575,
          },
          "name": "apiGroup",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
      ],
    },
    "elasticsearchk8selasticco.ElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecResources": Object {
      "assembly": "elasticsearchk8selasticco",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "ElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecResources",
        },
        "remarks": "More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#resources",
        "summary": "Resources represents the minimum resources the volume should have.",
      },
      "fqn": "elasticsearchk8selasticco.ElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecResources",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "elasticsearch.k8s.elastic.co.ts",
        "line": 1614,
      },
      "name": "ElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecResources",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecResources#limits",
            },
            "remarks": "More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/",
            "summary": "Limits describes the maximum amount of compute resources allowed.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "elasticsearch.k8s.elastic.co.ts",
            "line": 1620,
          },
          "name": "limits",
          "optional": true,
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "fqn": "elasticsearchk8selasticco.ElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecResourcesLimits",
              },
              "kind": "map",
            },
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecResources#requests",
            },
            "remarks": "If Requests is omitted for a container, it defaults to Limits if that is explicitly specified, otherwise to an implementation-defined value. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/",
            "summary": "Requests describes the minimum amount of compute resources required.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "elasticsearch.k8s.elastic.co.ts",
            "line": 1627,
          },
          "name": "requests",
          "optional": true,
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "fqn": "elasticsearchk8selasticco.ElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecResourcesRequests",
              },
              "kind": "map",
            },
          },
        },
      ],
    },
    "elasticsearchk8selasticco.ElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecResourcesLimits": Object {
      "assembly": "elasticsearchk8selasticco",
      "docs": Object {
        "custom": Object {
          "schema": "ElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecResourcesLimits",
        },
      },
      "fqn": "elasticsearchk8selasticco.ElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecResourcesLimits",
      "kind": "class",
      "locationInModule": Object {
        "filename": "elasticsearch.k8s.elastic.co.ts",
        "line": 1951,
      },
      "methods": Array [
        Object {
          "locationInModule": Object {
            "filename": "elasticsearch.k8s.elastic.co.ts",
            "line": 1952,
          },
          "name": "fromNumber",
          "parameters": Array [
            Object {
              "name": "value",
              "type": Object {
                "primitive": "number",
              },
            },
          ],
          "returns": Object {
            "type": Object {
              "fqn": "elasticsearchk8selasticco.ElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecResourcesLimits",
            },
          },
          "static": true,
        },
        Object {
          "locationInModule": Object {
            "filename": "elasticsearch.k8s.elastic.co.ts",
            "line": 1955,
          },
          "name": "fromString",
          "parameters": Array [
            Object {
              "name": "value",
              "type": Object {
                "primitive": "string",
              },
            },
          ],
          "returns": Object {
            "type": Object {
              "fqn": "elasticsearchk8selasticco.ElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecResourcesLimits",
            },
          },
          "static": true,
        },
      ],
      "name": "ElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecResourcesLimits",
      "properties": Array [
        Object {
          "immutable": true,
          "locationInModule": Object {
            "filename": "elasticsearch.k8s.elastic.co.ts",
            "line": 1958,
          },
          "name": "value",
          "type": Object {
            "primitive": "any",
          },
        },
      ],
    },
    "elasticsearchk8selasticco.ElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecResourcesRequests": Object {
      "assembly": "elasticsearchk8selasticco",
      "docs": Object {
        "custom": Object {
          "schema": "ElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecResourcesRequests",
        },
      },
      "fqn": "elasticsearchk8selasticco.ElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecResourcesRequests",
      "kind": "class",
      "locationInModule": Object {
        "filename": "elasticsearch.k8s.elastic.co.ts",
        "line": 1966,
      },
      "methods": Array [
        Object {
          "locationInModule": Object {
            "filename": "elasticsearch.k8s.elastic.co.ts",
            "line": 1967,
          },
          "name": "fromNumber",
          "parameters": Array [
            Object {
              "name": "value",
              "type": Object {
                "primitive": "number",
              },
            },
          ],
          "returns": Object {
            "type": Object {
              "fqn": "elasticsearchk8selasticco.ElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecResourcesRequests",
            },
          },
          "static": true,
        },
        Object {
          "locationInModule": Object {
            "filename": "elasticsearch.k8s.elastic.co.ts",
            "line": 1970,
          },
          "name": "fromString",
          "parameters": Array [
            Object {
              "name": "value",
              "type": Object {
                "primitive": "string",
              },
            },
          ],
          "returns": Object {
            "type": Object {
              "fqn": "elasticsearchk8selasticco.ElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecResourcesRequests",
            },
          },
          "static": true,
        },
      ],
      "name": "ElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecResourcesRequests",
      "properties": Array [
        Object {
          "immutable": true,
          "locationInModule": Object {
            "filename": "elasticsearch.k8s.elastic.co.ts",
            "line": 1973,
          },
          "name": "value",
          "type": Object {
            "primitive": "any",
          },
        },
      ],
    },
    "elasticsearchk8selasticco.ElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecSelector": Object {
      "assembly": "elasticsearchk8selasticco",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "ElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecSelector",
        },
        "summary": "A label query over volumes to consider for binding.",
      },
      "fqn": "elasticsearchk8selasticco.ElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecSelector",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "elasticsearch.k8s.elastic.co.ts",
        "line": 1651,
      },
      "name": "ElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecSelector",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecSelector#matchExpressions",
            },
            "remarks": "The requirements are ANDed.",
            "summary": "matchExpressions is a list of label selector requirements.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "elasticsearch.k8s.elastic.co.ts",
            "line": 1657,
          },
          "name": "matchExpressions",
          "optional": true,
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "fqn": "elasticsearchk8selasticco.ElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecSelectorMatchExpressions",
              },
              "kind": "array",
            },
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecSelector#matchLabels",
            },
            "remarks": "A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is \\"key\\", the operator is \\"In\\", and the values array contains only \\"value\\". The requirements are ANDed.",
            "summary": "matchLabels is a map of {key,value} pairs.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "elasticsearch.k8s.elastic.co.ts",
            "line": 1664,
          },
          "name": "matchLabels",
          "optional": true,
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "primitive": "string",
              },
              "kind": "map",
            },
          },
        },
      ],
    },
    "elasticsearchk8selasticco.ElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecSelectorMatchExpressions": Object {
      "assembly": "elasticsearchk8selasticco",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "ElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecSelectorMatchExpressions",
        },
        "summary": "A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.",
      },
      "fqn": "elasticsearchk8selasticco.ElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecSelectorMatchExpressions",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "elasticsearch.k8s.elastic.co.ts",
        "line": 1983,
      },
      "name": "ElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecSelectorMatchExpressions",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecSelectorMatchExpressions#key",
            },
            "summary": "key is the label key that the selector applies to.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "elasticsearch.k8s.elastic.co.ts",
            "line": 1989,
          },
          "name": "key",
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecSelectorMatchExpressions#operator",
            },
            "remarks": "Valid operators are In, NotIn, Exists and DoesNotExist.",
            "summary": "operator represents a key's relationship to a set of values.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "elasticsearch.k8s.elastic.co.ts",
            "line": 1996,
          },
          "name": "operator",
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecSelectorMatchExpressions#values",
            },
            "remarks": "If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.",
            "summary": "values is an array of string values.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "elasticsearch.k8s.elastic.co.ts",
            "line": 2003,
          },
          "name": "values",
          "optional": true,
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "primitive": "string",
              },
              "kind": "array",
            },
          },
        },
      ],
    },
    "elasticsearchk8selasticco.ElasticsearchSpecNodeSetsVolumeClaimTemplatesStatus": Object {
      "assembly": "elasticsearchk8selasticco",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "ElasticsearchSpecNodeSetsVolumeClaimTemplatesStatus",
        },
        "remarks": "Read-only. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims",
        "summary": "Status represents the current information/status of a persistent volume claim.",
      },
      "fqn": "elasticsearchk8selasticco.ElasticsearchSpecNodeSetsVolumeClaimTemplatesStatus",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "elasticsearch.k8s.elastic.co.ts",
        "line": 1173,
      },
      "name": "ElasticsearchSpecNodeSetsVolumeClaimTemplatesStatus",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ElasticsearchSpecNodeSetsVolumeClaimTemplatesStatus#accessModes",
            },
            "remarks": "More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#access-modes-1",
            "summary": "AccessModes contains the actual access modes the volume backing the PVC has.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "elasticsearch.k8s.elastic.co.ts",
            "line": 1179,
          },
          "name": "accessModes",
          "optional": true,
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "primitive": "string",
              },
              "kind": "array",
            },
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ElasticsearchSpecNodeSetsVolumeClaimTemplatesStatus#capacity",
            },
            "summary": "Represents the actual resources of the underlying volume.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "elasticsearch.k8s.elastic.co.ts",
            "line": 1186,
          },
          "name": "capacity",
          "optional": true,
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "fqn": "elasticsearchk8selasticco.ElasticsearchSpecNodeSetsVolumeClaimTemplatesStatusCapacity",
              },
              "kind": "map",
            },
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ElasticsearchSpecNodeSetsVolumeClaimTemplatesStatus#conditions",
            },
            "remarks": "If underlying persistent volume is being resized then the Condition will be set to 'ResizeStarted'.",
            "summary": "Current Condition of persistent volume claim.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "elasticsearch.k8s.elastic.co.ts",
            "line": 1193,
          },
          "name": "conditions",
          "optional": true,
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "fqn": "elasticsearchk8selasticco.ElasticsearchSpecNodeSetsVolumeClaimTemplatesStatusConditions",
              },
              "kind": "array",
            },
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ElasticsearchSpecNodeSetsVolumeClaimTemplatesStatus#phase",
            },
            "summary": "Phase represents the current phase of PersistentVolumeClaim.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "elasticsearch.k8s.elastic.co.ts",
            "line": 1200,
          },
          "name": "phase",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
      ],
    },
    "elasticsearchk8selasticco.ElasticsearchSpecNodeSetsVolumeClaimTemplatesStatusCapacity": Object {
      "assembly": "elasticsearchk8selasticco",
      "docs": Object {
        "custom": Object {
          "schema": "ElasticsearchSpecNodeSetsVolumeClaimTemplatesStatusCapacity",
        },
      },
      "fqn": "elasticsearchk8selasticco.ElasticsearchSpecNodeSetsVolumeClaimTemplatesStatusCapacity",
      "kind": "class",
      "locationInModule": Object {
        "filename": "elasticsearch.k8s.elastic.co.ts",
        "line": 1686,
      },
      "methods": Array [
        Object {
          "locationInModule": Object {
            "filename": "elasticsearch.k8s.elastic.co.ts",
            "line": 1687,
          },
          "name": "fromNumber",
          "parameters": Array [
            Object {
              "name": "value",
              "type": Object {
                "primitive": "number",
              },
            },
          ],
          "returns": Object {
            "type": Object {
              "fqn": "elasticsearchk8selasticco.ElasticsearchSpecNodeSetsVolumeClaimTemplatesStatusCapacity",
            },
          },
          "static": true,
        },
        Object {
          "locationInModule": Object {
            "filename": "elasticsearch.k8s.elastic.co.ts",
            "line": 1690,
          },
          "name": "fromString",
          "parameters": Array [
            Object {
              "name": "value",
              "type": Object {
                "primitive": "string",
              },
            },
          ],
          "returns": Object {
            "type": Object {
              "fqn": "elasticsearchk8selasticco.ElasticsearchSpecNodeSetsVolumeClaimTemplatesStatusCapacity",
            },
          },
          "static": true,
        },
      ],
      "name": "ElasticsearchSpecNodeSetsVolumeClaimTemplatesStatusCapacity",
      "properties": Array [
        Object {
          "immutable": true,
          "locationInModule": Object {
            "filename": "elasticsearch.k8s.elastic.co.ts",
            "line": 1693,
          },
          "name": "value",
          "type": Object {
            "primitive": "any",
          },
        },
      ],
    },
    "elasticsearchk8selasticco.ElasticsearchSpecNodeSetsVolumeClaimTemplatesStatusConditions": Object {
      "assembly": "elasticsearchk8selasticco",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "ElasticsearchSpecNodeSetsVolumeClaimTemplatesStatusConditions",
        },
        "summary": "PersistentVolumeClaimCondition contails details about state of pvc.",
      },
      "fqn": "elasticsearchk8selasticco.ElasticsearchSpecNodeSetsVolumeClaimTemplatesStatusConditions",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "elasticsearch.k8s.elastic.co.ts",
        "line": 1703,
      },
      "name": "ElasticsearchSpecNodeSetsVolumeClaimTemplatesStatusConditions",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ElasticsearchSpecNodeSetsVolumeClaimTemplatesStatusConditions#status",
            },
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "elasticsearch.k8s.elastic.co.ts",
            "line": 1735,
          },
          "name": "status",
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ElasticsearchSpecNodeSetsVolumeClaimTemplatesStatusConditions#type",
            },
            "summary": "PersistentVolumeClaimConditionType is a valid value of PersistentVolumeClaimCondition.Type.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "elasticsearch.k8s.elastic.co.ts",
            "line": 1742,
          },
          "name": "type",
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ElasticsearchSpecNodeSetsVolumeClaimTemplatesStatusConditions#lastProbeTime",
            },
            "summary": "Last time we probed the condition.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "elasticsearch.k8s.elastic.co.ts",
            "line": 1709,
          },
          "name": "lastProbeTime",
          "optional": true,
          "type": Object {
            "primitive": "date",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ElasticsearchSpecNodeSetsVolumeClaimTemplatesStatusConditions#lastTransitionTime",
            },
            "summary": "Last time the condition transitioned from one status to another.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "elasticsearch.k8s.elastic.co.ts",
            "line": 1716,
          },
          "name": "lastTransitionTime",
          "optional": true,
          "type": Object {
            "primitive": "date",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ElasticsearchSpecNodeSetsVolumeClaimTemplatesStatusConditions#message",
            },
            "summary": "Human-readable message indicating details about last transition.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "elasticsearch.k8s.elastic.co.ts",
            "line": 1723,
          },
          "name": "message",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ElasticsearchSpecNodeSetsVolumeClaimTemplatesStatusConditions#reason",
            },
            "remarks": "If it reports \\"ResizeStarted\\" that means the underlying persistent volume is being resized.",
            "summary": "Unique, this should be a short, machine understandable string that gives the reason for condition's last transition.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "elasticsearch.k8s.elastic.co.ts",
            "line": 1730,
          },
          "name": "reason",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
      ],
    },
    "elasticsearchk8selasticco.ElasticsearchSpecPodDisruptionBudget": Object {
      "assembly": "elasticsearchk8selasticco",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "ElasticsearchSpecPodDisruptionBudget",
        },
        "remarks": "The default budget selects all cluster pods and sets \`maxUnavailable\` to 1. To disable, set \`PodDisruptionBudget\` to the empty value (\`{}\` in YAML).",
        "summary": "PodDisruptionBudget provides access to the default pod disruption budget for the Elasticsearch cluster.",
      },
      "fqn": "elasticsearchk8selasticco.ElasticsearchSpecPodDisruptionBudget",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "elasticsearch.k8s.elastic.co.ts",
        "line": 328,
      },
      "name": "ElasticsearchSpecPodDisruptionBudget",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ElasticsearchSpecPodDisruptionBudget#metadata",
            },
            "remarks": "The name and namespace provided here are managed by ECK and will be ignored.",
            "summary": "ObjectMeta is the metadata of the PDB.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "elasticsearch.k8s.elastic.co.ts",
            "line": 334,
          },
          "name": "metadata",
          "optional": true,
          "type": Object {
            "primitive": "any",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ElasticsearchSpecPodDisruptionBudget#spec",
            },
            "summary": "Spec is the specification of the PDB.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "elasticsearch.k8s.elastic.co.ts",
            "line": 341,
          },
          "name": "spec",
          "optional": true,
          "type": Object {
            "fqn": "elasticsearchk8selasticco.ElasticsearchSpecPodDisruptionBudgetSpec",
          },
        },
      ],
    },
    "elasticsearchk8selasticco.ElasticsearchSpecPodDisruptionBudgetSpec": Object {
      "assembly": "elasticsearchk8selasticco",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "ElasticsearchSpecPodDisruptionBudgetSpec",
        },
        "summary": "Spec is the specification of the PDB.",
      },
      "fqn": "elasticsearchk8selasticco.ElasticsearchSpecPodDisruptionBudgetSpec",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "elasticsearch.k8s.elastic.co.ts",
        "line": 691,
      },
      "name": "ElasticsearchSpecPodDisruptionBudgetSpec",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ElasticsearchSpecPodDisruptionBudgetSpec#maxUnavailable",
            },
            "summary": "An eviction is allowed if at most \\"maxUnavailable\\" pods selected by \\"selector\\" are unavailable after the eviction, i.e. even in absence of the evicted pod. For example, one can prevent all voluntary evictions by specifying 0. This is a mutually exclusive setting with \\"minAvailable\\".",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "elasticsearch.k8s.elastic.co.ts",
            "line": 697,
          },
          "name": "maxUnavailable",
          "optional": true,
          "type": Object {
            "fqn": "elasticsearchk8selasticco.ElasticsearchSpecPodDisruptionBudgetSpecMaxUnavailable",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ElasticsearchSpecPodDisruptionBudgetSpec#minAvailable",
            },
            "summary": "An eviction is allowed if at least \\"minAvailable\\" pods selected by \\"selector\\" will still be available after the eviction, i.e. even in the absence of the evicted pod.  So for example you can prevent all voluntary evictions by specifying \\"100%\\".",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "elasticsearch.k8s.elastic.co.ts",
            "line": 704,
          },
          "name": "minAvailable",
          "optional": true,
          "type": Object {
            "fqn": "elasticsearchk8selasticco.ElasticsearchSpecPodDisruptionBudgetSpecMinAvailable",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ElasticsearchSpecPodDisruptionBudgetSpec#selector",
            },
            "summary": "Label query over pods whose evictions are managed by the disruption budget.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "elasticsearch.k8s.elastic.co.ts",
            "line": 711,
          },
          "name": "selector",
          "optional": true,
          "type": Object {
            "fqn": "elasticsearchk8selasticco.ElasticsearchSpecPodDisruptionBudgetSpecSelector",
          },
        },
      ],
    },
    "elasticsearchk8selasticco.ElasticsearchSpecPodDisruptionBudgetSpecMaxUnavailable": Object {
      "assembly": "elasticsearchk8selasticco",
      "docs": Object {
        "custom": Object {
          "schema": "ElasticsearchSpecPodDisruptionBudgetSpecMaxUnavailable",
        },
        "summary": "An eviction is allowed if at most \\"maxUnavailable\\" pods selected by \\"selector\\" are unavailable after the eviction, i.e. even in absence of the evicted pod. For example, one can prevent all voluntary evictions by specifying 0. This is a mutually exclusive setting with \\"minAvailable\\".",
      },
      "fqn": "elasticsearchk8selasticco.ElasticsearchSpecPodDisruptionBudgetSpecMaxUnavailable",
      "kind": "class",
      "locationInModule": Object {
        "filename": "elasticsearch.k8s.elastic.co.ts",
        "line": 1226,
      },
      "methods": Array [
        Object {
          "locationInModule": Object {
            "filename": "elasticsearch.k8s.elastic.co.ts",
            "line": 1227,
          },
          "name": "fromNumber",
          "parameters": Array [
            Object {
              "name": "value",
              "type": Object {
                "primitive": "number",
              },
            },
          ],
          "returns": Object {
            "type": Object {
              "fqn": "elasticsearchk8selasticco.ElasticsearchSpecPodDisruptionBudgetSpecMaxUnavailable",
            },
          },
          "static": true,
        },
        Object {
          "locationInModule": Object {
            "filename": "elasticsearch.k8s.elastic.co.ts",
            "line": 1230,
          },
          "name": "fromString",
          "parameters": Array [
            Object {
              "name": "value",
              "type": Object {
                "primitive": "string",
              },
            },
          ],
          "returns": Object {
            "type": Object {
              "fqn": "elasticsearchk8selasticco.ElasticsearchSpecPodDisruptionBudgetSpecMaxUnavailable",
            },
          },
          "static": true,
        },
      ],
      "name": "ElasticsearchSpecPodDisruptionBudgetSpecMaxUnavailable",
      "properties": Array [
        Object {
          "immutable": true,
          "locationInModule": Object {
            "filename": "elasticsearch.k8s.elastic.co.ts",
            "line": 1233,
          },
          "name": "value",
          "type": Object {
            "primitive": "any",
          },
        },
      ],
    },
    "elasticsearchk8selasticco.ElasticsearchSpecPodDisruptionBudgetSpecMinAvailable": Object {
      "assembly": "elasticsearchk8selasticco",
      "docs": Object {
        "custom": Object {
          "schema": "ElasticsearchSpecPodDisruptionBudgetSpecMinAvailable",
        },
        "summary": "An eviction is allowed if at least \\"minAvailable\\" pods selected by \\"selector\\" will still be available after the eviction, i.e. even in the absence of the evicted pod.  So for example you can prevent all voluntary evictions by specifying \\"100%\\".",
      },
      "fqn": "elasticsearchk8selasticco.ElasticsearchSpecPodDisruptionBudgetSpecMinAvailable",
      "kind": "class",
      "locationInModule": Object {
        "filename": "elasticsearch.k8s.elastic.co.ts",
        "line": 1243,
      },
      "methods": Array [
        Object {
          "locationInModule": Object {
            "filename": "elasticsearch.k8s.elastic.co.ts",
            "line": 1244,
          },
          "name": "fromNumber",
          "parameters": Array [
            Object {
              "name": "value",
              "type": Object {
                "primitive": "number",
              },
            },
          ],
          "returns": Object {
            "type": Object {
              "fqn": "elasticsearchk8selasticco.ElasticsearchSpecPodDisruptionBudgetSpecMinAvailable",
            },
          },
          "static": true,
        },
        Object {
          "locationInModule": Object {
            "filename": "elasticsearch.k8s.elastic.co.ts",
            "line": 1247,
          },
          "name": "fromString",
          "parameters": Array [
            Object {
              "name": "value",
              "type": Object {
                "primitive": "string",
              },
            },
          ],
          "returns": Object {
            "type": Object {
              "fqn": "elasticsearchk8selasticco.ElasticsearchSpecPodDisruptionBudgetSpecMinAvailable",
            },
          },
          "static": true,
        },
      ],
      "name": "ElasticsearchSpecPodDisruptionBudgetSpecMinAvailable",
      "properties": Array [
        Object {
          "immutable": true,
          "locationInModule": Object {
            "filename": "elasticsearch.k8s.elastic.co.ts",
            "line": 1250,
          },
          "name": "value",
          "type": Object {
            "primitive": "any",
          },
        },
      ],
    },
    "elasticsearchk8selasticco.ElasticsearchSpecPodDisruptionBudgetSpecSelector": Object {
      "assembly": "elasticsearchk8selasticco",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "ElasticsearchSpecPodDisruptionBudgetSpecSelector",
        },
        "summary": "Label query over pods whose evictions are managed by the disruption budget.",
      },
      "fqn": "elasticsearchk8selasticco.ElasticsearchSpecPodDisruptionBudgetSpecSelector",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "elasticsearch.k8s.elastic.co.ts",
        "line": 1260,
      },
      "name": "ElasticsearchSpecPodDisruptionBudgetSpecSelector",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ElasticsearchSpecPodDisruptionBudgetSpecSelector#matchExpressions",
            },
            "remarks": "The requirements are ANDed.",
            "summary": "matchExpressions is a list of label selector requirements.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "elasticsearch.k8s.elastic.co.ts",
            "line": 1266,
          },
          "name": "matchExpressions",
          "optional": true,
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "fqn": "elasticsearchk8selasticco.ElasticsearchSpecPodDisruptionBudgetSpecSelectorMatchExpressions",
              },
              "kind": "array",
            },
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ElasticsearchSpecPodDisruptionBudgetSpecSelector#matchLabels",
            },
            "remarks": "A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is \\"key\\", the operator is \\"In\\", and the values array contains only \\"value\\". The requirements are ANDed.",
            "summary": "matchLabels is a map of {key,value} pairs.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "elasticsearch.k8s.elastic.co.ts",
            "line": 1273,
          },
          "name": "matchLabels",
          "optional": true,
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "primitive": "string",
              },
              "kind": "map",
            },
          },
        },
      ],
    },
    "elasticsearchk8selasticco.ElasticsearchSpecPodDisruptionBudgetSpecSelectorMatchExpressions": Object {
      "assembly": "elasticsearchk8selasticco",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "ElasticsearchSpecPodDisruptionBudgetSpecSelectorMatchExpressions",
        },
        "summary": "A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.",
      },
      "fqn": "elasticsearchk8selasticco.ElasticsearchSpecPodDisruptionBudgetSpecSelectorMatchExpressions",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "elasticsearch.k8s.elastic.co.ts",
        "line": 1770,
      },
      "name": "ElasticsearchSpecPodDisruptionBudgetSpecSelectorMatchExpressions",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ElasticsearchSpecPodDisruptionBudgetSpecSelectorMatchExpressions#key",
            },
            "summary": "key is the label key that the selector applies to.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "elasticsearch.k8s.elastic.co.ts",
            "line": 1776,
          },
          "name": "key",
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ElasticsearchSpecPodDisruptionBudgetSpecSelectorMatchExpressions#operator",
            },
            "remarks": "Valid operators are In, NotIn, Exists and DoesNotExist.",
            "summary": "operator represents a key's relationship to a set of values.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "elasticsearch.k8s.elastic.co.ts",
            "line": 1783,
          },
          "name": "operator",
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ElasticsearchSpecPodDisruptionBudgetSpecSelectorMatchExpressions#values",
            },
            "remarks": "If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.",
            "summary": "values is an array of string values.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "elasticsearch.k8s.elastic.co.ts",
            "line": 1790,
          },
          "name": "values",
          "optional": true,
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "primitive": "string",
              },
              "kind": "array",
            },
          },
        },
      ],
    },
    "elasticsearchk8selasticco.ElasticsearchSpecRemoteClusters": Object {
      "assembly": "elasticsearchk8selasticco",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "ElasticsearchSpecRemoteClusters",
        },
        "summary": "RemoteCluster declares a remote Elasticsearch cluster connection.",
      },
      "fqn": "elasticsearchk8selasticco.ElasticsearchSpecRemoteClusters",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "elasticsearch.k8s.elastic.co.ts",
        "line": 365,
      },
      "name": "ElasticsearchSpecRemoteClusters",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ElasticsearchSpecRemoteClusters#name",
            },
            "remarks": "The name is expected to be unique for each remote clusters.",
            "summary": "Name is the name of the remote cluster as it is set in the Elasticsearch settings.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "elasticsearch.k8s.elastic.co.ts",
            "line": 378,
          },
          "name": "name",
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ElasticsearchSpecRemoteClusters#elasticsearchRef",
            },
            "summary": "ElasticsearchRef is a reference to an Elasticsearch cluster running within the same k8s cluster.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "elasticsearch.k8s.elastic.co.ts",
            "line": 371,
          },
          "name": "elasticsearchRef",
          "optional": true,
          "type": Object {
            "fqn": "elasticsearchk8selasticco.ElasticsearchSpecRemoteClustersElasticsearchRef",
          },
        },
      ],
    },
    "elasticsearchk8selasticco.ElasticsearchSpecRemoteClustersElasticsearchRef": Object {
      "assembly": "elasticsearchk8selasticco",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "ElasticsearchSpecRemoteClustersElasticsearchRef",
        },
        "summary": "ElasticsearchRef is a reference to an Elasticsearch cluster running within the same k8s cluster.",
      },
      "fqn": "elasticsearchk8selasticco.ElasticsearchSpecRemoteClustersElasticsearchRef",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "elasticsearch.k8s.elastic.co.ts",
        "line": 736,
      },
      "name": "ElasticsearchSpecRemoteClustersElasticsearchRef",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ElasticsearchSpecRemoteClustersElasticsearchRef#name",
            },
            "summary": "Name of the Kubernetes object.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "elasticsearch.k8s.elastic.co.ts",
            "line": 742,
          },
          "name": "name",
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ElasticsearchSpecRemoteClustersElasticsearchRef#namespace",
            },
            "remarks": "If empty, defaults to the current namespace.",
            "summary": "Namespace of the Kubernetes object.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "elasticsearch.k8s.elastic.co.ts",
            "line": 749,
          },
          "name": "namespace",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
      ],
    },
    "elasticsearchk8selasticco.ElasticsearchSpecSecureSettings": Object {
      "assembly": "elasticsearchk8selasticco",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "ElasticsearchSpecSecureSettings",
        },
        "summary": "SecretSource defines a data source based on a Kubernetes Secret.",
      },
      "fqn": "elasticsearchk8selasticco.ElasticsearchSpecSecureSettings",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "elasticsearch.k8s.elastic.co.ts",
        "line": 402,
      },
      "name": "ElasticsearchSpecSecureSettings",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ElasticsearchSpecSecureSettings#secretName",
            },
            "summary": "SecretName is the name of the secret.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "elasticsearch.k8s.elastic.co.ts",
            "line": 415,
          },
          "name": "secretName",
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ElasticsearchSpecSecureSettings#entries",
            },
            "remarks": "If not defined, all keys will be projected to similarly named paths in the filesystem. If defined, only the specified keys will be projected to the corresponding paths.",
            "summary": "Entries define how to project each key-value pair in the secret to filesystem paths.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "elasticsearch.k8s.elastic.co.ts",
            "line": 408,
          },
          "name": "entries",
          "optional": true,
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "fqn": "elasticsearchk8selasticco.ElasticsearchSpecSecureSettingsEntries",
              },
              "kind": "array",
            },
          },
        },
      ],
    },
    "elasticsearchk8selasticco.ElasticsearchSpecSecureSettingsEntries": Object {
      "assembly": "elasticsearchk8selasticco",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "ElasticsearchSpecSecureSettingsEntries",
        },
        "summary": "KeyToPath defines how to map a key in a Secret object to a filesystem path.",
      },
      "fqn": "elasticsearchk8selasticco.ElasticsearchSpecSecureSettingsEntries",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "elasticsearch.k8s.elastic.co.ts",
        "line": 773,
      },
      "name": "ElasticsearchSpecSecureSettingsEntries",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ElasticsearchSpecSecureSettingsEntries#key",
            },
            "summary": "Key is the key contained in the secret.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "elasticsearch.k8s.elastic.co.ts",
            "line": 779,
          },
          "name": "key",
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ElasticsearchSpecSecureSettingsEntries#path",
            },
            "remarks": "Path must not be an absolute file path and must not contain any \\"..\\" components.",
            "summary": "Path is the relative file path to map the key to.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "elasticsearch.k8s.elastic.co.ts",
            "line": 786,
          },
          "name": "path",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
      ],
    },
    "elasticsearchk8selasticco.ElasticsearchSpecTransport": Object {
      "assembly": "elasticsearchk8selasticco",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "ElasticsearchSpecTransport",
        },
        "summary": "Transport holds transport layer settings for Elasticsearch.",
      },
      "fqn": "elasticsearchk8selasticco.ElasticsearchSpecTransport",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "elasticsearch.k8s.elastic.co.ts",
        "line": 439,
      },
      "name": "ElasticsearchSpecTransport",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ElasticsearchSpecTransport#service",
            },
            "summary": "Service defines the template for the associated Kubernetes Service object.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "elasticsearch.k8s.elastic.co.ts",
            "line": 445,
          },
          "name": "service",
          "optional": true,
          "type": Object {
            "fqn": "elasticsearchk8selasticco.ElasticsearchSpecTransportService",
          },
        },
      ],
    },
    "elasticsearchk8selasticco.ElasticsearchSpecTransportService": Object {
      "assembly": "elasticsearchk8selasticco",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "ElasticsearchSpecTransportService",
        },
        "summary": "Service defines the template for the associated Kubernetes Service object.",
      },
      "fqn": "elasticsearchk8selasticco.ElasticsearchSpecTransportService",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "elasticsearch.k8s.elastic.co.ts",
        "line": 810,
      },
      "name": "ElasticsearchSpecTransportService",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ElasticsearchSpecTransportService#metadata",
            },
            "remarks": "The name and namespace provided here are managed by ECK and will be ignored.",
            "summary": "ObjectMeta is the metadata of the service.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "elasticsearch.k8s.elastic.co.ts",
            "line": 816,
          },
          "name": "metadata",
          "optional": true,
          "type": Object {
            "primitive": "any",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ElasticsearchSpecTransportService#spec",
            },
            "summary": "Spec is the specification of the service.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "elasticsearch.k8s.elastic.co.ts",
            "line": 823,
          },
          "name": "spec",
          "optional": true,
          "type": Object {
            "fqn": "elasticsearchk8selasticco.ElasticsearchSpecTransportServiceSpec",
          },
        },
      ],
    },
    "elasticsearchk8selasticco.ElasticsearchSpecTransportServiceSpec": Object {
      "assembly": "elasticsearchk8selasticco",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "ElasticsearchSpecTransportServiceSpec",
        },
        "summary": "Spec is the specification of the service.",
      },
      "fqn": "elasticsearchk8selasticco.ElasticsearchSpecTransportServiceSpec",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "elasticsearch.k8s.elastic.co.ts",
        "line": 1297,
      },
      "name": "ElasticsearchSpecTransportServiceSpec",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ElasticsearchSpecTransportServiceSpec#clusterIP",
            },
            "remarks": "If an address is specified manually and is not in use by others, it will be allocated to the service; otherwise, creation of the service will fail. This field can not be changed through updates. Valid values are \\"None\\", empty string (\\"\\"), or a valid IP address. \\"None\\" can be specified for headless services when proxying is not required. Only applies to types ClusterIP, NodePort, and LoadBalancer. Ignored if type is ExternalName. More info: https://kubernetes.io/docs/concepts/services-networking/service/#virtual-ips-and-service-proxies",
            "summary": "clusterIP is the IP address of the service and is usually assigned randomly by the master.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "elasticsearch.k8s.elastic.co.ts",
            "line": 1303,
          },
          "name": "clusterIp",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ElasticsearchSpecTransportServiceSpec#externalIPs",
            },
            "remarks": "These IPs are not managed by Kubernetes.  The user is responsible for ensuring that traffic arrives at a node with this IP.  A common example is external load-balancers that are not part of the Kubernetes system.",
            "summary": "externalIPs is a list of IP addresses for which nodes in the cluster will also accept traffic for this service.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "elasticsearch.k8s.elastic.co.ts",
            "line": 1310,
          },
          "name": "externalIPs",
          "optional": true,
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "primitive": "string",
              },
              "kind": "array",
            },
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ElasticsearchSpecTransportServiceSpec#externalName",
            },
            "remarks": "No proxying will be involved. Must be a valid RFC-1123 hostname (https://tools.ietf.org/html/rfc1123) and requires Type to be ExternalName.",
            "summary": "externalName is the external reference that kubedns or equivalent will return as a CNAME record for this service.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "elasticsearch.k8s.elastic.co.ts",
            "line": 1317,
          },
          "name": "externalName",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ElasticsearchSpecTransportServiceSpec#externalTrafficPolicy",
            },
            "remarks": "\\"Local\\" preserves the client source IP and avoids a second hop for LoadBalancer and Nodeport type services, but risks potentially imbalanced traffic spreading. \\"Cluster\\" obscures the client source IP and may cause a second hop to another node, but should have good overall load-spreading.",
            "summary": "externalTrafficPolicy denotes if this Service desires to route external traffic to node-local or cluster-wide endpoints.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "elasticsearch.k8s.elastic.co.ts",
            "line": 1324,
          },
          "name": "externalTrafficPolicy",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ElasticsearchSpecTransportServiceSpec#healthCheckNodePort",
            },
            "remarks": "If not specified, HealthCheckNodePort is created by the service api backend with the allocated nodePort. Will use user-specified nodePort value if specified by the client. Only effects when Type is set to LoadBalancer and ExternalTrafficPolicy is set to Local.",
            "summary": "healthCheckNodePort specifies the healthcheck nodePort for the service.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "elasticsearch.k8s.elastic.co.ts",
            "line": 1331,
          },
          "name": "healthCheckNodePort",
          "optional": true,
          "type": Object {
            "primitive": "number",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ElasticsearchSpecTransportServiceSpec#ipFamily",
            },
            "summary": "ipFamily specifies whether this Service has a preference for a particular IP family (e.g. IPv4 vs. IPv6).  If a specific IP family is requested, the clusterIP field will be allocated from that family, if it is available in the cluster.  If no IP family is requested, the cluster's primary IP family will be used. Other IP fields (loadBalancerIP, loadBalancerSourceRanges, externalIPs) and controllers which allocate external load-balancers should use the same IP family.  Endpoints for this Service will be of this family.  This field is immutable after creation. Assigning a ServiceIPFamily not available in the cluster (e.g. IPv6 in IPv4 only cluster) is an error condition and will fail during clusterIP assignment.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "elasticsearch.k8s.elastic.co.ts",
            "line": 1338,
          },
          "name": "ipFamily",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ElasticsearchSpecTransportServiceSpec#loadBalancerIP",
            },
            "remarks": "This feature depends on whether the underlying cloud-provider supports specifying the loadBalancerIP when a load balancer is created. This field will be ignored if the cloud-provider does not support the feature.",
            "summary": "Only applies to Service Type: LoadBalancer LoadBalancer will get created with the IP specified in this field.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "elasticsearch.k8s.elastic.co.ts",
            "line": 1345,
          },
          "name": "loadBalancerIp",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ElasticsearchSpecTransportServiceSpec#loadBalancerSourceRanges",
            },
            "remarks": "This field will be ignored if the cloud-provider does not support the feature.\\" More info: https://kubernetes.io/docs/tasks/access-application-cluster/configure-cloud-provider-firewall/",
            "summary": "If specified and supported by the platform, this will restrict traffic through the cloud-provider load-balancer will be restricted to the specified client IPs.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "elasticsearch.k8s.elastic.co.ts",
            "line": 1352,
          },
          "name": "loadBalancerSourceRanges",
          "optional": true,
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "primitive": "string",
              },
              "kind": "array",
            },
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ElasticsearchSpecTransportServiceSpec#ports",
            },
            "remarks": "More info: https://kubernetes.io/docs/concepts/services-networking/service/#virtual-ips-and-service-proxies",
            "summary": "The list of ports that are exposed by this service.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "elasticsearch.k8s.elastic.co.ts",
            "line": 1359,
          },
          "name": "ports",
          "optional": true,
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "fqn": "elasticsearchk8selasticco.ElasticsearchSpecTransportServiceSpecPorts",
              },
              "kind": "array",
            },
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ElasticsearchSpecTransportServiceSpec#publishNotReadyAddresses",
            },
            "remarks": "The default value is false. The primary use case for setting this field is to use a StatefulSet's Headless Service to propagate SRV records for its Pods without respect to their readiness for purpose of peer discovery.",
            "summary": "publishNotReadyAddresses, when set to true, indicates that DNS implementations must publish the notReadyAddresses of subsets for the Endpoints associated with the Service.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "elasticsearch.k8s.elastic.co.ts",
            "line": 1366,
          },
          "name": "publishNotReadyAddresses",
          "optional": true,
          "type": Object {
            "primitive": "boolean",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ElasticsearchSpecTransportServiceSpec#selector",
            },
            "remarks": "If empty or not present, the service is assumed to have an external process managing its endpoints, which Kubernetes will not modify. Only applies to types ClusterIP, NodePort, and LoadBalancer. Ignored if type is ExternalName. More info: https://kubernetes.io/docs/concepts/services-networking/service/",
            "summary": "Route service traffic to pods with label keys and values matching this selector.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "elasticsearch.k8s.elastic.co.ts",
            "line": 1373,
          },
          "name": "selector",
          "optional": true,
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "primitive": "string",
              },
              "kind": "map",
            },
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ElasticsearchSpecTransportServiceSpec#sessionAffinity",
            },
            "default": "None. More info: https://kubernetes.io/docs/concepts/services-networking/service/#virtual-ips-and-service-proxies",
            "remarks": "Used to maintain session affinity. Enable client IP based session affinity. Must be ClientIP or None. Defaults to None. More info: https://kubernetes.io/docs/concepts/services-networking/service/#virtual-ips-and-service-proxies",
            "summary": "Supports \\"ClientIP\\" and \\"None\\".",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "elasticsearch.k8s.elastic.co.ts",
            "line": 1381,
          },
          "name": "sessionAffinity",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ElasticsearchSpecTransportServiceSpec#sessionAffinityConfig",
            },
            "summary": "sessionAffinityConfig contains the configurations of session affinity.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "elasticsearch.k8s.elastic.co.ts",
            "line": 1388,
          },
          "name": "sessionAffinityConfig",
          "optional": true,
          "type": Object {
            "fqn": "elasticsearchk8selasticco.ElasticsearchSpecTransportServiceSpecSessionAffinityConfig",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ElasticsearchSpecTransportServiceSpec#topologyKeys",
            },
            "remarks": "Topology keys must be valid label keys and at most 16 keys may be specified. Endpoints are chosen based on the first topology key with available backends. If this field is specified and all entries have no backends that match the topology of the client, the service has no backends for that client and connections should fail. The special value \\"*\\" may be used to mean \\"any topology\\". This catch-all value, if used, only makes sense as the last value in the list. If this is not specified or empty, no topology constraints will be applied.",
            "summary": "topologyKeys is a preference-order list of topology keys which implementations of services should use to preferentially sort endpoints when accessing this Service, it can not be used at the same time as externalTrafficPolicy=Local.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "elasticsearch.k8s.elastic.co.ts",
            "line": 1395,
          },
          "name": "topologyKeys",
          "optional": true,
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "primitive": "string",
              },
              "kind": "array",
            },
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ElasticsearchSpecTransportServiceSpec#type",
            },
            "default": "ClusterIP. Valid options are ExternalName, ClusterIP, NodePort, and LoadBalancer. \\"ExternalName\\" maps to the specified externalName. \\"ClusterIP\\" allocates a cluster-internal IP address for load-balancing to endpoints. Endpoints are determined by the selector or if that is not specified, by manual construction of an Endpoints object. If clusterIP is \\"None\\", no virtual IP is allocated and the endpoints are published as a set of endpoints rather than a stable IP. \\"NodePort\\" builds on ClusterIP and allocates a port on every node which routes to the clusterIP. \\"LoadBalancer\\" builds on NodePort and creates an external load-balancer (if supported in the current cloud) which routes to the clusterIP. More info: https://kubernetes.io/docs/concepts/services-networking/service/#publishing-services-service-types",
            "remarks": "Defaults to ClusterIP. Valid options are ExternalName, ClusterIP, NodePort, and LoadBalancer. \\"ExternalName\\" maps to the specified externalName. \\"ClusterIP\\" allocates a cluster-internal IP address for load-balancing to endpoints. Endpoints are determined by the selector or if that is not specified, by manual construction of an Endpoints object. If clusterIP is \\"None\\", no virtual IP is allocated and the endpoints are published as a set of endpoints rather than a stable IP. \\"NodePort\\" builds on ClusterIP and allocates a port on every node which routes to the clusterIP. \\"LoadBalancer\\" builds on NodePort and creates an external load-balancer (if supported in the current cloud) which routes to the clusterIP. More info: https://kubernetes.io/docs/concepts/services-networking/service/#publishing-services-service-types",
            "summary": "type determines how the Service is exposed.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "elasticsearch.k8s.elastic.co.ts",
            "line": 1403,
          },
          "name": "type",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
      ],
    },
    "elasticsearchk8selasticco.ElasticsearchSpecTransportServiceSpecPorts": Object {
      "assembly": "elasticsearchk8selasticco",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "ElasticsearchSpecTransportServiceSpecPorts",
        },
        "summary": "ServicePort contains information on service's port.",
      },
      "fqn": "elasticsearchk8selasticco.ElasticsearchSpecTransportServiceSpecPorts",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "elasticsearch.k8s.elastic.co.ts",
        "line": 1815,
      },
      "name": "ElasticsearchSpecTransportServiceSpecPorts",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ElasticsearchSpecTransportServiceSpecPorts#port",
            },
            "summary": "The port that will be exposed by this service.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "elasticsearch.k8s.elastic.co.ts",
            "line": 1836,
          },
          "name": "port",
          "type": Object {
            "primitive": "number",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ElasticsearchSpecTransportServiceSpecPorts#name",
            },
            "remarks": "This must be a DNS_LABEL. All ports within a ServiceSpec must have unique names. When considering the endpoints for a Service, this must match the 'name' field in the EndpointPort. Optional if only one ServicePort is defined on this service.",
            "summary": "The name of this port within the service.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "elasticsearch.k8s.elastic.co.ts",
            "line": 1821,
          },
          "name": "name",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ElasticsearchSpecTransportServiceSpecPorts#nodePort",
            },
            "default": "to auto-allocate a port if the ServiceType of this Service requires one. More info: https://kubernetes.io/docs/concepts/services-networking/service/#type-nodeport",
            "remarks": "Usually assigned by the system. If specified, it will be allocated to the service if unused or else creation of the service will fail. Default is to auto-allocate a port if the ServiceType of this Service requires one. More info: https://kubernetes.io/docs/concepts/services-networking/service/#type-nodeport",
            "summary": "The port on each node on which this service is exposed when type=NodePort or LoadBalancer.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "elasticsearch.k8s.elastic.co.ts",
            "line": 1829,
          },
          "name": "nodePort",
          "optional": true,
          "type": Object {
            "primitive": "number",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ElasticsearchSpecTransportServiceSpecPorts#protocol",
            },
            "default": "TCP.",
            "remarks": "Supports \\"TCP\\", \\"UDP\\", and \\"SCTP\\". Default is TCP.",
            "summary": "The IP protocol for this port.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "elasticsearch.k8s.elastic.co.ts",
            "line": 1844,
          },
          "name": "protocol",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ElasticsearchSpecTransportServiceSpecPorts#targetPort",
            },
            "remarks": "Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME. If this is a string, it will be looked up as a named port in the target Pod's container ports. If this is not specified, the value of the 'port' field is used (an identity map). This field is ignored for services with clusterIP=None, and should be omitted or set equal to the 'port' field. More info: https://kubernetes.io/docs/concepts/services-networking/service/#defining-a-service",
            "summary": "Number or name of the port to access on the pods targeted by the service.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "elasticsearch.k8s.elastic.co.ts",
            "line": 1851,
          },
          "name": "targetPort",
          "optional": true,
          "type": Object {
            "fqn": "elasticsearchk8selasticco.ElasticsearchSpecTransportServiceSpecPortsTargetPort",
          },
        },
      ],
    },
    "elasticsearchk8selasticco.ElasticsearchSpecTransportServiceSpecPortsTargetPort": Object {
      "assembly": "elasticsearchk8selasticco",
      "docs": Object {
        "custom": Object {
          "schema": "ElasticsearchSpecTransportServiceSpecPortsTargetPort",
        },
        "remarks": "Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME. If this is a string, it will be looked up as a named port in the target Pod's container ports. If this is not specified, the value of the 'port' field is used (an identity map). This field is ignored for services with clusterIP=None, and should be omitted or set equal to the 'port' field. More info: https://kubernetes.io/docs/concepts/services-networking/service/#defining-a-service",
        "summary": "Number or name of the port to access on the pods targeted by the service.",
      },
      "fqn": "elasticsearchk8selasticco.ElasticsearchSpecTransportServiceSpecPortsTargetPort",
      "kind": "class",
      "locationInModule": Object {
        "filename": "elasticsearch.k8s.elastic.co.ts",
        "line": 2028,
      },
      "methods": Array [
        Object {
          "locationInModule": Object {
            "filename": "elasticsearch.k8s.elastic.co.ts",
            "line": 2029,
          },
          "name": "fromNumber",
          "parameters": Array [
            Object {
              "name": "value",
              "type": Object {
                "primitive": "number",
              },
            },
          ],
          "returns": Object {
            "type": Object {
              "fqn": "elasticsearchk8selasticco.ElasticsearchSpecTransportServiceSpecPortsTargetPort",
            },
          },
          "static": true,
        },
        Object {
          "locationInModule": Object {
            "filename": "elasticsearch.k8s.elastic.co.ts",
            "line": 2032,
          },
          "name": "fromString",
          "parameters": Array [
            Object {
              "name": "value",
              "type": Object {
                "primitive": "string",
              },
            },
          ],
          "returns": Object {
            "type": Object {
              "fqn": "elasticsearchk8selasticco.ElasticsearchSpecTransportServiceSpecPortsTargetPort",
            },
          },
          "static": true,
        },
      ],
      "name": "ElasticsearchSpecTransportServiceSpecPortsTargetPort",
      "properties": Array [
        Object {
          "immutable": true,
          "locationInModule": Object {
            "filename": "elasticsearch.k8s.elastic.co.ts",
            "line": 2035,
          },
          "name": "value",
          "type": Object {
            "primitive": "any",
          },
        },
      ],
    },
    "elasticsearchk8selasticco.ElasticsearchSpecTransportServiceSpecSessionAffinityConfig": Object {
      "assembly": "elasticsearchk8selasticco",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "ElasticsearchSpecTransportServiceSpecSessionAffinityConfig",
        },
        "summary": "sessionAffinityConfig contains the configurations of session affinity.",
      },
      "fqn": "elasticsearchk8selasticco.ElasticsearchSpecTransportServiceSpecSessionAffinityConfig",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "elasticsearch.k8s.elastic.co.ts",
        "line": 1878,
      },
      "name": "ElasticsearchSpecTransportServiceSpecSessionAffinityConfig",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ElasticsearchSpecTransportServiceSpecSessionAffinityConfig#clientIP",
            },
            "summary": "clientIP contains the configurations of Client IP based session affinity.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "elasticsearch.k8s.elastic.co.ts",
            "line": 1884,
          },
          "name": "clientIp",
          "optional": true,
          "type": Object {
            "fqn": "elasticsearchk8selasticco.ElasticsearchSpecTransportServiceSpecSessionAffinityConfigClientIp",
          },
        },
      ],
    },
    "elasticsearchk8selasticco.ElasticsearchSpecTransportServiceSpecSessionAffinityConfigClientIp": Object {
      "assembly": "elasticsearchk8selasticco",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "ElasticsearchSpecTransportServiceSpecSessionAffinityConfigClientIp",
        },
        "summary": "clientIP contains the configurations of Client IP based session affinity.",
      },
      "fqn": "elasticsearchk8selasticco.ElasticsearchSpecTransportServiceSpecSessionAffinityConfigClientIp",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "elasticsearch.k8s.elastic.co.ts",
        "line": 2045,
      },
      "name": "ElasticsearchSpecTransportServiceSpecSessionAffinityConfigClientIp",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ElasticsearchSpecTransportServiceSpecSessionAffinityConfigClientIp#timeoutSeconds",
            },
            "remarks": "The value must be >0 && <=86400(for 1 day) if ServiceAffinity == \\"ClientIP\\". Default value is 10800(for 3 hours).",
            "summary": "timeoutSeconds specifies the seconds of ClientIP type session sticky time.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "elasticsearch.k8s.elastic.co.ts",
            "line": 2051,
          },
          "name": "timeoutSeconds",
          "optional": true,
          "type": Object {
            "primitive": "number",
          },
        },
      ],
    },
    "elasticsearchk8selasticco.ElasticsearchSpecUpdateStrategy": Object {
      "assembly": "elasticsearchk8selasticco",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "ElasticsearchSpecUpdateStrategy",
        },
        "summary": "UpdateStrategy specifies how updates to the cluster should be performed.",
      },
      "fqn": "elasticsearchk8selasticco.ElasticsearchSpecUpdateStrategy",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "elasticsearch.k8s.elastic.co.ts",
        "line": 468,
      },
      "name": "ElasticsearchSpecUpdateStrategy",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ElasticsearchSpecUpdateStrategy#changeBudget",
            },
            "summary": "ChangeBudget defines the constraints to consider when applying changes to the Elasticsearch cluster.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "elasticsearch.k8s.elastic.co.ts",
            "line": 474,
          },
          "name": "changeBudget",
          "optional": true,
          "type": Object {
            "fqn": "elasticsearchk8selasticco.ElasticsearchSpecUpdateStrategyChangeBudget",
          },
        },
      ],
    },
    "elasticsearchk8selasticco.ElasticsearchSpecUpdateStrategyChangeBudget": Object {
      "assembly": "elasticsearchk8selasticco",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "ElasticsearchSpecUpdateStrategyChangeBudget",
        },
        "summary": "ChangeBudget defines the constraints to consider when applying changes to the Elasticsearch cluster.",
      },
      "fqn": "elasticsearchk8selasticco.ElasticsearchSpecUpdateStrategyChangeBudget",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "elasticsearch.k8s.elastic.co.ts",
        "line": 847,
      },
      "name": "ElasticsearchSpecUpdateStrategyChangeBudget",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ElasticsearchSpecUpdateStrategyChangeBudget#maxSurge",
            },
            "default": "unbounded if not specified.",
            "remarks": "MaxSurge is only taken into consideration when scaling up. Setting a negative value will disable the restriction. Defaults to unbounded if not specified.",
            "summary": "MaxSurge is the maximum number of new pods that can be created exceeding the original number of pods defined in the specification.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "elasticsearch.k8s.elastic.co.ts",
            "line": 854,
          },
          "name": "maxSurge",
          "optional": true,
          "type": Object {
            "primitive": "number",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ElasticsearchSpecUpdateStrategyChangeBudget#maxUnavailable",
            },
            "default": "1 if not specified.",
            "remarks": "Setting a negative value will disable this restriction. Defaults to 1 if not specified.",
            "summary": "MaxUnavailable is the maximum number of pods that can be unavailable (not ready) during the update due to circumstances under the control of the operator.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "elasticsearch.k8s.elastic.co.ts",
            "line": 862,
          },
          "name": "maxUnavailable",
          "optional": true,
          "type": Object {
            "primitive": "number",
          },
        },
      ],
    },
  },
  "version": "0.0.0",
}
`;

exports[`snapshots jenkins_crd.yaml 1`] = `
Object {
  "author": Object {
    "name": "generated@generated.com",
    "roles": Array [
      "author",
    ],
  },
  "dependencies": Object {
    "cdk8s": "999.999.999",
    "constructs": "3.3.104",
  },
  "dependencyClosure": Object {
    "cdk8s": Object {
      "targets": Object {
        "dotnet": Object {
          "namespace": "Org.Cdk8s",
          "packageId": "Org.Cdk8s",
        },
        "go": Object {
          "moduleName": "github.com/cdk8s-team/cdk8s-core-go",
        },
        "java": Object {
          "maven": Object {
            "artifactId": "cdk8s",
            "groupId": "org.cdk8s",
          },
          "package": "org.cdk8s",
        },
        "js": Object {
          "npm": "cdk8s",
        },
        "python": Object {
          "distName": "cdk8s",
          "module": "cdk8s",
        },
      },
    },
    "constructs": Object {
      "targets": Object {
        "dotnet": Object {
          "namespace": "Constructs",
          "packageId": "Constructs",
        },
        "go": Object {
          "moduleName": "github.com/aws/constructs-go",
        },
        "java": Object {
          "maven": Object {
            "artifactId": "constructs",
            "groupId": "software.constructs",
          },
          "package": "software.constructs",
        },
        "js": Object {
          "npm": "constructs",
        },
        "python": Object {
          "distName": "constructs",
          "module": "constructs",
        },
      },
    },
  },
  "description": "jenkinsio",
  "fingerprint": "<fingerprint>",
  "homepage": "http://generated",
  "jsiiVersion": "1.32.0 (build 3f4fe23)",
  "license": "UNLICENSED",
  "metadata": Object {
    "jsii": Object {
      "pacmak": Object {
        "hasDefaultInterfaces": true,
      },
    },
  },
  "name": "jenkinsio",
  "repository": Object {
    "type": "git",
    "url": "http://generated",
  },
  "schema": "jsii/0.10.0",
  "targets": Object {
    "js": Object {
      "npm": "jenkinsio",
    },
  },
  "types": Object {
    "jenkinsio.Jenkins": Object {
      "assembly": "jenkinsio",
      "base": "cdk8s.ApiObject",
      "docs": Object {
        "custom": Object {
          "schema": "Jenkins",
        },
        "summary": "Jenkins is the Schema for the jenkins API.",
      },
      "fqn": "jenkinsio.Jenkins",
      "initializer": Object {
        "docs": Object {
          "summary": "Defines a \\"Jenkins\\" API object.",
        },
        "locationInModule": Object {
          "filename": "jenkins.io.ts",
          "line": 39,
        },
        "parameters": Array [
          Object {
            "docs": Object {
              "summary": "the scope in which to define this object.",
            },
            "name": "scope",
            "type": Object {
              "fqn": "constructs.Construct",
            },
          },
          Object {
            "docs": Object {
              "summary": "a scope-local name for the object.",
            },
            "name": "id",
            "type": Object {
              "primitive": "string",
            },
          },
          Object {
            "docs": Object {
              "summary": "initialization props.",
            },
            "name": "props",
            "optional": true,
            "type": Object {
              "fqn": "jenkinsio.JenkinsProps",
            },
          },
        ],
      },
      "kind": "class",
      "locationInModule": Object {
        "filename": "jenkins.io.ts",
        "line": 10,
      },
      "methods": Array [
        Object {
          "docs": Object {
            "remarks": "This can be used to inline resource manifests inside other objects (e.g. as templates).",
            "summary": "Renders a Kubernetes manifest for \\"Jenkins\\".",
          },
          "locationInModule": Object {
            "filename": "jenkins.io.ts",
            "line": 26,
          },
          "name": "manifest",
          "parameters": Array [
            Object {
              "docs": Object {
                "summary": "initialization props.",
              },
              "name": "props",
              "optional": true,
              "type": Object {
                "fqn": "jenkinsio.JenkinsProps",
              },
            },
          ],
          "returns": Object {
            "type": Object {
              "primitive": "any",
            },
          },
          "static": true,
        },
      ],
      "name": "Jenkins",
      "properties": Array [
        Object {
          "const": true,
          "docs": Object {
            "summary": "Returns the apiVersion and kind for \\"Jenkins\\".",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "jenkins.io.ts",
            "line": 14,
          },
          "name": "GVK",
          "static": true,
          "type": Object {
            "fqn": "cdk8s.GroupVersionKind",
          },
        },
      ],
    },
    "jenkinsio.JenkinsProps": Object {
      "assembly": "jenkinsio",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "Jenkins",
        },
        "summary": "Jenkins is the Schema for the jenkins API.",
      },
      "fqn": "jenkinsio.JenkinsProps",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "jenkins.io.ts",
        "line": 49,
      },
      "name": "JenkinsProps",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "Jenkins#metadata",
            },
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "jenkins.io.ts",
            "line": 53,
          },
          "name": "metadata",
          "optional": true,
          "type": Object {
            "primitive": "any",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "Jenkins#spec",
            },
            "summary": "Spec defines the desired state of the Jenkins.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "jenkins.io.ts",
            "line": 60,
          },
          "name": "spec",
          "optional": true,
          "type": Object {
            "fqn": "jenkinsio.JenkinsSpec",
          },
        },
      ],
    },
    "jenkinsio.JenkinsSpec": Object {
      "assembly": "jenkinsio",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "JenkinsSpec",
        },
        "summary": "Spec defines the desired state of the Jenkins.",
      },
      "fqn": "jenkinsio.JenkinsSpec",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "jenkins.io.ts",
        "line": 84,
      },
      "name": "JenkinsSpec",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "JenkinsSpec#jenkinsAPISettings",
            },
            "summary": "JenkinsAPISettings defines configuration used by the operator to gain admin access to the Jenkins API.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "jenkins.io.ts",
            "line": 111,
          },
          "name": "jenkinsApiSettings",
          "type": Object {
            "fqn": "jenkinsio.JenkinsSpecJenkinsApiSettings",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "JenkinsSpec#backup",
            },
            "summary": "Backup defines configuration of Jenkins backup More info: https://github.com/jenkinsci/kubernetes-operator/blob/master/docs/getting-started.md#configure-backup-and-restore.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "jenkins.io.ts",
            "line": 90,
          },
          "name": "backup",
          "optional": true,
          "type": Object {
            "fqn": "jenkinsio.JenkinsSpecBackup",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "JenkinsSpec#configurationAsCode",
            },
            "summary": "ConfigurationAsCode defines configuration of Jenkins customization via Configuration as Code Jenkins plugin.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "jenkins.io.ts",
            "line": 97,
          },
          "name": "configurationAsCode",
          "optional": true,
          "type": Object {
            "fqn": "jenkinsio.JenkinsSpecConfigurationAsCode",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "JenkinsSpec#groovyScripts",
            },
            "summary": "GroovyScripts defines configuration of Jenkins customization via groovy scripts.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "jenkins.io.ts",
            "line": 104,
          },
          "name": "groovyScripts",
          "optional": true,
          "type": Object {
            "fqn": "jenkinsio.JenkinsSpecGroovyScripts",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "JenkinsSpec#master",
            },
            "remarks": "Every single change here requires a pod restart.",
            "summary": "Master represents Jenkins master pod properties and Jenkins plugins.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "jenkins.io.ts",
            "line": 118,
          },
          "name": "master",
          "optional": true,
          "type": Object {
            "fqn": "jenkinsio.JenkinsSpecMaster",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "JenkinsSpec#notifications",
            },
            "summary": "Notifications defines list of a services which are used to inform about Jenkins status Can be used to integrate chat services like Slack, Microsoft Teams or Mailgun.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "jenkins.io.ts",
            "line": 125,
          },
          "name": "notifications",
          "optional": true,
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "fqn": "jenkinsio.JenkinsSpecNotifications",
              },
              "kind": "array",
            },
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "JenkinsSpec#restore",
            },
            "summary": "Backup defines configuration of Jenkins backup restore More info: https://github.com/jenkinsci/kubernetes-operator/blob/master/docs/getting-started.md#configure-backup-and-restore.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "jenkins.io.ts",
            "line": 132,
          },
          "name": "restore",
          "optional": true,
          "type": Object {
            "fqn": "jenkinsio.JenkinsSpecRestore",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "JenkinsSpec#roles",
            },
            "summary": "Roles defines list of extra RBAC roles for the Jenkins Master pod service account.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "jenkins.io.ts",
            "line": 139,
          },
          "name": "roles",
          "optional": true,
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "fqn": "jenkinsio.JenkinsSpecRoles",
              },
              "kind": "array",
            },
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "JenkinsSpec#seedJobs",
            },
            "summary": "SeedJobs defines list of Jenkins Seed Job configurations More info: https://github.com/jenkinsci/kubernetes-operator/blob/master/docs/getting-started.md#configure-seed-jobs-and-pipelines.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "jenkins.io.ts",
            "line": 146,
          },
          "name": "seedJobs",
          "optional": true,
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "fqn": "jenkinsio.JenkinsSpecSeedJobs",
              },
              "kind": "array",
            },
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "JenkinsSpec#service",
            },
            "default": "port: 8080 type: ClusterIP",
            "summary": "Service is Kubernetes service of Jenkins master HTTP pod Defaults to : port: 8080 type: ClusterIP.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "jenkins.io.ts",
            "line": 154,
          },
          "name": "service",
          "optional": true,
          "type": Object {
            "fqn": "jenkinsio.JenkinsSpecService",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "JenkinsSpec#serviceAccount",
            },
            "summary": "ServiceAccount defines Jenkins master service account attributes.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "jenkins.io.ts",
            "line": 161,
          },
          "name": "serviceAccount",
          "optional": true,
          "type": Object {
            "fqn": "jenkinsio.JenkinsSpecServiceAccount",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "JenkinsSpec#slaveService",
            },
            "default": "port: 50000 type: ClusterIP",
            "summary": "Service is Kubernetes service of Jenkins slave pods Defaults to : port: 50000 type: ClusterIP.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "jenkins.io.ts",
            "line": 169,
          },
          "name": "slaveService",
          "optional": true,
          "type": Object {
            "fqn": "jenkinsio.JenkinsSpecSlaveService",
          },
        },
      ],
    },
    "jenkinsio.JenkinsSpecBackup": Object {
      "assembly": "jenkinsio",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "JenkinsSpecBackup",
        },
        "summary": "Backup defines configuration of Jenkins backup More info: https://github.com/jenkinsci/kubernetes-operator/blob/master/docs/getting-started.md#configure-backup-and-restore.",
      },
      "fqn": "jenkinsio.JenkinsSpecBackup",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "jenkins.io.ts",
        "line": 203,
      },
      "name": "JenkinsSpecBackup",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "JenkinsSpecBackup#action",
            },
            "summary": "Action defines action which performs backup in backup container sidecar.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "jenkins.io.ts",
            "line": 209,
          },
          "name": "action",
          "type": Object {
            "fqn": "jenkinsio.JenkinsSpecBackupAction",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "JenkinsSpecBackup#containerName",
            },
            "summary": "ContainerName is the container name responsible for backup operation.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "jenkins.io.ts",
            "line": 216,
          },
          "name": "containerName",
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "JenkinsSpecBackup#interval",
            },
            "default": "30.",
            "summary": "Interval tells how often make backup in seconds Defaults to 30.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "jenkins.io.ts",
            "line": 224,
          },
          "name": "interval",
          "type": Object {
            "primitive": "number",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "JenkinsSpecBackup#makeBackupBeforePodDeletion",
            },
            "summary": "MakeBackupBeforePodDeletion tells operator to make backup before Jenkins master pod deletion.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "jenkins.io.ts",
            "line": 231,
          },
          "name": "makeBackupBeforePodDeletion",
          "type": Object {
            "primitive": "boolean",
          },
        },
      ],
    },
    "jenkinsio.JenkinsSpecBackupAction": Object {
      "assembly": "jenkinsio",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "JenkinsSpecBackupAction",
        },
        "summary": "Action defines action which performs backup in backup container sidecar.",
      },
      "fqn": "jenkinsio.JenkinsSpecBackupAction",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "jenkins.io.ts",
        "line": 969,
      },
      "name": "JenkinsSpecBackupAction",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "JenkinsSpecBackupAction#exec",
            },
            "summary": "Exec specifies the action to take.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "jenkins.io.ts",
            "line": 975,
          },
          "name": "exec",
          "optional": true,
          "type": Object {
            "fqn": "jenkinsio.JenkinsSpecBackupActionExec",
          },
        },
      ],
    },
    "jenkinsio.JenkinsSpecBackupActionExec": Object {
      "assembly": "jenkinsio",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "JenkinsSpecBackupActionExec",
        },
        "summary": "Exec specifies the action to take.",
      },
      "fqn": "jenkinsio.JenkinsSpecBackupActionExec",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "jenkins.io.ts",
        "line": 1956,
      },
      "name": "JenkinsSpecBackupActionExec",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "JenkinsSpecBackupActionExec#command",
            },
            "remarks": "The command is simply exec'd, it is not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use a shell, you need to explicitly call out to that shell. Exit status of 0 is treated as live/healthy and non-zero is unhealthy.",
            "summary": "Command is the command line to execute inside the container, the working directory for the command  is root ('/') in the container's filesystem.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "jenkins.io.ts",
            "line": 1962,
          },
          "name": "command",
          "optional": true,
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "primitive": "string",
              },
              "kind": "array",
            },
          },
        },
      ],
    },
    "jenkinsio.JenkinsSpecConfigurationAsCode": Object {
      "assembly": "jenkinsio",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "JenkinsSpecConfigurationAsCode",
        },
        "summary": "ConfigurationAsCode defines configuration of Jenkins customization via Configuration as Code Jenkins plugin.",
      },
      "fqn": "jenkinsio.JenkinsSpecConfigurationAsCode",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "jenkins.io.ts",
        "line": 257,
      },
      "name": "JenkinsSpecConfigurationAsCode",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "JenkinsSpecConfigurationAsCode#configurations",
            },
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "jenkins.io.ts",
            "line": 261,
          },
          "name": "configurations",
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "fqn": "jenkinsio.JenkinsSpecConfigurationAsCodeConfigurations",
              },
              "kind": "array",
            },
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "JenkinsSpecConfigurationAsCode#secret",
            },
            "summary": "SecretRef is reference to Kubernetes secret.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "jenkins.io.ts",
            "line": 268,
          },
          "name": "secret",
          "type": Object {
            "fqn": "jenkinsio.JenkinsSpecConfigurationAsCodeSecret",
          },
        },
      ],
    },
    "jenkinsio.JenkinsSpecConfigurationAsCodeConfigurations": Object {
      "assembly": "jenkinsio",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "JenkinsSpecConfigurationAsCodeConfigurations",
        },
        "summary": "ConfigMapRef is reference to Kubernetes ConfigMap.",
      },
      "fqn": "jenkinsio.JenkinsSpecConfigurationAsCodeConfigurations",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "jenkins.io.ts",
        "line": 998,
      },
      "name": "JenkinsSpecConfigurationAsCodeConfigurations",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "JenkinsSpecConfigurationAsCodeConfigurations#name",
            },
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "jenkins.io.ts",
            "line": 1002,
          },
          "name": "name",
          "type": Object {
            "primitive": "string",
          },
        },
      ],
    },
    "jenkinsio.JenkinsSpecConfigurationAsCodeSecret": Object {
      "assembly": "jenkinsio",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "JenkinsSpecConfigurationAsCodeSecret",
        },
        "summary": "SecretRef is reference to Kubernetes secret.",
      },
      "fqn": "jenkinsio.JenkinsSpecConfigurationAsCodeSecret",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "jenkins.io.ts",
        "line": 1025,
      },
      "name": "JenkinsSpecConfigurationAsCodeSecret",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "JenkinsSpecConfigurationAsCodeSecret#name",
            },
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "jenkins.io.ts",
            "line": 1029,
          },
          "name": "name",
          "type": Object {
            "primitive": "string",
          },
        },
      ],
    },
    "jenkinsio.JenkinsSpecGroovyScripts": Object {
      "assembly": "jenkinsio",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "JenkinsSpecGroovyScripts",
        },
        "summary": "GroovyScripts defines configuration of Jenkins customization via groovy scripts.",
      },
      "fqn": "jenkinsio.JenkinsSpecGroovyScripts",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "jenkins.io.ts",
        "line": 292,
      },
      "name": "JenkinsSpecGroovyScripts",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "JenkinsSpecGroovyScripts#configurations",
            },
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "jenkins.io.ts",
            "line": 296,
          },
          "name": "configurations",
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "fqn": "jenkinsio.JenkinsSpecGroovyScriptsConfigurations",
              },
              "kind": "array",
            },
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "JenkinsSpecGroovyScripts#secret",
            },
            "summary": "SecretRef is reference to Kubernetes secret.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "jenkins.io.ts",
            "line": 303,
          },
          "name": "secret",
          "type": Object {
            "fqn": "jenkinsio.JenkinsSpecGroovyScriptsSecret",
          },
        },
      ],
    },
    "jenkinsio.JenkinsSpecGroovyScriptsConfigurations": Object {
      "assembly": "jenkinsio",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "JenkinsSpecGroovyScriptsConfigurations",
        },
        "summary": "ConfigMapRef is reference to Kubernetes ConfigMap.",
      },
      "fqn": "jenkinsio.JenkinsSpecGroovyScriptsConfigurations",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "jenkins.io.ts",
        "line": 1052,
      },
      "name": "JenkinsSpecGroovyScriptsConfigurations",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "JenkinsSpecGroovyScriptsConfigurations#name",
            },
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "jenkins.io.ts",
            "line": 1056,
          },
          "name": "name",
          "type": Object {
            "primitive": "string",
          },
        },
      ],
    },
    "jenkinsio.JenkinsSpecGroovyScriptsSecret": Object {
      "assembly": "jenkinsio",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "JenkinsSpecGroovyScriptsSecret",
        },
        "summary": "SecretRef is reference to Kubernetes secret.",
      },
      "fqn": "jenkinsio.JenkinsSpecGroovyScriptsSecret",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "jenkins.io.ts",
        "line": 1079,
      },
      "name": "JenkinsSpecGroovyScriptsSecret",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "JenkinsSpecGroovyScriptsSecret#name",
            },
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "jenkins.io.ts",
            "line": 1083,
          },
          "name": "name",
          "type": Object {
            "primitive": "string",
          },
        },
      ],
    },
    "jenkinsio.JenkinsSpecJenkinsApiSettings": Object {
      "assembly": "jenkinsio",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "JenkinsSpecJenkinsApiSettings",
        },
        "summary": "JenkinsAPISettings defines configuration used by the operator to gain admin access to the Jenkins API.",
      },
      "fqn": "jenkinsio.JenkinsSpecJenkinsApiSettings",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "jenkins.io.ts",
        "line": 327,
      },
      "name": "JenkinsSpecJenkinsApiSettings",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "JenkinsSpecJenkinsApiSettings#authorizationStrategy",
            },
            "summary": "AuthorizationStrategy defines authorization strategy of the operator for the Jenkins API.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "jenkins.io.ts",
            "line": 333,
          },
          "name": "authorizationStrategy",
          "type": Object {
            "primitive": "string",
          },
        },
      ],
    },
    "jenkinsio.JenkinsSpecMaster": Object {
      "assembly": "jenkinsio",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "JenkinsSpecMaster",
        },
        "remarks": "Every single change here requires a pod restart.",
        "summary": "Master represents Jenkins master pod properties and Jenkins plugins.",
      },
      "fqn": "jenkinsio.JenkinsSpecMaster",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "jenkins.io.ts",
        "line": 356,
      },
      "name": "JenkinsSpecMaster",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "JenkinsSpecMaster#disableCSRFProtection",
            },
            "summary": "DisableCSRFProtection allows you to toggle CSRF Protection on Jenkins.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "jenkins.io.ts",
            "line": 385,
          },
          "name": "disableCsrfProtection",
          "type": Object {
            "primitive": "boolean",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "JenkinsSpecMaster#annotations",
            },
            "remarks": "They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations",
            "summary": "Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "jenkins.io.ts",
            "line": 362,
          },
          "name": "annotations",
          "optional": true,
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "primitive": "string",
              },
              "kind": "map",
            },
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "JenkinsSpecMaster#basePlugins",
            },
            "default": "name: kubernetes version: 1.15.7 - name: workflow-job version: \\"2.32\\" - name: workflow-aggregator version: \\"2.6\\" - name: git version: 3.10.0 - name: job-dsl version: \\"1.74\\" - name: configuration-as-code version: \\"1.19\\" - name: configuration-as-code-support version: \\"1.19\\" - name: kubernetes-credentials-provider version: 0.12.1",
            "summary": "BasePlugins contains plugins required by operator Defaults to : - name: kubernetes version: 1.15.7 - name: workflow-job version: \\"2.32\\" - name: workflow-aggregator version: \\"2.6\\" - name: git version: 3.10.0 - name: job-dsl version: \\"1.74\\" - name: configuration-as-code version: \\"1.19\\" - name: configuration-as-code-support version: \\"1.19\\" - name: kubernetes-credentials-provider version: 0.12.1.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "jenkins.io.ts",
            "line": 370,
          },
          "name": "basePlugins",
          "optional": true,
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "fqn": "jenkinsio.JenkinsSpecMasterBasePlugins",
              },
              "kind": "array",
            },
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "JenkinsSpecMaster#containers",
            },
            "default": "image: jenkins/jenkins:lts   imagePullPolicy: Always   livenessProbe:     failureThreshold: 12     httpGet:       path: /login       port: http       scheme: HTTP     initialDelaySeconds: 80     periodSeconds: 10     successThreshold: 1     timeoutSeconds: 5   name: jenkins-master   readinessProbe:     failureThreshold: 3     httpGet:       path: /login       port: http       scheme: HTTP     initialDelaySeconds: 30     periodSeconds: 10     successThreshold: 1     timeoutSeconds: 1   resources:     limits:       cpu: 1500m       memory: 3Gi     requests:       cpu: \\"1\\"       memory: 600Mi",
            "remarks": "Containers cannot currently be added or removed. There must be at least one container in a Pod. Defaults to: - image: jenkins/jenkins:lts   imagePullPolicy: Always   livenessProbe:     failureThreshold: 12     httpGet:       path: /login       port: http       scheme: HTTP     initialDelaySeconds: 80     periodSeconds: 10     successThreshold: 1     timeoutSeconds: 5   name: jenkins-master   readinessProbe:     failureThreshold: 3     httpGet:       path: /login       port: http       scheme: HTTP     initialDelaySeconds: 30     periodSeconds: 10     successThreshold: 1     timeoutSeconds: 1   resources:     limits:       cpu: 1500m       memory: 3Gi     requests:       cpu: \\"1\\"       memory: 600Mi",
            "summary": "List of containers belonging to the pod.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "jenkins.io.ts",
            "line": 378,
          },
          "name": "containers",
          "optional": true,
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "fqn": "jenkinsio.JenkinsSpecMasterContainers",
              },
              "kind": "array",
            },
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "JenkinsSpecMaster#imagePullSecrets",
            },
            "remarks": "If specified, these secrets will be passed to individual puller implementations for them to use. For example, in the case of docker, only DockerConfig type secrets are honored. More info: https://kubernetes.io/docs/concepts/containers/images#specifying-imagepullsecrets-on-a-pod",
            "summary": "ImagePullSecrets is an optional list of references to secrets in the same namespace to use for pulling any of the images used by this PodSpec.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "jenkins.io.ts",
            "line": 392,
          },
          "name": "imagePullSecrets",
          "optional": true,
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "fqn": "jenkinsio.JenkinsSpecMasterImagePullSecrets",
              },
              "kind": "array",
            },
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "JenkinsSpecMaster#labels",
            },
            "remarks": "May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels",
            "summary": "Map of string keys and values that can be used to organize and categorize (scope and select) objects.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "jenkins.io.ts",
            "line": 399,
          },
          "name": "labels",
          "optional": true,
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "primitive": "string",
              },
              "kind": "map",
            },
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "JenkinsSpecMaster#masterAnnotations",
            },
            "remarks": "They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations Deprecated: will be removed in the future, please use Annotations(annotations)",
            "summary": "Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "jenkins.io.ts",
            "line": 406,
          },
          "name": "masterAnnotations",
          "optional": true,
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "primitive": "string",
              },
              "kind": "map",
            },
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "JenkinsSpecMaster#nodeSelector",
            },
            "remarks": "Selector which must match a node's labels for the pod to be scheduled on that node. More info: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/",
            "summary": "NodeSelector is a selector which must be true for the pod to fit on a node.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "jenkins.io.ts",
            "line": 413,
          },
          "name": "nodeSelector",
          "optional": true,
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "primitive": "string",
              },
              "kind": "map",
            },
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "JenkinsSpecMaster#plugins",
            },
            "summary": "Plugins contains plugins required by user.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "jenkins.io.ts",
            "line": 420,
          },
          "name": "plugins",
          "optional": true,
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "fqn": "jenkinsio.JenkinsSpecMasterPlugins",
              },
              "kind": "array",
            },
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "JenkinsSpecMaster#securityContext",
            },
            "default": "runAsUser: 1000 fsGroup: 1000",
            "remarks": "As per kubernetes specification, it can be overridden for each container individually. Defaults to: runAsUser: 1000 fsGroup: 1000",
            "summary": "SecurityContext that applies to all the containers of the Jenkins Master.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "jenkins.io.ts",
            "line": 428,
          },
          "name": "securityContext",
          "optional": true,
          "type": Object {
            "fqn": "jenkinsio.JenkinsSpecMasterSecurityContext",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "JenkinsSpecMaster#tolerations",
            },
            "summary": "If specified, the pod's tolerations.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "jenkins.io.ts",
            "line": 435,
          },
          "name": "tolerations",
          "optional": true,
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "fqn": "jenkinsio.JenkinsSpecMasterTolerations",
              },
              "kind": "array",
            },
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "JenkinsSpecMaster#volumes",
            },
            "remarks": "More info: https://kubernetes.io/docs/concepts/storage/volumes",
            "summary": "List of volumes that can be mounted by containers belonging to the pod.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "jenkins.io.ts",
            "line": 442,
          },
          "name": "volumes",
          "optional": true,
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "fqn": "jenkinsio.JenkinsSpecMasterVolumes",
              },
              "kind": "array",
            },
          },
        },
      ],
    },
    "jenkinsio.JenkinsSpecMasterBasePlugins": Object {
      "assembly": "jenkinsio",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "JenkinsSpecMasterBasePlugins",
        },
        "summary": "Plugin defines Jenkins plugin.",
      },
      "fqn": "jenkinsio.JenkinsSpecMasterBasePlugins",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "jenkins.io.ts",
        "line": 1106,
      },
      "name": "JenkinsSpecMasterBasePlugins",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "JenkinsSpecMasterBasePlugins#name",
            },
            "summary": "Name is the name of Jenkins plugin.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "jenkins.io.ts",
            "line": 1112,
          },
          "name": "name",
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "JenkinsSpecMasterBasePlugins#version",
            },
            "summary": "Version is the version of Jenkins plugin.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "jenkins.io.ts",
            "line": 1119,
          },
          "name": "version",
          "type": Object {
            "primitive": "string",
          },
        },
      ],
    },
    "jenkinsio.JenkinsSpecMasterContainers": Object {
      "assembly": "jenkinsio",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "JenkinsSpecMasterContainers",
        },
        "summary": "Container defines Kubernetes container attributes.",
      },
      "fqn": "jenkinsio.JenkinsSpecMasterContainers",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "jenkins.io.ts",
        "line": 1143,
      },
      "name": "JenkinsSpecMasterContainers",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "JenkinsSpecMasterContainers#image",
            },
            "remarks": "More info: https://kubernetes.io/docs/concepts/containers/images",
            "summary": "Docker image name.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "jenkins.io.ts",
            "line": 1177,
          },
          "name": "image",
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "JenkinsSpecMasterContainers#imagePullPolicy",
            },
            "default": "Always.",
            "remarks": "One of Always, Never, IfNotPresent. Defaults to Always.",
            "summary": "Image pull policy.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "jenkins.io.ts",
            "line": 1185,
          },
          "name": "imagePullPolicy",
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "JenkinsSpecMasterContainers#name",
            },
            "remarks": "Each container in a pod must have a unique name (DNS_LABEL).",
            "summary": "Name of the container specified as a DNS_LABEL.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "jenkins.io.ts",
            "line": 1206,
          },
          "name": "name",
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "JenkinsSpecMasterContainers#resources",
            },
            "remarks": "More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/",
            "summary": "Compute Resources required by this container.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "jenkins.io.ts",
            "line": 1227,
          },
          "name": "resources",
          "type": Object {
            "fqn": "jenkinsio.JenkinsSpecMasterContainersResources",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "JenkinsSpecMasterContainers#args",
            },
            "remarks": "The docker image's CMD is used if this is not provided. Variable references $(VAR_NAME) are expanded using the container's environment. If a variable cannot be resolved, the reference in the input string will be unchanged. The $(VAR_NAME) syntax can be escaped with a double $$, ie: $$(VAR_NAME). Escaped references will never be expanded, regardless of whether the variable exists or not. More info: https://kubernetes.io/docs/tasks/inject-data-application/define-command-argument-container/#running-a-command-in-a-shell",
            "summary": "Arguments to the entrypoint.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "jenkins.io.ts",
            "line": 1149,
          },
          "name": "args",
          "optional": true,
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "primitive": "string",
              },
              "kind": "array",
            },
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "JenkinsSpecMasterContainers#command",
            },
            "remarks": "Not executed within a shell. The docker image's ENTRYPOINT is used if this is not provided. Variable references $(VAR_NAME) are expanded using the container's environment. If a variable cannot be resolved, the reference in the input string will be unchanged. The $(VAR_NAME) syntax can be escaped with a double $$, ie: $$(VAR_NAME). Escaped references will never be expanded, regardless of whether the variable exists or not. More info: https://kubernetes.io/docs/tasks/inject-data-application/define-command-argument-container/#running-a-command-in-a-shell",
            "summary": "Entrypoint array.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "jenkins.io.ts",
            "line": 1156,
          },
          "name": "command",
          "optional": true,
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "primitive": "string",
              },
              "kind": "array",
            },
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "JenkinsSpecMasterContainers#env",
            },
            "summary": "List of environment variables to set in the container.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "jenkins.io.ts",
            "line": 1163,
          },
          "name": "env",
          "optional": true,
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "fqn": "jenkinsio.JenkinsSpecMasterContainersEnv",
              },
              "kind": "array",
            },
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "JenkinsSpecMasterContainers#envFrom",
            },
            "remarks": "The keys defined within a source must be a C_IDENTIFIER. All invalid keys will be reported as an event when the container is starting. When a key exists in multiple sources, the value associated with the last source will take precedence. Values defined by an Env with a duplicate key will take precedence.",
            "summary": "List of sources to populate environment variables in the container.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "jenkins.io.ts",
            "line": 1170,
          },
          "name": "envFrom",
          "optional": true,
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "fqn": "jenkinsio.JenkinsSpecMasterContainersEnvFrom",
              },
              "kind": "array",
            },
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "JenkinsSpecMasterContainers#lifecycle",
            },
            "summary": "Actions that the management system should take in response to container lifecycle events.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "jenkins.io.ts",
            "line": 1192,
          },
          "name": "lifecycle",
          "optional": true,
          "type": Object {
            "fqn": "jenkinsio.JenkinsSpecMasterContainersLifecycle",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "JenkinsSpecMasterContainers#livenessProbe",
            },
            "remarks": "Container will be restarted if the probe fails.",
            "summary": "Periodic probe of container liveness.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "jenkins.io.ts",
            "line": 1199,
          },
          "name": "livenessProbe",
          "optional": true,
          "type": Object {
            "fqn": "jenkinsio.JenkinsSpecMasterContainersLivenessProbe",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "JenkinsSpecMasterContainers#ports",
            },
            "remarks": "Exposing a port here gives the system additional information about the network connections a container uses, but is primarily informational. Not specifying a port here DOES NOT prevent that port from being exposed. Any port which is listening on the default \\"0.0.0.0\\" address inside a container will be accessible from the network.",
            "summary": "List of ports to expose from the container.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "jenkins.io.ts",
            "line": 1213,
          },
          "name": "ports",
          "optional": true,
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "fqn": "jenkinsio.JenkinsSpecMasterContainersPorts",
              },
              "kind": "array",
            },
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "JenkinsSpecMasterContainers#readinessProbe",
            },
            "remarks": "Container will be removed from service endpoints if the probe fails.",
            "summary": "Periodic probe of container service readiness.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "jenkins.io.ts",
            "line": 1220,
          },
          "name": "readinessProbe",
          "optional": true,
          "type": Object {
            "fqn": "jenkinsio.JenkinsSpecMasterContainersReadinessProbe",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "JenkinsSpecMasterContainers#securityContext",
            },
            "remarks": "More info: https://kubernetes.io/docs/concepts/policy/security-context/ More info: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
            "summary": "Security options the pod should run with.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "jenkins.io.ts",
            "line": 1234,
          },
          "name": "securityContext",
          "optional": true,
          "type": Object {
            "fqn": "jenkinsio.JenkinsSpecMasterContainersSecurityContext",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "JenkinsSpecMasterContainers#volumeMounts",
            },
            "summary": "Pod volumes to mount into the container's filesystem.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "jenkins.io.ts",
            "line": 1241,
          },
          "name": "volumeMounts",
          "optional": true,
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "fqn": "jenkinsio.JenkinsSpecMasterContainersVolumeMounts",
              },
              "kind": "array",
            },
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "JenkinsSpecMasterContainers#workingDir",
            },
            "remarks": "If not specified, the container runtime's default will be used, which might be configured in the container image.",
            "summary": "Container's working directory.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "jenkins.io.ts",
            "line": 1248,
          },
          "name": "workingDir",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
      ],
    },
    "jenkinsio.JenkinsSpecMasterContainersEnv": Object {
      "assembly": "jenkinsio",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "JenkinsSpecMasterContainersEnv",
        },
        "summary": "EnvVar represents an environment variable present in a Container.",
      },
      "fqn": "jenkinsio.JenkinsSpecMasterContainersEnv",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "jenkins.io.ts",
        "line": 1985,
      },
      "name": "JenkinsSpecMasterContainersEnv",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "JenkinsSpecMasterContainersEnv#name",
            },
            "remarks": "Must be a C_IDENTIFIER.",
            "summary": "Name of the environment variable.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "jenkins.io.ts",
            "line": 1991,
          },
          "name": "name",
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "JenkinsSpecMasterContainersEnv#value",
            },
            "default": ".",
            "remarks": "If a variable cannot be resolved, the reference in the input string will be unchanged. The $(VAR_NAME) syntax can be escaped with a double $$, ie: $$(VAR_NAME). Escaped references will never be expanded, regardless of whether the variable exists or not. Defaults to \\"\\".",
            "summary": "Variable references $(VAR_NAME) are expanded using the previous defined environment variables in the container and any service environment variables.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "jenkins.io.ts",
            "line": 1999,
          },
          "name": "value",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "JenkinsSpecMasterContainersEnv#valueFrom",
            },
            "remarks": "Cannot be used if value is not empty.",
            "summary": "Source for the environment variable's value.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "jenkins.io.ts",
            "line": 2006,
          },
          "name": "valueFrom",
          "optional": true,
          "type": Object {
            "fqn": "jenkinsio.JenkinsSpecMasterContainersEnvValueFrom",
          },
        },
      ],
    },
    "jenkinsio.JenkinsSpecMasterContainersEnvFrom": Object {
      "assembly": "jenkinsio",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "JenkinsSpecMasterContainersEnvFrom",
        },
        "summary": "EnvFromSource represents the source of a set of ConfigMaps.",
      },
      "fqn": "jenkinsio.JenkinsSpecMasterContainersEnvFrom",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "jenkins.io.ts",
        "line": 2031,
      },
      "name": "JenkinsSpecMasterContainersEnvFrom",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "JenkinsSpecMasterContainersEnvFrom#configMapRef",
            },
            "summary": "The ConfigMap to select from.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "jenkins.io.ts",
            "line": 2037,
          },
          "name": "configMapRef",
          "optional": true,
          "type": Object {
            "fqn": "jenkinsio.JenkinsSpecMasterContainersEnvFromConfigMapRef",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "JenkinsSpecMasterContainersEnvFrom#prefix",
            },
            "remarks": "Must be a C_IDENTIFIER.",
            "summary": "An optional identifier to prepend to each key in the ConfigMap.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "jenkins.io.ts",
            "line": 2044,
          },
          "name": "prefix",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "JenkinsSpecMasterContainersEnvFrom#secretRef",
            },
            "summary": "The Secret to select from.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "jenkins.io.ts",
            "line": 2051,
          },
          "name": "secretRef",
          "optional": true,
          "type": Object {
            "fqn": "jenkinsio.JenkinsSpecMasterContainersEnvFromSecretRef",
          },
        },
      ],
    },
    "jenkinsio.JenkinsSpecMasterContainersEnvFromConfigMapRef": Object {
      "assembly": "jenkinsio",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "JenkinsSpecMasterContainersEnvFromConfigMapRef",
        },
        "summary": "The ConfigMap to select from.",
      },
      "fqn": "jenkinsio.JenkinsSpecMasterContainersEnvFromConfigMapRef",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "jenkins.io.ts",
        "line": 4547,
      },
      "name": "JenkinsSpecMasterContainersEnvFromConfigMapRef",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "JenkinsSpecMasterContainersEnvFromConfigMapRef#name",
            },
            "remarks": "More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?",
            "summary": "Name of the referent.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "jenkins.io.ts",
            "line": 4553,
          },
          "name": "name",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "JenkinsSpecMasterContainersEnvFromConfigMapRef#optional",
            },
            "summary": "Specify whether the ConfigMap must be defined.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "jenkins.io.ts",
            "line": 4560,
          },
          "name": "optional",
          "optional": true,
          "type": Object {
            "primitive": "boolean",
          },
        },
      ],
    },
    "jenkinsio.JenkinsSpecMasterContainersEnvFromSecretRef": Object {
      "assembly": "jenkinsio",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "JenkinsSpecMasterContainersEnvFromSecretRef",
        },
        "summary": "The Secret to select from.",
      },
      "fqn": "jenkinsio.JenkinsSpecMasterContainersEnvFromSecretRef",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "jenkins.io.ts",
        "line": 4584,
      },
      "name": "JenkinsSpecMasterContainersEnvFromSecretRef",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "JenkinsSpecMasterContainersEnvFromSecretRef#name",
            },
            "remarks": "More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?",
            "summary": "Name of the referent.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "jenkins.io.ts",
            "line": 4590,
          },
          "name": "name",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "JenkinsSpecMasterContainersEnvFromSecretRef#optional",
            },
            "summary": "Specify whether the Secret must be defined.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "jenkins.io.ts",
            "line": 4597,
          },
          "name": "optional",
          "optional": true,
          "type": Object {
            "primitive": "boolean",
          },
        },
      ],
    },
    "jenkinsio.JenkinsSpecMasterContainersEnvValueFrom": Object {
      "assembly": "jenkinsio",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "JenkinsSpecMasterContainersEnvValueFrom",
        },
        "remarks": "Cannot be used if value is not empty.",
        "summary": "Source for the environment variable's value.",
      },
      "fqn": "jenkinsio.JenkinsSpecMasterContainersEnvValueFrom",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "jenkins.io.ts",
        "line": 4494,
      },
      "name": "JenkinsSpecMasterContainersEnvValueFrom",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "JenkinsSpecMasterContainersEnvValueFrom#configMapKeyRef",
            },
            "summary": "Selects a key of a ConfigMap.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "jenkins.io.ts",
            "line": 4500,
          },
          "name": "configMapKeyRef",
          "optional": true,
          "type": Object {
            "fqn": "jenkinsio.JenkinsSpecMasterContainersEnvValueFromConfigMapKeyRef",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "JenkinsSpecMasterContainersEnvValueFrom#fieldRef",
            },
            "summary": "Selects a field of the pod: supports metadata.name, metadata.namespace, metadata.labels, metadata.annotations, spec.nodeName, spec.serviceAccountName, status.hostIP, status.podIP.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "jenkins.io.ts",
            "line": 4507,
          },
          "name": "fieldRef",
          "optional": true,
          "type": Object {
            "fqn": "jenkinsio.JenkinsSpecMasterContainersEnvValueFromFieldRef",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "JenkinsSpecMasterContainersEnvValueFrom#resourceFieldRef",
            },
            "summary": "Selects a resource of the container: only resources limits and requests (limits.cpu, limits.memory, limits.ephemeral-storage, requests.cpu, requests.memory and requests.ephemeral-storage) are currently supported.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "jenkins.io.ts",
            "line": 4514,
          },
          "name": "resourceFieldRef",
          "optional": true,
          "type": Object {
            "fqn": "jenkinsio.JenkinsSpecMasterContainersEnvValueFromResourceFieldRef",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "JenkinsSpecMasterContainersEnvValueFrom#secretKeyRef",
            },
            "summary": "Selects a key of a secret in the pod's namespace.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "jenkins.io.ts",
            "line": 4521,
          },
          "name": "secretKeyRef",
          "optional": true,
          "type": Object {
            "fqn": "jenkinsio.JenkinsSpecMasterContainersEnvValueFromSecretKeyRef",
          },
        },
      ],
    },
    "jenkinsio.JenkinsSpecMasterContainersEnvValueFromConfigMapKeyRef": Object {
      "assembly": "jenkinsio",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "JenkinsSpecMasterContainersEnvValueFromConfigMapKeyRef",
        },
        "summary": "Selects a key of a ConfigMap.",
      },
      "fqn": "jenkinsio.JenkinsSpecMasterContainersEnvValueFromConfigMapKeyRef",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "jenkins.io.ts",
        "line": 5678,
      },
      "name": "JenkinsSpecMasterContainersEnvValueFromConfigMapKeyRef",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "JenkinsSpecMasterContainersEnvValueFromConfigMapKeyRef#key",
            },
            "summary": "The key to select.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "jenkins.io.ts",
            "line": 5684,
          },
          "name": "key",
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "JenkinsSpecMasterContainersEnvValueFromConfigMapKeyRef#name",
            },
            "remarks": "More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?",
            "summary": "Name of the referent.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "jenkins.io.ts",
            "line": 5691,
          },
          "name": "name",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "JenkinsSpecMasterContainersEnvValueFromConfigMapKeyRef#optional",
            },
            "summary": "Specify whether the ConfigMap or its key must be defined.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "jenkins.io.ts",
            "line": 5698,
          },
          "name": "optional",
          "optional": true,
          "type": Object {
            "primitive": "boolean",
          },
        },
      ],
    },
    "jenkinsio.JenkinsSpecMasterContainersEnvValueFromFieldRef": Object {
      "assembly": "jenkinsio",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "JenkinsSpecMasterContainersEnvValueFromFieldRef",
        },
        "summary": "Selects a field of the pod: supports metadata.name, metadata.namespace, metadata.labels, metadata.annotations, spec.nodeName, spec.serviceAccountName, status.hostIP, status.podIP.",
      },
      "fqn": "jenkinsio.JenkinsSpecMasterContainersEnvValueFromFieldRef",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "jenkins.io.ts",
        "line": 5723,
      },
      "name": "JenkinsSpecMasterContainersEnvValueFromFieldRef",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "JenkinsSpecMasterContainersEnvValueFromFieldRef#fieldPath",
            },
            "summary": "Path of the field to select in the specified API version.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "jenkins.io.ts",
            "line": 5736,
          },
          "name": "fieldPath",
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "JenkinsSpecMasterContainersEnvValueFromFieldRef#apiVersion",
            },
            "summary": "Version of the schema the FieldPath is written in terms of, defaults to \\"v1\\".",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "jenkins.io.ts",
            "line": 5729,
          },
          "name": "apiVersion",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
      ],
    },
    "jenkinsio.JenkinsSpecMasterContainersEnvValueFromResourceFieldRef": Object {
      "assembly": "jenkinsio",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "JenkinsSpecMasterContainersEnvValueFromResourceFieldRef",
        },
        "summary": "Selects a resource of the container: only resources limits and requests (limits.cpu, limits.memory, limits.ephemeral-storage, requests.cpu, requests.memory and requests.ephemeral-storage) are currently supported.",
      },
      "fqn": "jenkinsio.JenkinsSpecMasterContainersEnvValueFromResourceFieldRef",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "jenkins.io.ts",
        "line": 5760,
      },
      "name": "JenkinsSpecMasterContainersEnvValueFromResourceFieldRef",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "JenkinsSpecMasterContainersEnvValueFromResourceFieldRef#resource",
            },
            "summary": "Required: resource to select.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "jenkins.io.ts",
            "line": 5780,
          },
          "name": "resource",
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "JenkinsSpecMasterContainersEnvValueFromResourceFieldRef#containerName",
            },
            "summary": "Container name: required for volumes, optional for env vars.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "jenkins.io.ts",
            "line": 5766,
          },
          "name": "containerName",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "JenkinsSpecMasterContainersEnvValueFromResourceFieldRef#divisor",
            },
            "summary": "Specifies the output format of the exposed resources, defaults to \\"1\\".",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "jenkins.io.ts",
            "line": 5773,
          },
          "name": "divisor",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
      ],
    },
    "jenkinsio.JenkinsSpecMasterContainersEnvValueFromSecretKeyRef": Object {
      "assembly": "jenkinsio",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "JenkinsSpecMasterContainersEnvValueFromSecretKeyRef",
        },
        "summary": "Selects a key of a secret in the pod's namespace.",
      },
      "fqn": "jenkinsio.JenkinsSpecMasterContainersEnvValueFromSecretKeyRef",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "jenkins.io.ts",
        "line": 5805,
      },
      "name": "JenkinsSpecMasterContainersEnvValueFromSecretKeyRef",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "JenkinsSpecMasterContainersEnvValueFromSecretKeyRef#key",
            },
            "remarks": "Must be a valid secret key.",
            "summary": "The key of the secret to select from.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "jenkins.io.ts",
            "line": 5811,
          },
          "name": "key",
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "JenkinsSpecMasterContainersEnvValueFromSecretKeyRef#name",
            },
            "remarks": "More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?",
            "summary": "Name of the referent.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "jenkins.io.ts",
            "line": 5818,
          },
          "name": "name",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "JenkinsSpecMasterContainersEnvValueFromSecretKeyRef#optional",
            },
            "summary": "Specify whether the Secret or its key must be defined.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "jenkins.io.ts",
            "line": 5825,
          },
          "name": "optional",
          "optional": true,
          "type": Object {
            "primitive": "boolean",
          },
        },
      ],
    },
    "jenkinsio.JenkinsSpecMasterContainersLifecycle": Object {
      "assembly": "jenkinsio",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "JenkinsSpecMasterContainersLifecycle",
        },
        "summary": "Actions that the management system should take in response to container lifecycle events.",
      },
      "fqn": "jenkinsio.JenkinsSpecMasterContainersLifecycle",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "jenkins.io.ts",
        "line": 2076,
      },
      "name": "JenkinsSpecMasterContainersLifecycle",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "JenkinsSpecMasterContainersLifecycle#postStart",
            },
            "remarks": "If the handler fails, the container is terminated and restarted according to its restart policy. Other management of the container blocks until the hook completes. More info: https://kubernetes.io/docs/concepts/containers/container-lifecycle-hooks/#container-hooks",
            "summary": "PostStart is called immediately after a container is created.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "jenkins.io.ts",
            "line": 2082,
          },
          "name": "postStart",
          "optional": true,
          "type": Object {
            "fqn": "jenkinsio.JenkinsSpecMasterContainersLifecyclePostStart",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "JenkinsSpecMasterContainersLifecycle#preStop",
            },
            "remarks": "The handler is not called if the container crashes or exits. The reason for termination is passed to the handler. The Pod's termination grace period countdown begins before the PreStop hooked is executed. Regardless of the outcome of the handler, the container will eventually terminate within the Pod's termination grace period. Other management of the container blocks until the hook completes or until the termination grace period is reached. More info: https://kubernetes.io/docs/concepts/containers/container-lifecycle-hooks/#container-hooks",
            "summary": "PreStop is called immediately before a container is terminated due to an API request or management event such as liveness/startup probe failure, preemption, resource contention, etc.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "jenkins.io.ts",
            "line": 2089,
          },
          "name": "preStop",
          "optional": true,
          "type": Object {
            "fqn": "jenkinsio.JenkinsSpecMasterContainersLifecyclePreStop",
          },
        },
      ],
    },
    "jenkinsio.JenkinsSpecMasterContainersLifecyclePostStart": Object {
      "assembly": "jenkinsio",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "JenkinsSpecMasterContainersLifecyclePostStart",
        },
        "remarks": "If the handler fails, the container is terminated and restarted according to its restart policy. Other management of the container blocks until the hook completes. More info: https://kubernetes.io/docs/concepts/containers/container-lifecycle-hooks/#container-hooks",
        "summary": "PostStart is called immediately after a container is created.",
      },
      "fqn": "jenkinsio.JenkinsSpecMasterContainersLifecyclePostStart",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "jenkins.io.ts",
        "line": 4621,
      },
      "name": "JenkinsSpecMasterContainersLifecyclePostStart",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "JenkinsSpecMasterContainersLifecyclePostStart#exec",
            },
            "remarks": "Exec specifies the action to take.",
            "summary": "One and only one of the following should be specified.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "jenkins.io.ts",
            "line": 4627,
          },
          "name": "exec",
          "optional": true,
          "type": Object {
            "fqn": "jenkinsio.JenkinsSpecMasterContainersLifecyclePostStartExec",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "JenkinsSpecMasterContainersLifecyclePostStart#httpGet",
            },
            "summary": "HTTPGet specifies the http request to perform.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "jenkins.io.ts",
            "line": 4634,
          },
          "name": "httpGet",
          "optional": true,
          "type": Object {
            "fqn": "jenkinsio.JenkinsSpecMasterContainersLifecyclePostStartHttpGet",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "JenkinsSpecMasterContainersLifecyclePostStart#tcpSocket",
            },
            "remarks": "TCP hooks not yet supported TODO: implement a realistic TCP lifecycle hook",
            "summary": "TCPSocket specifies an action involving a TCP port.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "jenkins.io.ts",
            "line": 4641,
          },
          "name": "tcpSocket",
          "optional": true,
          "type": Object {
            "fqn": "jenkinsio.JenkinsSpecMasterContainersLifecyclePostStartTcpSocket",
          },
        },
      ],
    },
    "jenkinsio.JenkinsSpecMasterContainersLifecyclePostStartExec": Object {
      "assembly": "jenkinsio",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "JenkinsSpecMasterContainersLifecyclePostStartExec",
        },
        "remarks": "Exec specifies the action to take.",
        "summary": "One and only one of the following should be specified.",
      },
      "fqn": "jenkinsio.JenkinsSpecMasterContainersLifecyclePostStartExec",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "jenkins.io.ts",
        "line": 5850,
      },
      "name": "JenkinsSpecMasterContainersLifecyclePostStartExec",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "JenkinsSpecMasterContainersLifecyclePostStartExec#command",
            },
            "remarks": "The command is simply exec'd, it is not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use a shell, you need to explicitly call out to that shell. Exit status of 0 is treated as live/healthy and non-zero is unhealthy.",
            "summary": "Command is the command line to execute inside the container, the working directory for the command  is root ('/') in the container's filesystem.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "jenkins.io.ts",
            "line": 5856,
          },
          "name": "command",
          "optional": true,
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "primitive": "string",
              },
              "kind": "array",
            },
          },
        },
      ],
    },
    "jenkinsio.JenkinsSpecMasterContainersLifecyclePostStartHttpGet": Object {
      "assembly": "jenkinsio",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "JenkinsSpecMasterContainersLifecyclePostStartHttpGet",
        },
        "summary": "HTTPGet specifies the http request to perform.",
      },
      "fqn": "jenkinsio.JenkinsSpecMasterContainersLifecyclePostStartHttpGet",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "jenkins.io.ts",
        "line": 5879,
      },
      "name": "JenkinsSpecMasterContainersLifecyclePostStartHttpGet",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "JenkinsSpecMasterContainersLifecyclePostStartHttpGet#port",
            },
            "remarks": "Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.",
            "summary": "Name or number of the port to access on the container.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "jenkins.io.ts",
            "line": 5906,
          },
          "name": "port",
          "type": Object {
            "fqn": "jenkinsio.JenkinsSpecMasterContainersLifecyclePostStartHttpGetPort",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "JenkinsSpecMasterContainersLifecyclePostStartHttpGet#host",
            },
            "remarks": "You probably want to set \\"Host\\" in httpHeaders instead.",
            "summary": "Host name to connect to, defaults to the pod IP.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "jenkins.io.ts",
            "line": 5885,
          },
          "name": "host",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "JenkinsSpecMasterContainersLifecyclePostStartHttpGet#httpHeaders",
            },
            "remarks": "HTTP allows repeated headers.",
            "summary": "Custom headers to set in the request.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "jenkins.io.ts",
            "line": 5892,
          },
          "name": "httpHeaders",
          "optional": true,
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "fqn": "jenkinsio.JenkinsSpecMasterContainersLifecyclePostStartHttpGetHttpHeaders",
              },
              "kind": "array",
            },
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "JenkinsSpecMasterContainersLifecyclePostStartHttpGet#path",
            },
            "summary": "Path to access on the HTTP server.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "jenkins.io.ts",
            "line": 5899,
          },
          "name": "path",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "JenkinsSpecMasterContainersLifecyclePostStartHttpGet#scheme",
            },
            "default": "HTTP.",
            "remarks": "Defaults to HTTP.",
            "summary": "Scheme to use for connecting to the host.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "jenkins.io.ts",
            "line": 5914,
          },
          "name": "scheme",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
      ],
    },
    "jenkinsio.JenkinsSpecMasterContainersLifecyclePostStartHttpGetHttpHeaders": Object {
      "assembly": "jenkinsio",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "JenkinsSpecMasterContainersLifecyclePostStartHttpGetHttpHeaders",
        },
        "summary": "HTTPHeader describes a custom header to be used in HTTP probes.",
      },
      "fqn": "jenkinsio.JenkinsSpecMasterContainersLifecyclePostStartHttpGetHttpHeaders",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "jenkins.io.ts",
        "line": 6495,
      },
      "name": "JenkinsSpecMasterContainersLifecyclePostStartHttpGetHttpHeaders",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "JenkinsSpecMasterContainersLifecyclePostStartHttpGetHttpHeaders#name",
            },
            "summary": "The header field name.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "jenkins.io.ts",
            "line": 6501,
          },
          "name": "name",
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "JenkinsSpecMasterContainersLifecyclePostStartHttpGetHttpHeaders#value",
            },
            "summary": "The header field value.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "jenkins.io.ts",
            "line": 6508,
          },
          "name": "value",
          "type": Object {
            "primitive": "string",
          },
        },
      ],
    },
    "jenkinsio.JenkinsSpecMasterContainersLifecyclePostStartHttpGetPort": Object {
      "assembly": "jenkinsio",
      "docs": Object {
        "custom": Object {
          "schema": "JenkinsSpecMasterContainersLifecyclePostStartHttpGetPort",
        },
        "remarks": "Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.",
        "summary": "Name or number of the port to access on the container.",
      },
      "fqn": "jenkinsio.JenkinsSpecMasterContainersLifecyclePostStartHttpGetPort",
      "kind": "class",
      "locationInModule": Object {
        "filename": "jenkins.io.ts",
        "line": 6532,
      },
      "methods": Array [
        Object {
          "locationInModule": Object {
            "filename": "jenkins.io.ts",
            "line": 6533,
          },
          "name": "fromNumber",
          "parameters": Array [
            Object {
              "name": "value",
              "type": Object {
                "primitive": "number",
              },
            },
          ],
          "returns": Object {
            "type": Object {
              "fqn": "jenkinsio.JenkinsSpecMasterContainersLifecyclePostStartHttpGetPort",
            },
          },
          "static": true,
        },
        Object {
          "locationInModule": Object {
            "filename": "jenkins.io.ts",
            "line": 6536,
          },
          "name": "fromString",
          "parameters": Array [
            Object {
              "name": "value",
              "type": Object {
                "primitive": "string",
              },
            },
          ],
          "returns": Object {
            "type": Object {
              "fqn": "jenkinsio.JenkinsSpecMasterContainersLifecyclePostStartHttpGetPort",
            },
          },
          "static": true,
        },
      ],
      "name": "JenkinsSpecMasterContainersLifecyclePostStartHttpGetPort",
      "properties": Array [
        Object {
          "immutable": true,
          "locationInModule": Object {
            "filename": "jenkins.io.ts",
            "line": 6539,
          },
          "name": "value",
          "type": Object {
            "primitive": "any",
          },
        },
      ],
    },
    "jenkinsio.JenkinsSpecMasterContainersLifecyclePostStartTcpSocket": Object {
      "assembly": "jenkinsio",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "JenkinsSpecMasterContainersLifecyclePostStartTcpSocket",
        },
        "remarks": "TCP hooks not yet supported TODO: implement a realistic TCP lifecycle hook",
        "summary": "TCPSocket specifies an action involving a TCP port.",
      },
      "fqn": "jenkinsio.JenkinsSpecMasterContainersLifecyclePostStartTcpSocket",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "jenkins.io.ts",
        "line": 5941,
      },
      "name": "JenkinsSpecMasterContainersLifecyclePostStartTcpSocket",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "JenkinsSpecMasterContainersLifecyclePostStartTcpSocket#port",
            },
            "remarks": "Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.",
            "summary": "Number or name of the port to access on the container.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "jenkins.io.ts",
            "line": 5954,
          },
          "name": "port",
          "type": Object {
            "fqn": "jenkinsio.JenkinsSpecMasterContainersLifecyclePostStartTcpSocketPort",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "JenkinsSpecMasterContainersLifecyclePostStartTcpSocket#host",
            },
            "summary": "Optional: Host name to connect to, defaults to the pod IP.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "jenkins.io.ts",
            "line": 5947,
          },
          "name": "host",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
      ],
    },
    "jenkinsio.JenkinsSpecMasterContainersLifecyclePostStartTcpSocketPort": Object {
      "assembly": "jenkinsio",
      "docs": Object {
        "custom": Object {
          "schema": "JenkinsSpecMasterContainersLifecyclePostStartTcpSocketPort",
        },
        "remarks": "Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.",
        "summary": "Number or name of the port to access on the container.",
      },
      "fqn": "jenkinsio.JenkinsSpecMasterContainersLifecyclePostStartTcpSocketPort",
      "kind": "class",
      "locationInModule": Object {
        "filename": "jenkins.io.ts",
        "line": 6549,
      },
      "methods": Array [
        Object {
          "locationInModule": Object {
            "filename": "jenkins.io.ts",
            "line": 6550,
          },
          "name": "fromNumber",
          "parameters": Array [
            Object {
              "name": "value",
              "type": Object {
                "primitive": "number",
              },
            },
          ],
          "returns": Object {
            "type": Object {
              "fqn": "jenkinsio.JenkinsSpecMasterContainersLifecyclePostStartTcpSocketPort",
            },
          },
          "static": true,
        },
        Object {
          "locationInModule": Object {
            "filename": "jenkins.io.ts",
            "line": 6553,
          },
          "name": "fromString",
          "parameters": Array [
            Object {
              "name": "value",
              "type": Object {
                "primitive": "string",
              },
            },
          ],
          "returns": Object {
            "type": Object {
              "fqn": "jenkinsio.JenkinsSpecMasterContainersLifecyclePostStartTcpSocketPort",
            },
          },
          "static": true,
        },
      ],
      "name": "JenkinsSpecMasterContainersLifecyclePostStartTcpSocketPort",
      "properties": Array [
        Object {
          "immutable": true,
          "locationInModule": Object {
            "filename": "jenkins.io.ts",
            "line": 6556,
          },
          "name": "value",
          "type": Object {
            "primitive": "any",
          },
        },
      ],
    },
    "jenkinsio.JenkinsSpecMasterContainersLifecyclePreStop": Object {
      "assembly": "jenkinsio",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "JenkinsSpecMasterContainersLifecyclePreStop",
        },
        "remarks": "The handler is not called if the container crashes or exits. The reason for termination is passed to the handler. The Pod's termination grace period countdown begins before the PreStop hooked is executed. Regardless of the outcome of the handler, the container will eventually terminate within the Pod's termination grace period. Other management of the container blocks until the hook completes or until the termination grace period is reached. More info: https://kubernetes.io/docs/concepts/containers/container-lifecycle-hooks/#container-hooks",
        "summary": "PreStop is called immediately before a container is terminated due to an API request or management event such as liveness/startup probe failure, preemption, resource contention, etc.",
      },
      "fqn": "jenkinsio.JenkinsSpecMasterContainersLifecyclePreStop",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "jenkins.io.ts",
        "line": 4666,
      },
      "name": "JenkinsSpecMasterContainersLifecyclePreStop",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "JenkinsSpecMasterContainersLifecyclePreStop#exec",
            },
            "remarks": "Exec specifies the action to take.",
            "summary": "One and only one of the following should be specified.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "jenkins.io.ts",
            "line": 4672,
          },
          "name": "exec",
          "optional": true,
          "type": Object {
            "fqn": "jenkinsio.JenkinsSpecMasterContainersLifecyclePreStopExec",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "JenkinsSpecMasterContainersLifecyclePreStop#httpGet",
            },
            "summary": "HTTPGet specifies the http request to perform.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "jenkins.io.ts",
            "line": 4679,
          },
          "name": "httpGet",
          "optional": true,
          "type": Object {
            "fqn": "jenkinsio.JenkinsSpecMasterContainersLifecyclePreStopHttpGet",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "JenkinsSpecMasterContainersLifecyclePreStop#tcpSocket",
            },
            "remarks": "TCP hooks not yet supported TODO: implement a realistic TCP lifecycle hook",
            "summary": "TCPSocket specifies an action involving a TCP port.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "jenkins.io.ts",
            "line": 4686,
          },
          "name": "tcpSocket",
          "optional": true,
          "type": Object {
            "fqn": "jenkinsio.JenkinsSpecMasterContainersLifecyclePreStopTcpSocket",
          },
        },
      ],
    },
    "jenkinsio.JenkinsSpecMasterContainersLifecyclePreStopExec": Object {
      "assembly": "jenkinsio",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "JenkinsSpecMasterContainersLifecyclePreStopExec",
        },
        "remarks": "Exec specifies the action to take.",
        "summary": "One and only one of the following should be specified.",
      },
      "fqn": "jenkinsio.JenkinsSpecMasterContainersLifecyclePreStopExec",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "jenkins.io.ts",
        "line": 5978,
      },
      "name": "JenkinsSpecMasterContainersLifecyclePreStopExec",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "JenkinsSpecMasterContainersLifecyclePreStopExec#command",
            },
            "remarks": "The command is simply exec'd, it is not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use a shell, you need to explicitly call out to that shell. Exit status of 0 is treated as live/healthy and non-zero is unhealthy.",
            "summary": "Command is the command line to execute inside the container, the working directory for the command  is root ('/') in the container's filesystem.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "jenkins.io.ts",
            "line": 5984,
          },
          "name": "command",
          "optional": true,
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "primitive": "string",
              },
              "kind": "array",
            },
          },
        },
      ],
    },
    "jenkinsio.JenkinsSpecMasterContainersLifecyclePreStopHttpGet": Object {
      "assembly": "jenkinsio",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "JenkinsSpecMasterContainersLifecyclePreStopHttpGet",
        },
        "summary": "HTTPGet specifies the http request to perform.",
      },
      "fqn": "jenkinsio.JenkinsSpecMasterContainersLifecyclePreStopHttpGet",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "jenkins.io.ts",
        "line": 6007,
      },
      "name": "JenkinsSpecMasterContainersLifecyclePreStopHttpGet",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "JenkinsSpecMasterContainersLifecyclePreStopHttpGet#port",
            },
            "remarks": "Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.",
            "summary": "Name or number of the port to access on the container.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "jenkins.io.ts",
            "line": 6034,
          },
          "name": "port",
          "type": Object {
            "fqn": "jenkinsio.JenkinsSpecMasterContainersLifecyclePreStopHttpGetPort",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "JenkinsSpecMasterContainersLifecyclePreStopHttpGet#host",
            },
            "remarks": "You probably want to set \\"Host\\" in httpHeaders instead.",
            "summary": "Host name to connect to, defaults to the pod IP.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "jenkins.io.ts",
            "line": 6013,
          },
          "name": "host",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "JenkinsSpecMasterContainersLifecyclePreStopHttpGet#httpHeaders",
            },
            "remarks": "HTTP allows repeated headers.",
            "summary": "Custom headers to set in the request.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "jenkins.io.ts",
            "line": 6020,
          },
          "name": "httpHeaders",
          "optional": true,
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "fqn": "jenkinsio.JenkinsSpecMasterContainersLifecyclePreStopHttpGetHttpHeaders",
              },
              "kind": "array",
            },
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "JenkinsSpecMasterContainersLifecyclePreStopHttpGet#path",
            },
            "summary": "Path to access on the HTTP server.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "jenkins.io.ts",
            "line": 6027,
          },
          "name": "path",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "JenkinsSpecMasterContainersLifecyclePreStopHttpGet#scheme",
            },
            "default": "HTTP.",
            "remarks": "Defaults to HTTP.",
            "summary": "Scheme to use for connecting to the host.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "jenkins.io.ts",
            "line": 6042,
          },
          "name": "scheme",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
      ],
    },
    "jenkinsio.JenkinsSpecMasterContainersLifecyclePreStopHttpGetHttpHeaders": Object {
      "assembly": "jenkinsio",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "JenkinsSpecMasterContainersLifecyclePreStopHttpGetHttpHeaders",
        },
        "summary": "HTTPHeader describes a custom header to be used in HTTP probes.",
      },
      "fqn": "jenkinsio.JenkinsSpecMasterContainersLifecyclePreStopHttpGetHttpHeaders",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "jenkins.io.ts",
        "line": 6566,
      },
      "name": "JenkinsSpecMasterContainersLifecyclePreStopHttpGetHttpHeaders",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "JenkinsSpecMasterContainersLifecyclePreStopHttpGetHttpHeaders#name",
            },
            "summary": "The header field name.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "jenkins.io.ts",
            "line": 6572,
          },
          "name": "name",
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "JenkinsSpecMasterContainersLifecyclePreStopHttpGetHttpHeaders#value",
            },
            "summary": "The header field value.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "jenkins.io.ts",
            "line": 6579,
          },
          "name": "value",
          "type": Object {
            "primitive": "string",
          },
        },
      ],
    },
    "jenkinsio.JenkinsSpecMasterContainersLifecyclePreStopHttpGetPort": Object {
      "assembly": "jenkinsio",
      "docs": Object {
        "custom": Object {
          "schema": "JenkinsSpecMasterContainersLifecyclePreStopHttpGetPort",
        },
        "remarks": "Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.",
        "summary": "Name or number of the port to access on the container.",
      },
      "fqn": "jenkinsio.JenkinsSpecMasterContainersLifecyclePreStopHttpGetPort",
      "kind": "class",
      "locationInModule": Object {
        "filename": "jenkins.io.ts",
        "line": 6603,
      },
      "methods": Array [
        Object {
          "locationInModule": Object {
            "filename": "jenkins.io.ts",
            "line": 6604,
          },
          "name": "fromNumber",
          "parameters": Array [
            Object {
              "name": "value",
              "type": Object {
                "primitive": "number",
              },
            },
          ],
          "returns": Object {
            "type": Object {
              "fqn": "jenkinsio.JenkinsSpecMasterContainersLifecyclePreStopHttpGetPort",
            },
          },
          "static": true,
        },
        Object {
          "locationInModule": Object {
            "filename": "jenkins.io.ts",
            "line": 6607,
          },
          "name": "fromString",
          "parameters": Array [
            Object {
              "name": "value",
              "type": Object {
                "primitive": "string",
              },
            },
          ],
          "returns": Object {
            "type": Object {
              "fqn": "jenkinsio.JenkinsSpecMasterContainersLifecyclePreStopHttpGetPort",
            },
          },
          "static": true,
        },
      ],
      "name": "JenkinsSpecMasterContainersLifecyclePreStopHttpGetPort",
      "properties": Array [
        Object {
          "immutable": true,
          "locationInModule": Object {
            "filename": "jenkins.io.ts",
            "line": 6610,
          },
          "name": "value",
          "type": Object {
            "primitive": "any",
          },
        },
      ],
    },
    "jenkinsio.JenkinsSpecMasterContainersLifecyclePreStopTcpSocket": Object {
      "assembly": "jenkinsio",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "JenkinsSpecMasterContainersLifecyclePreStopTcpSocket",
        },
        "remarks": "TCP hooks not yet supported TODO: implement a realistic TCP lifecycle hook",
        "summary": "TCPSocket specifies an action involving a TCP port.",
      },
      "fqn": "jenkinsio.JenkinsSpecMasterContainersLifecyclePreStopTcpSocket",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "jenkins.io.ts",
        "line": 6069,
      },
      "name": "JenkinsSpecMasterContainersLifecyclePreStopTcpSocket",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "JenkinsSpecMasterContainersLifecyclePreStopTcpSocket#port",
            },
            "remarks": "Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.",
            "summary": "Number or name of the port to access on the container.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "jenkins.io.ts",
            "line": 6082,
          },
          "name": "port",
          "type": Object {
            "fqn": "jenkinsio.JenkinsSpecMasterContainersLifecyclePreStopTcpSocketPort",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "JenkinsSpecMasterContainersLifecyclePreStopTcpSocket#host",
            },
            "summary": "Optional: Host name to connect to, defaults to the pod IP.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "jenkins.io.ts",
            "line": 6075,
          },
          "name": "host",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
      ],
    },
    "jenkinsio.JenkinsSpecMasterContainersLifecyclePreStopTcpSocketPort": Object {
      "assembly": "jenkinsio",
      "docs": Object {
        "custom": Object {
          "schema": "JenkinsSpecMasterContainersLifecyclePreStopTcpSocketPort",
        },
        "remarks": "Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.",
        "summary": "Number or name of the port to access on the container.",
      },
      "fqn": "jenkinsio.JenkinsSpecMasterContainersLifecyclePreStopTcpSocketPort",
      "kind": "class",
      "locationInModule": Object {
        "filename": "jenkins.io.ts",
        "line": 6620,
      },
      "methods": Array [
        Object {
          "locationInModule": Object {
            "filename": "jenkins.io.ts",
            "line": 6621,
          },
          "name": "fromNumber",
          "parameters": Array [
            Object {
              "name": "value",
              "type": Object {
                "primitive": "number",
              },
            },
          ],
          "returns": Object {
            "type": Object {
              "fqn": "jenkinsio.JenkinsSpecMasterContainersLifecyclePreStopTcpSocketPort",
            },
          },
          "static": true,
        },
        Object {
          "locationInModule": Object {
            "filename": "jenkins.io.ts",
            "line": 6624,
          },
          "name": "fromString",
          "parameters": Array [
            Object {
              "name": "value",
              "type": Object {
                "primitive": "string",
              },
            },
          ],
          "returns": Object {
            "type": Object {
              "fqn": "jenkinsio.JenkinsSpecMasterContainersLifecyclePreStopTcpSocketPort",
            },
          },
          "static": true,
        },
      ],
      "name": "JenkinsSpecMasterContainersLifecyclePreStopTcpSocketPort",
      "properties": Array [
        Object {
          "immutable": true,
          "locationInModule": Object {
            "filename": "jenkins.io.ts",
            "line": 6627,
          },
          "name": "value",
          "type": Object {
            "primitive": "any",
          },
        },
      ],
    },
    "jenkinsio.JenkinsSpecMasterContainersLivenessProbe": Object {
      "assembly": "jenkinsio",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "JenkinsSpecMasterContainersLivenessProbe",
        },
        "remarks": "Container will be restarted if the probe fails.",
        "summary": "Periodic probe of container liveness.",
      },
      "fqn": "jenkinsio.JenkinsSpecMasterContainersLivenessProbe",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "jenkins.io.ts",
        "line": 2113,
      },
      "name": "JenkinsSpecMasterContainersLivenessProbe",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "JenkinsSpecMasterContainersLivenessProbe#exec",
            },
            "remarks": "Exec specifies the action to take.",
            "summary": "One and only one of the following should be specified.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "jenkins.io.ts",
            "line": 2119,
          },
          "name": "exec",
          "optional": true,
          "type": Object {
            "fqn": "jenkinsio.JenkinsSpecMasterContainersLivenessProbeExec",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "JenkinsSpecMasterContainersLivenessProbe#failureThreshold",
            },
            "default": "3. Minimum value is 1.",
            "remarks": "Defaults to 3. Minimum value is 1.",
            "summary": "Minimum consecutive failures for the probe to be considered failed after having succeeded.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "jenkins.io.ts",
            "line": 2127,
          },
          "name": "failureThreshold",
          "optional": true,
          "type": Object {
            "primitive": "number",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "JenkinsSpecMasterContainersLivenessProbe#httpGet",
            },
            "summary": "HTTPGet specifies the http request to perform.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "jenkins.io.ts",
            "line": 2134,
          },
          "name": "httpGet",
          "optional": true,
          "type": Object {
            "fqn": "jenkinsio.JenkinsSpecMasterContainersLivenessProbeHttpGet",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "JenkinsSpecMasterContainersLivenessProbe#initialDelaySeconds",
            },
            "remarks": "More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes",
            "summary": "Number of seconds after the container has started before liveness probes are initiated.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "jenkins.io.ts",
            "line": 2141,
          },
          "name": "initialDelaySeconds",
          "optional": true,
          "type": Object {
            "primitive": "number",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "JenkinsSpecMasterContainersLivenessProbe#periodSeconds",
            },
            "default": "10 seconds. Minimum value is 1.",
            "remarks": "Default to 10 seconds. Minimum value is 1.",
            "summary": "How often (in seconds) to perform the probe.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "jenkins.io.ts",
            "line": 2149,
          },
          "name": "periodSeconds",
          "optional": true,
          "type": Object {
            "primitive": "number",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "JenkinsSpecMasterContainersLivenessProbe#successThreshold",
            },
            "default": "1. Must be 1 for liveness and startup. Minimum value is 1.",
            "remarks": "Defaults to 1. Must be 1 for liveness and startup. Minimum value is 1.",
            "summary": "Minimum consecutive successes for the probe to be considered successful after having failed.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "jenkins.io.ts",
            "line": 2157,
          },
          "name": "successThreshold",
          "optional": true,
          "type": Object {
            "primitive": "number",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "JenkinsSpecMasterContainersLivenessProbe#tcpSocket",
            },
            "remarks": "TCP hooks not yet supported TODO: implement a realistic TCP lifecycle hook",
            "summary": "TCPSocket specifies an action involving a TCP port.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "jenkins.io.ts",
            "line": 2164,
          },
          "name": "tcpSocket",
          "optional": true,
          "type": Object {
            "fqn": "jenkinsio.JenkinsSpecMasterContainersLivenessProbeTcpSocket",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "JenkinsSpecMasterContainersLivenessProbe#timeoutSeconds",
            },
            "default": "1 second. Minimum value is 1. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes",
            "remarks": "Defaults to 1 second. Minimum value is 1. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes",
            "summary": "Number of seconds after which the probe times out.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "jenkins.io.ts",
            "line": 2172,
          },
          "name": "timeoutSeconds",
          "optional": true,
          "type": Object {
            "primitive": "number",
          },
        },
      ],
    },
    "jenkinsio.JenkinsSpecMasterContainersLivenessProbeExec": Object {
      "assembly": "jenkinsio",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "JenkinsSpecMasterContainersLivenessProbeExec",
        },
        "remarks": "Exec specifies the action to take.",
        "summary": "One and only one of the following should be specified.",
      },
      "fqn": "jenkinsio.JenkinsSpecMasterContainersLivenessProbeExec",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "jenkins.io.ts",
        "line": 4711,
      },
      "name": "JenkinsSpecMasterContainersLivenessProbeExec",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "JenkinsSpecMasterContainersLivenessProbeExec#command",
            },
            "remarks": "The command is simply exec'd, it is not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use a shell, you need to explicitly call out to that shell. Exit status of 0 is treated as live/healthy and non-zero is unhealthy.",
            "summary": "Command is the command line to execute inside the container, the working directory for the command  is root ('/') in the container's filesystem.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "jenkins.io.ts",
            "line": 4717,
          },
          "name": "command",
          "optional": true,
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "primitive": "string",
              },
              "kind": "array",
            },
          },
        },
      ],
    },
    "jenkinsio.JenkinsSpecMasterContainersLivenessProbeHttpGet": Object {
      "assembly": "jenkinsio",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "JenkinsSpecMasterContainersLivenessProbeHttpGet",
        },
        "summary": "HTTPGet specifies the http request to perform.",
      },
      "fqn": "jenkinsio.JenkinsSpecMasterContainersLivenessProbeHttpGet",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "jenkins.io.ts",
        "line": 4740,
      },
      "name": "JenkinsSpecMasterContainersLivenessProbeHttpGet",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "JenkinsSpecMasterContainersLivenessProbeHttpGet#port",
            },
            "remarks": "Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.",
            "summary": "Name or number of the port to access on the container.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "jenkins.io.ts",
            "line": 4767,
          },
          "name": "port",
          "type": Object {
            "fqn": "jenkinsio.JenkinsSpecMasterContainersLivenessProbeHttpGetPort",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "JenkinsSpecMasterContainersLivenessProbeHttpGet#host",
            },
            "remarks": "You probably want to set \\"Host\\" in httpHeaders instead.",
            "summary": "Host name to connect to, defaults to the pod IP.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "jenkins.io.ts",
            "line": 4746,
          },
          "name": "host",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "JenkinsSpecMasterContainersLivenessProbeHttpGet#httpHeaders",
            },
            "remarks": "HTTP allows repeated headers.",
            "summary": "Custom headers to set in the request.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "jenkins.io.ts",
            "line": 4753,
          },
          "name": "httpHeaders",
          "optional": true,
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "fqn": "jenkinsio.JenkinsSpecMasterContainersLivenessProbeHttpGetHttpHeaders",
              },
              "kind": "array",
            },
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "JenkinsSpecMasterContainersLivenessProbeHttpGet#path",
            },
            "summary": "Path to access on the HTTP server.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "jenkins.io.ts",
            "line": 4760,
          },
          "name": "path",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "JenkinsSpecMasterContainersLivenessProbeHttpGet#scheme",
            },
            "default": "HTTP.",
            "remarks": "Defaults to HTTP.",
            "summary": "Scheme to use for connecting to the host.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "jenkins.io.ts",
            "line": 4775,
          },
          "name": "scheme",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
      ],
    },
    "jenkinsio.JenkinsSpecMasterContainersLivenessProbeHttpGetHttpHeaders": Object {
      "assembly": "jenkinsio",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "JenkinsSpecMasterContainersLivenessProbeHttpGetHttpHeaders",
        },
        "summary": "HTTPHeader describes a custom header to be used in HTTP probes.",
      },
      "fqn": "jenkinsio.JenkinsSpecMasterContainersLivenessProbeHttpGetHttpHeaders",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "jenkins.io.ts",
        "line": 6106,
      },
      "name": "JenkinsSpecMasterContainersLivenessProbeHttpGetHttpHeaders",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "JenkinsSpecMasterContainersLivenessProbeHttpGetHttpHeaders#name",
            },
            "summary": "The header field name.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "jenkins.io.ts",
            "line": 6112,
          },
          "name": "name",
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "JenkinsSpecMasterContainersLivenessProbeHttpGetHttpHeaders#value",
            },
            "summary": "The header field value.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "jenkins.io.ts",
            "line": 6119,
          },
          "name": "value",
          "type": Object {
            "primitive": "string",
          },
        },
      ],
    },
    "jenkinsio.JenkinsSpecMasterContainersLivenessProbeHttpGetPort": Object {
      "assembly": "jenkinsio",
      "docs": Object {
        "custom": Object {
          "schema": "JenkinsSpecMasterContainersLivenessProbeHttpGetPort",
        },
        "remarks": "Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.",
        "summary": "Name or number of the port to access on the container.",
      },
      "fqn": "jenkinsio.JenkinsSpecMasterContainersLivenessProbeHttpGetPort",
      "kind": "class",
      "locationInModule": Object {
        "filename": "jenkins.io.ts",
        "line": 6143,
      },
      "methods": Array [
        Object {
          "locationInModule": Object {
            "filename": "jenkins.io.ts",
            "line": 6144,
          },
          "name": "fromNumber",
          "parameters": Array [
            Object {
              "name": "value",
              "type": Object {
                "primitive": "number",
              },
            },
          ],
          "returns": Object {
            "type": Object {
              "fqn": "jenkinsio.JenkinsSpecMasterContainersLivenessProbeHttpGetPort",
            },
          },
          "static": true,
        },
        Object {
          "locationInModule": Object {
            "filename": "jenkins.io.ts",
            "line": 6147,
          },
          "name": "fromString",
          "parameters": Array [
            Object {
              "name": "value",
              "type": Object {
                "primitive": "string",
              },
            },
          ],
          "returns": Object {
            "type": Object {
              "fqn": "jenkinsio.JenkinsSpecMasterContainersLivenessProbeHttpGetPort",
            },
          },
          "static": true,
        },
      ],
      "name": "JenkinsSpecMasterContainersLivenessProbeHttpGetPort",
      "properties": Array [
        Object {
          "immutable": true,
          "locationInModule": Object {
            "filename": "jenkins.io.ts",
            "line": 6150,
          },
          "name": "value",
          "type": Object {
            "primitive": "any",
          },
        },
      ],
    },
    "jenkinsio.JenkinsSpecMasterContainersLivenessProbeTcpSocket": Object {
      "assembly": "jenkinsio",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "JenkinsSpecMasterContainersLivenessProbeTcpSocket",
        },
        "remarks": "TCP hooks not yet supported TODO: implement a realistic TCP lifecycle hook",
        "summary": "TCPSocket specifies an action involving a TCP port.",
      },
      "fqn": "jenkinsio.JenkinsSpecMasterContainersLivenessProbeTcpSocket",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "jenkins.io.ts",
        "line": 4802,
      },
      "name": "JenkinsSpecMasterContainersLivenessProbeTcpSocket",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "JenkinsSpecMasterContainersLivenessProbeTcpSocket#port",
            },
            "remarks": "Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.",
            "summary": "Number or name of the port to access on the container.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "jenkins.io.ts",
            "line": 4815,
          },
          "name": "port",
          "type": Object {
            "fqn": "jenkinsio.JenkinsSpecMasterContainersLivenessProbeTcpSocketPort",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "JenkinsSpecMasterContainersLivenessProbeTcpSocket#host",
            },
            "summary": "Optional: Host name to connect to, defaults to the pod IP.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "jenkins.io.ts",
            "line": 4808,
          },
          "name": "host",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
      ],
    },
    "jenkinsio.JenkinsSpecMasterContainersLivenessProbeTcpSocketPort": Object {
      "assembly": "jenkinsio",
      "docs": Object {
        "custom": Object {
          "schema": "JenkinsSpecMasterContainersLivenessProbeTcpSocketPort",
        },
        "remarks": "Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.",
        "summary": "Number or name of the port to access on the container.",
      },
      "fqn": "jenkinsio.JenkinsSpecMasterContainersLivenessProbeTcpSocketPort",
      "kind": "class",
      "locationInModule": Object {
        "filename": "jenkins.io.ts",
        "line": 6160,
      },
      "methods": Array [
        Object {
          "locationInModule": Object {
            "filename": "jenkins.io.ts",
            "line": 6161,
          },
          "name": "fromNumber",
          "parameters": Array [
            Object {
              "name": "value",
              "type": Object {
                "primitive": "number",
              },
            },
          ],
          "returns": Object {
            "type": Object {
              "fqn": "jenkinsio.JenkinsSpecMasterContainersLivenessProbeTcpSocketPort",
            },
          },
          "static": true,
        },
        Object {
          "locationInModule": Object {
            "filename": "jenkins.io.ts",
            "line": 6164,
          },
          "name": "fromString",
          "parameters": Array [
            Object {
              "name": "value",
              "type": Object {
                "primitive": "string",
              },
            },
          ],
          "returns": Object {
            "type": Object {
              "fqn": "jenkinsio.JenkinsSpecMasterContainersLivenessProbeTcpSocketPort",
            },
          },
          "static": true,
        },
      ],
      "name": "JenkinsSpecMasterContainersLivenessProbeTcpSocketPort",
      "properties": Array [
        Object {
          "immutable": true,
          "locationInModule": Object {
            "filename": "jenkins.io.ts",
            "line": 6167,
          },
          "name": "value",
          "type": Object {
            "primitive": "any",
          },
        },
      ],
    },
    "jenkinsio.JenkinsSpecMasterContainersPorts": Object {
      "assembly": "jenkinsio",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "JenkinsSpecMasterContainersPorts",
        },
        "summary": "ContainerPort represents a network port in a single container.",
      },
      "fqn": "jenkinsio.JenkinsSpecMasterContainersPorts",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "jenkins.io.ts",
        "line": 2202,
      },
      "name": "JenkinsSpecMasterContainersPorts",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "JenkinsSpecMasterContainersPorts#containerPort",
            },
            "remarks": "This must be a valid port number, 0 < x < 65536.",
            "summary": "Number of port to expose on the pod's IP address.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "jenkins.io.ts",
            "line": 2208,
          },
          "name": "containerPort",
          "type": Object {
            "primitive": "number",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "JenkinsSpecMasterContainersPorts#hostIP",
            },
            "summary": "What host IP to bind the external port to.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "jenkins.io.ts",
            "line": 2215,
          },
          "name": "hostIp",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "JenkinsSpecMasterContainersPorts#hostPort",
            },
            "remarks": "If specified, this must be a valid port number, 0 < x < 65536. If HostNetwork is specified, this must match ContainerPort. Most containers do not need this.",
            "summary": "Number of port to expose on the host.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "jenkins.io.ts",
            "line": 2222,
          },
          "name": "hostPort",
          "optional": true,
          "type": Object {
            "primitive": "number",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "JenkinsSpecMasterContainersPorts#name",
            },
            "remarks": "Each named port in a pod must have a unique name. Name for the port that can be referred to by services.",
            "summary": "If specified, this must be an IANA_SVC_NAME and unique within the pod.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "jenkins.io.ts",
            "line": 2229,
          },
          "name": "name",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "JenkinsSpecMasterContainersPorts#protocol",
            },
            "default": "TCP\\".",
            "remarks": "Must be UDP, TCP, or SCTP. Defaults to \\"TCP\\".",
            "summary": "Protocol for port.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "jenkins.io.ts",
            "line": 2237,
          },
          "name": "protocol",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
      ],
    },
    "jenkinsio.JenkinsSpecMasterContainersReadinessProbe": Object {
      "assembly": "jenkinsio",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "JenkinsSpecMasterContainersReadinessProbe",
        },
        "remarks": "Container will be removed from service endpoints if the probe fails.",
        "summary": "Periodic probe of container service readiness.",
      },
      "fqn": "jenkinsio.JenkinsSpecMasterContainersReadinessProbe",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "jenkins.io.ts",
        "line": 2264,
      },
      "name": "JenkinsSpecMasterContainersReadinessProbe",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "JenkinsSpecMasterContainersReadinessProbe#exec",
            },
            "remarks": "Exec specifies the action to take.",
            "summary": "One and only one of the following should be specified.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "jenkins.io.ts",
            "line": 2270,
          },
          "name": "exec",
          "optional": true,
          "type": Object {
            "fqn": "jenkinsio.JenkinsSpecMasterContainersReadinessProbeExec",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "JenkinsSpecMasterContainersReadinessProbe#failureThreshold",
            },
            "default": "3. Minimum value is 1.",
            "remarks": "Defaults to 3. Minimum value is 1.",
            "summary": "Minimum consecutive failures for the probe to be considered failed after having succeeded.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "jenkins.io.ts",
            "line": 2278,
          },
          "name": "failureThreshold",
          "optional": true,
          "type": Object {
            "primitive": "number",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "JenkinsSpecMasterContainersReadinessProbe#httpGet",
            },
            "summary": "HTTPGet specifies the http request to perform.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "jenkins.io.ts",
            "line": 2285,
          },
          "name": "httpGet",
          "optional": true,
          "type": Object {
            "fqn": "jenkinsio.JenkinsSpecMasterContainersReadinessProbeHttpGet",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "JenkinsSpecMasterContainersReadinessProbe#initialDelaySeconds",
            },
            "remarks": "More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes",
            "summary": "Number of seconds after the container has started before liveness probes are initiated.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "jenkins.io.ts",
            "line": 2292,
          },
          "name": "initialDelaySeconds",
          "optional": true,
          "type": Object {
            "primitive": "number",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "JenkinsSpecMasterContainersReadinessProbe#periodSeconds",
            },
            "default": "10 seconds. Minimum value is 1.",
            "remarks": "Default to 10 seconds. Minimum value is 1.",
            "summary": "How often (in seconds) to perform the probe.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "jenkins.io.ts",
            "line": 2300,
          },
          "name": "periodSeconds",
          "optional": true,
          "type": Object {
            "primitive": "number",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "JenkinsSpecMasterContainersReadinessProbe#successThreshold",
            },
            "default": "1. Must be 1 for liveness and startup. Minimum value is 1.",
            "remarks": "Defaults to 1. Must be 1 for liveness and startup. Minimum value is 1.",
            "summary": "Minimum consecutive successes for the probe to be considered successful after having failed.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "jenkins.io.ts",
            "line": 2308,
          },
          "name": "successThreshold",
          "optional": true,
          "type": Object {
            "primitive": "number",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "JenkinsSpecMasterContainersReadinessProbe#tcpSocket",
            },
            "remarks": "TCP hooks not yet supported TODO: implement a realistic TCP lifecycle hook",
            "summary": "TCPSocket specifies an action involving a TCP port.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "jenkins.io.ts",
            "line": 2315,
          },
          "name": "tcpSocket",
          "optional": true,
          "type": Object {
            "fqn": "jenkinsio.JenkinsSpecMasterContainersReadinessProbeTcpSocket",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "JenkinsSpecMasterContainersReadinessProbe#timeoutSeconds",
            },
            "default": "1 second. Minimum value is 1. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes",
            "remarks": "Defaults to 1 second. Minimum value is 1. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes",
            "summary": "Number of seconds after which the probe times out.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "jenkins.io.ts",
            "line": 2323,
          },
          "name": "timeoutSeconds",
          "optional": true,
          "type": Object {
            "primitive": "number",
          },
        },
      ],
    },
    "jenkinsio.JenkinsSpecMasterContainersReadinessProbeExec": Object {
      "assembly": "jenkinsio",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "JenkinsSpecMasterContainersReadinessProbeExec",
        },
        "remarks": "Exec specifies the action to take.",
        "summary": "One and only one of the following should be specified.",
      },
      "fqn": "jenkinsio.JenkinsSpecMasterContainersReadinessProbeExec",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "jenkins.io.ts",
        "line": 4839,
      },
      "name": "JenkinsSpecMasterContainersReadinessProbeExec",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "JenkinsSpecMasterContainersReadinessProbeExec#command",
            },
            "remarks": "The command is simply exec'd, it is not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use a shell, you need to explicitly call out to that shell. Exit status of 0 is treated as live/healthy and non-zero is unhealthy.",
            "summary": "Command is the command line to execute inside the container, the working directory for the command  is root ('/') in the container's filesystem.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "jenkins.io.ts",
            "line": 4845,
          },
          "name": "command",
          "optional": true,
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "primitive": "string",
              },
              "kind": "array",
            },
          },
        },
      ],
    },
    "jenkinsio.JenkinsSpecMasterContainersReadinessProbeHttpGet": Object {
      "assembly": "jenkinsio",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "JenkinsSpecMasterContainersReadinessProbeHttpGet",
        },
        "summary": "HTTPGet specifies the http request to perform.",
      },
      "fqn": "jenkinsio.JenkinsSpecMasterContainersReadinessProbeHttpGet",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "jenkins.io.ts",
        "line": 4868,
      },
      "name": "JenkinsSpecMasterContainersReadinessProbeHttpGet",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "JenkinsSpecMasterContainersReadinessProbeHttpGet#port",
            },
            "remarks": "Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.",
            "summary": "Name or number of the port to access on the container.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "jenkins.io.ts",
            "line": 4895,
          },
          "name": "port",
          "type": Object {
            "fqn": "jenkinsio.JenkinsSpecMasterContainersReadinessProbeHttpGetPort",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "JenkinsSpecMasterContainersReadinessProbeHttpGet#host",
            },
            "remarks": "You probably want to set \\"Host\\" in httpHeaders instead.",
            "summary": "Host name to connect to, defaults to the pod IP.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "jenkins.io.ts",
            "line": 4874,
          },
          "name": "host",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "JenkinsSpecMasterContainersReadinessProbeHttpGet#httpHeaders",
            },
            "remarks": "HTTP allows repeated headers.",
            "summary": "Custom headers to set in the request.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "jenkins.io.ts",
            "line": 4881,
          },
          "name": "httpHeaders",
          "optional": true,
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "fqn": "jenkinsio.JenkinsSpecMasterContainersReadinessProbeHttpGetHttpHeaders",
              },
              "kind": "array",
            },
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "JenkinsSpecMasterContainersReadinessProbeHttpGet#path",
            },
            "summary": "Path to access on the HTTP server.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "jenkins.io.ts",
            "line": 4888,
          },
          "name": "path",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "JenkinsSpecMasterContainersReadinessProbeHttpGet#scheme",
            },
            "default": "HTTP.",
            "remarks": "Defaults to HTTP.",
            "summary": "Scheme to use for connecting to the host.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "jenkins.io.ts",
            "line": 4903,
          },
          "name": "scheme",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
      ],
    },
    "jenkinsio.JenkinsSpecMasterContainersReadinessProbeHttpGetHttpHeaders": Object {
      "assembly": "jenkinsio",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "JenkinsSpecMasterContainersReadinessProbeHttpGetHttpHeaders",
        },
        "summary": "HTTPHeader describes a custom header to be used in HTTP probes.",
      },
      "fqn": "jenkinsio.JenkinsSpecMasterContainersReadinessProbeHttpGetHttpHeaders",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "jenkins.io.ts",
        "line": 6177,
      },
      "name": "JenkinsSpecMasterContainersReadinessProbeHttpGetHttpHeaders",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "JenkinsSpecMasterContainersReadinessProbeHttpGetHttpHeaders#name",
            },
            "summary": "The header field name.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "jenkins.io.ts",
            "line": 6183,
          },
          "name": "name",
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "JenkinsSpecMasterContainersReadinessProbeHttpGetHttpHeaders#value",
            },
            "summary": "The header field value.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "jenkins.io.ts",
            "line": 6190,
          },
          "name": "value",
          "type": Object {
            "primitive": "string",
          },
        },
      ],
    },
    "jenkinsio.JenkinsSpecMasterContainersReadinessProbeHttpGetPort": Object {
      "assembly": "jenkinsio",
      "docs": Object {
        "custom": Object {
          "schema": "JenkinsSpecMasterContainersReadinessProbeHttpGetPort",
        },
        "remarks": "Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.",
        "summary": "Name or number of the port to access on the container.",
      },
      "fqn": "jenkinsio.JenkinsSpecMasterContainersReadinessProbeHttpGetPort",
      "kind": "class",
      "locationInModule": Object {
        "filename": "jenkins.io.ts",
        "line": 6214,
      },
      "methods": Array [
        Object {
          "locationInModule": Object {
            "filename": "jenkins.io.ts",
            "line": 6215,
          },
          "name": "fromNumber",
          "parameters": Array [
            Object {
              "name": "value",
              "type": Object {
                "primitive": "number",
              },
            },
          ],
          "returns": Object {
            "type": Object {
              "fqn": "jenkinsio.JenkinsSpecMasterContainersReadinessProbeHttpGetPort",
            },
          },
          "static": true,
        },
        Object {
          "locationInModule": Object {
            "filename": "jenkins.io.ts",
            "line": 6218,
          },
          "name": "fromString",
          "parameters": Array [
            Object {
              "name": "value",
              "type": Object {
                "primitive": "string",
              },
            },
          ],
          "returns": Object {
            "type": Object {
              "fqn": "jenkinsio.JenkinsSpecMasterContainersReadinessProbeHttpGetPort",
            },
          },
          "static": true,
        },
      ],
      "name": "JenkinsSpecMasterContainersReadinessProbeHttpGetPort",
      "properties": Array [
        Object {
          "immutable": true,
          "locationInModule": Object {
            "filename": "jenkins.io.ts",
            "line": 6221,
          },
          "name": "value",
          "type": Object {
            "primitive": "any",
          },
        },
      ],
    },
    "jenkinsio.JenkinsSpecMasterContainersReadinessProbeTcpSocket": Object {
      "assembly": "jenkinsio",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "JenkinsSpecMasterContainersReadinessProbeTcpSocket",
        },
        "remarks": "TCP hooks not yet supported TODO: implement a realistic TCP lifecycle hook",
        "summary": "TCPSocket specifies an action involving a TCP port.",
      },
      "fqn": "jenkinsio.JenkinsSpecMasterContainersReadinessProbeTcpSocket",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "jenkins.io.ts",
        "line": 4930,
      },
      "name": "JenkinsSpecMasterContainersReadinessProbeTcpSocket",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "JenkinsSpecMasterContainersReadinessProbeTcpSocket#port",
            },
            "remarks": "Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.",
            "summary": "Number or name of the port to access on the container.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "jenkins.io.ts",
            "line": 4943,
          },
          "name": "port",
          "type": Object {
            "fqn": "jenkinsio.JenkinsSpecMasterContainersReadinessProbeTcpSocketPort",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "JenkinsSpecMasterContainersReadinessProbeTcpSocket#host",
            },
            "summary": "Optional: Host name to connect to, defaults to the pod IP.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "jenkins.io.ts",
            "line": 4936,
          },
          "name": "host",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
      ],
    },
    "jenkinsio.JenkinsSpecMasterContainersReadinessProbeTcpSocketPort": Object {
      "assembly": "jenkinsio",
      "docs": Object {
        "custom": Object {
          "schema": "JenkinsSpecMasterContainersReadinessProbeTcpSocketPort",
        },
        "remarks": "Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.",
        "summary": "Number or name of the port to access on the container.",
      },
      "fqn": "jenkinsio.JenkinsSpecMasterContainersReadinessProbeTcpSocketPort",
      "kind": "class",
      "locationInModule": Object {
        "filename": "jenkins.io.ts",
        "line": 6231,
      },
      "methods": Array [
        Object {
          "locationInModule": Object {
            "filename": "jenkins.io.ts",
            "line": 6232,
          },
          "name": "fromNumber",
          "parameters": Array [
            Object {
              "name": "value",
              "type": Object {
                "primitive": "number",
              },
            },
          ],
          "returns": Object {
            "type": Object {
              "fqn": "jenkinsio.JenkinsSpecMasterContainersReadinessProbeTcpSocketPort",
            },
          },
          "static": true,
        },
        Object {
          "locationInModule": Object {
            "filename": "jenkins.io.ts",
            "line": 6235,
          },
          "name": "fromString",
          "parameters": Array [
            Object {
              "name": "value",
              "type": Object {
                "primitive": "string",
              },
            },
          ],
          "returns": Object {
            "type": Object {
              "fqn": "jenkinsio.JenkinsSpecMasterContainersReadinessProbeTcpSocketPort",
            },
          },
          "static": true,
        },
      ],
      "name": "JenkinsSpecMasterContainersReadinessProbeTcpSocketPort",
      "properties": Array [
        Object {
          "immutable": true,
          "locationInModule": Object {
            "filename": "jenkins.io.ts",
            "line": 6238,
          },
          "name": "value",
          "type": Object {
            "primitive": "any",
          },
        },
      ],
    },
    "jenkinsio.JenkinsSpecMasterContainersResources": Object {
      "assembly": "jenkinsio",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "JenkinsSpecMasterContainersResources",
        },
        "remarks": "More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/",
        "summary": "Compute Resources required by this container.",
      },
      "fqn": "jenkinsio.JenkinsSpecMasterContainersResources",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "jenkins.io.ts",
        "line": 2353,
      },
      "name": "JenkinsSpecMasterContainersResources",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "JenkinsSpecMasterContainersResources#limits",
            },
            "remarks": "More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/",
            "summary": "Limits describes the maximum amount of compute resources allowed.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "jenkins.io.ts",
            "line": 2359,
          },
          "name": "limits",
          "optional": true,
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "primitive": "string",
              },
              "kind": "map",
            },
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "JenkinsSpecMasterContainersResources#requests",
            },
            "remarks": "If Requests is omitted for a container, it defaults to Limits if that is explicitly specified, otherwise to an implementation-defined value. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/",
            "summary": "Requests describes the minimum amount of compute resources required.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "jenkins.io.ts",
            "line": 2366,
          },
          "name": "requests",
          "optional": true,
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "primitive": "string",
              },
              "kind": "map",
            },
          },
        },
      ],
    },
    "jenkinsio.JenkinsSpecMasterContainersSecurityContext": Object {
      "assembly": "jenkinsio",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "JenkinsSpecMasterContainersSecurityContext",
        },
        "remarks": "More info: https://kubernetes.io/docs/concepts/policy/security-context/ More info: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
        "summary": "Security options the pod should run with.",
      },
      "fqn": "jenkinsio.JenkinsSpecMasterContainersSecurityContext",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "jenkins.io.ts",
        "line": 2390,
      },
      "name": "JenkinsSpecMasterContainersSecurityContext",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "JenkinsSpecMasterContainersSecurityContext#allowPrivilegeEscalation",
            },
            "remarks": "This bool directly controls if the no_new_privs flag will be set on the container process. AllowPrivilegeEscalation is true always when the container is: 1) run as Privileged 2) has CAP_SYS_ADMIN",
            "summary": "AllowPrivilegeEscalation controls whether a process can gain more privileges than its parent process.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "jenkins.io.ts",
            "line": 2396,
          },
          "name": "allowPrivilegeEscalation",
          "optional": true,
          "type": Object {
            "primitive": "boolean",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "JenkinsSpecMasterContainersSecurityContext#capabilities",
            },
            "default": "the default set of capabilities granted by the container runtime.",
            "remarks": "Defaults to the default set of capabilities granted by the container runtime.",
            "summary": "The capabilities to add/drop when running containers.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "jenkins.io.ts",
            "line": 2404,
          },
          "name": "capabilities",
          "optional": true,
          "type": Object {
            "fqn": "jenkinsio.JenkinsSpecMasterContainersSecurityContextCapabilities",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "JenkinsSpecMasterContainersSecurityContext#privileged",
            },
            "default": "false.",
            "remarks": "Processes in privileged containers are essentially equivalent to root on the host. Defaults to false.",
            "summary": "Run container in privileged mode.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "jenkins.io.ts",
            "line": 2412,
          },
          "name": "privileged",
          "optional": true,
          "type": Object {
            "primitive": "boolean",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "JenkinsSpecMasterContainersSecurityContext#procMount",
            },
            "remarks": "The default is DefaultProcMount which uses the container runtime defaults for readonly paths and masked paths. This requires the ProcMountType feature flag to be enabled.",
            "summary": "procMount denotes the type of proc mount to use for the containers.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "jenkins.io.ts",
            "line": 2419,
          },
          "name": "procMount",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "JenkinsSpecMasterContainersSecurityContext#readOnlyRootFilesystem",
            },
            "default": "false.",
            "remarks": "Default is false.",
            "summary": "Whether this container has a read-only root filesystem.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "jenkins.io.ts",
            "line": 2427,
          },
          "name": "readOnlyRootFilesystem",
          "optional": true,
          "type": Object {
            "primitive": "boolean",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "JenkinsSpecMasterContainersSecurityContext#runAsGroup",
            },
            "remarks": "Uses runtime default if unset. May also be set in PodSecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.",
            "summary": "The GID to run the entrypoint of the container process.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "jenkins.io.ts",
            "line": 2434,
          },
          "name": "runAsGroup",
          "optional": true,
          "type": Object {
            "primitive": "number",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "JenkinsSpecMasterContainersSecurityContext#runAsNonRoot",
            },
            "remarks": "If true, the Kubelet will validate the image at runtime to ensure that it does not run as UID 0 (root) and fail to start the container if it does. If unset or false, no such validation will be performed. May also be set in PodSecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.",
            "summary": "Indicates that the container must run as a non-root user.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "jenkins.io.ts",
            "line": 2441,
          },
          "name": "runAsNonRoot",
          "optional": true,
          "type": Object {
            "primitive": "boolean",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "JenkinsSpecMasterContainersSecurityContext#runAsUser",
            },
            "default": "user specified in image metadata if unspecified. May also be set in PodSecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.",
            "remarks": "Defaults to user specified in image metadata if unspecified. May also be set in PodSecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.",
            "summary": "The UID to run the entrypoint of the container process.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "jenkins.io.ts",
            "line": 2449,
          },
          "name": "runAsUser",
          "optional": true,
          "type": Object {
            "primitive": "number",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "JenkinsSpecMasterContainersSecurityContext#seLinuxOptions",
            },
            "remarks": "If unspecified, the container runtime will allocate a random SELinux context for each container.  May also be set in PodSecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.",
            "summary": "The SELinux context to be applied to the container.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "jenkins.io.ts",
            "line": 2456,
          },
          "name": "seLinuxOptions",
          "optional": true,
          "type": Object {
            "fqn": "jenkinsio.JenkinsSpecMasterContainersSecurityContextSeLinuxOptions",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "JenkinsSpecMasterContainersSecurityContext#windowsOptions",
            },
            "remarks": "If unspecified, the options from the PodSecurityContext will be used. If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.",
            "summary": "The Windows specific settings applied to all containers.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "jenkins.io.ts",
            "line": 2463,
          },
          "name": "windowsOptions",
          "optional": true,
          "type": Object {
            "fqn": "jenkinsio.JenkinsSpecMasterContainersSecurityContextWindowsOptions",
          },
        },
      ],
    },
    "jenkinsio.JenkinsSpecMasterContainersSecurityContextCapabilities": Object {
      "assembly": "jenkinsio",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "JenkinsSpecMasterContainersSecurityContextCapabilities",
        },
        "default": "the default set of capabilities granted by the container runtime.",
        "remarks": "Defaults to the default set of capabilities granted by the container runtime.",
        "summary": "The capabilities to add/drop when running containers.",
      },
      "fqn": "jenkinsio.JenkinsSpecMasterContainersSecurityContextCapabilities",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "jenkins.io.ts",
        "line": 4968,
      },
      "name": "JenkinsSpecMasterContainersSecurityContextCapabilities",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "JenkinsSpecMasterContainersSecurityContextCapabilities#add",
            },
            "summary": "Added capabilities.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "jenkins.io.ts",
            "line": 4974,
          },
          "name": "add",
          "optional": true,
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "primitive": "string",
              },
              "kind": "array",
            },
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "JenkinsSpecMasterContainersSecurityContextCapabilities#drop",
            },
            "summary": "Removed capabilities.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "jenkins.io.ts",
            "line": 4981,
          },
          "name": "drop",
          "optional": true,
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "primitive": "string",
              },
              "kind": "array",
            },
          },
        },
      ],
    },
    "jenkinsio.JenkinsSpecMasterContainersSecurityContextSeLinuxOptions": Object {
      "assembly": "jenkinsio",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "JenkinsSpecMasterContainersSecurityContextSeLinuxOptions",
        },
        "remarks": "If unspecified, the container runtime will allocate a random SELinux context for each container.  May also be set in PodSecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.",
        "summary": "The SELinux context to be applied to the container.",
      },
      "fqn": "jenkinsio.JenkinsSpecMasterContainersSecurityContextSeLinuxOptions",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "jenkins.io.ts",
        "line": 5005,
      },
      "name": "JenkinsSpecMasterContainersSecurityContextSeLinuxOptions",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "JenkinsSpecMasterContainersSecurityContextSeLinuxOptions#level",
            },
            "summary": "Level is SELinux level label that applies to the container.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "jenkins.io.ts",
            "line": 5011,
          },
          "name": "level",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "JenkinsSpecMasterContainersSecurityContextSeLinuxOptions#role",
            },
            "summary": "Role is a SELinux role label that applies to the container.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "jenkins.io.ts",
            "line": 5018,
          },
          "name": "role",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "JenkinsSpecMasterContainersSecurityContextSeLinuxOptions#type",
            },
            "summary": "Type is a SELinux type label that applies to the container.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "jenkins.io.ts",
            "line": 5025,
          },
          "name": "type",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "JenkinsSpecMasterContainersSecurityContextSeLinuxOptions#user",
            },
            "summary": "User is a SELinux user label that applies to the container.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "jenkins.io.ts",
            "line": 5032,
          },
          "name": "user",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
      ],
    },
    "jenkinsio.JenkinsSpecMasterContainersSecurityContextWindowsOptions": Object {
      "assembly": "jenkinsio",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "JenkinsSpecMasterContainersSecurityContextWindowsOptions",
        },
        "remarks": "If unspecified, the options from the PodSecurityContext will be used. If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.",
        "summary": "The Windows specific settings applied to all containers.",
      },
      "fqn": "jenkinsio.JenkinsSpecMasterContainersSecurityContextWindowsOptions",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "jenkins.io.ts",
        "line": 5058,
      },
      "name": "JenkinsSpecMasterContainersSecurityContextWindowsOptions",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "JenkinsSpecMasterContainersSecurityContextWindowsOptions#gmsaCredentialSpec",
            },
            "summary": "GMSACredentialSpec is where the GMSA admission webhook (https://github.com/kubernetes-sigs/windows-gmsa) inlines the contents of the GMSA credential spec named by the GMSACredentialSpecName field. This field is alpha-level and is only honored by servers that enable the WindowsGMSA feature flag.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "jenkins.io.ts",
            "line": 5064,
          },
          "name": "gmsaCredentialSpec",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "JenkinsSpecMasterContainersSecurityContextWindowsOptions#gmsaCredentialSpecName",
            },
            "remarks": "This field is alpha-level and is only honored by servers that enable the WindowsGMSA feature flag.",
            "summary": "GMSACredentialSpecName is the name of the GMSA credential spec to use.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "jenkins.io.ts",
            "line": 5071,
          },
          "name": "gmsaCredentialSpecName",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "JenkinsSpecMasterContainersSecurityContextWindowsOptions#runAsUserName",
            },
            "default": "the user specified in image metadata if unspecified. May also be set in PodSecurityContext. If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence. This field is alpha-level and it is only honored by servers that enable the WindowsRunAsUserName feature flag.",
            "remarks": "Defaults to the user specified in image metadata if unspecified. May also be set in PodSecurityContext. If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence. This field is alpha-level and it is only honored by servers that enable the WindowsRunAsUserName feature flag.",
            "summary": "The UserName in Windows to run the entrypoint of the container process.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "jenkins.io.ts",
            "line": 5079,
          },
          "name": "runAsUserName",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
      ],
    },
    "jenkinsio.JenkinsSpecMasterContainersVolumeMounts": Object {
      "assembly": "jenkinsio",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "JenkinsSpecMasterContainersVolumeMounts",
        },
        "summary": "VolumeMount describes a mounting of a Volume within a container.",
      },
      "fqn": "jenkinsio.JenkinsSpecMasterContainersVolumeMounts",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "jenkins.io.ts",
        "line": 2495,
      },
      "name": "JenkinsSpecMasterContainersVolumeMounts",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "JenkinsSpecMasterContainersVolumeMounts#mountPath",
            },
            "remarks": "Must not contain ':'.",
            "summary": "Path within the container at which the volume should be mounted.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "jenkins.io.ts",
            "line": 2501,
          },
          "name": "mountPath",
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "JenkinsSpecMasterContainersVolumeMounts#name",
            },
            "summary": "This must match the Name of a Volume.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "jenkins.io.ts",
            "line": 2515,
          },
          "name": "name",
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "JenkinsSpecMasterContainersVolumeMounts#mountPropagation",
            },
            "remarks": "When not set, MountPropagationNone is used. This field is beta in 1.10.",
            "summary": "mountPropagation determines how mounts are propagated from the host to container and the other way around.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "jenkins.io.ts",
            "line": 2508,
          },
          "name": "mountPropagation",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "JenkinsSpecMasterContainersVolumeMounts#readOnly",
            },
            "default": "false.",
            "remarks": "Defaults to false.",
            "summary": "Mounted read-only if true, read-write otherwise (false or unspecified).",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "jenkins.io.ts",
            "line": 2523,
          },
          "name": "readOnly",
          "optional": true,
          "type": Object {
            "primitive": "boolean",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "JenkinsSpecMasterContainersVolumeMounts#subPath",
            },
            "default": "volume's root).",
            "remarks": "Defaults to \\"\\" (volume's root).",
            "summary": "Path within the volume from which the container's volume should be mounted.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "jenkins.io.ts",
            "line": 2531,
          },
          "name": "subPath",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "JenkinsSpecMasterContainersVolumeMounts#subPathExpr",
            },
            "default": "volume's root). SubPathExpr and SubPath are mutually exclusive. This field is beta in 1.15.",
            "remarks": "Behaves similarly to SubPath but environment variable references $(VAR_NAME) are expanded using the container's environment. Defaults to \\"\\" (volume's root). SubPathExpr and SubPath are mutually exclusive. This field is beta in 1.15.",
            "summary": "Expanded path within the volume from which the container's volume should be mounted.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "jenkins.io.ts",
            "line": 2539,
          },
          "name": "subPathExpr",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
      ],
    },
    "jenkinsio.JenkinsSpecMasterImagePullSecrets": Object {
      "assembly": "jenkinsio",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "JenkinsSpecMasterImagePullSecrets",
        },
        "summary": "LocalObjectReference contains enough information to let you locate the referenced object inside the same namespace.",
      },
      "fqn": "jenkinsio.JenkinsSpecMasterImagePullSecrets",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "jenkins.io.ts",
        "line": 1285,
      },
      "name": "JenkinsSpecMasterImagePullSecrets",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "JenkinsSpecMasterImagePullSecrets#name",
            },
            "remarks": "More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?",
            "summary": "Name of the referent.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "jenkins.io.ts",
            "line": 1291,
          },
          "name": "name",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
      ],
    },
    "jenkinsio.JenkinsSpecMasterPlugins": Object {
      "assembly": "jenkinsio",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "JenkinsSpecMasterPlugins",
        },
        "summary": "Plugin defines Jenkins plugin.",
      },
      "fqn": "jenkinsio.JenkinsSpecMasterPlugins",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "jenkins.io.ts",
        "line": 1314,
      },
      "name": "JenkinsSpecMasterPlugins",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "JenkinsSpecMasterPlugins#name",
            },
            "summary": "Name is the name of Jenkins plugin.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "jenkins.io.ts",
            "line": 1320,
          },
          "name": "name",
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "JenkinsSpecMasterPlugins#version",
            },
            "summary": "Version is the version of Jenkins plugin.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "jenkins.io.ts",
            "line": 1327,
          },
          "name": "version",
          "type": Object {
            "primitive": "string",
          },
        },
      ],
    },
    "jenkinsio.JenkinsSpecMasterSecurityContext": Object {
      "assembly": "jenkinsio",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "JenkinsSpecMasterSecurityContext",
        },
        "default": "runAsUser: 1000 fsGroup: 1000",
        "remarks": "As per kubernetes specification, it can be overridden for each container individually. Defaults to: runAsUser: 1000 fsGroup: 1000",
        "summary": "SecurityContext that applies to all the containers of the Jenkins Master.",
      },
      "fqn": "jenkinsio.JenkinsSpecMasterSecurityContext",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "jenkins.io.ts",
        "line": 1352,
      },
      "name": "JenkinsSpecMasterSecurityContext",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "JenkinsSpecMasterSecurityContext#fsGroup",
            },
            "remarks": "Some volume types allow the Kubelet to change the ownership of that volume to be owned by the pod:
1. The owning GID will be the FSGroup 2. The setgid bit is set (new files created in the volume will be owned by FSGroup) 3. The permission bits are OR'd with rw-rw----
If unset, the Kubelet will not modify the ownership and permissions of any volume.",
            "summary": "A special supplemental group that applies to all containers in a pod.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "jenkins.io.ts",
            "line": 1360,
          },
          "name": "fsGroup",
          "optional": true,
          "type": Object {
            "primitive": "number",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "JenkinsSpecMasterSecurityContext#runAsGroup",
            },
            "remarks": "Uses runtime default if unset. May also be set in SecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence for that container.",
            "summary": "The GID to run the entrypoint of the container process.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "jenkins.io.ts",
            "line": 1367,
          },
          "name": "runAsGroup",
          "optional": true,
          "type": Object {
            "primitive": "number",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "JenkinsSpecMasterSecurityContext#runAsNonRoot",
            },
            "remarks": "If true, the Kubelet will validate the image at runtime to ensure that it does not run as UID 0 (root) and fail to start the container if it does. If unset or false, no such validation will be performed. May also be set in SecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.",
            "summary": "Indicates that the container must run as a non-root user.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "jenkins.io.ts",
            "line": 1374,
          },
          "name": "runAsNonRoot",
          "optional": true,
          "type": Object {
            "primitive": "boolean",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "JenkinsSpecMasterSecurityContext#runAsUser",
            },
            "default": "user specified in image metadata if unspecified. May also be set in SecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence for that container.",
            "remarks": "Defaults to user specified in image metadata if unspecified. May also be set in SecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence for that container.",
            "summary": "The UID to run the entrypoint of the container process.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "jenkins.io.ts",
            "line": 1382,
          },
          "name": "runAsUser",
          "optional": true,
          "type": Object {
            "primitive": "number",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "JenkinsSpecMasterSecurityContext#seLinuxOptions",
            },
            "remarks": "If unspecified, the container runtime will allocate a random SELinux context for each container.  May also be set in SecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence for that container.",
            "summary": "The SELinux context to be applied to all containers.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "jenkins.io.ts",
            "line": 1389,
          },
          "name": "seLinuxOptions",
          "optional": true,
          "type": Object {
            "fqn": "jenkinsio.JenkinsSpecMasterSecurityContextSeLinuxOptions",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "JenkinsSpecMasterSecurityContext#supplementalGroups",
            },
            "remarks": "If unspecified, no groups will be added to any container.",
            "summary": "A list of groups applied to the first process run in each container, in addition to the container's primary GID.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "jenkins.io.ts",
            "line": 1396,
          },
          "name": "supplementalGroups",
          "optional": true,
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "primitive": "number",
              },
              "kind": "array",
            },
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "JenkinsSpecMasterSecurityContext#sysctls",
            },
            "remarks": "Pods with unsupported sysctls (by the container runtime) might fail to launch.",
            "summary": "Sysctls hold a list of namespaced sysctls used for the pod.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "jenkins.io.ts",
            "line": 1403,
          },
          "name": "sysctls",
          "optional": true,
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "fqn": "jenkinsio.JenkinsSpecMasterSecurityContextSysctls",
              },
              "kind": "array",
            },
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "JenkinsSpecMasterSecurityContext#windowsOptions",
            },
            "remarks": "If unspecified, the options within a container's SecurityContext will be used. If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.",
            "summary": "The Windows specific settings applied to all containers.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "jenkins.io.ts",
            "line": 1410,
          },
          "name": "windowsOptions",
          "optional": true,
          "type": Object {
            "fqn": "jenkinsio.JenkinsSpecMasterSecurityContextWindowsOptions",
          },
        },
      ],
    },
    "jenkinsio.JenkinsSpecMasterSecurityContextSeLinuxOptions": Object {
      "assembly": "jenkinsio",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "JenkinsSpecMasterSecurityContextSeLinuxOptions",
        },
        "remarks": "If unspecified, the container runtime will allocate a random SELinux context for each container.  May also be set in SecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence for that container.",
        "summary": "The SELinux context to be applied to all containers.",
      },
      "fqn": "jenkinsio.JenkinsSpecMasterSecurityContextSeLinuxOptions",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "jenkins.io.ts",
        "line": 2567,
      },
      "name": "JenkinsSpecMasterSecurityContextSeLinuxOptions",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "JenkinsSpecMasterSecurityContextSeLinuxOptions#level",
            },
            "summary": "Level is SELinux level label that applies to the container.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "jenkins.io.ts",
            "line": 2573,
          },
          "name": "level",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "JenkinsSpecMasterSecurityContextSeLinuxOptions#role",
            },
            "summary": "Role is a SELinux role label that applies to the container.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "jenkins.io.ts",
            "line": 2580,
          },
          "name": "role",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "JenkinsSpecMasterSecurityContextSeLinuxOptions#type",
            },
            "summary": "Type is a SELinux type label that applies to the container.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "jenkins.io.ts",
            "line": 2587,
          },
          "name": "type",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "JenkinsSpecMasterSecurityContextSeLinuxOptions#user",
            },
            "summary": "User is a SELinux user label that applies to the container.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "jenkins.io.ts",
            "line": 2594,
          },
          "name": "user",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
      ],
    },
    "jenkinsio.JenkinsSpecMasterSecurityContextSysctls": Object {
      "assembly": "jenkinsio",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "JenkinsSpecMasterSecurityContextSysctls",
        },
        "summary": "Sysctl defines a kernel parameter to be set.",
      },
      "fqn": "jenkinsio.JenkinsSpecMasterSecurityContextSysctls",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "jenkins.io.ts",
        "line": 2620,
      },
      "name": "JenkinsSpecMasterSecurityContextSysctls",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "JenkinsSpecMasterSecurityContextSysctls#name",
            },
            "summary": "Name of a property to set.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "jenkins.io.ts",
            "line": 2626,
          },
          "name": "name",
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "JenkinsSpecMasterSecurityContextSysctls#value",
            },
            "summary": "Value of a property to set.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "jenkins.io.ts",
            "line": 2633,
          },
          "name": "value",
          "type": Object {
            "primitive": "string",
          },
        },
      ],
    },
    "jenkinsio.JenkinsSpecMasterSecurityContextWindowsOptions": Object {
      "assembly": "jenkinsio",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "JenkinsSpecMasterSecurityContextWindowsOptions",
        },
        "remarks": "If unspecified, the options within a container's SecurityContext will be used. If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.",
        "summary": "The Windows specific settings applied to all containers.",
      },
      "fqn": "jenkinsio.JenkinsSpecMasterSecurityContextWindowsOptions",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "jenkins.io.ts",
        "line": 2657,
      },
      "name": "JenkinsSpecMasterSecurityContextWindowsOptions",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "JenkinsSpecMasterSecurityContextWindowsOptions#gmsaCredentialSpec",
            },
            "summary": "GMSACredentialSpec is where the GMSA admission webhook (https://github.com/kubernetes-sigs/windows-gmsa) inlines the contents of the GMSA credential spec named by the GMSACredentialSpecName field. This field is alpha-level and is only honored by servers that enable the WindowsGMSA feature flag.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "jenkins.io.ts",
            "line": 2663,
          },
          "name": "gmsaCredentialSpec",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "JenkinsSpecMasterSecurityContextWindowsOptions#gmsaCredentialSpecName",
            },
            "remarks": "This field is alpha-level and is only honored by servers that enable the WindowsGMSA feature flag.",
            "summary": "GMSACredentialSpecName is the name of the GMSA credential spec to use.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "jenkins.io.ts",
            "line": 2670,
          },
          "name": "gmsaCredentialSpecName",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "JenkinsSpecMasterSecurityContextWindowsOptions#runAsUserName",
            },
            "default": "the user specified in image metadata if unspecified. May also be set in PodSecurityContext. If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence. This field is alpha-level and it is only honored by servers that enable the WindowsRunAsUserName feature flag.",
            "remarks": "Defaults to the user specified in image metadata if unspecified. May also be set in PodSecurityContext. If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence. This field is alpha-level and it is only honored by servers that enable the WindowsRunAsUserName feature flag.",
            "summary": "The UserName in Windows to run the entrypoint of the container process.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "jenkins.io.ts",
            "line": 2678,
          },
          "name": "runAsUserName",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
      ],
    },
    "jenkinsio.JenkinsSpecMasterTolerations": Object {
      "assembly": "jenkinsio",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "JenkinsSpecMasterTolerations",
        },
        "summary": "The pod this Toleration is attached to tolerates any taint that matches the triple <key,value,effect> using the matching operator <operator>.",
      },
      "fqn": "jenkinsio.JenkinsSpecMasterTolerations",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "jenkins.io.ts",
        "line": 1440,
      },
      "name": "JenkinsSpecMasterTolerations",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "JenkinsSpecMasterTolerations#effect",
            },
            "remarks": "Empty means match all taint effects. When specified, allowed values are NoSchedule, PreferNoSchedule and NoExecute.",
            "summary": "Effect indicates the taint effect to match.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "jenkins.io.ts",
            "line": 1446,
          },
          "name": "effect",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "JenkinsSpecMasterTolerations#key",
            },
            "remarks": "Empty means match all taint keys. If the key is empty, operator must be Exists; this combination means to match all values and all keys.",
            "summary": "Key is the taint key that the toleration applies to.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "jenkins.io.ts",
            "line": 1453,
          },
          "name": "key",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "JenkinsSpecMasterTolerations#operator",
            },
            "default": "Equal. Exists is equivalent to wildcard for value, so that a pod can tolerate all taints of a particular category.",
            "remarks": "Valid operators are Exists and Equal. Defaults to Equal. Exists is equivalent to wildcard for value, so that a pod can tolerate all taints of a particular category.",
            "summary": "Operator represents a key's relationship to the value.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "jenkins.io.ts",
            "line": 1461,
          },
          "name": "operator",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "JenkinsSpecMasterTolerations#tolerationSeconds",
            },
            "remarks": "By default, it is not set, which means tolerate the taint forever (do not evict). Zero and negative values will be treated as 0 (evict immediately) by the system.",
            "summary": "TolerationSeconds represents the period of time the toleration (which must be of effect NoExecute, otherwise this field is ignored) tolerates the taint.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "jenkins.io.ts",
            "line": 1468,
          },
          "name": "tolerationSeconds",
          "optional": true,
          "type": Object {
            "primitive": "number",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "JenkinsSpecMasterTolerations#value",
            },
            "remarks": "If the operator is Exists, the value should be empty, otherwise just a regular string.",
            "summary": "Value is the taint value the toleration matches to.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "jenkins.io.ts",
            "line": 1475,
          },
          "name": "value",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
      ],
    },
    "jenkinsio.JenkinsSpecMasterVolumes": Object {
      "assembly": "jenkinsio",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "JenkinsSpecMasterVolumes",
        },
        "summary": "Volume represents a named volume in a pod that may be accessed by any container in the pod.",
      },
      "fqn": "jenkinsio.JenkinsSpecMasterVolumes",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "jenkins.io.ts",
        "line": 1502,
      },
      "name": "JenkinsSpecMasterVolumes",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "JenkinsSpecMasterVolumes#name",
            },
            "remarks": "Must be a DNS_LABEL and unique within the pod. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
            "summary": "Volume's name.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "jenkins.io.ts",
            "line": 1627,
          },
          "name": "name",
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "JenkinsSpecMasterVolumes#awsElasticBlockStore",
            },
            "remarks": "More info: https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore",
            "summary": "AWSElasticBlockStore represents an AWS Disk resource that is attached to a kubelet's host machine and then exposed to the pod.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "jenkins.io.ts",
            "line": 1508,
          },
          "name": "awsElasticBlockStore",
          "optional": true,
          "type": Object {
            "fqn": "jenkinsio.JenkinsSpecMasterVolumesAwsElasticBlockStore",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "JenkinsSpecMasterVolumes#azureDisk",
            },
            "summary": "AzureDisk represents an Azure Data Disk mount on the host and bind mount to the pod.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "jenkins.io.ts",
            "line": 1515,
          },
          "name": "azureDisk",
          "optional": true,
          "type": Object {
            "fqn": "jenkinsio.JenkinsSpecMasterVolumesAzureDisk",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "JenkinsSpecMasterVolumes#azureFile",
            },
            "summary": "AzureFile represents an Azure File Service mount on the host and bind mount to the pod.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "jenkins.io.ts",
            "line": 1522,
          },
          "name": "azureFile",
          "optional": true,
          "type": Object {
            "fqn": "jenkinsio.JenkinsSpecMasterVolumesAzureFile",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "JenkinsSpecMasterVolumes#cephfs",
            },
            "summary": "CephFS represents a Ceph FS mount on the host that shares a pod's lifetime.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "jenkins.io.ts",
            "line": 1529,
          },
          "name": "cephfs",
          "optional": true,
          "type": Object {
            "fqn": "jenkinsio.JenkinsSpecMasterVolumesCephfs",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "JenkinsSpecMasterVolumes#cinder",
            },
            "remarks": "More info: https://examples.k8s.io/mysql-cinder-pd/README.md",
            "summary": "Cinder represents a cinder volume attached and mounted on kubelets host machine.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "jenkins.io.ts",
            "line": 1536,
          },
          "name": "cinder",
          "optional": true,
          "type": Object {
            "fqn": "jenkinsio.JenkinsSpecMasterVolumesCinder",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "JenkinsSpecMasterVolumes#configMap",
            },
            "summary": "ConfigMap represents a configMap that should populate this volume.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "jenkins.io.ts",
            "line": 1543,
          },
          "name": "configMap",
          "optional": true,
          "type": Object {
            "fqn": "jenkinsio.JenkinsSpecMasterVolumesConfigMap",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "JenkinsSpecMasterVolumes#csi",
            },
            "summary": "CSI (Container Storage Interface) represents storage that is handled by an external CSI driver (Alpha feature).",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "jenkins.io.ts",
            "line": 1550,
          },
          "name": "csi",
          "optional": true,
          "type": Object {
            "fqn": "jenkinsio.JenkinsSpecMasterVolumesCsi",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "JenkinsSpecMasterVolumes#downwardAPI",
            },
            "summary": "DownwardAPI represents downward API about the pod that should populate this volume.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "jenkins.io.ts",
            "line": 1557,
          },
          "name": "downwardApi",
          "optional": true,
          "type": Object {
            "fqn": "jenkinsio.JenkinsSpecMasterVolumesDownwardApi",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "JenkinsSpecMasterVolumes#emptyDir",
            },
            "remarks": "More info: https://kubernetes.io/docs/concepts/storage/volumes#emptydir",
            "summary": "EmptyDir represents a temporary directory that shares a pod's lifetime.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "jenkins.io.ts",
            "line": 1564,
          },
          "name": "emptyDir",
          "optional": true,
          "type": Object {
            "fqn": "jenkinsio.JenkinsSpecMasterVolumesEmptyDir",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "JenkinsSpecMasterVolumes#fc",
            },
            "summary": "FC represents a Fibre Channel resource that is attached to a kubelet's host machine and then exposed to the pod.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "jenkins.io.ts",
            "line": 1571,
          },
          "name": "fc",
          "optional": true,
          "type": Object {
            "fqn": "jenkinsio.JenkinsSpecMasterVolumesFc",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "JenkinsSpecMasterVolumes#flexVolume",
            },
            "summary": "FlexVolume represents a generic volume resource that is provisioned/attached using an exec based plugin.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "jenkins.io.ts",
            "line": 1578,
          },
          "name": "flexVolume",
          "optional": true,
          "type": Object {
            "fqn": "jenkinsio.JenkinsSpecMasterVolumesFlexVolume",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "JenkinsSpecMasterVolumes#flocker",
            },
            "remarks": "This depends on the Flocker control service being running",
            "summary": "Flocker represents a Flocker volume attached to a kubelet's host machine.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "jenkins.io.ts",
            "line": 1585,
          },
          "name": "flocker",
          "optional": true,
          "type": Object {
            "fqn": "jenkinsio.JenkinsSpecMasterVolumesFlocker",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "JenkinsSpecMasterVolumes#gcePersistentDisk",
            },
            "remarks": "More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk",
            "summary": "GCEPersistentDisk represents a GCE Disk resource that is attached to a kubelet's host machine and then exposed to the pod.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "jenkins.io.ts",
            "line": 1592,
          },
          "name": "gcePersistentDisk",
          "optional": true,
          "type": Object {
            "fqn": "jenkinsio.JenkinsSpecMasterVolumesGcePersistentDisk",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "JenkinsSpecMasterVolumes#gitRepo",
            },
            "remarks": "DEPRECATED: GitRepo is deprecated. To provision a container with a git repo, mount an EmptyDir into an InitContainer that clones the repo using git, then mount the EmptyDir into the Pod's container.",
            "summary": "GitRepo represents a git repository at a particular revision.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "jenkins.io.ts",
            "line": 1599,
          },
          "name": "gitRepo",
          "optional": true,
          "type": Object {
            "fqn": "jenkinsio.JenkinsSpecMasterVolumesGitRepo",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "JenkinsSpecMasterVolumes#glusterfs",
            },
            "remarks": "More info: https://examples.k8s.io/volumes/glusterfs/README.md",
            "summary": "Glusterfs represents a Glusterfs mount on the host that shares a pod's lifetime.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "jenkins.io.ts",
            "line": 1606,
          },
          "name": "glusterfs",
          "optional": true,
          "type": Object {
            "fqn": "jenkinsio.JenkinsSpecMasterVolumesGlusterfs",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "JenkinsSpecMasterVolumes#hostPath",
            },
            "remarks": "This is generally used for system agents or other privileged things that are allowed to see the host machine. Most containers will NOT need this. More info: https://kubernetes.io/docs/concepts/storage/volumes#hostpath --- TODO(jonesdl) We need to restrict who can use host directory mounts and who can/can not mount host directories as read/write.",
            "summary": "HostPath represents a pre-existing file or directory on the host machine that is directly exposed to the container.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "jenkins.io.ts",
            "line": 1613,
          },
          "name": "hostPath",
          "optional": true,
          "type": Object {
            "fqn": "jenkinsio.JenkinsSpecMasterVolumesHostPath",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "JenkinsSpecMasterVolumes#iscsi",
            },
            "remarks": "More info: https://examples.k8s.io/volumes/iscsi/README.md",
            "summary": "ISCSI represents an ISCSI Disk resource that is attached to a kubelet's host machine and then exposed to the pod.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "jenkins.io.ts",
            "line": 1620,
          },
          "name": "iscsi",
          "optional": true,
          "type": Object {
            "fqn": "jenkinsio.JenkinsSpecMasterVolumesIscsi",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "JenkinsSpecMasterVolumes#nfs",
            },
            "summary": "NFS represents an NFS mount on the host that shares a pod's lifetime More info: https://kubernetes.io/docs/concepts/storage/volumes#nfs.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "jenkins.io.ts",
            "line": 1634,
          },
          "name": "nfs",
          "optional": true,
          "type": Object {
            "fqn": "jenkinsio.JenkinsSpecMasterVolumesNfs",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "JenkinsSpecMasterVolumes#persistentVolumeClaim",
            },
            "remarks": "More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims",
            "summary": "PersistentVolumeClaimVolumeSource represents a reference to a PersistentVolumeClaim in the same namespace.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "jenkins.io.ts",
            "line": 1641,
          },
          "name": "persistentVolumeClaim",
          "optional": true,
          "type": Object {
            "fqn": "jenkinsio.JenkinsSpecMasterVolumesPersistentVolumeClaim",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "JenkinsSpecMasterVolumes#photonPersistentDisk",
            },
            "summary": "PhotonPersistentDisk represents a PhotonController persistent disk attached and mounted on kubelets host machine.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "jenkins.io.ts",
            "line": 1648,
          },
          "name": "photonPersistentDisk",
          "optional": true,
          "type": Object {
            "fqn": "jenkinsio.JenkinsSpecMasterVolumesPhotonPersistentDisk",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "JenkinsSpecMasterVolumes#portworxVolume",
            },
            "summary": "PortworxVolume represents a portworx volume attached and mounted on kubelets host machine.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "jenkins.io.ts",
            "line": 1655,
          },
          "name": "portworxVolume",
          "optional": true,
          "type": Object {
            "fqn": "jenkinsio.JenkinsSpecMasterVolumesPortworxVolume",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "JenkinsSpecMasterVolumes#projected",
            },
            "summary": "Items for all in one resources secrets, configmaps, and downward API.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "jenkins.io.ts",
            "line": 1662,
          },
          "name": "projected",
          "optional": true,
          "type": Object {
            "fqn": "jenkinsio.JenkinsSpecMasterVolumesProjected",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "JenkinsSpecMasterVolumes#quobyte",
            },
            "summary": "Quobyte represents a Quobyte mount on the host that shares a pod's lifetime.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "jenkins.io.ts",
            "line": 1669,
          },
          "name": "quobyte",
          "optional": true,
          "type": Object {
            "fqn": "jenkinsio.JenkinsSpecMasterVolumesQuobyte",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "JenkinsSpecMasterVolumes#rbd",
            },
            "remarks": "More info: https://examples.k8s.io/volumes/rbd/README.md",
            "summary": "RBD represents a Rados Block Device mount on the host that shares a pod's lifetime.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "jenkins.io.ts",
            "line": 1676,
          },
          "name": "rbd",
          "optional": true,
          "type": Object {
            "fqn": "jenkinsio.JenkinsSpecMasterVolumesRbd",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "JenkinsSpecMasterVolumes#scaleIO",
            },
            "summary": "ScaleIO represents a ScaleIO persistent volume attached and mounted on Kubernetes nodes.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "jenkins.io.ts",
            "line": 1683,
          },
          "name": "scaleIo",
          "optional": true,
          "type": Object {
            "fqn": "jenkinsio.JenkinsSpecMasterVolumesScaleIo",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "JenkinsSpecMasterVolumes#secret",
            },
            "remarks": "More info: https://kubernetes.io/docs/concepts/storage/volumes#secret",
            "summary": "Secret represents a secret that should populate this volume.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "jenkins.io.ts",
            "line": 1690,
          },
          "name": "secret",
          "optional": true,
          "type": Object {
            "fqn": "jenkinsio.JenkinsSpecMasterVolumesSecret",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "JenkinsSpecMasterVolumes#storageos",
            },
            "summary": "StorageOS represents a StorageOS volume attached and mounted on Kubernetes nodes.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "jenkins.io.ts",
            "line": 1697,
          },
          "name": "storageos",
          "optional": true,
          "type": Object {
            "fqn": "jenkinsio.JenkinsSpecMasterVolumesStorageos",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "JenkinsSpecMasterVolumes#vsphereVolume",
            },
            "summary": "VsphereVolume represents a vSphere volume attached and mounted on kubelets host machine.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "jenkins.io.ts",
            "line": 1704,
          },
          "name": "vsphereVolume",
          "optional": true,
          "type": Object {
            "fqn": "jenkinsio.JenkinsSpecMasterVolumesVsphereVolume",
          },
        },
      ],
    },
    "jenkinsio.JenkinsSpecMasterVolumesAwsElasticBlockStore": Object {
      "assembly": "jenkinsio",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "JenkinsSpecMasterVolumesAwsElasticBlockStore",
        },
        "remarks": "More info: https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore",
        "summary": "AWSElasticBlockStore represents an AWS Disk resource that is attached to a kubelet's host machine and then exposed to the pod.",
      },
      "fqn": "jenkinsio.JenkinsSpecMasterVolumesAwsElasticBlockStore",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "jenkins.io.ts",
        "line": 2703,
      },
      "name": "JenkinsSpecMasterVolumesAwsElasticBlockStore",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "JenkinsSpecMasterVolumesAwsElasticBlockStore#volumeID",
            },
            "remarks": "More info: https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore",
            "summary": "Unique ID of the persistent disk resource in AWS (Amazon EBS volume).",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "jenkins.io.ts",
            "line": 2730,
          },
          "name": "volumeId",
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "JenkinsSpecMasterVolumesAwsElasticBlockStore#fsType",
            },
            "remarks": "Tip: Ensure that the filesystem type is supported by the host operating system. Examples: \\"ext4\\", \\"xfs\\", \\"ntfs\\". Implicitly inferred to be \\"ext4\\" if unspecified. More info: https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore TODO: how do we prevent errors in the filesystem from compromising the machine",
            "summary": "Filesystem type of the volume that you want to mount.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "jenkins.io.ts",
            "line": 2709,
          },
          "name": "fsType",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "JenkinsSpecMasterVolumesAwsElasticBlockStore#partition",
            },
            "remarks": "If omitted, the default is to mount by volume name. Examples: For volume /dev/sda1, you specify the partition as \\"1\\". Similarly, the volume partition for /dev/sda is \\"0\\" (or you can leave the property empty).",
            "summary": "The partition in the volume that you want to mount.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "jenkins.io.ts",
            "line": 2716,
          },
          "name": "partition",
          "optional": true,
          "type": Object {
            "primitive": "number",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "JenkinsSpecMasterVolumesAwsElasticBlockStore#readOnly",
            },
            "remarks": "If omitted, the default is \\"false\\". More info: https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore",
            "summary": "Specify \\"true\\" to force and set the ReadOnly property in VolumeMounts to \\"true\\".",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "jenkins.io.ts",
            "line": 2723,
          },
          "name": "readOnly",
          "optional": true,
          "type": Object {
            "primitive": "boolean",
          },
        },
      ],
    },
    "jenkinsio.JenkinsSpecMasterVolumesAzureDisk": Object {
      "assembly": "jenkinsio",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "JenkinsSpecMasterVolumesAzureDisk",
        },
        "summary": "AzureDisk represents an Azure Data Disk mount on the host and bind mount to the pod.",
      },
      "fqn": "jenkinsio.JenkinsSpecMasterVolumesAzureDisk",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "jenkins.io.ts",
        "line": 2756,
      },
      "name": "JenkinsSpecMasterVolumesAzureDisk",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "JenkinsSpecMasterVolumesAzureDisk#diskName",
            },
            "summary": "The Name of the data disk in the blob storage.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "jenkins.io.ts",
            "line": 2769,
          },
          "name": "diskName",
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "JenkinsSpecMasterVolumesAzureDisk#diskURI",
            },
            "summary": "The URI the data disk in the blob storage.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "jenkins.io.ts",
            "line": 2776,
          },
          "name": "diskUri",
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "JenkinsSpecMasterVolumesAzureDisk#cachingMode",
            },
            "summary": "Host Caching mode: None, Read Only, Read Write.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "jenkins.io.ts",
            "line": 2762,
          },
          "name": "cachingMode",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "JenkinsSpecMasterVolumesAzureDisk#fsType",
            },
            "remarks": "Must be a filesystem type supported by the host operating system. Ex. \\"ext4\\", \\"xfs\\", \\"ntfs\\". Implicitly inferred to be \\"ext4\\" if unspecified.",
            "summary": "Filesystem type to mount.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "jenkins.io.ts",
            "line": 2783,
          },
          "name": "fsType",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "JenkinsSpecMasterVolumesAzureDisk#kind",
            },
            "remarks": "defaults to shared",
            "summary": "Expected values Shared: multiple blob disks per storage account  Dedicated: single blob disk per storage account  Managed: azure managed data disk (only in managed availability set).",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "jenkins.io.ts",
            "line": 2790,
          },
          "name": "kind",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "JenkinsSpecMasterVolumesAzureDisk#readOnly",
            },
            "default": "false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts.",
            "remarks": "ReadOnly here will force the ReadOnly setting in VolumeMounts.",
            "summary": "Defaults to false (read/write).",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "jenkins.io.ts",
            "line": 2798,
          },
          "name": "readOnly",
          "optional": true,
          "type": Object {
            "primitive": "boolean",
          },
        },
      ],
    },
    "jenkinsio.JenkinsSpecMasterVolumesAzureFile": Object {
      "assembly": "jenkinsio",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "JenkinsSpecMasterVolumesAzureFile",
        },
        "summary": "AzureFile represents an Azure File Service mount on the host and bind mount to the pod.",
      },
      "fqn": "jenkinsio.JenkinsSpecMasterVolumesAzureFile",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "jenkins.io.ts",
        "line": 2826,
      },
      "name": "JenkinsSpecMasterVolumesAzureFile",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "JenkinsSpecMasterVolumesAzureFile#secretName",
            },
            "summary": "the name of secret that contains Azure Storage Account Name and Key.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "jenkins.io.ts",
            "line": 2840,
          },
          "name": "secretName",
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "JenkinsSpecMasterVolumesAzureFile#shareName",
            },
            "summary": "Share Name.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "jenkins.io.ts",
            "line": 2847,
          },
          "name": "shareName",
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "JenkinsSpecMasterVolumesAzureFile#readOnly",
            },
            "default": "false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts.",
            "remarks": "ReadOnly here will force the ReadOnly setting in VolumeMounts.",
            "summary": "Defaults to false (read/write).",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "jenkins.io.ts",
            "line": 2833,
          },
          "name": "readOnly",
          "optional": true,
          "type": Object {
            "primitive": "boolean",
          },
        },
      ],
    },
    "jenkinsio.JenkinsSpecMasterVolumesCephfs": Object {
      "assembly": "jenkinsio",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "JenkinsSpecMasterVolumesCephfs",
        },
        "summary": "CephFS represents a Ceph FS mount on the host that shares a pod's lifetime.",
      },
      "fqn": "jenkinsio.JenkinsSpecMasterVolumesCephfs",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "jenkins.io.ts",
        "line": 2872,
      },
      "name": "JenkinsSpecMasterVolumesCephfs",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "JenkinsSpecMasterVolumesCephfs#monitors",
            },
            "summary": "Required: Monitors is a collection of Ceph monitors More info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "jenkins.io.ts",
            "line": 2878,
          },
          "name": "monitors",
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "primitive": "string",
              },
              "kind": "array",
            },
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "JenkinsSpecMasterVolumesCephfs#path",
            },
            "summary": "Optional: Used as the mounted root, rather than the full Ceph tree, default is /.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "jenkins.io.ts",
            "line": 2885,
          },
          "name": "path",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "JenkinsSpecMasterVolumesCephfs#readOnly",
            },
            "default": "false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts. More info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it",
            "remarks": "ReadOnly here will force the ReadOnly setting in VolumeMounts. More info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it",
            "summary": "Optional: Defaults to false (read/write).",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "jenkins.io.ts",
            "line": 2893,
          },
          "name": "readOnly",
          "optional": true,
          "type": Object {
            "primitive": "boolean",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "JenkinsSpecMasterVolumesCephfs#secretFile",
            },
            "summary": "Optional: SecretFile is the path to key ring for User, default is /etc/ceph/user.secret More info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "jenkins.io.ts",
            "line": 2900,
          },
          "name": "secretFile",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "JenkinsSpecMasterVolumesCephfs#secretRef",
            },
            "remarks": "More info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it",
            "summary": "Optional: SecretRef is reference to the authentication secret for User, default is empty.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "jenkins.io.ts",
            "line": 2907,
          },
          "name": "secretRef",
          "optional": true,
          "type": Object {
            "fqn": "jenkinsio.JenkinsSpecMasterVolumesCephfsSecretRef",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "JenkinsSpecMasterVolumesCephfs#user",
            },
            "summary": "Optional: User is the rados user name, default is admin More info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "jenkins.io.ts",
            "line": 2914,
          },
          "name": "user",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
      ],
    },
    "jenkinsio.JenkinsSpecMasterVolumesCephfsSecretRef": Object {
      "assembly": "jenkinsio",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "JenkinsSpecMasterVolumesCephfsSecretRef",
        },
        "remarks": "More info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it",
        "summary": "Optional: SecretRef is reference to the authentication secret for User, default is empty.",
      },
      "fqn": "jenkinsio.JenkinsSpecMasterVolumesCephfsSecretRef",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "jenkins.io.ts",
        "line": 5104,
      },
      "name": "JenkinsSpecMasterVolumesCephfsSecretRef",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "JenkinsSpecMasterVolumesCephfsSecretRef#name",
            },
            "remarks": "More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?",
            "summary": "Name of the referent.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "jenkins.io.ts",
            "line": 5110,
          },
          "name": "name",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
      ],
    },
    "jenkinsio.JenkinsSpecMasterVolumesCinder": Object {
      "assembly": "jenkinsio",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "JenkinsSpecMasterVolumesCinder",
        },
        "remarks": "More info: https://examples.k8s.io/mysql-cinder-pd/README.md",
        "summary": "Cinder represents a cinder volume attached and mounted on kubelets host machine.",
      },
      "fqn": "jenkinsio.JenkinsSpecMasterVolumesCinder",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "jenkins.io.ts",
        "line": 2942,
      },
      "name": "JenkinsSpecMasterVolumesCinder",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "JenkinsSpecMasterVolumesCinder#volumeID",
            },
            "remarks": "More info: https://examples.k8s.io/mysql-cinder-pd/README.md",
            "summary": "volume id used to identify the volume in cinder.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "jenkins.io.ts",
            "line": 2970,
          },
          "name": "volumeId",
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "JenkinsSpecMasterVolumesCinder#fsType",
            },
            "remarks": "Must be a filesystem type supported by the host operating system. Examples: \\"ext4\\", \\"xfs\\", \\"ntfs\\". Implicitly inferred to be \\"ext4\\" if unspecified. More info: https://examples.k8s.io/mysql-cinder-pd/README.md",
            "summary": "Filesystem type to mount.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "jenkins.io.ts",
            "line": 2948,
          },
          "name": "fsType",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "JenkinsSpecMasterVolumesCinder#readOnly",
            },
            "default": "false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts. More info: https://examples.k8s.io/mysql-cinder-pd/README.md",
            "remarks": "ReadOnly here will force the ReadOnly setting in VolumeMounts. More info: https://examples.k8s.io/mysql-cinder-pd/README.md",
            "summary": "Optional: Defaults to false (read/write).",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "jenkins.io.ts",
            "line": 2956,
          },
          "name": "readOnly",
          "optional": true,
          "type": Object {
            "primitive": "boolean",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "JenkinsSpecMasterVolumesCinder#secretRef",
            },
            "summary": "Optional: points to a secret object containing parameters used to connect to OpenStack.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "jenkins.io.ts",
            "line": 2963,
          },
          "name": "secretRef",
          "optional": true,
          "type": Object {
            "fqn": "jenkinsio.JenkinsSpecMasterVolumesCinderSecretRef",
          },
        },
      ],
    },
    "jenkinsio.JenkinsSpecMasterVolumesCinderSecretRef": Object {
      "assembly": "jenkinsio",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "JenkinsSpecMasterVolumesCinderSecretRef",
        },
        "summary": "Optional: points to a secret object containing parameters used to connect to OpenStack.",
      },
      "fqn": "jenkinsio.JenkinsSpecMasterVolumesCinderSecretRef",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "jenkins.io.ts",
        "line": 5133,
      },
      "name": "JenkinsSpecMasterVolumesCinderSecretRef",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "JenkinsSpecMasterVolumesCinderSecretRef#name",
            },
            "remarks": "More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?",
            "summary": "Name of the referent.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "jenkins.io.ts",
            "line": 5139,
          },
          "name": "name",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
      ],
    },
    "jenkinsio.JenkinsSpecMasterVolumesConfigMap": Object {
      "assembly": "jenkinsio",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "JenkinsSpecMasterVolumesConfigMap",
        },
        "summary": "ConfigMap represents a configMap that should populate this volume.",
      },
      "fqn": "jenkinsio.JenkinsSpecMasterVolumesConfigMap",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "jenkins.io.ts",
        "line": 2996,
      },
      "name": "JenkinsSpecMasterVolumesConfigMap",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "JenkinsSpecMasterVolumesConfigMap#defaultMode",
            },
            "default": "0644. Directories within the path are not affected by this setting. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.",
            "remarks": "Must be a value between 0 and 0777. Defaults to 0644. Directories within the path are not affected by this setting. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.",
            "summary": "Optional: mode bits to use on created files by default.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "jenkins.io.ts",
            "line": 3003,
          },
          "name": "defaultMode",
          "optional": true,
          "type": Object {
            "primitive": "number",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "JenkinsSpecMasterVolumesConfigMap#items",
            },
            "remarks": "If specified, the listed keys will be projected into the specified paths, and unlisted keys will not be present. If a key is specified which is not present in the ConfigMap, the volume setup will error unless it is marked optional. Paths must be relative and may not contain the '..' path or start with '..'.",
            "summary": "If unspecified, each key-value pair in the Data field of the referenced ConfigMap will be projected into the volume as a file whose name is the key and content is the value.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "jenkins.io.ts",
            "line": 3010,
          },
          "name": "items",
          "optional": true,
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "fqn": "jenkinsio.JenkinsSpecMasterVolumesConfigMapItems",
              },
              "kind": "array",
            },
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "JenkinsSpecMasterVolumesConfigMap#name",
            },
            "remarks": "More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?",
            "summary": "Name of the referent.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "jenkins.io.ts",
            "line": 3017,
          },
          "name": "name",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "JenkinsSpecMasterVolumesConfigMap#optional",
            },
            "summary": "Specify whether the ConfigMap or its keys must be defined.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "jenkins.io.ts",
            "line": 3024,
          },
          "name": "optional",
          "optional": true,
          "type": Object {
            "primitive": "boolean",
          },
        },
      ],
    },
    "jenkinsio.JenkinsSpecMasterVolumesConfigMapItems": Object {
      "assembly": "jenkinsio",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "JenkinsSpecMasterVolumesConfigMapItems",
        },
        "summary": "Maps a string key to a path within a volume.",
      },
      "fqn": "jenkinsio.JenkinsSpecMasterVolumesConfigMapItems",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "jenkins.io.ts",
        "line": 5162,
      },
      "name": "JenkinsSpecMasterVolumesConfigMapItems",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "JenkinsSpecMasterVolumesConfigMapItems#key",
            },
            "summary": "The key to project.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "jenkins.io.ts",
            "line": 5168,
          },
          "name": "key",
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "JenkinsSpecMasterVolumesConfigMapItems#path",
            },
            "remarks": "May not be an absolute path. May not contain the path element '..'. May not start with the string '..'.",
            "summary": "The relative path of the file to map the key to.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "jenkins.io.ts",
            "line": 5182,
          },
          "name": "path",
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "JenkinsSpecMasterVolumesConfigMapItems#mode",
            },
            "remarks": "If not specified, the volume defaultMode will be used. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.",
            "summary": "Optional: mode bits to use on this file, must be a value between 0 and 0777.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "jenkins.io.ts",
            "line": 5175,
          },
          "name": "mode",
          "optional": true,
          "type": Object {
            "primitive": "number",
          },
        },
      ],
    },
    "jenkinsio.JenkinsSpecMasterVolumesCsi": Object {
      "assembly": "jenkinsio",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "JenkinsSpecMasterVolumesCsi",
        },
        "summary": "CSI (Container Storage Interface) represents storage that is handled by an external CSI driver (Alpha feature).",
      },
      "fqn": "jenkinsio.JenkinsSpecMasterVolumesCsi",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "jenkins.io.ts",
        "line": 3050,
      },
      "name": "JenkinsSpecMasterVolumesCsi",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "JenkinsSpecMasterVolumesCsi#driver",
            },
            "remarks": "Consult with your admin for the correct name as registered in the cluster.",
            "summary": "Driver is the name of the CSI driver that handles this volume.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "jenkins.io.ts",
            "line": 3056,
          },
          "name": "driver",
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "JenkinsSpecMasterVolumesCsi#fsType",
            },
            "remarks": "Ex. \\"ext4\\", \\"xfs\\", \\"ntfs\\". If not provided, the empty value is passed to the associated CSI driver which will determine the default filesystem to apply.",
            "summary": "Filesystem type to mount.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "jenkins.io.ts",
            "line": 3063,
          },
          "name": "fsType",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "JenkinsSpecMasterVolumesCsi#nodePublishSecretRef",
            },
            "remarks": "This field is optional, and  may be empty if no secret is required. If the secret object contains more than one secret, all secret references are passed.",
            "summary": "NodePublishSecretRef is a reference to the secret object containing sensitive information to pass to the CSI driver to complete the CSI NodePublishVolume and NodeUnpublishVolume calls.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "jenkins.io.ts",
            "line": 3070,
          },
          "name": "nodePublishSecretRef",
          "optional": true,
          "type": Object {
            "fqn": "jenkinsio.JenkinsSpecMasterVolumesCsiNodePublishSecretRef",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "JenkinsSpecMasterVolumesCsi#readOnly",
            },
            "default": "false (read/write).",
            "remarks": "Defaults to false (read/write).",
            "summary": "Specifies a read-only configuration for the volume.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "jenkins.io.ts",
            "line": 3078,
          },
          "name": "readOnly",
          "optional": true,
          "type": Object {
            "primitive": "boolean",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "JenkinsSpecMasterVolumesCsi#volumeAttributes",
            },
            "remarks": "Consult your driver's documentation for supported values.",
            "summary": "VolumeAttributes stores driver-specific properties that are passed to the CSI driver.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "jenkins.io.ts",
            "line": 3085,
          },
          "name": "volumeAttributes",
          "optional": true,
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "primitive": "string",
              },
              "kind": "map",
            },
          },
        },
      ],
    },
    "jenkinsio.JenkinsSpecMasterVolumesCsiNodePublishSecretRef": Object {
      "assembly": "jenkinsio",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "JenkinsSpecMasterVolumesCsiNodePublishSecretRef",
        },
        "remarks": "This field is optional, and  may be empty if no secret is required. If the secret object contains more than one secret, all secret references are passed.",
        "summary": "NodePublishSecretRef is a reference to the secret object containing sensitive information to pass to the CSI driver to complete the CSI NodePublishVolume and NodeUnpublishVolume calls.",
      },
      "fqn": "jenkinsio.JenkinsSpecMasterVolumesCsiNodePublishSecretRef",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "jenkins.io.ts",
        "line": 5207,
      },
      "name": "JenkinsSpecMasterVolumesCsiNodePublishSecretRef",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "JenkinsSpecMasterVolumesCsiNodePublishSecretRef#name",
            },
            "remarks": "More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?",
            "summary": "Name of the referent.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "jenkins.io.ts",
            "line": 5213,
          },
          "name": "name",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
      ],
    },
    "jenkinsio.JenkinsSpecMasterVolumesDownwardApi": Object {
      "assembly": "jenkinsio",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "JenkinsSpecMasterVolumesDownwardApi",
        },
        "summary": "DownwardAPI represents downward API about the pod that should populate this volume.",
      },
      "fqn": "jenkinsio.JenkinsSpecMasterVolumesDownwardApi",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "jenkins.io.ts",
        "line": 3112,
      },
      "name": "JenkinsSpecMasterVolumesDownwardApi",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "JenkinsSpecMasterVolumesDownwardApi#defaultMode",
            },
            "default": "0644. Directories within the path are not affected by this setting. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.",
            "remarks": "Must be a value between 0 and 0777. Defaults to 0644. Directories within the path are not affected by this setting. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.",
            "summary": "Optional: mode bits to use on created files by default.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "jenkins.io.ts",
            "line": 3119,
          },
          "name": "defaultMode",
          "optional": true,
          "type": Object {
            "primitive": "number",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "JenkinsSpecMasterVolumesDownwardApi#items",
            },
            "summary": "Items is a list of downward API volume file.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "jenkins.io.ts",
            "line": 3126,
          },
          "name": "items",
          "optional": true,
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "fqn": "jenkinsio.JenkinsSpecMasterVolumesDownwardApiItems",
              },
              "kind": "array",
            },
          },
        },
      ],
    },
    "jenkinsio.JenkinsSpecMasterVolumesDownwardApiItems": Object {
      "assembly": "jenkinsio",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "JenkinsSpecMasterVolumesDownwardApiItems",
        },
        "summary": "DownwardAPIVolumeFile represents information to create the file containing the pod field.",
      },
      "fqn": "jenkinsio.JenkinsSpecMasterVolumesDownwardApiItems",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "jenkins.io.ts",
        "line": 5236,
      },
      "name": "JenkinsSpecMasterVolumesDownwardApiItems",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "JenkinsSpecMasterVolumesDownwardApiItems#path",
            },
            "remarks": "Must not be absolute or contain the '..' path. Must be utf-8 encoded. The first item of the relative path must not start with '..'",
            "summary": "Required: Path is  the relative path name of the file to be created.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "jenkins.io.ts",
            "line": 5256,
          },
          "name": "path",
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "JenkinsSpecMasterVolumesDownwardApiItems#fieldRef",
            },
            "summary": "Required: Selects a field of the pod: only annotations, labels, name and namespace are supported.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "jenkins.io.ts",
            "line": 5242,
          },
          "name": "fieldRef",
          "optional": true,
          "type": Object {
            "fqn": "jenkinsio.JenkinsSpecMasterVolumesDownwardApiItemsFieldRef",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "JenkinsSpecMasterVolumesDownwardApiItems#mode",
            },
            "remarks": "If not specified, the volume defaultMode will be used. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.",
            "summary": "Optional: mode bits to use on this file, must be a value between 0 and 0777.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "jenkins.io.ts",
            "line": 5249,
          },
          "name": "mode",
          "optional": true,
          "type": Object {
            "primitive": "number",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "JenkinsSpecMasterVolumesDownwardApiItems#resourceFieldRef",
            },
            "summary": "Selects a resource of the container: only resources limits and requests (limits.cpu, limits.memory, requests.cpu and requests.memory) are currently supported.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "jenkins.io.ts",
            "line": 5263,
          },
          "name": "resourceFieldRef",
          "optional": true,
          "type": Object {
            "fqn": "jenkinsio.JenkinsSpecMasterVolumesDownwardApiItemsResourceFieldRef",
          },
        },
      ],
    },
    "jenkinsio.JenkinsSpecMasterVolumesDownwardApiItemsFieldRef": Object {
      "assembly": "jenkinsio",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "JenkinsSpecMasterVolumesDownwardApiItemsFieldRef",
        },
        "summary": "Required: Selects a field of the pod: only annotations, labels, name and namespace are supported.",
      },
      "fqn": "jenkinsio.JenkinsSpecMasterVolumesDownwardApiItemsFieldRef",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "jenkins.io.ts",
        "line": 6248,
      },
      "name": "JenkinsSpecMasterVolumesDownwardApiItemsFieldRef",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "JenkinsSpecMasterVolumesDownwardApiItemsFieldRef#fieldPath",
            },
            "summary": "Path of the field to select in the specified API version.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "jenkins.io.ts",
            "line": 6261,
          },
          "name": "fieldPath",
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "JenkinsSpecMasterVolumesDownwardApiItemsFieldRef#apiVersion",
            },
            "summary": "Version of the schema the FieldPath is written in terms of, defaults to \\"v1\\".",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "jenkins.io.ts",
            "line": 6254,
          },
          "name": "apiVersion",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
      ],
    },
    "jenkinsio.JenkinsSpecMasterVolumesDownwardApiItemsResourceFieldRef": Object {
      "assembly": "jenkinsio",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "JenkinsSpecMasterVolumesDownwardApiItemsResourceFieldRef",
        },
        "summary": "Selects a resource of the container: only resources limits and requests (limits.cpu, limits.memory, requests.cpu and requests.memory) are currently supported.",
      },
      "fqn": "jenkinsio.JenkinsSpecMasterVolumesDownwardApiItemsResourceFieldRef",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "jenkins.io.ts",
        "line": 6285,
      },
      "name": "JenkinsSpecMasterVolumesDownwardApiItemsResourceFieldRef",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "JenkinsSpecMasterVolumesDownwardApiItemsResourceFieldRef#resource",
            },
            "summary": "Required: resource to select.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "jenkins.io.ts",
            "line": 6305,
          },
          "name": "resource",
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "JenkinsSpecMasterVolumesDownwardApiItemsResourceFieldRef#containerName",
            },
            "summary": "Container name: required for volumes, optional for env vars.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "jenkins.io.ts",
            "line": 6291,
          },
          "name": "containerName",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "JenkinsSpecMasterVolumesDownwardApiItemsResourceFieldRef#divisor",
            },
            "summary": "Specifies the output format of the exposed resources, defaults to \\"1\\".",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "jenkins.io.ts",
            "line": 6298,
          },
          "name": "divisor",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
      ],
    },
    "jenkinsio.JenkinsSpecMasterVolumesEmptyDir": Object {
      "assembly": "jenkinsio",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "JenkinsSpecMasterVolumesEmptyDir",
        },
        "remarks": "More info: https://kubernetes.io/docs/concepts/storage/volumes#emptydir",
        "summary": "EmptyDir represents a temporary directory that shares a pod's lifetime.",
      },
      "fqn": "jenkinsio.JenkinsSpecMasterVolumesEmptyDir",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "jenkins.io.ts",
        "line": 3150,
      },
      "name": "JenkinsSpecMasterVolumesEmptyDir",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "JenkinsSpecMasterVolumesEmptyDir#medium",
            },
            "remarks": "The default is \\"\\" which means to use the node's default medium. Must be an empty string (default) or Memory. More info: https://kubernetes.io/docs/concepts/storage/volumes#emptydir",
            "summary": "What type of storage medium should back this directory.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "jenkins.io.ts",
            "line": 3156,
          },
          "name": "medium",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "JenkinsSpecMasterVolumesEmptyDir#sizeLimit",
            },
            "remarks": "The size limit is also applicable for memory medium. The maximum usage on memory medium EmptyDir would be the minimum value between the SizeLimit specified here and the sum of memory limits of all containers in a pod. The default is nil which means that the limit is undefined. More info: http://kubernetes.io/docs/user-guide/volumes#emptydir",
            "summary": "Total amount of local storage required for this EmptyDir volume.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "jenkins.io.ts",
            "line": 3163,
          },
          "name": "sizeLimit",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
      ],
    },
    "jenkinsio.JenkinsSpecMasterVolumesFc": Object {
      "assembly": "jenkinsio",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "JenkinsSpecMasterVolumesFc",
        },
        "summary": "FC represents a Fibre Channel resource that is attached to a kubelet's host machine and then exposed to the pod.",
      },
      "fqn": "jenkinsio.JenkinsSpecMasterVolumesFc",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "jenkins.io.ts",
        "line": 3187,
      },
      "name": "JenkinsSpecMasterVolumesFc",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "JenkinsSpecMasterVolumesFc#fsType",
            },
            "remarks": "Must be a filesystem type supported by the host operating system. Ex. \\"ext4\\", \\"xfs\\", \\"ntfs\\". Implicitly inferred to be \\"ext4\\" if unspecified. TODO: how do we prevent errors in the filesystem from compromising the machine",
            "summary": "Filesystem type to mount.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "jenkins.io.ts",
            "line": 3193,
          },
          "name": "fsType",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "JenkinsSpecMasterVolumesFc#lun",
            },
            "summary": "Optional: FC target lun number.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "jenkins.io.ts",
            "line": 3200,
          },
          "name": "lun",
          "optional": true,
          "type": Object {
            "primitive": "number",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "JenkinsSpecMasterVolumesFc#readOnly",
            },
            "default": "false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts.",
            "remarks": "ReadOnly here will force the ReadOnly setting in VolumeMounts.",
            "summary": "Optional: Defaults to false (read/write).",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "jenkins.io.ts",
            "line": 3208,
          },
          "name": "readOnly",
          "optional": true,
          "type": Object {
            "primitive": "boolean",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "JenkinsSpecMasterVolumesFc#targetWWNs",
            },
            "summary": "Optional: FC target worldwide names (WWNs).",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "jenkins.io.ts",
            "line": 3215,
          },
          "name": "targetWwNs",
          "optional": true,
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "primitive": "string",
              },
              "kind": "array",
            },
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "JenkinsSpecMasterVolumesFc#wwids",
            },
            "summary": "Optional: FC volume world wide identifiers (wwids) Either wwids or combination of targetWWNs and lun must be set, but not both simultaneously.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "jenkins.io.ts",
            "line": 3222,
          },
          "name": "wwids",
          "optional": true,
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "primitive": "string",
              },
              "kind": "array",
            },
          },
        },
      ],
    },
    "jenkinsio.JenkinsSpecMasterVolumesFlexVolume": Object {
      "assembly": "jenkinsio",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "JenkinsSpecMasterVolumesFlexVolume",
        },
        "summary": "FlexVolume represents a generic volume resource that is provisioned/attached using an exec based plugin.",
      },
      "fqn": "jenkinsio.JenkinsSpecMasterVolumesFlexVolume",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "jenkins.io.ts",
        "line": 3249,
      },
      "name": "JenkinsSpecMasterVolumesFlexVolume",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "JenkinsSpecMasterVolumesFlexVolume#driver",
            },
            "summary": "Driver is the name of the driver to use for this volume.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "jenkins.io.ts",
            "line": 3255,
          },
          "name": "driver",
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "JenkinsSpecMasterVolumesFlexVolume#fsType",
            },
            "remarks": "Must be a filesystem type supported by the host operating system. Ex. \\"ext4\\", \\"xfs\\", \\"ntfs\\". The default filesystem depends on FlexVolume script.",
            "summary": "Filesystem type to mount.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "jenkins.io.ts",
            "line": 3262,
          },
          "name": "fsType",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "JenkinsSpecMasterVolumesFlexVolume#options",
            },
            "summary": "Optional: Extra command options if any.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "jenkins.io.ts",
            "line": 3269,
          },
          "name": "options",
          "optional": true,
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "primitive": "string",
              },
              "kind": "map",
            },
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "JenkinsSpecMasterVolumesFlexVolume#readOnly",
            },
            "default": "false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts.",
            "remarks": "ReadOnly here will force the ReadOnly setting in VolumeMounts.",
            "summary": "Optional: Defaults to false (read/write).",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "jenkins.io.ts",
            "line": 3277,
          },
          "name": "readOnly",
          "optional": true,
          "type": Object {
            "primitive": "boolean",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "JenkinsSpecMasterVolumesFlexVolume#secretRef",
            },
            "remarks": "This may be empty if no secret object is specified. If the secret object contains more than one secret, all secrets are passed to the plugin scripts.",
            "summary": "Optional: SecretRef is reference to the secret object containing sensitive information to pass to the plugin scripts.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "jenkins.io.ts",
            "line": 3284,
          },
          "name": "secretRef",
          "optional": true,
          "type": Object {
            "fqn": "jenkinsio.JenkinsSpecMasterVolumesFlexVolumeSecretRef",
          },
        },
      ],
    },
    "jenkinsio.JenkinsSpecMasterVolumesFlexVolumeSecretRef": Object {
      "assembly": "jenkinsio",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "JenkinsSpecMasterVolumesFlexVolumeSecretRef",
        },
        "remarks": "This may be empty if no secret object is specified. If the secret object contains more than one secret, all secrets are passed to the plugin scripts.",
        "summary": "Optional: SecretRef is reference to the secret object containing sensitive information to pass to the plugin scripts.",
      },
      "fqn": "jenkinsio.JenkinsSpecMasterVolumesFlexVolumeSecretRef",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "jenkins.io.ts",
        "line": 5289,
      },
      "name": "JenkinsSpecMasterVolumesFlexVolumeSecretRef",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "JenkinsSpecMasterVolumesFlexVolumeSecretRef#name",
            },
            "remarks": "More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?",
            "summary": "Name of the referent.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "jenkins.io.ts",
            "line": 5295,
          },
          "name": "name",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
      ],
    },
    "jenkinsio.JenkinsSpecMasterVolumesFlocker": Object {
      "assembly": "jenkinsio",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "JenkinsSpecMasterVolumesFlocker",
        },
        "remarks": "This depends on the Flocker control service being running",
        "summary": "Flocker represents a Flocker volume attached to a kubelet's host machine.",
      },
      "fqn": "jenkinsio.JenkinsSpecMasterVolumesFlocker",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "jenkins.io.ts",
        "line": 3311,
      },
      "name": "JenkinsSpecMasterVolumesFlocker",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "JenkinsSpecMasterVolumesFlocker#datasetName",
            },
            "summary": "Name of the dataset stored as metadata -> name on the dataset for Flocker should be considered as deprecated.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "jenkins.io.ts",
            "line": 3317,
          },
          "name": "datasetName",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "JenkinsSpecMasterVolumesFlocker#datasetUUID",
            },
            "remarks": "This is unique identifier of a Flocker dataset",
            "summary": "UUID of the dataset.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "jenkins.io.ts",
            "line": 3324,
          },
          "name": "datasetUuid",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
      ],
    },
    "jenkinsio.JenkinsSpecMasterVolumesGcePersistentDisk": Object {
      "assembly": "jenkinsio",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "JenkinsSpecMasterVolumesGcePersistentDisk",
        },
        "remarks": "More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk",
        "summary": "GCEPersistentDisk represents a GCE Disk resource that is attached to a kubelet's host machine and then exposed to the pod.",
      },
      "fqn": "jenkinsio.JenkinsSpecMasterVolumesGcePersistentDisk",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "jenkins.io.ts",
        "line": 3348,
      },
      "name": "JenkinsSpecMasterVolumesGcePersistentDisk",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "JenkinsSpecMasterVolumesGcePersistentDisk#pdName",
            },
            "remarks": "Used to identify the disk in GCE. More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk",
            "summary": "Unique name of the PD resource in GCE.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "jenkins.io.ts",
            "line": 3368,
          },
          "name": "pdName",
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "JenkinsSpecMasterVolumesGcePersistentDisk#fsType",
            },
            "remarks": "Tip: Ensure that the filesystem type is supported by the host operating system. Examples: \\"ext4\\", \\"xfs\\", \\"ntfs\\". Implicitly inferred to be \\"ext4\\" if unspecified. More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk TODO: how do we prevent errors in the filesystem from compromising the machine",
            "summary": "Filesystem type of the volume that you want to mount.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "jenkins.io.ts",
            "line": 3354,
          },
          "name": "fsType",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "JenkinsSpecMasterVolumesGcePersistentDisk#partition",
            },
            "remarks": "If omitted, the default is to mount by volume name. Examples: For volume /dev/sda1, you specify the partition as \\"1\\". Similarly, the volume partition for /dev/sda is \\"0\\" (or you can leave the property empty). More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk",
            "summary": "The partition in the volume that you want to mount.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "jenkins.io.ts",
            "line": 3361,
          },
          "name": "partition",
          "optional": true,
          "type": Object {
            "primitive": "number",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "JenkinsSpecMasterVolumesGcePersistentDisk#readOnly",
            },
            "default": "false. More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk",
            "remarks": "Defaults to false. More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk",
            "summary": "ReadOnly here will force the ReadOnly setting in VolumeMounts.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "jenkins.io.ts",
            "line": 3376,
          },
          "name": "readOnly",
          "optional": true,
          "type": Object {
            "primitive": "boolean",
          },
        },
      ],
    },
    "jenkinsio.JenkinsSpecMasterVolumesGitRepo": Object {
      "assembly": "jenkinsio",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "JenkinsSpecMasterVolumesGitRepo",
        },
        "remarks": "DEPRECATED: GitRepo is deprecated. To provision a container with a git repo, mount an EmptyDir into an InitContainer that clones the repo using git, then mount the EmptyDir into the Pod's container.",
        "summary": "GitRepo represents a git repository at a particular revision.",
      },
      "fqn": "jenkinsio.JenkinsSpecMasterVolumesGitRepo",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "jenkins.io.ts",
        "line": 3402,
      },
      "name": "JenkinsSpecMasterVolumesGitRepo",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "JenkinsSpecMasterVolumesGitRepo#repository",
            },
            "summary": "Repository URL.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "jenkins.io.ts",
            "line": 3415,
          },
          "name": "repository",
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "JenkinsSpecMasterVolumesGitRepo#directory",
            },
            "remarks": "Must not contain or start with '..'.  If '.' is supplied, the volume directory will be the git repository.  Otherwise, if specified, the volume will contain the git repository in the subdirectory with the given name.",
            "summary": "Target directory name.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "jenkins.io.ts",
            "line": 3408,
          },
          "name": "directory",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "JenkinsSpecMasterVolumesGitRepo#revision",
            },
            "summary": "Commit hash for the specified revision.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "jenkins.io.ts",
            "line": 3422,
          },
          "name": "revision",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
      ],
    },
    "jenkinsio.JenkinsSpecMasterVolumesGlusterfs": Object {
      "assembly": "jenkinsio",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "JenkinsSpecMasterVolumesGlusterfs",
        },
        "remarks": "More info: https://examples.k8s.io/volumes/glusterfs/README.md",
        "summary": "Glusterfs represents a Glusterfs mount on the host that shares a pod's lifetime.",
      },
      "fqn": "jenkinsio.JenkinsSpecMasterVolumesGlusterfs",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "jenkins.io.ts",
        "line": 3447,
      },
      "name": "JenkinsSpecMasterVolumesGlusterfs",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "JenkinsSpecMasterVolumesGlusterfs#endpoints",
            },
            "remarks": "More info: https://examples.k8s.io/volumes/glusterfs/README.md#create-a-pod",
            "summary": "EndpointsName is the endpoint name that details Glusterfs topology.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "jenkins.io.ts",
            "line": 3453,
          },
          "name": "endpoints",
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "JenkinsSpecMasterVolumesGlusterfs#path",
            },
            "remarks": "More info: https://examples.k8s.io/volumes/glusterfs/README.md#create-a-pod",
            "summary": "Path is the Glusterfs volume path.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "jenkins.io.ts",
            "line": 3460,
          },
          "name": "path",
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "JenkinsSpecMasterVolumesGlusterfs#readOnly",
            },
            "default": "false. More info: https://examples.k8s.io/volumes/glusterfs/README.md#create-a-pod",
            "remarks": "Defaults to false. More info: https://examples.k8s.io/volumes/glusterfs/README.md#create-a-pod",
            "summary": "ReadOnly here will force the Glusterfs volume to be mounted with read-only permissions.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "jenkins.io.ts",
            "line": 3468,
          },
          "name": "readOnly",
          "optional": true,
          "type": Object {
            "primitive": "boolean",
          },
        },
      ],
    },
    "jenkinsio.JenkinsSpecMasterVolumesHostPath": Object {
      "assembly": "jenkinsio",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "JenkinsSpecMasterVolumesHostPath",
        },
        "remarks": "This is generally used for system agents or other privileged things that are allowed to see the host machine. Most containers will NOT need this. More info: https://kubernetes.io/docs/concepts/storage/volumes#hostpath --- TODO(jonesdl) We need to restrict who can use host directory mounts and who can/can not mount host directories as read/write.",
        "summary": "HostPath represents a pre-existing file or directory on the host machine that is directly exposed to the container.",
      },
      "fqn": "jenkinsio.JenkinsSpecMasterVolumesHostPath",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "jenkins.io.ts",
        "line": 3493,
      },
      "name": "JenkinsSpecMasterVolumesHostPath",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "JenkinsSpecMasterVolumesHostPath#path",
            },
            "remarks": "If the path is a symlink, it will follow the link to the real path. More info: https://kubernetes.io/docs/concepts/storage/volumes#hostpath",
            "summary": "Path of the directory on the host.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "jenkins.io.ts",
            "line": 3499,
          },
          "name": "path",
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "JenkinsSpecMasterVolumesHostPath#type",
            },
            "default": "More info: https://kubernetes.io/docs/concepts/storage/volumes#hostpath",
            "summary": "Type for HostPath Volume Defaults to \\"\\" More info: https://kubernetes.io/docs/concepts/storage/volumes#hostpath.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "jenkins.io.ts",
            "line": 3507,
          },
          "name": "type",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
      ],
    },
    "jenkinsio.JenkinsSpecMasterVolumesIscsi": Object {
      "assembly": "jenkinsio",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "JenkinsSpecMasterVolumesIscsi",
        },
        "remarks": "More info: https://examples.k8s.io/volumes/iscsi/README.md",
        "summary": "ISCSI represents an ISCSI Disk resource that is attached to a kubelet's host machine and then exposed to the pod.",
      },
      "fqn": "jenkinsio.JenkinsSpecMasterVolumesIscsi",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "jenkins.io.ts",
        "line": 3531,
      },
      "name": "JenkinsSpecMasterVolumesIscsi",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "JenkinsSpecMasterVolumesIscsi#iqn",
            },
            "summary": "Target iSCSI Qualified Name.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "jenkins.io.ts",
            "line": 3565,
          },
          "name": "iqn",
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "JenkinsSpecMasterVolumesIscsi#lun",
            },
            "summary": "iSCSI Target Lun number.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "jenkins.io.ts",
            "line": 3580,
          },
          "name": "lun",
          "type": Object {
            "primitive": "number",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "JenkinsSpecMasterVolumesIscsi#targetPortal",
            },
            "remarks": "The Portal is either an IP or ip_addr:port if the port is other than default (typically TCP ports 860 and 3260).",
            "summary": "iSCSI Target Portal.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "jenkins.io.ts",
            "line": 3609,
          },
          "name": "targetPortal",
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "JenkinsSpecMasterVolumesIscsi#chapAuthDiscovery",
            },
            "summary": "whether support iSCSI Discovery CHAP authentication.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "jenkins.io.ts",
            "line": 3537,
          },
          "name": "chapAuthDiscovery",
          "optional": true,
          "type": Object {
            "primitive": "boolean",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "JenkinsSpecMasterVolumesIscsi#chapAuthSession",
            },
            "summary": "whether support iSCSI Session CHAP authentication.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "jenkins.io.ts",
            "line": 3544,
          },
          "name": "chapAuthSession",
          "optional": true,
          "type": Object {
            "primitive": "boolean",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "JenkinsSpecMasterVolumesIscsi#fsType",
            },
            "remarks": "Tip: Ensure that the filesystem type is supported by the host operating system. Examples: \\"ext4\\", \\"xfs\\", \\"ntfs\\". Implicitly inferred to be \\"ext4\\" if unspecified. More info: https://kubernetes.io/docs/concepts/storage/volumes#iscsi TODO: how do we prevent errors in the filesystem from compromising the machine",
            "summary": "Filesystem type of the volume that you want to mount.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "jenkins.io.ts",
            "line": 3551,
          },
          "name": "fsType",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "JenkinsSpecMasterVolumesIscsi#initiatorName",
            },
            "remarks": "If initiatorName is specified with iscsiInterface simultaneously, new iSCSI interface <target portal>:<volume name> will be created for the connection.",
            "summary": "Custom iSCSI Initiator Name.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "jenkins.io.ts",
            "line": 3558,
          },
          "name": "initiatorName",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "JenkinsSpecMasterVolumesIscsi#iscsiInterface",
            },
            "default": "default' (tcp).",
            "remarks": "Defaults to 'default' (tcp).",
            "summary": "iSCSI Interface Name that uses an iSCSI transport.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "jenkins.io.ts",
            "line": 3573,
          },
          "name": "iscsiInterface",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "JenkinsSpecMasterVolumesIscsi#portals",
            },
            "remarks": "The portal is either an IP or ip_addr:port if the port is other than default (typically TCP ports 860 and 3260).",
            "summary": "iSCSI Target Portal List.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "jenkins.io.ts",
            "line": 3587,
          },
          "name": "portals",
          "optional": true,
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "primitive": "string",
              },
              "kind": "array",
            },
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "JenkinsSpecMasterVolumesIscsi#readOnly",
            },
            "default": "false.",
            "remarks": "Defaults to false.",
            "summary": "ReadOnly here will force the ReadOnly setting in VolumeMounts.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "jenkins.io.ts",
            "line": 3595,
          },
          "name": "readOnly",
          "optional": true,
          "type": Object {
            "primitive": "boolean",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "JenkinsSpecMasterVolumesIscsi#secretRef",
            },
            "summary": "CHAP Secret for iSCSI target and initiator authentication.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "jenkins.io.ts",
            "line": 3602,
          },
          "name": "secretRef",
          "optional": true,
          "type": Object {
            "fqn": "jenkinsio.JenkinsSpecMasterVolumesIscsiSecretRef",
          },
        },
      ],
    },
    "jenkinsio.JenkinsSpecMasterVolumesIscsiSecretRef": Object {
      "assembly": "jenkinsio",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "JenkinsSpecMasterVolumesIscsiSecretRef",
        },
        "summary": "CHAP Secret for iSCSI target and initiator authentication.",
      },
      "fqn": "jenkinsio.JenkinsSpecMasterVolumesIscsiSecretRef",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "jenkins.io.ts",
        "line": 5318,
      },
      "name": "JenkinsSpecMasterVolumesIscsiSecretRef",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "JenkinsSpecMasterVolumesIscsiSecretRef#name",
            },
            "remarks": "More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?",
            "summary": "Name of the referent.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "jenkins.io.ts",
            "line": 5324,
          },
          "name": "name",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
      ],
    },
    "jenkinsio.JenkinsSpecMasterVolumesNfs": Object {
      "assembly": "jenkinsio",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "JenkinsSpecMasterVolumesNfs",
        },
        "summary": "NFS represents an NFS mount on the host that shares a pod's lifetime More info: https://kubernetes.io/docs/concepts/storage/volumes#nfs.",
      },
      "fqn": "jenkinsio.JenkinsSpecMasterVolumesNfs",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "jenkins.io.ts",
        "line": 3642,
      },
      "name": "JenkinsSpecMasterVolumesNfs",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "JenkinsSpecMasterVolumesNfs#path",
            },
            "remarks": "More info: https://kubernetes.io/docs/concepts/storage/volumes#nfs",
            "summary": "Path that is exported by the NFS server.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "jenkins.io.ts",
            "line": 3648,
          },
          "name": "path",
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "JenkinsSpecMasterVolumesNfs#server",
            },
            "remarks": "More info: https://kubernetes.io/docs/concepts/storage/volumes#nfs",
            "summary": "Server is the hostname or IP address of the NFS server.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "jenkins.io.ts",
            "line": 3663,
          },
          "name": "server",
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "JenkinsSpecMasterVolumesNfs#readOnly",
            },
            "default": "false. More info: https://kubernetes.io/docs/concepts/storage/volumes#nfs",
            "remarks": "Defaults to false. More info: https://kubernetes.io/docs/concepts/storage/volumes#nfs",
            "summary": "ReadOnly here will force the NFS export to be mounted with read-only permissions.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "jenkins.io.ts",
            "line": 3656,
          },
          "name": "readOnly",
          "optional": true,
          "type": Object {
            "primitive": "boolean",
          },
        },
      ],
    },
    "jenkinsio.JenkinsSpecMasterVolumesPersistentVolumeClaim": Object {
      "assembly": "jenkinsio",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "JenkinsSpecMasterVolumesPersistentVolumeClaim",
        },
        "remarks": "More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims",
        "summary": "PersistentVolumeClaimVolumeSource represents a reference to a PersistentVolumeClaim in the same namespace.",
      },
      "fqn": "jenkinsio.JenkinsSpecMasterVolumesPersistentVolumeClaim",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "jenkins.io.ts",
        "line": 3688,
      },
      "name": "JenkinsSpecMasterVolumesPersistentVolumeClaim",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "JenkinsSpecMasterVolumesPersistentVolumeClaim#claimName",
            },
            "remarks": "More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims",
            "summary": "ClaimName is the name of a PersistentVolumeClaim in the same namespace as the pod using this volume.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "jenkins.io.ts",
            "line": 3694,
          },
          "name": "claimName",
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "JenkinsSpecMasterVolumesPersistentVolumeClaim#readOnly",
            },
            "remarks": "Default false.",
            "summary": "Will force the ReadOnly setting in VolumeMounts.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "jenkins.io.ts",
            "line": 3701,
          },
          "name": "readOnly",
          "optional": true,
          "type": Object {
            "primitive": "boolean",
          },
        },
      ],
    },
    "jenkinsio.JenkinsSpecMasterVolumesPhotonPersistentDisk": Object {
      "assembly": "jenkinsio",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "JenkinsSpecMasterVolumesPhotonPersistentDisk",
        },
        "summary": "PhotonPersistentDisk represents a PhotonController persistent disk attached and mounted on kubelets host machine.",
      },
      "fqn": "jenkinsio.JenkinsSpecMasterVolumesPhotonPersistentDisk",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "jenkins.io.ts",
        "line": 3725,
      },
      "name": "JenkinsSpecMasterVolumesPhotonPersistentDisk",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "JenkinsSpecMasterVolumesPhotonPersistentDisk#pdID",
            },
            "summary": "ID that identifies Photon Controller persistent disk.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "jenkins.io.ts",
            "line": 3738,
          },
          "name": "pdId",
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "JenkinsSpecMasterVolumesPhotonPersistentDisk#fsType",
            },
            "remarks": "Must be a filesystem type supported by the host operating system. Ex. \\"ext4\\", \\"xfs\\", \\"ntfs\\". Implicitly inferred to be \\"ext4\\" if unspecified.",
            "summary": "Filesystem type to mount.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "jenkins.io.ts",
            "line": 3731,
          },
          "name": "fsType",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
      ],
    },
    "jenkinsio.JenkinsSpecMasterVolumesPortworxVolume": Object {
      "assembly": "jenkinsio",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "JenkinsSpecMasterVolumesPortworxVolume",
        },
        "summary": "PortworxVolume represents a portworx volume attached and mounted on kubelets host machine.",
      },
      "fqn": "jenkinsio.JenkinsSpecMasterVolumesPortworxVolume",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "jenkins.io.ts",
        "line": 3762,
      },
      "name": "JenkinsSpecMasterVolumesPortworxVolume",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "JenkinsSpecMasterVolumesPortworxVolume#volumeID",
            },
            "summary": "VolumeID uniquely identifies a Portworx volume.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "jenkins.io.ts",
            "line": 3783,
          },
          "name": "volumeId",
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "JenkinsSpecMasterVolumesPortworxVolume#fsType",
            },
            "remarks": "Ex. \\"ext4\\", \\"xfs\\". Implicitly inferred to be \\"ext4\\" if unspecified.",
            "summary": "FSType represents the filesystem type to mount Must be a filesystem type supported by the host operating system.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "jenkins.io.ts",
            "line": 3768,
          },
          "name": "fsType",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "JenkinsSpecMasterVolumesPortworxVolume#readOnly",
            },
            "default": "false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts.",
            "remarks": "ReadOnly here will force the ReadOnly setting in VolumeMounts.",
            "summary": "Defaults to false (read/write).",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "jenkins.io.ts",
            "line": 3776,
          },
          "name": "readOnly",
          "optional": true,
          "type": Object {
            "primitive": "boolean",
          },
        },
      ],
    },
    "jenkinsio.JenkinsSpecMasterVolumesProjected": Object {
      "assembly": "jenkinsio",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "JenkinsSpecMasterVolumesProjected",
        },
        "summary": "Items for all in one resources secrets, configmaps, and downward API.",
      },
      "fqn": "jenkinsio.JenkinsSpecMasterVolumesProjected",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "jenkins.io.ts",
        "line": 3808,
      },
      "name": "JenkinsSpecMasterVolumesProjected",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "JenkinsSpecMasterVolumesProjected#sources",
            },
            "summary": "list of volume projections.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "jenkins.io.ts",
            "line": 3821,
          },
          "name": "sources",
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "fqn": "jenkinsio.JenkinsSpecMasterVolumesProjectedSources",
              },
              "kind": "array",
            },
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "JenkinsSpecMasterVolumesProjected#defaultMode",
            },
            "remarks": "Must be a value between 0 and 0777. Directories within the path are not affected by this setting. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.",
            "summary": "Mode bits to use on created files by default.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "jenkins.io.ts",
            "line": 3814,
          },
          "name": "defaultMode",
          "optional": true,
          "type": Object {
            "primitive": "number",
          },
        },
      ],
    },
    "jenkinsio.JenkinsSpecMasterVolumesProjectedSources": Object {
      "assembly": "jenkinsio",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "JenkinsSpecMasterVolumesProjectedSources",
        },
        "summary": "Projection that may be projected along with other supported volume types.",
      },
      "fqn": "jenkinsio.JenkinsSpecMasterVolumesProjectedSources",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "jenkins.io.ts",
        "line": 5347,
      },
      "name": "JenkinsSpecMasterVolumesProjectedSources",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "JenkinsSpecMasterVolumesProjectedSources#configMap",
            },
            "summary": "information about the configMap data to project.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "jenkins.io.ts",
            "line": 5353,
          },
          "name": "configMap",
          "optional": true,
          "type": Object {
            "fqn": "jenkinsio.JenkinsSpecMasterVolumesProjectedSourcesConfigMap",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "JenkinsSpecMasterVolumesProjectedSources#downwardAPI",
            },
            "summary": "information about the downwardAPI data to project.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "jenkins.io.ts",
            "line": 5360,
          },
          "name": "downwardApi",
          "optional": true,
          "type": Object {
            "fqn": "jenkinsio.JenkinsSpecMasterVolumesProjectedSourcesDownwardApi",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "JenkinsSpecMasterVolumesProjectedSources#secret",
            },
            "summary": "information about the secret data to project.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "jenkins.io.ts",
            "line": 5367,
          },
          "name": "secret",
          "optional": true,
          "type": Object {
            "fqn": "jenkinsio.JenkinsSpecMasterVolumesProjectedSourcesSecret",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "JenkinsSpecMasterVolumesProjectedSources#serviceAccountToken",
            },
            "summary": "information about the serviceAccountToken data to project.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "jenkins.io.ts",
            "line": 5374,
          },
          "name": "serviceAccountToken",
          "optional": true,
          "type": Object {
            "fqn": "jenkinsio.JenkinsSpecMasterVolumesProjectedSourcesServiceAccountToken",
          },
        },
      ],
    },
    "jenkinsio.JenkinsSpecMasterVolumesProjectedSourcesConfigMap": Object {
      "assembly": "jenkinsio",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "JenkinsSpecMasterVolumesProjectedSourcesConfigMap",
        },
        "summary": "information about the configMap data to project.",
      },
      "fqn": "jenkinsio.JenkinsSpecMasterVolumesProjectedSourcesConfigMap",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "jenkins.io.ts",
        "line": 6330,
      },
      "name": "JenkinsSpecMasterVolumesProjectedSourcesConfigMap",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "JenkinsSpecMasterVolumesProjectedSourcesConfigMap#items",
            },
            "remarks": "If specified, the listed keys will be projected into the specified paths, and unlisted keys will not be present. If a key is specified which is not present in the ConfigMap, the volume setup will error unless it is marked optional. Paths must be relative and may not contain the '..' path or start with '..'.",
            "summary": "If unspecified, each key-value pair in the Data field of the referenced ConfigMap will be projected into the volume as a file whose name is the key and content is the value.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "jenkins.io.ts",
            "line": 6336,
          },
          "name": "items",
          "optional": true,
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "fqn": "jenkinsio.JenkinsSpecMasterVolumesProjectedSourcesConfigMapItems",
              },
              "kind": "array",
            },
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "JenkinsSpecMasterVolumesProjectedSourcesConfigMap#name",
            },
            "remarks": "More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?",
            "summary": "Name of the referent.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "jenkins.io.ts",
            "line": 6343,
          },
          "name": "name",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "JenkinsSpecMasterVolumesProjectedSourcesConfigMap#optional",
            },
            "summary": "Specify whether the ConfigMap or its keys must be defined.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "jenkins.io.ts",
            "line": 6350,
          },
          "name": "optional",
          "optional": true,
          "type": Object {
            "primitive": "boolean",
          },
        },
      ],
    },
    "jenkinsio.JenkinsSpecMasterVolumesProjectedSourcesConfigMapItems": Object {
      "assembly": "jenkinsio",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "JenkinsSpecMasterVolumesProjectedSourcesConfigMapItems",
        },
        "summary": "Maps a string key to a path within a volume.",
      },
      "fqn": "jenkinsio.JenkinsSpecMasterVolumesProjectedSourcesConfigMapItems",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "jenkins.io.ts",
        "line": 6637,
      },
      "name": "JenkinsSpecMasterVolumesProjectedSourcesConfigMapItems",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "JenkinsSpecMasterVolumesProjectedSourcesConfigMapItems#key",
            },
            "summary": "The key to project.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "jenkins.io.ts",
            "line": 6643,
          },
          "name": "key",
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "JenkinsSpecMasterVolumesProjectedSourcesConfigMapItems#path",
            },
            "remarks": "May not be an absolute path. May not contain the path element '..'. May not start with the string '..'.",
            "summary": "The relative path of the file to map the key to.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "jenkins.io.ts",
            "line": 6657,
          },
          "name": "path",
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "JenkinsSpecMasterVolumesProjectedSourcesConfigMapItems#mode",
            },
            "remarks": "If not specified, the volume defaultMode will be used. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.",
            "summary": "Optional: mode bits to use on this file, must be a value between 0 and 0777.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "jenkins.io.ts",
            "line": 6650,
          },
          "name": "mode",
          "optional": true,
          "type": Object {
            "primitive": "number",
          },
        },
      ],
    },
    "jenkinsio.JenkinsSpecMasterVolumesProjectedSourcesDownwardApi": Object {
      "assembly": "jenkinsio",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "JenkinsSpecMasterVolumesProjectedSourcesDownwardApi",
        },
        "summary": "information about the downwardAPI data to project.",
      },
      "fqn": "jenkinsio.JenkinsSpecMasterVolumesProjectedSourcesDownwardApi",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "jenkins.io.ts",
        "line": 6375,
      },
      "name": "JenkinsSpecMasterVolumesProjectedSourcesDownwardApi",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "JenkinsSpecMasterVolumesProjectedSourcesDownwardApi#items",
            },
            "summary": "Items is a list of DownwardAPIVolume file.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "jenkins.io.ts",
            "line": 6381,
          },
          "name": "items",
          "optional": true,
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "fqn": "jenkinsio.JenkinsSpecMasterVolumesProjectedSourcesDownwardApiItems",
              },
              "kind": "array",
            },
          },
        },
      ],
    },
    "jenkinsio.JenkinsSpecMasterVolumesProjectedSourcesDownwardApiItems": Object {
      "assembly": "jenkinsio",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "JenkinsSpecMasterVolumesProjectedSourcesDownwardApiItems",
        },
        "summary": "DownwardAPIVolumeFile represents information to create the file containing the pod field.",
      },
      "fqn": "jenkinsio.JenkinsSpecMasterVolumesProjectedSourcesDownwardApiItems",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "jenkins.io.ts",
        "line": 6682,
      },
      "name": "JenkinsSpecMasterVolumesProjectedSourcesDownwardApiItems",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "JenkinsSpecMasterVolumesProjectedSourcesDownwardApiItems#path",
            },
            "remarks": "Must not be absolute or contain the '..' path. Must be utf-8 encoded. The first item of the relative path must not start with '..'",
            "summary": "Required: Path is  the relative path name of the file to be created.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "jenkins.io.ts",
            "line": 6702,
          },
          "name": "path",
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "JenkinsSpecMasterVolumesProjectedSourcesDownwardApiItems#fieldRef",
            },
            "summary": "Required: Selects a field of the pod: only annotations, labels, name and namespace are supported.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "jenkins.io.ts",
            "line": 6688,
          },
          "name": "fieldRef",
          "optional": true,
          "type": Object {
            "fqn": "jenkinsio.JenkinsSpecMasterVolumesProjectedSourcesDownwardApiItemsFieldRef",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "JenkinsSpecMasterVolumesProjectedSourcesDownwardApiItems#mode",
            },
            "remarks": "If not specified, the volume defaultMode will be used. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.",
            "summary": "Optional: mode bits to use on this file, must be a value between 0 and 0777.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "jenkins.io.ts",
            "line": 6695,
          },
          "name": "mode",
          "optional": true,
          "type": Object {
            "primitive": "number",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "JenkinsSpecMasterVolumesProjectedSourcesDownwardApiItems#resourceFieldRef",
            },
            "summary": "Selects a resource of the container: only resources limits and requests (limits.cpu, limits.memory, requests.cpu and requests.memory) are currently supported.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "jenkins.io.ts",
            "line": 6709,
          },
          "name": "resourceFieldRef",
          "optional": true,
          "type": Object {
            "fqn": "jenkinsio.JenkinsSpecMasterVolumesProjectedSourcesDownwardApiItemsResourceFieldRef",
          },
        },
      ],
    },
    "jenkinsio.JenkinsSpecMasterVolumesProjectedSourcesDownwardApiItemsFieldRef": Object {
      "assembly": "jenkinsio",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "JenkinsSpecMasterVolumesProjectedSourcesDownwardApiItemsFieldRef",
        },
        "summary": "Required: Selects a field of the pod: only annotations, labels, name and namespace are supported.",
      },
      "fqn": "jenkinsio.JenkinsSpecMasterVolumesProjectedSourcesDownwardApiItemsFieldRef",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "jenkins.io.ts",
        "line": 6780,
      },
      "name": "JenkinsSpecMasterVolumesProjectedSourcesDownwardApiItemsFieldRef",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "JenkinsSpecMasterVolumesProjectedSourcesDownwardApiItemsFieldRef#fieldPath",
            },
            "summary": "Path of the field to select in the specified API version.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "jenkins.io.ts",
            "line": 6793,
          },
          "name": "fieldPath",
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "JenkinsSpecMasterVolumesProjectedSourcesDownwardApiItemsFieldRef#apiVersion",
            },
            "summary": "Version of the schema the FieldPath is written in terms of, defaults to \\"v1\\".",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "jenkins.io.ts",
            "line": 6786,
          },
          "name": "apiVersion",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
      ],
    },
    "jenkinsio.JenkinsSpecMasterVolumesProjectedSourcesDownwardApiItemsResourceFieldRef": Object {
      "assembly": "jenkinsio",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "JenkinsSpecMasterVolumesProjectedSourcesDownwardApiItemsResourceFieldRef",
        },
        "summary": "Selects a resource of the container: only resources limits and requests (limits.cpu, limits.memory, requests.cpu and requests.memory) are currently supported.",
      },
      "fqn": "jenkinsio.JenkinsSpecMasterVolumesProjectedSourcesDownwardApiItemsResourceFieldRef",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "jenkins.io.ts",
        "line": 6817,
      },
      "name": "JenkinsSpecMasterVolumesProjectedSourcesDownwardApiItemsResourceFieldRef",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "JenkinsSpecMasterVolumesProjectedSourcesDownwardApiItemsResourceFieldRef#resource",
            },
            "summary": "Required: resource to select.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "jenkins.io.ts",
            "line": 6837,
          },
          "name": "resource",
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "JenkinsSpecMasterVolumesProjectedSourcesDownwardApiItemsResourceFieldRef#containerName",
            },
            "summary": "Container name: required for volumes, optional for env vars.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "jenkins.io.ts",
            "line": 6823,
          },
          "name": "containerName",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "JenkinsSpecMasterVolumesProjectedSourcesDownwardApiItemsResourceFieldRef#divisor",
            },
            "summary": "Specifies the output format of the exposed resources, defaults to \\"1\\".",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "jenkins.io.ts",
            "line": 6830,
          },
          "name": "divisor",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
      ],
    },
    "jenkinsio.JenkinsSpecMasterVolumesProjectedSourcesSecret": Object {
      "assembly": "jenkinsio",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "JenkinsSpecMasterVolumesProjectedSourcesSecret",
        },
        "summary": "information about the secret data to project.",
      },
      "fqn": "jenkinsio.JenkinsSpecMasterVolumesProjectedSourcesSecret",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "jenkins.io.ts",
        "line": 6404,
      },
      "name": "JenkinsSpecMasterVolumesProjectedSourcesSecret",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "JenkinsSpecMasterVolumesProjectedSourcesSecret#items",
            },
            "remarks": "If specified, the listed keys will be projected into the specified paths, and unlisted keys will not be present. If a key is specified which is not present in the Secret, the volume setup will error unless it is marked optional. Paths must be relative and may not contain the '..' path or start with '..'.",
            "summary": "If unspecified, each key-value pair in the Data field of the referenced Secret will be projected into the volume as a file whose name is the key and content is the value.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "jenkins.io.ts",
            "line": 6410,
          },
          "name": "items",
          "optional": true,
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "fqn": "jenkinsio.JenkinsSpecMasterVolumesProjectedSourcesSecretItems",
              },
              "kind": "array",
            },
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "JenkinsSpecMasterVolumesProjectedSourcesSecret#name",
            },
            "remarks": "More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?",
            "summary": "Name of the referent.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "jenkins.io.ts",
            "line": 6417,
          },
          "name": "name",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "JenkinsSpecMasterVolumesProjectedSourcesSecret#optional",
            },
            "summary": "Specify whether the Secret or its key must be defined.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "jenkins.io.ts",
            "line": 6424,
          },
          "name": "optional",
          "optional": true,
          "type": Object {
            "primitive": "boolean",
          },
        },
      ],
    },
    "jenkinsio.JenkinsSpecMasterVolumesProjectedSourcesSecretItems": Object {
      "assembly": "jenkinsio",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "JenkinsSpecMasterVolumesProjectedSourcesSecretItems",
        },
        "summary": "Maps a string key to a path within a volume.",
      },
      "fqn": "jenkinsio.JenkinsSpecMasterVolumesProjectedSourcesSecretItems",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "jenkins.io.ts",
        "line": 6735,
      },
      "name": "JenkinsSpecMasterVolumesProjectedSourcesSecretItems",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "JenkinsSpecMasterVolumesProjectedSourcesSecretItems#key",
            },
            "summary": "The key to project.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "jenkins.io.ts",
            "line": 6741,
          },
          "name": "key",
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "JenkinsSpecMasterVolumesProjectedSourcesSecretItems#path",
            },
            "remarks": "May not be an absolute path. May not contain the path element '..'. May not start with the string '..'.",
            "summary": "The relative path of the file to map the key to.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "jenkins.io.ts",
            "line": 6755,
          },
          "name": "path",
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "JenkinsSpecMasterVolumesProjectedSourcesSecretItems#mode",
            },
            "remarks": "If not specified, the volume defaultMode will be used. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.",
            "summary": "Optional: mode bits to use on this file, must be a value between 0 and 0777.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "jenkins.io.ts",
            "line": 6748,
          },
          "name": "mode",
          "optional": true,
          "type": Object {
            "primitive": "number",
          },
        },
      ],
    },
    "jenkinsio.JenkinsSpecMasterVolumesProjectedSourcesServiceAccountToken": Object {
      "assembly": "jenkinsio",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "JenkinsSpecMasterVolumesProjectedSourcesServiceAccountToken",
        },
        "summary": "information about the serviceAccountToken data to project.",
      },
      "fqn": "jenkinsio.JenkinsSpecMasterVolumesProjectedSourcesServiceAccountToken",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "jenkins.io.ts",
        "line": 6449,
      },
      "name": "JenkinsSpecMasterVolumesProjectedSourcesServiceAccountToken",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "JenkinsSpecMasterVolumesProjectedSourcesServiceAccountToken#path",
            },
            "summary": "Path is the path relative to the mount point of the file to project the token into.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "jenkins.io.ts",
            "line": 6470,
          },
          "name": "path",
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "JenkinsSpecMasterVolumesProjectedSourcesServiceAccountToken#audience",
            },
            "remarks": "A recipient of a token must identify itself with an identifier specified in the audience of the token, and otherwise should reject the token. The audience defaults to the identifier of the apiserver.",
            "summary": "Audience is the intended audience of the token.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "jenkins.io.ts",
            "line": 6455,
          },
          "name": "audience",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "JenkinsSpecMasterVolumesProjectedSourcesServiceAccountToken#expirationSeconds",
            },
            "default": "1 hour and must be at least 10 minutes.",
            "remarks": "As the token approaches expiration, the kubelet volume plugin will proactively rotate the service account token. The kubelet will start trying to rotate the token if the token is older than 80 percent of its time to live or if the token is older than 24 hours.Defaults to 1 hour and must be at least 10 minutes.",
            "summary": "ExpirationSeconds is the requested duration of validity of the service account token.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "jenkins.io.ts",
            "line": 6463,
          },
          "name": "expirationSeconds",
          "optional": true,
          "type": Object {
            "primitive": "number",
          },
        },
      ],
    },
    "jenkinsio.JenkinsSpecMasterVolumesQuobyte": Object {
      "assembly": "jenkinsio",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "JenkinsSpecMasterVolumesQuobyte",
        },
        "summary": "Quobyte represents a Quobyte mount on the host that shares a pod's lifetime.",
      },
      "fqn": "jenkinsio.JenkinsSpecMasterVolumesQuobyte",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "jenkins.io.ts",
        "line": 3845,
      },
      "name": "JenkinsSpecMasterVolumesQuobyte",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "JenkinsSpecMasterVolumesQuobyte#registry",
            },
            "summary": "Registry represents a single or multiple Quobyte Registry services specified as a string as host:port pair (multiple entries are separated with commas) which acts as the central registry for volumes.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "jenkins.io.ts",
            "line": 3867,
          },
          "name": "registry",
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "JenkinsSpecMasterVolumesQuobyte#volume",
            },
            "summary": "Volume is a string that references an already created Quobyte volume by name.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "jenkins.io.ts",
            "line": 3889,
          },
          "name": "volume",
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "JenkinsSpecMasterVolumesQuobyte#group",
            },
            "default": "no group",
            "summary": "Group to map volume access to Default is no group.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "jenkins.io.ts",
            "line": 3852,
          },
          "name": "group",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "JenkinsSpecMasterVolumesQuobyte#readOnly",
            },
            "default": "false.",
            "remarks": "Defaults to false.",
            "summary": "ReadOnly here will force the Quobyte volume to be mounted with read-only permissions.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "jenkins.io.ts",
            "line": 3860,
          },
          "name": "readOnly",
          "optional": true,
          "type": Object {
            "primitive": "boolean",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "JenkinsSpecMasterVolumesQuobyte#tenant",
            },
            "summary": "Tenant owning the given Quobyte volume in the Backend Used with dynamically provisioned Quobyte volumes, value is set by the plugin.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "jenkins.io.ts",
            "line": 3874,
          },
          "name": "tenant",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "JenkinsSpecMasterVolumesQuobyte#user",
            },
            "default": "serivceaccount user",
            "summary": "User to map volume access to Defaults to serivceaccount user.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "jenkins.io.ts",
            "line": 3882,
          },
          "name": "user",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
      ],
    },
    "jenkinsio.JenkinsSpecMasterVolumesRbd": Object {
      "assembly": "jenkinsio",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "JenkinsSpecMasterVolumesRbd",
        },
        "remarks": "More info: https://examples.k8s.io/volumes/rbd/README.md",
        "summary": "RBD represents a Rados Block Device mount on the host that shares a pod's lifetime.",
      },
      "fqn": "jenkinsio.JenkinsSpecMasterVolumesRbd",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "jenkins.io.ts",
        "line": 3917,
      },
      "name": "JenkinsSpecMasterVolumesRbd",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "JenkinsSpecMasterVolumesRbd#image",
            },
            "remarks": "More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it",
            "summary": "The rados image name.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "jenkins.io.ts",
            "line": 3930,
          },
          "name": "image",
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "JenkinsSpecMasterVolumesRbd#monitors",
            },
            "remarks": "More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it",
            "summary": "A collection of Ceph monitors.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "jenkins.io.ts",
            "line": 3945,
          },
          "name": "monitors",
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "primitive": "string",
              },
              "kind": "array",
            },
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "JenkinsSpecMasterVolumesRbd#fsType",
            },
            "remarks": "Tip: Ensure that the filesystem type is supported by the host operating system. Examples: \\"ext4\\", \\"xfs\\", \\"ntfs\\". Implicitly inferred to be \\"ext4\\" if unspecified. More info: https://kubernetes.io/docs/concepts/storage/volumes#rbd TODO: how do we prevent errors in the filesystem from compromising the machine",
            "summary": "Filesystem type of the volume that you want to mount.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "jenkins.io.ts",
            "line": 3923,
          },
          "name": "fsType",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "JenkinsSpecMasterVolumesRbd#keyring",
            },
            "default": "etc/ceph/keyring. More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it",
            "remarks": "Default is /etc/ceph/keyring. More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it",
            "summary": "Keyring is the path to key ring for RBDUser.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "jenkins.io.ts",
            "line": 3938,
          },
          "name": "keyring",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "JenkinsSpecMasterVolumesRbd#pool",
            },
            "default": "rbd. More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it",
            "remarks": "Default is rbd. More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it",
            "summary": "The rados pool name.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "jenkins.io.ts",
            "line": 3953,
          },
          "name": "pool",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "JenkinsSpecMasterVolumesRbd#readOnly",
            },
            "default": "false. More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it",
            "remarks": "Defaults to false. More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it",
            "summary": "ReadOnly here will force the ReadOnly setting in VolumeMounts.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "jenkins.io.ts",
            "line": 3961,
          },
          "name": "readOnly",
          "optional": true,
          "type": Object {
            "primitive": "boolean",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "JenkinsSpecMasterVolumesRbd#secretRef",
            },
            "default": "nil. More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it",
            "remarks": "If provided overrides keyring. Default is nil. More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it",
            "summary": "SecretRef is name of the authentication secret for RBDUser.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "jenkins.io.ts",
            "line": 3969,
          },
          "name": "secretRef",
          "optional": true,
          "type": Object {
            "fqn": "jenkinsio.JenkinsSpecMasterVolumesRbdSecretRef",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "JenkinsSpecMasterVolumesRbd#user",
            },
            "default": "admin. More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it",
            "remarks": "Default is admin. More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it",
            "summary": "The rados user name.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "jenkins.io.ts",
            "line": 3977,
          },
          "name": "user",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
      ],
    },
    "jenkinsio.JenkinsSpecMasterVolumesRbdSecretRef": Object {
      "assembly": "jenkinsio",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "JenkinsSpecMasterVolumesRbdSecretRef",
        },
        "default": "nil. More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it",
        "remarks": "If provided overrides keyring. Default is nil. More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it",
        "summary": "SecretRef is name of the authentication secret for RBDUser.",
      },
      "fqn": "jenkinsio.JenkinsSpecMasterVolumesRbdSecretRef",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "jenkins.io.ts",
        "line": 5401,
      },
      "name": "JenkinsSpecMasterVolumesRbdSecretRef",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "JenkinsSpecMasterVolumesRbdSecretRef#name",
            },
            "remarks": "More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?",
            "summary": "Name of the referent.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "jenkins.io.ts",
            "line": 5407,
          },
          "name": "name",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
      ],
    },
    "jenkinsio.JenkinsSpecMasterVolumesScaleIo": Object {
      "assembly": "jenkinsio",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "JenkinsSpecMasterVolumesScaleIo",
        },
        "summary": "ScaleIO represents a ScaleIO persistent volume attached and mounted on Kubernetes nodes.",
      },
      "fqn": "jenkinsio.JenkinsSpecMasterVolumesScaleIo",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "jenkins.io.ts",
        "line": 4007,
      },
      "name": "JenkinsSpecMasterVolumesScaleIo",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "JenkinsSpecMasterVolumesScaleIo#gateway",
            },
            "summary": "The host address of the ScaleIO API Gateway.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "jenkins.io.ts",
            "line": 4021,
          },
          "name": "gateway",
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "JenkinsSpecMasterVolumesScaleIo#secretRef",
            },
            "remarks": "If this is not provided, Login operation will fail.",
            "summary": "SecretRef references to the secret for ScaleIO user and other sensitive information.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "jenkins.io.ts",
            "line": 4043,
          },
          "name": "secretRef",
          "type": Object {
            "fqn": "jenkinsio.JenkinsSpecMasterVolumesScaleIoSecretRef",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "JenkinsSpecMasterVolumesScaleIo#system",
            },
            "summary": "The name of the storage system as configured in ScaleIO.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "jenkins.io.ts",
            "line": 4072,
          },
          "name": "system",
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "JenkinsSpecMasterVolumesScaleIo#fsType",
            },
            "default": "xfs\\".",
            "remarks": "Must be a filesystem type supported by the host operating system. Ex. \\"ext4\\", \\"xfs\\", \\"ntfs\\". Default is \\"xfs\\".",
            "summary": "Filesystem type to mount.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "jenkins.io.ts",
            "line": 4014,
          },
          "name": "fsType",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "JenkinsSpecMasterVolumesScaleIo#protectionDomain",
            },
            "summary": "The name of the ScaleIO Protection Domain for the configured storage.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "jenkins.io.ts",
            "line": 4028,
          },
          "name": "protectionDomain",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "JenkinsSpecMasterVolumesScaleIo#readOnly",
            },
            "default": "false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts.",
            "remarks": "ReadOnly here will force the ReadOnly setting in VolumeMounts.",
            "summary": "Defaults to false (read/write).",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "jenkins.io.ts",
            "line": 4036,
          },
          "name": "readOnly",
          "optional": true,
          "type": Object {
            "primitive": "boolean",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "JenkinsSpecMasterVolumesScaleIo#sslEnabled",
            },
            "summary": "Flag to enable/disable SSL communication with Gateway, default false.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "jenkins.io.ts",
            "line": 4050,
          },
          "name": "sslEnabled",
          "optional": true,
          "type": Object {
            "primitive": "boolean",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "JenkinsSpecMasterVolumesScaleIo#storageMode",
            },
            "default": "ThinProvisioned.",
            "remarks": "Default is ThinProvisioned.",
            "summary": "Indicates whether the storage for a volume should be ThickProvisioned or ThinProvisioned.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "jenkins.io.ts",
            "line": 4058,
          },
          "name": "storageMode",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "JenkinsSpecMasterVolumesScaleIo#storagePool",
            },
            "summary": "The ScaleIO Storage Pool associated with the protection domain.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "jenkins.io.ts",
            "line": 4065,
          },
          "name": "storagePool",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "JenkinsSpecMasterVolumesScaleIo#volumeName",
            },
            "summary": "The name of a volume already created in the ScaleIO system that is associated with this volume source.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "jenkins.io.ts",
            "line": 4079,
          },
          "name": "volumeName",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
      ],
    },
    "jenkinsio.JenkinsSpecMasterVolumesScaleIoSecretRef": Object {
      "assembly": "jenkinsio",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "JenkinsSpecMasterVolumesScaleIoSecretRef",
        },
        "remarks": "If this is not provided, Login operation will fail.",
        "summary": "SecretRef references to the secret for ScaleIO user and other sensitive information.",
      },
      "fqn": "jenkinsio.JenkinsSpecMasterVolumesScaleIoSecretRef",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "jenkins.io.ts",
        "line": 5430,
      },
      "name": "JenkinsSpecMasterVolumesScaleIoSecretRef",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "JenkinsSpecMasterVolumesScaleIoSecretRef#name",
            },
            "remarks": "More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?",
            "summary": "Name of the referent.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "jenkins.io.ts",
            "line": 5436,
          },
          "name": "name",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
      ],
    },
    "jenkinsio.JenkinsSpecMasterVolumesSecret": Object {
      "assembly": "jenkinsio",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "JenkinsSpecMasterVolumesSecret",
        },
        "remarks": "More info: https://kubernetes.io/docs/concepts/storage/volumes#secret",
        "summary": "Secret represents a secret that should populate this volume.",
      },
      "fqn": "jenkinsio.JenkinsSpecMasterVolumesSecret",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "jenkins.io.ts",
        "line": 4111,
      },
      "name": "JenkinsSpecMasterVolumesSecret",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "JenkinsSpecMasterVolumesSecret#defaultMode",
            },
            "default": "0644. Directories within the path are not affected by this setting. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.",
            "remarks": "Must be a value between 0 and 0777. Defaults to 0644. Directories within the path are not affected by this setting. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.",
            "summary": "Optional: mode bits to use on created files by default.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "jenkins.io.ts",
            "line": 4118,
          },
          "name": "defaultMode",
          "optional": true,
          "type": Object {
            "primitive": "number",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "JenkinsSpecMasterVolumesSecret#items",
            },
            "remarks": "If specified, the listed keys will be projected into the specified paths, and unlisted keys will not be present. If a key is specified which is not present in the Secret, the volume setup will error unless it is marked optional. Paths must be relative and may not contain the '..' path or start with '..'.",
            "summary": "If unspecified, each key-value pair in the Data field of the referenced Secret will be projected into the volume as a file whose name is the key and content is the value.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "jenkins.io.ts",
            "line": 4125,
          },
          "name": "items",
          "optional": true,
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "fqn": "jenkinsio.JenkinsSpecMasterVolumesSecretItems",
              },
              "kind": "array",
            },
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "JenkinsSpecMasterVolumesSecret#optional",
            },
            "summary": "Specify whether the Secret or its keys must be defined.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "jenkins.io.ts",
            "line": 4132,
          },
          "name": "optional",
          "optional": true,
          "type": Object {
            "primitive": "boolean",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "JenkinsSpecMasterVolumesSecret#secretName",
            },
            "remarks": "More info: https://kubernetes.io/docs/concepts/storage/volumes#secret",
            "summary": "Name of the secret in the pod's namespace to use.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "jenkins.io.ts",
            "line": 4139,
          },
          "name": "secretName",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
      ],
    },
    "jenkinsio.JenkinsSpecMasterVolumesSecretItems": Object {
      "assembly": "jenkinsio",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "JenkinsSpecMasterVolumesSecretItems",
        },
        "summary": "Maps a string key to a path within a volume.",
      },
      "fqn": "jenkinsio.JenkinsSpecMasterVolumesSecretItems",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "jenkins.io.ts",
        "line": 5459,
      },
      "name": "JenkinsSpecMasterVolumesSecretItems",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "JenkinsSpecMasterVolumesSecretItems#key",
            },
            "summary": "The key to project.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "jenkins.io.ts",
            "line": 5465,
          },
          "name": "key",
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "JenkinsSpecMasterVolumesSecretItems#path",
            },
            "remarks": "May not be an absolute path. May not contain the path element '..'. May not start with the string '..'.",
            "summary": "The relative path of the file to map the key to.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "jenkins.io.ts",
            "line": 5479,
          },
          "name": "path",
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "JenkinsSpecMasterVolumesSecretItems#mode",
            },
            "remarks": "If not specified, the volume defaultMode will be used. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.",
            "summary": "Optional: mode bits to use on this file, must be a value between 0 and 0777.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "jenkins.io.ts",
            "line": 5472,
          },
          "name": "mode",
          "optional": true,
          "type": Object {
            "primitive": "number",
          },
        },
      ],
    },
    "jenkinsio.JenkinsSpecMasterVolumesStorageos": Object {
      "assembly": "jenkinsio",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "JenkinsSpecMasterVolumesStorageos",
        },
        "summary": "StorageOS represents a StorageOS volume attached and mounted on Kubernetes nodes.",
      },
      "fqn": "jenkinsio.JenkinsSpecMasterVolumesStorageos",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "jenkins.io.ts",
        "line": 4165,
      },
      "name": "JenkinsSpecMasterVolumesStorageos",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "JenkinsSpecMasterVolumesStorageos#fsType",
            },
            "remarks": "Must be a filesystem type supported by the host operating system. Ex. \\"ext4\\", \\"xfs\\", \\"ntfs\\". Implicitly inferred to be \\"ext4\\" if unspecified.",
            "summary": "Filesystem type to mount.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "jenkins.io.ts",
            "line": 4171,
          },
          "name": "fsType",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "JenkinsSpecMasterVolumesStorageos#readOnly",
            },
            "default": "false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts.",
            "remarks": "ReadOnly here will force the ReadOnly setting in VolumeMounts.",
            "summary": "Defaults to false (read/write).",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "jenkins.io.ts",
            "line": 4179,
          },
          "name": "readOnly",
          "optional": true,
          "type": Object {
            "primitive": "boolean",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "JenkinsSpecMasterVolumesStorageos#secretRef",
            },
            "remarks": "If not specified, default values will be attempted.",
            "summary": "SecretRef specifies the secret to use for obtaining the StorageOS API credentials.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "jenkins.io.ts",
            "line": 4186,
          },
          "name": "secretRef",
          "optional": true,
          "type": Object {
            "fqn": "jenkinsio.JenkinsSpecMasterVolumesStorageosSecretRef",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "JenkinsSpecMasterVolumesStorageos#volumeName",
            },
            "remarks": "Volume names are only unique within a namespace.",
            "summary": "VolumeName is the human-readable name of the StorageOS volume.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "jenkins.io.ts",
            "line": 4193,
          },
          "name": "volumeName",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "JenkinsSpecMasterVolumesStorageos#volumeNamespace",
            },
            "remarks": "If no namespace is specified then the Pod's namespace will be used.  This allows the Kubernetes name scoping to be mirrored within StorageOS for tighter integration. Set VolumeName to any name to override the default behaviour. Set to \\"default\\" if you are not using namespaces within StorageOS. Namespaces that do not pre-exist within StorageOS will be created.",
            "summary": "VolumeNamespace specifies the scope of the volume within StorageOS.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "jenkins.io.ts",
            "line": 4200,
          },
          "name": "volumeNamespace",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
      ],
    },
    "jenkinsio.JenkinsSpecMasterVolumesStorageosSecretRef": Object {
      "assembly": "jenkinsio",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "JenkinsSpecMasterVolumesStorageosSecretRef",
        },
        "remarks": "If not specified, default values will be attempted.",
        "summary": "SecretRef specifies the secret to use for obtaining the StorageOS API credentials.",
      },
      "fqn": "jenkinsio.JenkinsSpecMasterVolumesStorageosSecretRef",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "jenkins.io.ts",
        "line": 5504,
      },
      "name": "JenkinsSpecMasterVolumesStorageosSecretRef",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "JenkinsSpecMasterVolumesStorageosSecretRef#name",
            },
            "remarks": "More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?",
            "summary": "Name of the referent.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "jenkins.io.ts",
            "line": 5510,
          },
          "name": "name",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
      ],
    },
    "jenkinsio.JenkinsSpecMasterVolumesVsphereVolume": Object {
      "assembly": "jenkinsio",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "JenkinsSpecMasterVolumesVsphereVolume",
        },
        "summary": "VsphereVolume represents a vSphere volume attached and mounted on kubelets host machine.",
      },
      "fqn": "jenkinsio.JenkinsSpecMasterVolumesVsphereVolume",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "jenkins.io.ts",
        "line": 4227,
      },
      "name": "JenkinsSpecMasterVolumesVsphereVolume",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "JenkinsSpecMasterVolumesVsphereVolume#volumePath",
            },
            "summary": "Path that identifies vSphere volume vmdk.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "jenkins.io.ts",
            "line": 4254,
          },
          "name": "volumePath",
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "JenkinsSpecMasterVolumesVsphereVolume#fsType",
            },
            "remarks": "Must be a filesystem type supported by the host operating system. Ex. \\"ext4\\", \\"xfs\\", \\"ntfs\\". Implicitly inferred to be \\"ext4\\" if unspecified.",
            "summary": "Filesystem type to mount.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "jenkins.io.ts",
            "line": 4233,
          },
          "name": "fsType",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "JenkinsSpecMasterVolumesVsphereVolume#storagePolicyID",
            },
            "summary": "Storage Policy Based Management (SPBM) profile ID associated with the StoragePolicyName.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "jenkins.io.ts",
            "line": 4240,
          },
          "name": "storagePolicyId",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "JenkinsSpecMasterVolumesVsphereVolume#storagePolicyName",
            },
            "summary": "Storage Policy Based Management (SPBM) profile name.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "jenkins.io.ts",
            "line": 4247,
          },
          "name": "storagePolicyName",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
      ],
    },
    "jenkinsio.JenkinsSpecNotifications": Object {
      "assembly": "jenkinsio",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "JenkinsSpecNotifications",
        },
        "summary": "Notification is a service configuration used to send notifications about Jenkins status.",
      },
      "fqn": "jenkinsio.JenkinsSpecNotifications",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "jenkins.io.ts",
        "line": 476,
      },
      "name": "JenkinsSpecNotifications",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "JenkinsSpecNotifications#level",
            },
            "summary": "NotificationLevel defines the level of a Notification.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "jenkins.io.ts",
            "line": 482,
          },
          "name": "level",
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "JenkinsSpecNotifications#name",
            },
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "jenkins.io.ts",
            "line": 494,
          },
          "name": "name",
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "JenkinsSpecNotifications#verbose",
            },
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "jenkins.io.ts",
            "line": 520,
          },
          "name": "verbose",
          "type": Object {
            "primitive": "boolean",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "JenkinsSpecNotifications#mailgun",
            },
            "summary": "Mailgun is handler for Mailgun email service notification channel.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "jenkins.io.ts",
            "line": 489,
          },
          "name": "mailgun",
          "optional": true,
          "type": Object {
            "fqn": "jenkinsio.JenkinsSpecNotificationsMailgun",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "JenkinsSpecNotifications#slack",
            },
            "summary": "Slack is handler for Slack notification channel.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "jenkins.io.ts",
            "line": 501,
          },
          "name": "slack",
          "optional": true,
          "type": Object {
            "fqn": "jenkinsio.JenkinsSpecNotificationsSlack",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "JenkinsSpecNotifications#smtp",
            },
            "summary": "SMTP is handler for sending emails via this protocol.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "jenkins.io.ts",
            "line": 508,
          },
          "name": "smtp",
          "optional": true,
          "type": Object {
            "fqn": "jenkinsio.JenkinsSpecNotificationsSmtp",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "JenkinsSpecNotifications#teams",
            },
            "summary": "MicrosoftTeams is handler for Microsoft MicrosoftTeams notification channel.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "jenkins.io.ts",
            "line": 515,
          },
          "name": "teams",
          "optional": true,
          "type": Object {
            "fqn": "jenkinsio.JenkinsSpecNotificationsTeams",
          },
        },
      ],
    },
    "jenkinsio.JenkinsSpecNotificationsMailgun": Object {
      "assembly": "jenkinsio",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "JenkinsSpecNotificationsMailgun",
        },
        "summary": "Mailgun is handler for Mailgun email service notification channel.",
      },
      "fqn": "jenkinsio.JenkinsSpecNotificationsMailgun",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "jenkins.io.ts",
        "line": 1755,
      },
      "name": "JenkinsSpecNotificationsMailgun",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "JenkinsSpecNotificationsMailgun#apiKeySecretKeySelector",
            },
            "summary": "SecretKeySelector selects a key of a Secret.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "jenkins.io.ts",
            "line": 1761,
          },
          "name": "apiKeySecretKeySelector",
          "type": Object {
            "fqn": "jenkinsio.JenkinsSpecNotificationsMailgunApiKeySecretKeySelector",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "JenkinsSpecNotificationsMailgun#domain",
            },
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "jenkins.io.ts",
            "line": 1766,
          },
          "name": "domain",
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "JenkinsSpecNotificationsMailgun#from",
            },
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "jenkins.io.ts",
            "line": 1771,
          },
          "name": "from",
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "JenkinsSpecNotificationsMailgun#recipient",
            },
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "jenkins.io.ts",
            "line": 1776,
          },
          "name": "recipient",
          "type": Object {
            "primitive": "string",
          },
        },
      ],
    },
    "jenkinsio.JenkinsSpecNotificationsMailgunApiKeySecretKeySelector": Object {
      "assembly": "jenkinsio",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "JenkinsSpecNotificationsMailgunApiKeySecretKeySelector",
        },
        "summary": "SecretKeySelector selects a key of a Secret.",
      },
      "fqn": "jenkinsio.JenkinsSpecNotificationsMailgunApiKeySecretKeySelector",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "jenkins.io.ts",
        "line": 4280,
      },
      "name": "JenkinsSpecNotificationsMailgunApiKeySecretKeySelector",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "JenkinsSpecNotificationsMailgunApiKeySecretKeySelector#key",
            },
            "remarks": "Must be a valid secret key.",
            "summary": "The key of the secret to select from.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "jenkins.io.ts",
            "line": 4286,
          },
          "name": "key",
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "JenkinsSpecNotificationsMailgunApiKeySecretKeySelector#secret",
            },
            "summary": "The name of the secret in the pod's namespace to select from.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "jenkins.io.ts",
            "line": 4293,
          },
          "name": "secret",
          "type": Object {
            "fqn": "jenkinsio.JenkinsSpecNotificationsMailgunApiKeySecretKeySelectorSecret",
          },
        },
      ],
    },
    "jenkinsio.JenkinsSpecNotificationsMailgunApiKeySecretKeySelectorSecret": Object {
      "assembly": "jenkinsio",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "JenkinsSpecNotificationsMailgunApiKeySecretKeySelectorSecret",
        },
        "summary": "The name of the secret in the pod's namespace to select from.",
      },
      "fqn": "jenkinsio.JenkinsSpecNotificationsMailgunApiKeySecretKeySelectorSecret",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "jenkins.io.ts",
        "line": 5533,
      },
      "name": "JenkinsSpecNotificationsMailgunApiKeySecretKeySelectorSecret",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "JenkinsSpecNotificationsMailgunApiKeySecretKeySelectorSecret#name",
            },
            "remarks": "More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?",
            "summary": "Name of the referent.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "jenkins.io.ts",
            "line": 5539,
          },
          "name": "name",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
      ],
    },
    "jenkinsio.JenkinsSpecNotificationsSlack": Object {
      "assembly": "jenkinsio",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "JenkinsSpecNotificationsSlack",
        },
        "summary": "Slack is handler for Slack notification channel.",
      },
      "fqn": "jenkinsio.JenkinsSpecNotificationsSlack",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "jenkins.io.ts",
        "line": 1802,
      },
      "name": "JenkinsSpecNotificationsSlack",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "JenkinsSpecNotificationsSlack#webHookURLSecretKeySelector",
            },
            "summary": "The web hook URL to Slack App.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "jenkins.io.ts",
            "line": 1808,
          },
          "name": "webHookUrlSecretKeySelector",
          "type": Object {
            "fqn": "jenkinsio.JenkinsSpecNotificationsSlackWebHookUrlSecretKeySelector",
          },
        },
      ],
    },
    "jenkinsio.JenkinsSpecNotificationsSlackWebHookUrlSecretKeySelector": Object {
      "assembly": "jenkinsio",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "JenkinsSpecNotificationsSlackWebHookUrlSecretKeySelector",
        },
        "summary": "The web hook URL to Slack App.",
      },
      "fqn": "jenkinsio.JenkinsSpecNotificationsSlackWebHookUrlSecretKeySelector",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "jenkins.io.ts",
        "line": 4317,
      },
      "name": "JenkinsSpecNotificationsSlackWebHookUrlSecretKeySelector",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "JenkinsSpecNotificationsSlackWebHookUrlSecretKeySelector#key",
            },
            "remarks": "Must be a valid secret key.",
            "summary": "The key of the secret to select from.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "jenkins.io.ts",
            "line": 4323,
          },
          "name": "key",
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "JenkinsSpecNotificationsSlackWebHookUrlSecretKeySelector#secret",
            },
            "summary": "The name of the secret in the pod's namespace to select from.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "jenkins.io.ts",
            "line": 4330,
          },
          "name": "secret",
          "type": Object {
            "fqn": "jenkinsio.JenkinsSpecNotificationsSlackWebHookUrlSecretKeySelectorSecret",
          },
        },
      ],
    },
    "jenkinsio.JenkinsSpecNotificationsSlackWebHookUrlSecretKeySelectorSecret": Object {
      "assembly": "jenkinsio",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "JenkinsSpecNotificationsSlackWebHookUrlSecretKeySelectorSecret",
        },
        "summary": "The name of the secret in the pod's namespace to select from.",
      },
      "fqn": "jenkinsio.JenkinsSpecNotificationsSlackWebHookUrlSecretKeySelectorSecret",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "jenkins.io.ts",
        "line": 5562,
      },
      "name": "JenkinsSpecNotificationsSlackWebHookUrlSecretKeySelectorSecret",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "JenkinsSpecNotificationsSlackWebHookUrlSecretKeySelectorSecret#name",
            },
            "remarks": "More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?",
            "summary": "Name of the referent.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "jenkins.io.ts",
            "line": 5568,
          },
          "name": "name",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
      ],
    },
    "jenkinsio.JenkinsSpecNotificationsSmtp": Object {
      "assembly": "jenkinsio",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "JenkinsSpecNotificationsSmtp",
        },
        "summary": "SMTP is handler for sending emails via this protocol.",
      },
      "fqn": "jenkinsio.JenkinsSpecNotificationsSmtp",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "jenkins.io.ts",
        "line": 1831,
      },
      "name": "JenkinsSpecNotificationsSmtp",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "JenkinsSpecNotificationsSmtp#from",
            },
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "jenkins.io.ts",
            "line": 1835,
          },
          "name": "from",
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "JenkinsSpecNotificationsSmtp#passwordSecretKeySelector",
            },
            "summary": "SecretKeySelector selects a key of a Secret.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "jenkins.io.ts",
            "line": 1842,
          },
          "name": "passwordSecretKeySelector",
          "type": Object {
            "fqn": "jenkinsio.JenkinsSpecNotificationsSmtpPasswordSecretKeySelector",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "JenkinsSpecNotificationsSmtp#port",
            },
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "jenkins.io.ts",
            "line": 1847,
          },
          "name": "port",
          "type": Object {
            "primitive": "number",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "JenkinsSpecNotificationsSmtp#server",
            },
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "jenkins.io.ts",
            "line": 1852,
          },
          "name": "server",
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "JenkinsSpecNotificationsSmtp#to",
            },
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "jenkins.io.ts",
            "line": 1862,
          },
          "name": "to",
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "JenkinsSpecNotificationsSmtp#usernameSecretKeySelector",
            },
            "summary": "SecretKeySelector selects a key of a Secret.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "jenkins.io.ts",
            "line": 1869,
          },
          "name": "usernameSecretKeySelector",
          "type": Object {
            "fqn": "jenkinsio.JenkinsSpecNotificationsSmtpUsernameSecretKeySelector",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "JenkinsSpecNotificationsSmtp#tlsInsecureSkipVerify",
            },
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "jenkins.io.ts",
            "line": 1857,
          },
          "name": "tlsInsecureSkipVerify",
          "optional": true,
          "type": Object {
            "primitive": "boolean",
          },
        },
      ],
    },
    "jenkinsio.JenkinsSpecNotificationsSmtpPasswordSecretKeySelector": Object {
      "assembly": "jenkinsio",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "JenkinsSpecNotificationsSmtpPasswordSecretKeySelector",
        },
        "summary": "SecretKeySelector selects a key of a Secret.",
      },
      "fqn": "jenkinsio.JenkinsSpecNotificationsSmtpPasswordSecretKeySelector",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "jenkins.io.ts",
        "line": 4354,
      },
      "name": "JenkinsSpecNotificationsSmtpPasswordSecretKeySelector",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "JenkinsSpecNotificationsSmtpPasswordSecretKeySelector#key",
            },
            "remarks": "Must be a valid secret key.",
            "summary": "The key of the secret to select from.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "jenkins.io.ts",
            "line": 4360,
          },
          "name": "key",
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "JenkinsSpecNotificationsSmtpPasswordSecretKeySelector#secret",
            },
            "summary": "The name of the secret in the pod's namespace to select from.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "jenkins.io.ts",
            "line": 4367,
          },
          "name": "secret",
          "type": Object {
            "fqn": "jenkinsio.JenkinsSpecNotificationsSmtpPasswordSecretKeySelectorSecret",
          },
        },
      ],
    },
    "jenkinsio.JenkinsSpecNotificationsSmtpPasswordSecretKeySelectorSecret": Object {
      "assembly": "jenkinsio",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "JenkinsSpecNotificationsSmtpPasswordSecretKeySelectorSecret",
        },
        "summary": "The name of the secret in the pod's namespace to select from.",
      },
      "fqn": "jenkinsio.JenkinsSpecNotificationsSmtpPasswordSecretKeySelectorSecret",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "jenkins.io.ts",
        "line": 5591,
      },
      "name": "JenkinsSpecNotificationsSmtpPasswordSecretKeySelectorSecret",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "JenkinsSpecNotificationsSmtpPasswordSecretKeySelectorSecret#name",
            },
            "remarks": "More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?",
            "summary": "Name of the referent.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "jenkins.io.ts",
            "line": 5597,
          },
          "name": "name",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
      ],
    },
    "jenkinsio.JenkinsSpecNotificationsSmtpUsernameSecretKeySelector": Object {
      "assembly": "jenkinsio",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "JenkinsSpecNotificationsSmtpUsernameSecretKeySelector",
        },
        "summary": "SecretKeySelector selects a key of a Secret.",
      },
      "fqn": "jenkinsio.JenkinsSpecNotificationsSmtpUsernameSecretKeySelector",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "jenkins.io.ts",
        "line": 4391,
      },
      "name": "JenkinsSpecNotificationsSmtpUsernameSecretKeySelector",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "JenkinsSpecNotificationsSmtpUsernameSecretKeySelector#key",
            },
            "remarks": "Must be a valid secret key.",
            "summary": "The key of the secret to select from.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "jenkins.io.ts",
            "line": 4397,
          },
          "name": "key",
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "JenkinsSpecNotificationsSmtpUsernameSecretKeySelector#secret",
            },
            "summary": "The name of the secret in the pod's namespace to select from.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "jenkins.io.ts",
            "line": 4404,
          },
          "name": "secret",
          "type": Object {
            "fqn": "jenkinsio.JenkinsSpecNotificationsSmtpUsernameSecretKeySelectorSecret",
          },
        },
      ],
    },
    "jenkinsio.JenkinsSpecNotificationsSmtpUsernameSecretKeySelectorSecret": Object {
      "assembly": "jenkinsio",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "JenkinsSpecNotificationsSmtpUsernameSecretKeySelectorSecret",
        },
        "summary": "The name of the secret in the pod's namespace to select from.",
      },
      "fqn": "jenkinsio.JenkinsSpecNotificationsSmtpUsernameSecretKeySelectorSecret",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "jenkins.io.ts",
        "line": 5620,
      },
      "name": "JenkinsSpecNotificationsSmtpUsernameSecretKeySelectorSecret",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "JenkinsSpecNotificationsSmtpUsernameSecretKeySelectorSecret#name",
            },
            "remarks": "More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?",
            "summary": "Name of the referent.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "jenkins.io.ts",
            "line": 5626,
          },
          "name": "name",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
      ],
    },
    "jenkinsio.JenkinsSpecNotificationsTeams": Object {
      "assembly": "jenkinsio",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "JenkinsSpecNotificationsTeams",
        },
        "summary": "MicrosoftTeams is handler for Microsoft MicrosoftTeams notification channel.",
      },
      "fqn": "jenkinsio.JenkinsSpecNotificationsTeams",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "jenkins.io.ts",
        "line": 1898,
      },
      "name": "JenkinsSpecNotificationsTeams",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "JenkinsSpecNotificationsTeams#webHookURLSecretKeySelector",
            },
            "summary": "The web hook URL to MicrosoftTeams App.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "jenkins.io.ts",
            "line": 1904,
          },
          "name": "webHookUrlSecretKeySelector",
          "type": Object {
            "fqn": "jenkinsio.JenkinsSpecNotificationsTeamsWebHookUrlSecretKeySelector",
          },
        },
      ],
    },
    "jenkinsio.JenkinsSpecNotificationsTeamsWebHookUrlSecretKeySelector": Object {
      "assembly": "jenkinsio",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "JenkinsSpecNotificationsTeamsWebHookUrlSecretKeySelector",
        },
        "summary": "The web hook URL to MicrosoftTeams App.",
      },
      "fqn": "jenkinsio.JenkinsSpecNotificationsTeamsWebHookUrlSecretKeySelector",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "jenkins.io.ts",
        "line": 4428,
      },
      "name": "JenkinsSpecNotificationsTeamsWebHookUrlSecretKeySelector",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "JenkinsSpecNotificationsTeamsWebHookUrlSecretKeySelector#key",
            },
            "remarks": "Must be a valid secret key.",
            "summary": "The key of the secret to select from.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "jenkins.io.ts",
            "line": 4434,
          },
          "name": "key",
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "JenkinsSpecNotificationsTeamsWebHookUrlSecretKeySelector#secret",
            },
            "summary": "The name of the secret in the pod's namespace to select from.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "jenkins.io.ts",
            "line": 4441,
          },
          "name": "secret",
          "type": Object {
            "fqn": "jenkinsio.JenkinsSpecNotificationsTeamsWebHookUrlSecretKeySelectorSecret",
          },
        },
      ],
    },
    "jenkinsio.JenkinsSpecNotificationsTeamsWebHookUrlSecretKeySelectorSecret": Object {
      "assembly": "jenkinsio",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "JenkinsSpecNotificationsTeamsWebHookUrlSecretKeySelectorSecret",
        },
        "summary": "The name of the secret in the pod's namespace to select from.",
      },
      "fqn": "jenkinsio.JenkinsSpecNotificationsTeamsWebHookUrlSecretKeySelectorSecret",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "jenkins.io.ts",
        "line": 5649,
      },
      "name": "JenkinsSpecNotificationsTeamsWebHookUrlSecretKeySelectorSecret",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "JenkinsSpecNotificationsTeamsWebHookUrlSecretKeySelectorSecret#name",
            },
            "remarks": "More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?",
            "summary": "Name of the referent.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "jenkins.io.ts",
            "line": 5655,
          },
          "name": "name",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
      ],
    },
    "jenkinsio.JenkinsSpecRestore": Object {
      "assembly": "jenkinsio",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "JenkinsSpecRestore",
        },
        "summary": "Backup defines configuration of Jenkins backup restore More info: https://github.com/jenkinsci/kubernetes-operator/blob/master/docs/getting-started.md#configure-backup-and-restore.",
      },
      "fqn": "jenkinsio.JenkinsSpecRestore",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "jenkins.io.ts",
        "line": 549,
      },
      "name": "JenkinsSpecRestore",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "JenkinsSpecRestore#action",
            },
            "summary": "Action defines action which performs restore backup in restore container sidecar.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "jenkins.io.ts",
            "line": 555,
          },
          "name": "action",
          "type": Object {
            "fqn": "jenkinsio.JenkinsSpecRestoreAction",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "JenkinsSpecRestore#containerName",
            },
            "summary": "ContainerName is the container name responsible for restore backup operation.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "jenkins.io.ts",
            "line": 562,
          },
          "name": "containerName",
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "JenkinsSpecRestore#recoveryOnce",
            },
            "summary": "RecoveryOnce if want to restore specific backup set this field and then Jenkins will be restarted and desired backup will be restored.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "jenkins.io.ts",
            "line": 569,
          },
          "name": "recoveryOnce",
          "optional": true,
          "type": Object {
            "primitive": "number",
          },
        },
      ],
    },
    "jenkinsio.JenkinsSpecRestoreAction": Object {
      "assembly": "jenkinsio",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "JenkinsSpecRestoreAction",
        },
        "summary": "Action defines action which performs restore backup in restore container sidecar.",
      },
      "fqn": "jenkinsio.JenkinsSpecRestoreAction",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "jenkins.io.ts",
        "line": 1927,
      },
      "name": "JenkinsSpecRestoreAction",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "JenkinsSpecRestoreAction#exec",
            },
            "summary": "Exec specifies the action to take.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "jenkins.io.ts",
            "line": 1933,
          },
          "name": "exec",
          "optional": true,
          "type": Object {
            "fqn": "jenkinsio.JenkinsSpecRestoreActionExec",
          },
        },
      ],
    },
    "jenkinsio.JenkinsSpecRestoreActionExec": Object {
      "assembly": "jenkinsio",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "JenkinsSpecRestoreActionExec",
        },
        "summary": "Exec specifies the action to take.",
      },
      "fqn": "jenkinsio.JenkinsSpecRestoreActionExec",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "jenkins.io.ts",
        "line": 4465,
      },
      "name": "JenkinsSpecRestoreActionExec",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "JenkinsSpecRestoreActionExec#command",
            },
            "remarks": "The command is simply exec'd, it is not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use a shell, you need to explicitly call out to that shell. Exit status of 0 is treated as live/healthy and non-zero is unhealthy.",
            "summary": "Command is the command line to execute inside the container, the working directory for the command  is root ('/') in the container's filesystem.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "jenkins.io.ts",
            "line": 4471,
          },
          "name": "command",
          "optional": true,
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "primitive": "string",
              },
              "kind": "array",
            },
          },
        },
      ],
    },
    "jenkinsio.JenkinsSpecRoles": Object {
      "assembly": "jenkinsio",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "JenkinsSpecRoles",
        },
        "summary": "RoleRef contains information that points to the role being used.",
      },
      "fqn": "jenkinsio.JenkinsSpecRoles",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "jenkins.io.ts",
        "line": 594,
      },
      "name": "JenkinsSpecRoles",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "JenkinsSpecRoles#apiGroup",
            },
            "summary": "APIGroup is the group for the resource being referenced.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "jenkins.io.ts",
            "line": 600,
          },
          "name": "apiGroup",
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "JenkinsSpecRoles#kind",
            },
            "summary": "Kind is the type of resource being referenced.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "jenkins.io.ts",
            "line": 607,
          },
          "name": "kind",
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "JenkinsSpecRoles#name",
            },
            "summary": "Name is the name of resource being referenced.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "jenkins.io.ts",
            "line": 614,
          },
          "name": "name",
          "type": Object {
            "primitive": "string",
          },
        },
      ],
    },
    "jenkinsio.JenkinsSpecSeedJobs": Object {
      "assembly": "jenkinsio",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "JenkinsSpecSeedJobs",
        },
        "summary": "SeedJob defines configuration for seed job More info: https://github.com/jenkinsci/kubernetes-operator/blob/master/docs/getting-started.md#configure-seed-jobs-and-pipelines.",
      },
      "fqn": "jenkinsio.JenkinsSpecSeedJobs",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "jenkins.io.ts",
        "line": 639,
      },
      "name": "JenkinsSpecSeedJobs",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "JenkinsSpecSeedJobs#additionalClasspath",
            },
            "summary": "AdditionalClasspath is setting for Job DSL API plugin to set Additional Classpath.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "jenkins.io.ts",
            "line": 645,
          },
          "name": "additionalClasspath",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "JenkinsSpecSeedJobs#bitbucketPushTrigger",
            },
            "summary": "BitbucketPushTrigger is used for Bitbucket web hooks.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "jenkins.io.ts",
            "line": 652,
          },
          "name": "bitbucketPushTrigger",
          "optional": true,
          "type": Object {
            "primitive": "boolean",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "JenkinsSpecSeedJobs#buildPeriodically",
            },
            "summary": "BuildPeriodically is setting for scheduled trigger.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "jenkins.io.ts",
            "line": 659,
          },
          "name": "buildPeriodically",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "JenkinsSpecSeedJobs#credentialID",
            },
            "summary": "CredentialID is the Kubernetes secret name which stores repository access credentials.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "jenkins.io.ts",
            "line": 666,
          },
          "name": "credentialId",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "JenkinsSpecSeedJobs#credentialType",
            },
            "summary": "JenkinsCredentialType is the https://jenkinsci.github.io/kubernetes-credentials-provider-plugin/ credential type.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "jenkins.io.ts",
            "line": 673,
          },
          "name": "credentialType",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "JenkinsSpecSeedJobs#description",
            },
            "summary": "Description is the description of the seed job.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "jenkins.io.ts",
            "line": 680,
          },
          "name": "description",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "JenkinsSpecSeedJobs#failOnMissingPlugin",
            },
            "summary": "FailOnMissingPlugin is setting for Job DSL API plugin that fails job if required plugin is missing.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "jenkins.io.ts",
            "line": 687,
          },
          "name": "failOnMissingPlugin",
          "optional": true,
          "type": Object {
            "primitive": "boolean",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "JenkinsSpecSeedJobs#githubPushTrigger",
            },
            "summary": "GitHubPushTrigger is used for GitHub web hooks.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "jenkins.io.ts",
            "line": 694,
          },
          "name": "githubPushTrigger",
          "optional": true,
          "type": Object {
            "primitive": "boolean",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "JenkinsSpecSeedJobs#id",
            },
            "summary": "ID is the unique seed job name.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "jenkins.io.ts",
            "line": 701,
          },
          "name": "id",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "JenkinsSpecSeedJobs#ignoreMissingFiles",
            },
            "summary": "IgnoreMissingFiles is setting for Job DSL API plugin to ignore files that miss.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "jenkins.io.ts",
            "line": 708,
          },
          "name": "ignoreMissingFiles",
          "optional": true,
          "type": Object {
            "primitive": "boolean",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "JenkinsSpecSeedJobs#pollSCM",
            },
            "summary": "PollSCM is setting for polling changes in SCM.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "jenkins.io.ts",
            "line": 715,
          },
          "name": "pollScm",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "JenkinsSpecSeedJobs#repositoryBranch",
            },
            "summary": "RepositoryBranch is the repository branch where are seed job definitions.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "jenkins.io.ts",
            "line": 722,
          },
          "name": "repositoryBranch",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "JenkinsSpecSeedJobs#repositoryUrl",
            },
            "remarks": "Can be SSH or HTTPS.",
            "summary": "RepositoryURL is the repository access URL.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "jenkins.io.ts",
            "line": 729,
          },
          "name": "repositoryUrl",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "JenkinsSpecSeedJobs#targets",
            },
            "summary": "Targets is the repository path where are seed job definitions.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "jenkins.io.ts",
            "line": 736,
          },
          "name": "targets",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "JenkinsSpecSeedJobs#unstableOnDeprecation",
            },
            "summary": "UnstableOnDeprecation is setting for Job DSL API plugin that sets build status as unstable if build using deprecated features.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "jenkins.io.ts",
            "line": 743,
          },
          "name": "unstableOnDeprecation",
          "optional": true,
          "type": Object {
            "primitive": "boolean",
          },
        },
      ],
    },
    "jenkinsio.JenkinsSpecService": Object {
      "assembly": "jenkinsio",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "JenkinsSpecService",
        },
        "default": "port: 8080 type: ClusterIP",
        "summary": "Service is Kubernetes service of Jenkins master HTTP pod Defaults to : port: 8080 type: ClusterIP.",
      },
      "fqn": "jenkinsio.JenkinsSpecService",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "jenkins.io.ts",
        "line": 781,
      },
      "name": "JenkinsSpecService",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "JenkinsSpecService#annotations",
            },
            "remarks": "They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations",
            "summary": "Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "jenkins.io.ts",
            "line": 787,
          },
          "name": "annotations",
          "optional": true,
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "primitive": "string",
              },
              "kind": "map",
            },
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "JenkinsSpecService#labels",
            },
            "remarks": "If empty or not present, the service is assumed to have an external process managing its endpoints, which Kubernetes will not modify. Only applies to types ClusterIP, NodePort, and LoadBalancer. Ignored if type is ExternalName. More info: https://kubernetes.io/docs/concepts/services-networking/service/",
            "summary": "Route service traffic to pods with label keys and values matching this selector.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "jenkins.io.ts",
            "line": 794,
          },
          "name": "labels",
          "optional": true,
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "primitive": "string",
              },
              "kind": "map",
            },
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "JenkinsSpecService#loadBalancerIP",
            },
            "remarks": "This feature depends on whether the underlying cloud-provider supports specifying the loadBalancerIP when a load balancer is created. This field will be ignored if the cloud-provider does not support the feature.",
            "summary": "Only applies to Service Type: LoadBalancer LoadBalancer will get created with the IP specified in this field.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "jenkins.io.ts",
            "line": 801,
          },
          "name": "loadBalancerIp",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "JenkinsSpecService#loadBalancerSourceRanges",
            },
            "remarks": "This field will be ignored if the cloud-provider does not support the feature.\\" More info: https://kubernetes.io/docs/tasks/access-application-cluster/configure-cloud-provider-firewall/",
            "summary": "If specified and supported by the platform, this will restrict traffic through the cloud-provider load-balancer will be restricted to the specified client IPs.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "jenkins.io.ts",
            "line": 808,
          },
          "name": "loadBalancerSourceRanges",
          "optional": true,
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "primitive": "string",
              },
              "kind": "array",
            },
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "JenkinsSpecService#nodePort",
            },
            "default": "to auto-allocate a port if the ServiceType of this Service requires one. More info: https://kubernetes.io/docs/concepts/services-networking/service/#type-nodeport",
            "remarks": "Usually assigned by the system. If specified, it will be allocated to the service if unused or else creation of the service will fail. Default is to auto-allocate a port if the ServiceType of this Service requires one. More info: https://kubernetes.io/docs/concepts/services-networking/service/#type-nodeport",
            "summary": "The port on each node on which this service is exposed when type=NodePort or LoadBalancer.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "jenkins.io.ts",
            "line": 816,
          },
          "name": "nodePort",
          "optional": true,
          "type": Object {
            "primitive": "number",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "JenkinsSpecService#port",
            },
            "remarks": "More info: https://kubernetes.io/docs/concepts/services-networking/service/#virtual-ips-and-service-proxies",
            "summary": "The port that are exposed by this service.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "jenkins.io.ts",
            "line": 823,
          },
          "name": "port",
          "optional": true,
          "type": Object {
            "primitive": "number",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "JenkinsSpecService#type",
            },
            "default": "ClusterIP. Valid options are ExternalName, ClusterIP, NodePort, and LoadBalancer. \\"ExternalName\\" maps to the specified externalName. \\"ClusterIP\\" allocates a cluster-internal IP address for load-balancing to endpoints. Endpoints are determined by the selector or if that is not specified, by manual construction of an Endpoints object. If clusterIP is \\"None\\", no virtual IP is allocated and the endpoints are published as a set of endpoints rather than a stable IP. \\"NodePort\\" builds on ClusterIP and allocates a port on every node which routes to the clusterIP. \\"LoadBalancer\\" builds on NodePort and creates an external load-balancer (if supported in the current cloud) which routes to the clusterIP. More info: https://kubernetes.io/docs/concepts/services-networking/service/#publishing-services---service-types",
            "remarks": "Defaults to ClusterIP. Valid options are ExternalName, ClusterIP, NodePort, and LoadBalancer. \\"ExternalName\\" maps to the specified externalName. \\"ClusterIP\\" allocates a cluster-internal IP address for load-balancing to endpoints. Endpoints are determined by the selector or if that is not specified, by manual construction of an Endpoints object. If clusterIP is \\"None\\", no virtual IP is allocated and the endpoints are published as a set of endpoints rather than a stable IP. \\"NodePort\\" builds on ClusterIP and allocates a port on every node which routes to the clusterIP. \\"LoadBalancer\\" builds on NodePort and creates an external load-balancer (if supported in the current cloud) which routes to the clusterIP. More info: https://kubernetes.io/docs/concepts/services-networking/service/#publishing-services---service-types",
            "summary": "Type determines how the Service is exposed.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "jenkins.io.ts",
            "line": 831,
          },
          "name": "type",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
      ],
    },
    "jenkinsio.JenkinsSpecServiceAccount": Object {
      "assembly": "jenkinsio",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "JenkinsSpecServiceAccount",
        },
        "summary": "ServiceAccount defines Jenkins master service account attributes.",
      },
      "fqn": "jenkinsio.JenkinsSpecServiceAccount",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "jenkins.io.ts",
        "line": 860,
      },
      "name": "JenkinsSpecServiceAccount",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "JenkinsSpecServiceAccount#annotations",
            },
            "remarks": "They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations",
            "summary": "Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "jenkins.io.ts",
            "line": 866,
          },
          "name": "annotations",
          "optional": true,
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "primitive": "string",
              },
              "kind": "map",
            },
          },
        },
      ],
    },
    "jenkinsio.JenkinsSpecSlaveService": Object {
      "assembly": "jenkinsio",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "JenkinsSpecSlaveService",
        },
        "default": "port: 50000 type: ClusterIP",
        "summary": "Service is Kubernetes service of Jenkins slave pods Defaults to : port: 50000 type: ClusterIP.",
      },
      "fqn": "jenkinsio.JenkinsSpecSlaveService",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "jenkins.io.ts",
        "line": 890,
      },
      "name": "JenkinsSpecSlaveService",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "JenkinsSpecSlaveService#annotations",
            },
            "remarks": "They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations",
            "summary": "Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "jenkins.io.ts",
            "line": 896,
          },
          "name": "annotations",
          "optional": true,
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "primitive": "string",
              },
              "kind": "map",
            },
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "JenkinsSpecSlaveService#labels",
            },
            "remarks": "If empty or not present, the service is assumed to have an external process managing its endpoints, which Kubernetes will not modify. Only applies to types ClusterIP, NodePort, and LoadBalancer. Ignored if type is ExternalName. More info: https://kubernetes.io/docs/concepts/services-networking/service/",
            "summary": "Route service traffic to pods with label keys and values matching this selector.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "jenkins.io.ts",
            "line": 903,
          },
          "name": "labels",
          "optional": true,
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "primitive": "string",
              },
              "kind": "map",
            },
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "JenkinsSpecSlaveService#loadBalancerIP",
            },
            "remarks": "This feature depends on whether the underlying cloud-provider supports specifying the loadBalancerIP when a load balancer is created. This field will be ignored if the cloud-provider does not support the feature.",
            "summary": "Only applies to Service Type: LoadBalancer LoadBalancer will get created with the IP specified in this field.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "jenkins.io.ts",
            "line": 910,
          },
          "name": "loadBalancerIp",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "JenkinsSpecSlaveService#loadBalancerSourceRanges",
            },
            "remarks": "This field will be ignored if the cloud-provider does not support the feature.\\" More info: https://kubernetes.io/docs/tasks/access-application-cluster/configure-cloud-provider-firewall/",
            "summary": "If specified and supported by the platform, this will restrict traffic through the cloud-provider load-balancer will be restricted to the specified client IPs.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "jenkins.io.ts",
            "line": 917,
          },
          "name": "loadBalancerSourceRanges",
          "optional": true,
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "primitive": "string",
              },
              "kind": "array",
            },
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "JenkinsSpecSlaveService#nodePort",
            },
            "default": "to auto-allocate a port if the ServiceType of this Service requires one. More info: https://kubernetes.io/docs/concepts/services-networking/service/#type-nodeport",
            "remarks": "Usually assigned by the system. If specified, it will be allocated to the service if unused or else creation of the service will fail. Default is to auto-allocate a port if the ServiceType of this Service requires one. More info: https://kubernetes.io/docs/concepts/services-networking/service/#type-nodeport",
            "summary": "The port on each node on which this service is exposed when type=NodePort or LoadBalancer.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "jenkins.io.ts",
            "line": 925,
          },
          "name": "nodePort",
          "optional": true,
          "type": Object {
            "primitive": "number",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "JenkinsSpecSlaveService#port",
            },
            "remarks": "More info: https://kubernetes.io/docs/concepts/services-networking/service/#virtual-ips-and-service-proxies",
            "summary": "The port that are exposed by this service.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "jenkins.io.ts",
            "line": 932,
          },
          "name": "port",
          "optional": true,
          "type": Object {
            "primitive": "number",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "JenkinsSpecSlaveService#type",
            },
            "default": "ClusterIP. Valid options are ExternalName, ClusterIP, NodePort, and LoadBalancer. \\"ExternalName\\" maps to the specified externalName. \\"ClusterIP\\" allocates a cluster-internal IP address for load-balancing to endpoints. Endpoints are determined by the selector or if that is not specified, by manual construction of an Endpoints object. If clusterIP is \\"None\\", no virtual IP is allocated and the endpoints are published as a set of endpoints rather than a stable IP. \\"NodePort\\" builds on ClusterIP and allocates a port on every node which routes to the clusterIP. \\"LoadBalancer\\" builds on NodePort and creates an external load-balancer (if supported in the current cloud) which routes to the clusterIP. More info: https://kubernetes.io/docs/concepts/services-networking/service/#publishing-services---service-types",
            "remarks": "Defaults to ClusterIP. Valid options are ExternalName, ClusterIP, NodePort, and LoadBalancer. \\"ExternalName\\" maps to the specified externalName. \\"ClusterIP\\" allocates a cluster-internal IP address for load-balancing to endpoints. Endpoints are determined by the selector or if that is not specified, by manual construction of an Endpoints object. If clusterIP is \\"None\\", no virtual IP is allocated and the endpoints are published as a set of endpoints rather than a stable IP. \\"NodePort\\" builds on ClusterIP and allocates a port on every node which routes to the clusterIP. \\"LoadBalancer\\" builds on NodePort and creates an external load-balancer (if supported in the current cloud) which routes to the clusterIP. More info: https://kubernetes.io/docs/concepts/services-networking/service/#publishing-services---service-types",
            "summary": "Type determines how the Service is exposed.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "jenkins.io.ts",
            "line": 940,
          },
          "name": "type",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
      ],
    },
  },
  "version": "0.0.0",
}
`;

exports[`snapshots mixed_crd.yaml 1`] = `
Object {
  "author": Object {
    "name": "generated@generated.com",
    "roles": Array [
      "author",
    ],
  },
  "dependencies": Object {
    "cdk8s": "999.999.999",
    "constructs": "3.3.104",
  },
  "dependencyClosure": Object {
    "cdk8s": Object {
      "targets": Object {
        "dotnet": Object {
          "namespace": "Org.Cdk8s",
          "packageId": "Org.Cdk8s",
        },
        "go": Object {
          "moduleName": "github.com/cdk8s-team/cdk8s-core-go",
        },
        "java": Object {
          "maven": Object {
            "artifactId": "cdk8s",
            "groupId": "org.cdk8s",
          },
          "package": "org.cdk8s",
        },
        "js": Object {
          "npm": "cdk8s",
        },
        "python": Object {
          "distName": "cdk8s",
          "module": "cdk8s",
        },
      },
    },
    "constructs": Object {
      "targets": Object {
        "dotnet": Object {
          "namespace": "Constructs",
          "packageId": "Constructs",
        },
        "go": Object {
          "moduleName": "github.com/aws/constructs-go",
        },
        "java": Object {
          "maven": Object {
            "artifactId": "constructs",
            "groupId": "software.constructs",
          },
          "package": "software.constructs",
        },
        "js": Object {
          "npm": "constructs",
        },
        "python": Object {
          "distName": "constructs",
          "module": "constructs",
        },
      },
    },
  },
  "description": "stableexamplecom",
  "fingerprint": "<fingerprint>",
  "homepage": "http://generated",
  "jsiiVersion": "1.32.0 (build 3f4fe23)",
  "license": "UNLICENSED",
  "metadata": Object {
    "jsii": Object {
      "pacmak": Object {
        "hasDefaultInterfaces": true,
      },
    },
  },
  "name": "stableexamplecom",
  "repository": Object {
    "type": "git",
    "url": "http://generated",
  },
  "schema": "jsii/0.10.0",
  "targets": Object {
    "js": Object {
      "npm": "stableexamplecom",
    },
  },
  "types": Object {
    "stableexamplecom.CronTab": Object {
      "assembly": "stableexamplecom",
      "base": "cdk8s.ApiObject",
      "docs": Object {
        "custom": Object {
          "schema": "CronTab",
        },
      },
      "fqn": "stableexamplecom.CronTab",
      "initializer": Object {
        "docs": Object {
          "summary": "Defines a \\"CronTab\\" API object.",
        },
        "locationInModule": Object {
          "filename": "stable.example.com.ts",
          "line": 39,
        },
        "parameters": Array [
          Object {
            "docs": Object {
              "summary": "the scope in which to define this object.",
            },
            "name": "scope",
            "type": Object {
              "fqn": "constructs.Construct",
            },
          },
          Object {
            "docs": Object {
              "summary": "a scope-local name for the object.",
            },
            "name": "id",
            "type": Object {
              "primitive": "string",
            },
          },
          Object {
            "docs": Object {
              "summary": "initialization props.",
            },
            "name": "props",
            "optional": true,
            "type": Object {
              "fqn": "stableexamplecom.CronTabProps",
            },
          },
        ],
      },
      "kind": "class",
      "locationInModule": Object {
        "filename": "stable.example.com.ts",
        "line": 10,
      },
      "methods": Array [
        Object {
          "docs": Object {
            "remarks": "This can be used to inline resource manifests inside other objects (e.g. as templates).",
            "summary": "Renders a Kubernetes manifest for \\"CronTab\\".",
          },
          "locationInModule": Object {
            "filename": "stable.example.com.ts",
            "line": 26,
          },
          "name": "manifest",
          "parameters": Array [
            Object {
              "docs": Object {
                "summary": "initialization props.",
              },
              "name": "props",
              "optional": true,
              "type": Object {
                "fqn": "stableexamplecom.CronTabProps",
              },
            },
          ],
          "returns": Object {
            "type": Object {
              "primitive": "any",
            },
          },
          "static": true,
        },
      ],
      "name": "CronTab",
      "properties": Array [
        Object {
          "const": true,
          "docs": Object {
            "summary": "Returns the apiVersion and kind for \\"CronTab\\".",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "stable.example.com.ts",
            "line": 14,
          },
          "name": "GVK",
          "static": true,
          "type": Object {
            "fqn": "cdk8s.GroupVersionKind",
          },
        },
      ],
    },
    "stableexamplecom.CronTabProps": Object {
      "assembly": "stableexamplecom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "CronTab",
        },
      },
      "fqn": "stableexamplecom.CronTabProps",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "stable.example.com.ts",
        "line": 47,
      },
      "name": "CronTabProps",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "CronTab#spec",
            },
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "stable.example.com.ts",
            "line": 51,
          },
          "name": "spec",
          "optional": true,
          "type": Object {
            "fqn": "stableexamplecom.CronTabSpec",
          },
        },
      ],
    },
    "stableexamplecom.CronTabSpec": Object {
      "assembly": "stableexamplecom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "CronTabSpec",
        },
      },
      "fqn": "stableexamplecom.CronTabSpec",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "stable.example.com.ts",
        "line": 72,
      },
      "name": "CronTabSpec",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "CronTabSpec#cronSpec",
            },
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "stable.example.com.ts",
            "line": 76,
          },
          "name": "cronSpec",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "CronTabSpec#image",
            },
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "stable.example.com.ts",
            "line": 81,
          },
          "name": "image",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "CronTabSpec#replicas",
            },
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "stable.example.com.ts",
            "line": 86,
          },
          "name": "replicas",
          "optional": true,
          "type": Object {
            "primitive": "number",
          },
        },
      ],
    },
  },
  "version": "0.0.0",
}
`;

exports[`snapshots multi_object_crd.yaml 1`] = `
Object {
  "author": Object {
    "name": "generated@generated.com",
    "roles": Array [
      "author",
    ],
  },
  "dependencies": Object {
    "cdk8s": "999.999.999",
    "constructs": "3.3.104",
  },
  "dependencyClosure": Object {
    "cdk8s": Object {
      "targets": Object {
        "dotnet": Object {
          "namespace": "Org.Cdk8s",
          "packageId": "Org.Cdk8s",
        },
        "go": Object {
          "moduleName": "github.com/cdk8s-team/cdk8s-core-go",
        },
        "java": Object {
          "maven": Object {
            "artifactId": "cdk8s",
            "groupId": "org.cdk8s",
          },
          "package": "org.cdk8s",
        },
        "js": Object {
          "npm": "cdk8s",
        },
        "python": Object {
          "distName": "cdk8s",
          "module": "cdk8s",
        },
      },
    },
    "constructs": Object {
      "targets": Object {
        "dotnet": Object {
          "namespace": "Constructs",
          "packageId": "Constructs",
        },
        "go": Object {
          "moduleName": "github.com/aws/constructs-go",
        },
        "java": Object {
          "maven": Object {
            "artifactId": "constructs",
            "groupId": "software.constructs",
          },
          "package": "software.constructs",
        },
        "js": Object {
          "npm": "constructs",
        },
        "python": Object {
          "distName": "constructs",
          "module": "constructs",
        },
      },
    },
  },
  "description": "stableexamplecom",
  "fingerprint": "<fingerprint>",
  "homepage": "http://generated",
  "jsiiVersion": "1.32.0 (build 3f4fe23)",
  "license": "UNLICENSED",
  "metadata": Object {
    "jsii": Object {
      "pacmak": Object {
        "hasDefaultInterfaces": true,
      },
    },
  },
  "name": "stableexamplecom",
  "repository": Object {
    "type": "git",
    "url": "http://generated",
  },
  "schema": "jsii/0.10.0",
  "targets": Object {
    "js": Object {
      "npm": "stableexamplecom",
    },
  },
  "types": Object {
    "stableexamplecom.CronTab": Object {
      "assembly": "stableexamplecom",
      "base": "cdk8s.ApiObject",
      "docs": Object {
        "custom": Object {
          "schema": "CronTab",
        },
      },
      "fqn": "stableexamplecom.CronTab",
      "initializer": Object {
        "docs": Object {
          "summary": "Defines a \\"CronTab\\" API object.",
        },
        "locationInModule": Object {
          "filename": "stable.example.com.ts",
          "line": 39,
        },
        "parameters": Array [
          Object {
            "docs": Object {
              "summary": "the scope in which to define this object.",
            },
            "name": "scope",
            "type": Object {
              "fqn": "constructs.Construct",
            },
          },
          Object {
            "docs": Object {
              "summary": "a scope-local name for the object.",
            },
            "name": "id",
            "type": Object {
              "primitive": "string",
            },
          },
          Object {
            "docs": Object {
              "summary": "initialization props.",
            },
            "name": "props",
            "optional": true,
            "type": Object {
              "fqn": "stableexamplecom.CronTabProps",
            },
          },
        ],
      },
      "kind": "class",
      "locationInModule": Object {
        "filename": "stable.example.com.ts",
        "line": 10,
      },
      "methods": Array [
        Object {
          "docs": Object {
            "remarks": "This can be used to inline resource manifests inside other objects (e.g. as templates).",
            "summary": "Renders a Kubernetes manifest for \\"CronTab\\".",
          },
          "locationInModule": Object {
            "filename": "stable.example.com.ts",
            "line": 26,
          },
          "name": "manifest",
          "parameters": Array [
            Object {
              "docs": Object {
                "summary": "initialization props.",
              },
              "name": "props",
              "optional": true,
              "type": Object {
                "fqn": "stableexamplecom.CronTabProps",
              },
            },
          ],
          "returns": Object {
            "type": Object {
              "primitive": "any",
            },
          },
          "static": true,
        },
      ],
      "name": "CronTab",
      "properties": Array [
        Object {
          "const": true,
          "docs": Object {
            "summary": "Returns the apiVersion and kind for \\"CronTab\\".",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "stable.example.com.ts",
            "line": 14,
          },
          "name": "GVK",
          "static": true,
          "type": Object {
            "fqn": "cdk8s.GroupVersionKind",
          },
        },
      ],
    },
    "stableexamplecom.CronTabProps": Object {
      "assembly": "stableexamplecom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "CronTab",
        },
      },
      "fqn": "stableexamplecom.CronTabProps",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "stable.example.com.ts",
        "line": 47,
      },
      "name": "CronTabProps",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "CronTab#spec",
            },
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "stable.example.com.ts",
            "line": 51,
          },
          "name": "spec",
          "optional": true,
          "type": Object {
            "fqn": "stableexamplecom.CronTabSpec",
          },
        },
      ],
    },
    "stableexamplecom.CronTabSpec": Object {
      "assembly": "stableexamplecom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "CronTabSpec",
        },
      },
      "fqn": "stableexamplecom.CronTabSpec",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "stable.example.com.ts",
        "line": 72,
      },
      "name": "CronTabSpec",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "CronTabSpec#cronSpec",
            },
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "stable.example.com.ts",
            "line": 76,
          },
          "name": "cronSpec",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "CronTabSpec#image",
            },
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "stable.example.com.ts",
            "line": 81,
          },
          "name": "image",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "CronTabSpec#replicas",
            },
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "stable.example.com.ts",
            "line": 86,
          },
          "name": "replicas",
          "optional": true,
          "type": Object {
            "primitive": "number",
          },
        },
      ],
    },
    "stableexamplecom.OtherCronTab": Object {
      "assembly": "stableexamplecom",
      "base": "cdk8s.ApiObject",
      "docs": Object {
        "custom": Object {
          "schema": "OtherCronTab",
        },
      },
      "fqn": "stableexamplecom.OtherCronTab",
      "initializer": Object {
        "docs": Object {
          "summary": "Defines a \\"OtherCronTab\\" API object.",
        },
        "locationInModule": Object {
          "filename": "stable.example.com.ts",
          "line": 140,
        },
        "parameters": Array [
          Object {
            "docs": Object {
              "summary": "the scope in which to define this object.",
            },
            "name": "scope",
            "type": Object {
              "fqn": "constructs.Construct",
            },
          },
          Object {
            "docs": Object {
              "summary": "a scope-local name for the object.",
            },
            "name": "id",
            "type": Object {
              "primitive": "string",
            },
          },
          Object {
            "docs": Object {
              "summary": "initialization props.",
            },
            "name": "props",
            "optional": true,
            "type": Object {
              "fqn": "stableexamplecom.OtherCronTabProps",
            },
          },
        ],
      },
      "kind": "class",
      "locationInModule": Object {
        "filename": "stable.example.com.ts",
        "line": 111,
      },
      "methods": Array [
        Object {
          "docs": Object {
            "remarks": "This can be used to inline resource manifests inside other objects (e.g. as templates).",
            "summary": "Renders a Kubernetes manifest for \\"OtherCronTab\\".",
          },
          "locationInModule": Object {
            "filename": "stable.example.com.ts",
            "line": 127,
          },
          "name": "manifest",
          "parameters": Array [
            Object {
              "docs": Object {
                "summary": "initialization props.",
              },
              "name": "props",
              "optional": true,
              "type": Object {
                "fqn": "stableexamplecom.OtherCronTabProps",
              },
            },
          ],
          "returns": Object {
            "type": Object {
              "primitive": "any",
            },
          },
          "static": true,
        },
      ],
      "name": "OtherCronTab",
      "properties": Array [
        Object {
          "const": true,
          "docs": Object {
            "summary": "Returns the apiVersion and kind for \\"OtherCronTab\\".",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "stable.example.com.ts",
            "line": 115,
          },
          "name": "GVK",
          "static": true,
          "type": Object {
            "fqn": "cdk8s.GroupVersionKind",
          },
        },
      ],
    },
    "stableexamplecom.OtherCronTabProps": Object {
      "assembly": "stableexamplecom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "OtherCronTab",
        },
      },
      "fqn": "stableexamplecom.OtherCronTabProps",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "stable.example.com.ts",
        "line": 148,
      },
      "name": "OtherCronTabProps",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "OtherCronTab#spec",
            },
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "stable.example.com.ts",
            "line": 152,
          },
          "name": "spec",
          "optional": true,
          "type": Object {
            "fqn": "stableexamplecom.OtherCronTabSpec",
          },
        },
      ],
    },
    "stableexamplecom.OtherCronTabSpec": Object {
      "assembly": "stableexamplecom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "OtherCronTabSpec",
        },
      },
      "fqn": "stableexamplecom.OtherCronTabSpec",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "stable.example.com.ts",
        "line": 173,
      },
      "name": "OtherCronTabSpec",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "OtherCronTabSpec#cronSpec",
            },
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "stable.example.com.ts",
            "line": 177,
          },
          "name": "cronSpec",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "OtherCronTabSpec#image",
            },
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "stable.example.com.ts",
            "line": 182,
          },
          "name": "image",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "OtherCronTabSpec#replicas",
            },
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "stable.example.com.ts",
            "line": 187,
          },
          "name": "replicas",
          "optional": true,
          "type": Object {
            "primitive": "number",
          },
        },
      ],
    },
  },
  "version": "0.0.0",
}
`;

exports[`snapshots prometheus.yaml 1`] = `
Object {
  "author": Object {
    "name": "generated@generated.com",
    "roles": Array [
      "author",
    ],
  },
  "dependencies": Object {
    "cdk8s": "999.999.999",
    "constructs": "3.3.104",
  },
  "dependencyClosure": Object {
    "cdk8s": Object {
      "targets": Object {
        "dotnet": Object {
          "namespace": "Org.Cdk8s",
          "packageId": "Org.Cdk8s",
        },
        "go": Object {
          "moduleName": "github.com/cdk8s-team/cdk8s-core-go",
        },
        "java": Object {
          "maven": Object {
            "artifactId": "cdk8s",
            "groupId": "org.cdk8s",
          },
          "package": "org.cdk8s",
        },
        "js": Object {
          "npm": "cdk8s",
        },
        "python": Object {
          "distName": "cdk8s",
          "module": "cdk8s",
        },
      },
    },
    "constructs": Object {
      "targets": Object {
        "dotnet": Object {
          "namespace": "Constructs",
          "packageId": "Constructs",
        },
        "go": Object {
          "moduleName": "github.com/aws/constructs-go",
        },
        "java": Object {
          "maven": Object {
            "artifactId": "constructs",
            "groupId": "software.constructs",
          },
          "package": "software.constructs",
        },
        "js": Object {
          "npm": "constructs",
        },
        "python": Object {
          "distName": "constructs",
          "module": "constructs",
        },
      },
    },
  },
  "description": "monitoringcoreoscom",
  "fingerprint": "<fingerprint>",
  "homepage": "http://generated",
  "jsiiVersion": "1.32.0 (build 3f4fe23)",
  "license": "UNLICENSED",
  "metadata": Object {
    "jsii": Object {
      "pacmak": Object {
        "hasDefaultInterfaces": true,
      },
    },
  },
  "name": "monitoringcoreoscom",
  "repository": Object {
    "type": "git",
    "url": "http://generated",
  },
  "schema": "jsii/0.10.0",
  "targets": Object {
    "js": Object {
      "npm": "monitoringcoreoscom",
    },
  },
  "types": Object {
    "monitoringcoreoscom.Alertmanager": Object {
      "assembly": "monitoringcoreoscom",
      "base": "cdk8s.ApiObject",
      "docs": Object {
        "custom": Object {
          "schema": "Alertmanager",
        },
        "summary": "Alertmanager describes an Alertmanager cluster.",
      },
      "fqn": "monitoringcoreoscom.Alertmanager",
      "initializer": Object {
        "docs": Object {
          "summary": "Defines a \\"Alertmanager\\" API object.",
        },
        "locationInModule": Object {
          "filename": "monitoring.coreos.com.ts",
          "line": 39,
        },
        "parameters": Array [
          Object {
            "docs": Object {
              "summary": "the scope in which to define this object.",
            },
            "name": "scope",
            "type": Object {
              "fqn": "constructs.Construct",
            },
          },
          Object {
            "docs": Object {
              "summary": "a scope-local name for the object.",
            },
            "name": "id",
            "type": Object {
              "primitive": "string",
            },
          },
          Object {
            "docs": Object {
              "summary": "initialization props.",
            },
            "name": "props",
            "type": Object {
              "fqn": "monitoringcoreoscom.AlertmanagerProps",
            },
          },
        ],
      },
      "kind": "class",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 10,
      },
      "methods": Array [
        Object {
          "docs": Object {
            "remarks": "This can be used to inline resource manifests inside other objects (e.g. as templates).",
            "summary": "Renders a Kubernetes manifest for \\"Alertmanager\\".",
          },
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 26,
          },
          "name": "manifest",
          "parameters": Array [
            Object {
              "docs": Object {
                "summary": "initialization props.",
              },
              "name": "props",
              "type": Object {
                "fqn": "monitoringcoreoscom.AlertmanagerProps",
              },
            },
          ],
          "returns": Object {
            "type": Object {
              "primitive": "any",
            },
          },
          "static": true,
        },
      ],
      "name": "Alertmanager",
      "properties": Array [
        Object {
          "const": true,
          "docs": Object {
            "summary": "Returns the apiVersion and kind for \\"Alertmanager\\".",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 14,
          },
          "name": "GVK",
          "static": true,
          "type": Object {
            "fqn": "cdk8s.GroupVersionKind",
          },
        },
      ],
    },
    "monitoringcoreoscom.AlertmanagerProps": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "Alertmanager",
        },
        "summary": "Alertmanager describes an Alertmanager cluster.",
      },
      "fqn": "monitoringcoreoscom.AlertmanagerProps",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 49,
      },
      "name": "AlertmanagerProps",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "Alertmanager#spec",
            },
            "remarks": "More info: https://github.com/kubernetes/community/blob/master/contributors/devel/sig-architecture/api-conventions.md#spec-and-status",
            "summary": "Specification of the desired behavior of the Alertmanager cluster.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 60,
          },
          "name": "spec",
          "type": Object {
            "fqn": "monitoringcoreoscom.AlertmanagerSpec",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "Alertmanager#metadata",
            },
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 53,
          },
          "name": "metadata",
          "optional": true,
          "type": Object {
            "primitive": "any",
          },
        },
      ],
    },
    "monitoringcoreoscom.AlertmanagerSpec": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "AlertmanagerSpec",
        },
        "remarks": "More info: https://github.com/kubernetes/community/blob/master/contributors/devel/sig-architecture/api-conventions.md#spec-and-status",
        "summary": "Specification of the desired behavior of the Alertmanager cluster.",
      },
      "fqn": "monitoringcoreoscom.AlertmanagerSpec",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 84,
      },
      "name": "AlertmanagerSpec",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpec#additionalPeers",
            },
            "summary": "AdditionalPeers allows injecting a set of additional Alertmanagers to peer with to form a highly available cluster.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 90,
          },
          "name": "additionalPeers",
          "optional": true,
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "primitive": "string",
              },
              "kind": "array",
            },
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpec#affinity",
            },
            "summary": "If specified, the pod's scheduling constraints.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 97,
          },
          "name": "affinity",
          "optional": true,
          "type": Object {
            "fqn": "monitoringcoreoscom.AlertmanagerSpecAffinity",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpec#baseImage",
            },
            "summary": "Base image that is used to deploy pods, without tag.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 104,
          },
          "name": "baseImage",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpec#clusterAdvertiseAddress",
            },
            "remarks": "Needs to be provided for non RFC1918 [1] (public) addresses. [1] RFC1918: https://tools.ietf.org/html/rfc1918",
            "summary": "ClusterAdvertiseAddress is the explicit address to advertise in cluster.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 111,
          },
          "name": "clusterAdvertiseAddress",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpec#configMaps",
            },
            "remarks": "The ConfigMaps are mounted into /etc/alertmanager/configmaps/<configmap-name>.",
            "summary": "ConfigMaps is a list of ConfigMaps in the same namespace as the Alertmanager object, which shall be mounted into the Alertmanager Pods.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 118,
          },
          "name": "configMaps",
          "optional": true,
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "primitive": "string",
              },
              "kind": "array",
            },
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpec#configSecret",
            },
            "default": "alertmanager-<alertmanager-name>' The secret is mounted into /etc/alertmanager/config.",
            "remarks": "Defaults to 'alertmanager-<alertmanager-name>' The secret is mounted into /etc/alertmanager/config.",
            "summary": "ConfigSecret is the name of a Kubernetes Secret in the same namespace as the Alertmanager object, which contains configuration for this Alertmanager instance.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 126,
          },
          "name": "configSecret",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpec#containers",
            },
            "remarks": "This is meant to allow adding an authentication proxy to an Alertmanager pod.",
            "summary": "Containers allows injecting additional containers.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 133,
          },
          "name": "containers",
          "optional": true,
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "fqn": "monitoringcoreoscom.AlertmanagerSpecContainers",
              },
              "kind": "array",
            },
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpec#externalUrl",
            },
            "remarks": "This is necessary to generate correct URLs. This is necessary if Alertmanager is not served from root of a DNS name.",
            "summary": "The external URL the Alertmanager instances will be available under.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 140,
          },
          "name": "externalUrl",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpec#image",
            },
            "remarks": "Specifying the version is still necessary to ensure the Prometheus Operator knows what version of Alertmanager is being configured.",
            "summary": "Image if specified has precedence over baseImage, tag and sha combinations.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 147,
          },
          "name": "image",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpec#imagePullSecrets",
            },
            "summary": "An optional list of references to secrets in the same namespace to use for pulling prometheus and alertmanager images from registries see http://kubernetes.io/docs/user-guide/images#specifying-imagepullsecrets-on-a-pod.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 154,
          },
          "name": "imagePullSecrets",
          "optional": true,
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "fqn": "monitoringcoreoscom.AlertmanagerSpecImagePullSecrets",
              },
              "kind": "array",
            },
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpec#initContainers",
            },
            "remarks": "Those can be used to e.g. fetch secrets for injection into the Alertmanager configuration from external sources. Any errors during the execution of an initContainer will lead to a restart of the Pod. More info: https://kubernetes.io/docs/concepts/workloads/pods/init-containers/ Using initContainers for any use case other then secret fetching is entirely outside the scope of what the maintainers will support and by doing so, you accept that this behaviour may break at any time without notice.",
            "summary": "InitContainers allows adding initContainers to the pod definition.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 161,
          },
          "name": "initContainers",
          "optional": true,
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "fqn": "monitoringcoreoscom.AlertmanagerSpecInitContainers",
              },
              "kind": "array",
            },
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpec#listenLocal",
            },
            "remarks": "Note this is only for the Alertmanager UI, not the gossip communication.",
            "summary": "ListenLocal makes the Alertmanager server listen on loopback, so that it does not bind against the Pod IP.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 168,
          },
          "name": "listenLocal",
          "optional": true,
          "type": Object {
            "primitive": "boolean",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpec#logFormat",
            },
            "summary": "Log format for Alertmanager to be configured with.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 175,
          },
          "name": "logFormat",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpec#logLevel",
            },
            "summary": "Log level for Alertmanager to be configured with.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 182,
          },
          "name": "logLevel",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpec#nodeSelector",
            },
            "summary": "Define which Nodes the Pods are scheduled on.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 189,
          },
          "name": "nodeSelector",
          "optional": true,
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "primitive": "string",
              },
              "kind": "map",
            },
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpec#paused",
            },
            "summary": "If set to true all actions on the underlaying managed objects are not goint to be performed, except for delete actions.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 196,
          },
          "name": "paused",
          "optional": true,
          "type": Object {
            "primitive": "boolean",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpec#podMetadata",
            },
            "summary": "PodMetadata configures Labels and Annotations which are propagated to the alertmanager pods.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 203,
          },
          "name": "podMetadata",
          "optional": true,
          "type": Object {
            "fqn": "monitoringcoreoscom.AlertmanagerSpecPodMetadata",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpec#portName",
            },
            "remarks": "This defaults to web",
            "summary": "Port name used for the pods and governing service.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 210,
          },
          "name": "portName",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpec#priorityClassName",
            },
            "summary": "Priority class assigned to the Pods.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 217,
          },
          "name": "priorityClassName",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpec#replicas",
            },
            "remarks": "The controller will eventually make the size of the running cluster equal to the expected size.",
            "summary": "Size is the expected size of the alertmanager cluster.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 224,
          },
          "name": "replicas",
          "optional": true,
          "type": Object {
            "primitive": "number",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpec#resources",
            },
            "summary": "Define resources requests and limits for single Pods.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 231,
          },
          "name": "resources",
          "optional": true,
          "type": Object {
            "fqn": "monitoringcoreoscom.AlertmanagerSpecResources",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpec#retention",
            },
            "default": "120h', and must match the regular expression \`[0-9]+(ms|s|m|h)\` (milliseconds seconds minutes hours).",
            "remarks": "Default is '120h', and must match the regular expression \`[0-9]+(ms|s|m|h)\` (milliseconds seconds minutes hours).",
            "summary": "Time duration Alertmanager shall retain data for.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 239,
          },
          "name": "retention",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpec#routePrefix",
            },
            "remarks": "This is useful, if using ExternalURL and a proxy is rewriting HTTP routes of a request, and the actual ExternalURL is still true, but the server serves requests under a different route prefix. For example for use with \`kubectl proxy\`.",
            "summary": "The route prefix Alertmanager registers HTTP handlers for.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 246,
          },
          "name": "routePrefix",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpec#secrets",
            },
            "remarks": "The Secrets are mounted into /etc/alertmanager/secrets/<secret-name>.",
            "summary": "Secrets is a list of Secrets in the same namespace as the Alertmanager object, which shall be mounted into the Alertmanager Pods.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 253,
          },
          "name": "secrets",
          "optional": true,
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "primitive": "string",
              },
              "kind": "array",
            },
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpec#securityContext",
            },
            "remarks": "This defaults to the default PodSecurityContext.",
            "summary": "SecurityContext holds pod-level security attributes and common container settings.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 260,
          },
          "name": "securityContext",
          "optional": true,
          "type": Object {
            "fqn": "monitoringcoreoscom.AlertmanagerSpecSecurityContext",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpec#serviceAccountName",
            },
            "summary": "ServiceAccountName is the name of the ServiceAccount to use to run the Prometheus Pods.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 267,
          },
          "name": "serviceAccountName",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpec#sha",
            },
            "default": "the value of \`version\`. Similar to a tag, but the SHA explicitly deploys an immutable container image. Version and Tag are ignored if SHA is set.",
            "remarks": "Defaults to the value of \`version\`. Similar to a tag, but the SHA explicitly deploys an immutable container image. Version and Tag are ignored if SHA is set.",
            "summary": "SHA of Alertmanager container image to be deployed.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 275,
          },
          "name": "sha",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpec#storage",
            },
            "summary": "Storage is the definition of how storage will be used by the Alertmanager instances.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 282,
          },
          "name": "storage",
          "optional": true,
          "type": Object {
            "fqn": "monitoringcoreoscom.AlertmanagerSpecStorage",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpec#tag",
            },
            "default": "the value of \`version\`. Version is ignored if Tag is set.",
            "remarks": "Defaults to the value of \`version\`. Version is ignored if Tag is set.",
            "summary": "Tag of Alertmanager container image to be deployed.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 290,
          },
          "name": "tag",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpec#tolerations",
            },
            "summary": "If specified, the pod's tolerations.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 297,
          },
          "name": "tolerations",
          "optional": true,
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "fqn": "monitoringcoreoscom.AlertmanagerSpecTolerations",
              },
              "kind": "array",
            },
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpec#version",
            },
            "summary": "Version the cluster should be on.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 304,
          },
          "name": "version",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpec#volumeMounts",
            },
            "remarks": "VolumeMounts specified will be appended to other VolumeMounts in the alertmanager container, that are generated as a result of StorageSpec objects.",
            "summary": "VolumeMounts allows configuration of additional VolumeMounts on the output StatefulSet definition.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 311,
          },
          "name": "volumeMounts",
          "optional": true,
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "fqn": "monitoringcoreoscom.AlertmanagerSpecVolumeMounts",
              },
              "kind": "array",
            },
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpec#volumes",
            },
            "remarks": "Volumes specified will be appended to other volumes that are generated as a result of StorageSpec objects.",
            "summary": "Volumes allows configuration of additional volumes on the output StatefulSet definition.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 318,
          },
          "name": "volumes",
          "optional": true,
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "fqn": "monitoringcoreoscom.AlertmanagerSpecVolumes",
              },
              "kind": "array",
            },
          },
        },
      ],
    },
    "monitoringcoreoscom.AlertmanagerSpecAffinity": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "AlertmanagerSpecAffinity",
        },
        "summary": "If specified, the pod's scheduling constraints.",
      },
      "fqn": "monitoringcoreoscom.AlertmanagerSpecAffinity",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 373,
      },
      "name": "AlertmanagerSpecAffinity",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecAffinity#nodeAffinity",
            },
            "summary": "Describes node affinity scheduling rules for the pod.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 379,
          },
          "name": "nodeAffinity",
          "optional": true,
          "type": Object {
            "fqn": "monitoringcoreoscom.AlertmanagerSpecAffinityNodeAffinity",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecAffinity#podAffinity",
            },
            "summary": "Describes pod affinity scheduling rules (e.g. co-locate this pod in the same node, zone, etc. as some other pod(s)).",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 386,
          },
          "name": "podAffinity",
          "optional": true,
          "type": Object {
            "fqn": "monitoringcoreoscom.AlertmanagerSpecAffinityPodAffinity",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecAffinity#podAntiAffinity",
            },
            "summary": "Describes pod anti-affinity scheduling rules (e.g. avoid putting this pod in the same node, zone, etc. as some other pod(s)).",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 393,
          },
          "name": "podAntiAffinity",
          "optional": true,
          "type": Object {
            "fqn": "monitoringcoreoscom.AlertmanagerSpecAffinityPodAntiAffinity",
          },
        },
      ],
    },
    "monitoringcoreoscom.AlertmanagerSpecAffinityNodeAffinity": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "AlertmanagerSpecAffinityNodeAffinity",
        },
        "summary": "Describes node affinity scheduling rules for the pod.",
      },
      "fqn": "monitoringcoreoscom.AlertmanagerSpecAffinityNodeAffinity",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 1463,
      },
      "name": "AlertmanagerSpecAffinityNodeAffinity",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecAffinityNodeAffinity#preferredDuringSchedulingIgnoredDuringExecution",
            },
            "remarks": "The node that is most preferred is the one with the greatest sum of weights, i.e. for each node that meets all of the scheduling requirements (resource request, requiredDuringScheduling affinity expressions, etc.), compute a sum by iterating through the elements of this field and adding \\"weight\\" to the sum if the node matches the corresponding matchExpressions; the node(s) with the highest sum are the most preferred.",
            "summary": "The scheduler will prefer to schedule pods to nodes that satisfy the affinity expressions specified by this field, but it may choose a node that violates one or more of the expressions.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 1469,
          },
          "name": "preferredDuringSchedulingIgnoredDuringExecution",
          "optional": true,
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "fqn": "monitoringcoreoscom.AlertmanagerSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecution",
              },
              "kind": "array",
            },
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecAffinityNodeAffinity#requiredDuringSchedulingIgnoredDuringExecution",
            },
            "remarks": "If the affinity requirements specified by this field cease to be met at some point during pod execution (e.g. due to an update), the system may or may not try to eventually evict the pod from its node.",
            "summary": "If the affinity requirements specified by this field are not met at scheduling time, the pod will not be scheduled onto the node.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 1476,
          },
          "name": "requiredDuringSchedulingIgnoredDuringExecution",
          "optional": true,
          "type": Object {
            "fqn": "monitoringcoreoscom.AlertmanagerSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecution",
          },
        },
      ],
    },
    "monitoringcoreoscom.AlertmanagerSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecution": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "AlertmanagerSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecution",
        },
        "summary": "An empty preferred scheduling term matches all objects with implicit weight 0 (i.e. it's a no-op). A null preferred scheduling term matches no objects (i.e. is also a no-op).",
      },
      "fqn": "monitoringcoreoscom.AlertmanagerSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecution",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 4801,
      },
      "name": "AlertmanagerSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecution",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecution#preference",
            },
            "summary": "A node selector term, associated with the corresponding weight.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 4807,
          },
          "name": "preference",
          "type": Object {
            "fqn": "monitoringcoreoscom.AlertmanagerSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreference",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecution#weight",
            },
            "summary": "Weight associated with matching the corresponding nodeSelectorTerm, in the range 1-100.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 4814,
          },
          "name": "weight",
          "type": Object {
            "primitive": "number",
          },
        },
      ],
    },
    "monitoringcoreoscom.AlertmanagerSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreference": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "AlertmanagerSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreference",
        },
        "summary": "A node selector term, associated with the corresponding weight.",
      },
      "fqn": "monitoringcoreoscom.AlertmanagerSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreference",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 7111,
      },
      "name": "AlertmanagerSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreference",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreference#matchExpressions",
            },
            "summary": "A list of node selector requirements by node's labels.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 7117,
          },
          "name": "matchExpressions",
          "optional": true,
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "fqn": "monitoringcoreoscom.AlertmanagerSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressions",
              },
              "kind": "array",
            },
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreference#matchFields",
            },
            "summary": "A list of node selector requirements by node's fields.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 7124,
          },
          "name": "matchFields",
          "optional": true,
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "fqn": "monitoringcoreoscom.AlertmanagerSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFields",
              },
              "kind": "array",
            },
          },
        },
      ],
    },
    "monitoringcoreoscom.AlertmanagerSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressions": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "AlertmanagerSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressions",
        },
        "summary": "A node selector requirement is a selector that contains values, a key, and an operator that relates the key and values.",
      },
      "fqn": "monitoringcoreoscom.AlertmanagerSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressions",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 9064,
      },
      "name": "AlertmanagerSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressions",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressions#key",
            },
            "summary": "The label key that the selector applies to.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 9070,
          },
          "name": "key",
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressions#operator",
            },
            "remarks": "Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.",
            "summary": "Represents a key's relationship to a set of values.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 9077,
          },
          "name": "operator",
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressions#values",
            },
            "remarks": "If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. If the operator is Gt or Lt, the values array must have a single element, which will be interpreted as an integer. This array is replaced during a strategic merge patch.",
            "summary": "An array of string values.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 9084,
          },
          "name": "values",
          "optional": true,
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "primitive": "string",
              },
              "kind": "array",
            },
          },
        },
      ],
    },
    "monitoringcoreoscom.AlertmanagerSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFields": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "AlertmanagerSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFields",
        },
        "summary": "A node selector requirement is a selector that contains values, a key, and an operator that relates the key and values.",
      },
      "fqn": "monitoringcoreoscom.AlertmanagerSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFields",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 9109,
      },
      "name": "AlertmanagerSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFields",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFields#key",
            },
            "summary": "The label key that the selector applies to.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 9115,
          },
          "name": "key",
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFields#operator",
            },
            "remarks": "Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.",
            "summary": "Represents a key's relationship to a set of values.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 9122,
          },
          "name": "operator",
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFields#values",
            },
            "remarks": "If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. If the operator is Gt or Lt, the values array must have a single element, which will be interpreted as an integer. This array is replaced during a strategic merge patch.",
            "summary": "An array of string values.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 9129,
          },
          "name": "values",
          "optional": true,
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "primitive": "string",
              },
              "kind": "array",
            },
          },
        },
      ],
    },
    "monitoringcoreoscom.AlertmanagerSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecution": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "AlertmanagerSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecution",
        },
        "remarks": "If the affinity requirements specified by this field cease to be met at some point during pod execution (e.g. due to an update), the system may or may not try to eventually evict the pod from its node.",
        "summary": "If the affinity requirements specified by this field are not met at scheduling time, the pod will not be scheduled onto the node.",
      },
      "fqn": "monitoringcoreoscom.AlertmanagerSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecution",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 4838,
      },
      "name": "AlertmanagerSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecution",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecution#nodeSelectorTerms",
            },
            "remarks": "A list of node selector terms. The terms are ORed.",
            "summary": "Required.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 4844,
          },
          "name": "nodeSelectorTerms",
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "fqn": "monitoringcoreoscom.AlertmanagerSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTerms",
              },
              "kind": "array",
            },
          },
        },
      ],
    },
    "monitoringcoreoscom.AlertmanagerSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTerms": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "AlertmanagerSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTerms",
        },
        "remarks": "The requirements of them are ANDed. The TopologySelectorTerm type implements a subset of the NodeSelectorTerm.",
        "summary": "A null or empty node selector term matches no objects.",
      },
      "fqn": "monitoringcoreoscom.AlertmanagerSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTerms",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 7148,
      },
      "name": "AlertmanagerSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTerms",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTerms#matchExpressions",
            },
            "summary": "A list of node selector requirements by node's labels.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 7154,
          },
          "name": "matchExpressions",
          "optional": true,
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "fqn": "monitoringcoreoscom.AlertmanagerSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressions",
              },
              "kind": "array",
            },
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTerms#matchFields",
            },
            "summary": "A list of node selector requirements by node's fields.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 7161,
          },
          "name": "matchFields",
          "optional": true,
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "fqn": "monitoringcoreoscom.AlertmanagerSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFields",
              },
              "kind": "array",
            },
          },
        },
      ],
    },
    "monitoringcoreoscom.AlertmanagerSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressions": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "AlertmanagerSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressions",
        },
        "summary": "A node selector requirement is a selector that contains values, a key, and an operator that relates the key and values.",
      },
      "fqn": "monitoringcoreoscom.AlertmanagerSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressions",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 9154,
      },
      "name": "AlertmanagerSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressions",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressions#key",
            },
            "summary": "The label key that the selector applies to.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 9160,
          },
          "name": "key",
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressions#operator",
            },
            "remarks": "Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.",
            "summary": "Represents a key's relationship to a set of values.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 9167,
          },
          "name": "operator",
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressions#values",
            },
            "remarks": "If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. If the operator is Gt or Lt, the values array must have a single element, which will be interpreted as an integer. This array is replaced during a strategic merge patch.",
            "summary": "An array of string values.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 9174,
          },
          "name": "values",
          "optional": true,
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "primitive": "string",
              },
              "kind": "array",
            },
          },
        },
      ],
    },
    "monitoringcoreoscom.AlertmanagerSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFields": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "AlertmanagerSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFields",
        },
        "summary": "A node selector requirement is a selector that contains values, a key, and an operator that relates the key and values.",
      },
      "fqn": "monitoringcoreoscom.AlertmanagerSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFields",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 9199,
      },
      "name": "AlertmanagerSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFields",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFields#key",
            },
            "summary": "The label key that the selector applies to.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 9205,
          },
          "name": "key",
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFields#operator",
            },
            "remarks": "Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.",
            "summary": "Represents a key's relationship to a set of values.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 9212,
          },
          "name": "operator",
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFields#values",
            },
            "remarks": "If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. If the operator is Gt or Lt, the values array must have a single element, which will be interpreted as an integer. This array is replaced during a strategic merge patch.",
            "summary": "An array of string values.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 9219,
          },
          "name": "values",
          "optional": true,
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "primitive": "string",
              },
              "kind": "array",
            },
          },
        },
      ],
    },
    "monitoringcoreoscom.AlertmanagerSpecAffinityPodAffinity": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "AlertmanagerSpecAffinityPodAffinity",
        },
        "summary": "Describes pod affinity scheduling rules (e.g. co-locate this pod in the same node, zone, etc. as some other pod(s)).",
      },
      "fqn": "monitoringcoreoscom.AlertmanagerSpecAffinityPodAffinity",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 1500,
      },
      "name": "AlertmanagerSpecAffinityPodAffinity",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecAffinityPodAffinity#preferredDuringSchedulingIgnoredDuringExecution",
            },
            "remarks": "The node that is most preferred is the one with the greatest sum of weights, i.e. for each node that meets all of the scheduling requirements (resource request, requiredDuringScheduling affinity expressions, etc.), compute a sum by iterating through the elements of this field and adding \\"weight\\" to the sum if the node has pods which matches the corresponding podAffinityTerm; the node(s) with the highest sum are the most preferred.",
            "summary": "The scheduler will prefer to schedule pods to nodes that satisfy the affinity expressions specified by this field, but it may choose a node that violates one or more of the expressions.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 1506,
          },
          "name": "preferredDuringSchedulingIgnoredDuringExecution",
          "optional": true,
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "fqn": "monitoringcoreoscom.AlertmanagerSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecution",
              },
              "kind": "array",
            },
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecAffinityPodAffinity#requiredDuringSchedulingIgnoredDuringExecution",
            },
            "remarks": "If the affinity requirements specified by this field cease to be met at some point during pod execution (e.g. due to a pod label update), the system may or may not try to eventually evict the pod from its node. When there are multiple elements, the lists of nodes corresponding to each podAffinityTerm are intersected, i.e. all terms must be satisfied.",
            "summary": "If the affinity requirements specified by this field are not met at scheduling time, the pod will not be scheduled onto the node.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 1513,
          },
          "name": "requiredDuringSchedulingIgnoredDuringExecution",
          "optional": true,
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "fqn": "monitoringcoreoscom.AlertmanagerSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecution",
              },
              "kind": "array",
            },
          },
        },
      ],
    },
    "monitoringcoreoscom.AlertmanagerSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecution": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "AlertmanagerSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecution",
        },
        "summary": "The weights of all of the matched WeightedPodAffinityTerm fields are added per-node to find the most preferred node(s).",
      },
      "fqn": "monitoringcoreoscom.AlertmanagerSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecution",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 4867,
      },
      "name": "AlertmanagerSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecution",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecution#podAffinityTerm",
            },
            "remarks": "A pod affinity term, associated with the corresponding weight.",
            "summary": "Required.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 4873,
          },
          "name": "podAffinityTerm",
          "type": Object {
            "fqn": "monitoringcoreoscom.AlertmanagerSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecution#weight",
            },
            "summary": "weight associated with matching the corresponding podAffinityTerm, in the range 1-100.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 4880,
          },
          "name": "weight",
          "type": Object {
            "primitive": "number",
          },
        },
      ],
    },
    "monitoringcoreoscom.AlertmanagerSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "AlertmanagerSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm",
        },
        "remarks": "A pod affinity term, associated with the corresponding weight.",
        "summary": "Required.",
      },
      "fqn": "monitoringcoreoscom.AlertmanagerSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 7185,
      },
      "name": "AlertmanagerSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm#topologyKey",
            },
            "remarks": "Empty topologyKey is not allowed.",
            "summary": "This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching the labelSelector in the specified namespaces, where co-located is defined as running on a node whose value of the label with key topologyKey matches that of any node on which any of the selected pods is running.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 7205,
          },
          "name": "topologyKey",
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm#labelSelector",
            },
            "summary": "A label query over a set of resources, in this case pods.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 7191,
          },
          "name": "labelSelector",
          "optional": true,
          "type": Object {
            "fqn": "monitoringcoreoscom.AlertmanagerSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm#namespaces",
            },
            "remarks": "null or empty list means \\"this pod's namespace\\"",
            "summary": "namespaces specifies which namespaces the labelSelector applies to (matches against);",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 7198,
          },
          "name": "namespaces",
          "optional": true,
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "primitive": "string",
              },
              "kind": "array",
            },
          },
        },
      ],
    },
    "monitoringcoreoscom.AlertmanagerSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "AlertmanagerSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector",
        },
        "summary": "A label query over a set of resources, in this case pods.",
      },
      "fqn": "monitoringcoreoscom.AlertmanagerSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 9244,
      },
      "name": "AlertmanagerSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector#matchExpressions",
            },
            "remarks": "The requirements are ANDed.",
            "summary": "matchExpressions is a list of label selector requirements.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 9250,
          },
          "name": "matchExpressions",
          "optional": true,
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "fqn": "monitoringcoreoscom.AlertmanagerSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions",
              },
              "kind": "array",
            },
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector#matchLabels",
            },
            "remarks": "A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is \\"key\\", the operator is \\"In\\", and the values array contains only \\"value\\". The requirements are ANDed.",
            "summary": "matchLabels is a map of {key,value} pairs.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 9257,
          },
          "name": "matchLabels",
          "optional": true,
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "primitive": "string",
              },
              "kind": "map",
            },
          },
        },
      ],
    },
    "monitoringcoreoscom.AlertmanagerSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "AlertmanagerSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions",
        },
        "summary": "A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.",
      },
      "fqn": "monitoringcoreoscom.AlertmanagerSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 9880,
      },
      "name": "AlertmanagerSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions#key",
            },
            "summary": "key is the label key that the selector applies to.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 9886,
          },
          "name": "key",
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions#operator",
            },
            "remarks": "Valid operators are In, NotIn, Exists and DoesNotExist.",
            "summary": "operator represents a key's relationship to a set of values.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 9893,
          },
          "name": "operator",
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions#values",
            },
            "remarks": "If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.",
            "summary": "values is an array of string values.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 9900,
          },
          "name": "values",
          "optional": true,
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "primitive": "string",
              },
              "kind": "array",
            },
          },
        },
      ],
    },
    "monitoringcoreoscom.AlertmanagerSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecution": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "AlertmanagerSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecution",
        },
        "summary": "Defines a set of pods (namely those matching the labelSelector relative to the given namespace(s)) that this pod should be co-located (affinity) or not co-located (anti-affinity) with, where co-located is defined as running on a node whose value of the label with key <topologyKey> matches that of any node on which a pod of the set of pods is running.",
      },
      "fqn": "monitoringcoreoscom.AlertmanagerSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecution",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 4904,
      },
      "name": "AlertmanagerSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecution",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecution#topologyKey",
            },
            "remarks": "Empty topologyKey is not allowed.",
            "summary": "This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching the labelSelector in the specified namespaces, where co-located is defined as running on a node whose value of the label with key topologyKey matches that of any node on which any of the selected pods is running.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 4924,
          },
          "name": "topologyKey",
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecution#labelSelector",
            },
            "summary": "A label query over a set of resources, in this case pods.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 4910,
          },
          "name": "labelSelector",
          "optional": true,
          "type": Object {
            "fqn": "monitoringcoreoscom.AlertmanagerSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecution#namespaces",
            },
            "remarks": "null or empty list means \\"this pod's namespace\\"",
            "summary": "namespaces specifies which namespaces the labelSelector applies to (matches against);",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 4917,
          },
          "name": "namespaces",
          "optional": true,
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "primitive": "string",
              },
              "kind": "array",
            },
          },
        },
      ],
    },
    "monitoringcoreoscom.AlertmanagerSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "AlertmanagerSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector",
        },
        "summary": "A label query over a set of resources, in this case pods.",
      },
      "fqn": "monitoringcoreoscom.AlertmanagerSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 7230,
      },
      "name": "AlertmanagerSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector#matchExpressions",
            },
            "remarks": "The requirements are ANDed.",
            "summary": "matchExpressions is a list of label selector requirements.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 7236,
          },
          "name": "matchExpressions",
          "optional": true,
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "fqn": "monitoringcoreoscom.AlertmanagerSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions",
              },
              "kind": "array",
            },
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector#matchLabels",
            },
            "remarks": "A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is \\"key\\", the operator is \\"In\\", and the values array contains only \\"value\\". The requirements are ANDed.",
            "summary": "matchLabels is a map of {key,value} pairs.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 7243,
          },
          "name": "matchLabels",
          "optional": true,
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "primitive": "string",
              },
              "kind": "map",
            },
          },
        },
      ],
    },
    "monitoringcoreoscom.AlertmanagerSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "AlertmanagerSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions",
        },
        "summary": "A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.",
      },
      "fqn": "monitoringcoreoscom.AlertmanagerSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 9281,
      },
      "name": "AlertmanagerSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions#key",
            },
            "summary": "key is the label key that the selector applies to.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 9287,
          },
          "name": "key",
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions#operator",
            },
            "remarks": "Valid operators are In, NotIn, Exists and DoesNotExist.",
            "summary": "operator represents a key's relationship to a set of values.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 9294,
          },
          "name": "operator",
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions#values",
            },
            "remarks": "If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.",
            "summary": "values is an array of string values.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 9301,
          },
          "name": "values",
          "optional": true,
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "primitive": "string",
              },
              "kind": "array",
            },
          },
        },
      ],
    },
    "monitoringcoreoscom.AlertmanagerSpecAffinityPodAntiAffinity": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "AlertmanagerSpecAffinityPodAntiAffinity",
        },
        "summary": "Describes pod anti-affinity scheduling rules (e.g. avoid putting this pod in the same node, zone, etc. as some other pod(s)).",
      },
      "fqn": "monitoringcoreoscom.AlertmanagerSpecAffinityPodAntiAffinity",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 1537,
      },
      "name": "AlertmanagerSpecAffinityPodAntiAffinity",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecAffinityPodAntiAffinity#preferredDuringSchedulingIgnoredDuringExecution",
            },
            "remarks": "The node that is most preferred is the one with the greatest sum of weights, i.e. for each node that meets all of the scheduling requirements (resource request, requiredDuringScheduling anti-affinity expressions, etc.), compute a sum by iterating through the elements of this field and adding \\"weight\\" to the sum if the node has pods which matches the corresponding podAffinityTerm; the node(s) with the highest sum are the most preferred.",
            "summary": "The scheduler will prefer to schedule pods to nodes that satisfy the anti-affinity expressions specified by this field, but it may choose a node that violates one or more of the expressions.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 1543,
          },
          "name": "preferredDuringSchedulingIgnoredDuringExecution",
          "optional": true,
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "fqn": "monitoringcoreoscom.AlertmanagerSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecution",
              },
              "kind": "array",
            },
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecAffinityPodAntiAffinity#requiredDuringSchedulingIgnoredDuringExecution",
            },
            "remarks": "If the anti-affinity requirements specified by this field cease to be met at some point during pod execution (e.g. due to a pod label update), the system may or may not try to eventually evict the pod from its node. When there are multiple elements, the lists of nodes corresponding to each podAffinityTerm are intersected, i.e. all terms must be satisfied.",
            "summary": "If the anti-affinity requirements specified by this field are not met at scheduling time, the pod will not be scheduled onto the node.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 1550,
          },
          "name": "requiredDuringSchedulingIgnoredDuringExecution",
          "optional": true,
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "fqn": "monitoringcoreoscom.AlertmanagerSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecution",
              },
              "kind": "array",
            },
          },
        },
      ],
    },
    "monitoringcoreoscom.AlertmanagerSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecution": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "AlertmanagerSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecution",
        },
        "summary": "The weights of all of the matched WeightedPodAffinityTerm fields are added per-node to find the most preferred node(s).",
      },
      "fqn": "monitoringcoreoscom.AlertmanagerSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecution",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 4949,
      },
      "name": "AlertmanagerSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecution",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecution#podAffinityTerm",
            },
            "remarks": "A pod affinity term, associated with the corresponding weight.",
            "summary": "Required.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 4955,
          },
          "name": "podAffinityTerm",
          "type": Object {
            "fqn": "monitoringcoreoscom.AlertmanagerSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecution#weight",
            },
            "summary": "weight associated with matching the corresponding podAffinityTerm, in the range 1-100.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 4962,
          },
          "name": "weight",
          "type": Object {
            "primitive": "number",
          },
        },
      ],
    },
    "monitoringcoreoscom.AlertmanagerSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "AlertmanagerSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm",
        },
        "remarks": "A pod affinity term, associated with the corresponding weight.",
        "summary": "Required.",
      },
      "fqn": "monitoringcoreoscom.AlertmanagerSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 7267,
      },
      "name": "AlertmanagerSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm#topologyKey",
            },
            "remarks": "Empty topologyKey is not allowed.",
            "summary": "This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching the labelSelector in the specified namespaces, where co-located is defined as running on a node whose value of the label with key topologyKey matches that of any node on which any of the selected pods is running.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 7287,
          },
          "name": "topologyKey",
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm#labelSelector",
            },
            "summary": "A label query over a set of resources, in this case pods.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 7273,
          },
          "name": "labelSelector",
          "optional": true,
          "type": Object {
            "fqn": "monitoringcoreoscom.AlertmanagerSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm#namespaces",
            },
            "remarks": "null or empty list means \\"this pod's namespace\\"",
            "summary": "namespaces specifies which namespaces the labelSelector applies to (matches against);",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 7280,
          },
          "name": "namespaces",
          "optional": true,
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "primitive": "string",
              },
              "kind": "array",
            },
          },
        },
      ],
    },
    "monitoringcoreoscom.AlertmanagerSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "AlertmanagerSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector",
        },
        "summary": "A label query over a set of resources, in this case pods.",
      },
      "fqn": "monitoringcoreoscom.AlertmanagerSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 9326,
      },
      "name": "AlertmanagerSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector#matchExpressions",
            },
            "remarks": "The requirements are ANDed.",
            "summary": "matchExpressions is a list of label selector requirements.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 9332,
          },
          "name": "matchExpressions",
          "optional": true,
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "fqn": "monitoringcoreoscom.AlertmanagerSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions",
              },
              "kind": "array",
            },
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector#matchLabels",
            },
            "remarks": "A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is \\"key\\", the operator is \\"In\\", and the values array contains only \\"value\\". The requirements are ANDed.",
            "summary": "matchLabels is a map of {key,value} pairs.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 9339,
          },
          "name": "matchLabels",
          "optional": true,
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "primitive": "string",
              },
              "kind": "map",
            },
          },
        },
      ],
    },
    "monitoringcoreoscom.AlertmanagerSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "AlertmanagerSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions",
        },
        "summary": "A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.",
      },
      "fqn": "monitoringcoreoscom.AlertmanagerSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 9925,
      },
      "name": "AlertmanagerSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions#key",
            },
            "summary": "key is the label key that the selector applies to.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 9931,
          },
          "name": "key",
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions#operator",
            },
            "remarks": "Valid operators are In, NotIn, Exists and DoesNotExist.",
            "summary": "operator represents a key's relationship to a set of values.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 9938,
          },
          "name": "operator",
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions#values",
            },
            "remarks": "If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.",
            "summary": "values is an array of string values.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 9945,
          },
          "name": "values",
          "optional": true,
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "primitive": "string",
              },
              "kind": "array",
            },
          },
        },
      ],
    },
    "monitoringcoreoscom.AlertmanagerSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecution": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "AlertmanagerSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecution",
        },
        "summary": "Defines a set of pods (namely those matching the labelSelector relative to the given namespace(s)) that this pod should be co-located (affinity) or not co-located (anti-affinity) with, where co-located is defined as running on a node whose value of the label with key <topologyKey> matches that of any node on which a pod of the set of pods is running.",
      },
      "fqn": "monitoringcoreoscom.AlertmanagerSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecution",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 4986,
      },
      "name": "AlertmanagerSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecution",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecution#topologyKey",
            },
            "remarks": "Empty topologyKey is not allowed.",
            "summary": "This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching the labelSelector in the specified namespaces, where co-located is defined as running on a node whose value of the label with key topologyKey matches that of any node on which any of the selected pods is running.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 5006,
          },
          "name": "topologyKey",
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecution#labelSelector",
            },
            "summary": "A label query over a set of resources, in this case pods.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 4992,
          },
          "name": "labelSelector",
          "optional": true,
          "type": Object {
            "fqn": "monitoringcoreoscom.AlertmanagerSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecution#namespaces",
            },
            "remarks": "null or empty list means \\"this pod's namespace\\"",
            "summary": "namespaces specifies which namespaces the labelSelector applies to (matches against);",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 4999,
          },
          "name": "namespaces",
          "optional": true,
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "primitive": "string",
              },
              "kind": "array",
            },
          },
        },
      ],
    },
    "monitoringcoreoscom.AlertmanagerSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "AlertmanagerSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector",
        },
        "summary": "A label query over a set of resources, in this case pods.",
      },
      "fqn": "monitoringcoreoscom.AlertmanagerSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 7312,
      },
      "name": "AlertmanagerSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector#matchExpressions",
            },
            "remarks": "The requirements are ANDed.",
            "summary": "matchExpressions is a list of label selector requirements.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 7318,
          },
          "name": "matchExpressions",
          "optional": true,
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "fqn": "monitoringcoreoscom.AlertmanagerSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions",
              },
              "kind": "array",
            },
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector#matchLabels",
            },
            "remarks": "A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is \\"key\\", the operator is \\"In\\", and the values array contains only \\"value\\". The requirements are ANDed.",
            "summary": "matchLabels is a map of {key,value} pairs.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 7325,
          },
          "name": "matchLabels",
          "optional": true,
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "primitive": "string",
              },
              "kind": "map",
            },
          },
        },
      ],
    },
    "monitoringcoreoscom.AlertmanagerSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "AlertmanagerSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions",
        },
        "summary": "A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.",
      },
      "fqn": "monitoringcoreoscom.AlertmanagerSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 9363,
      },
      "name": "AlertmanagerSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions#key",
            },
            "summary": "key is the label key that the selector applies to.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 9369,
          },
          "name": "key",
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions#operator",
            },
            "remarks": "Valid operators are In, NotIn, Exists and DoesNotExist.",
            "summary": "operator represents a key's relationship to a set of values.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 9376,
          },
          "name": "operator",
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions#values",
            },
            "remarks": "If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.",
            "summary": "values is an array of string values.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 9383,
          },
          "name": "values",
          "optional": true,
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "primitive": "string",
              },
              "kind": "array",
            },
          },
        },
      ],
    },
    "monitoringcoreoscom.AlertmanagerSpecContainers": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "AlertmanagerSpecContainers",
        },
        "summary": "A single application container that you want to run within a pod.",
      },
      "fqn": "monitoringcoreoscom.AlertmanagerSpecContainers",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 418,
      },
      "name": "AlertmanagerSpecContainers",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecContainers#name",
            },
            "remarks": "Each container in a pod must have a unique name (DNS_LABEL). Cannot be updated.",
            "summary": "Name of the container specified as a DNS_LABEL.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 481,
          },
          "name": "name",
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecContainers#args",
            },
            "remarks": "The docker image's CMD is used if this is not provided. Variable references $(VAR_NAME) are expanded using the container's environment. If a variable cannot be resolved, the reference in the input string will be unchanged. The $(VAR_NAME) syntax can be escaped with a double $$, ie: $$(VAR_NAME). Escaped references will never be expanded, regardless of whether the variable exists or not. Cannot be updated. More info: https://kubernetes.io/docs/tasks/inject-data-application/define-command-argument-container/#running-a-command-in-a-shell",
            "summary": "Arguments to the entrypoint.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 424,
          },
          "name": "args",
          "optional": true,
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "primitive": "string",
              },
              "kind": "array",
            },
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecContainers#command",
            },
            "remarks": "Not executed within a shell. The docker image's ENTRYPOINT is used if this is not provided. Variable references $(VAR_NAME) are expanded using the container's environment. If a variable cannot be resolved, the reference in the input string will be unchanged. The $(VAR_NAME) syntax can be escaped with a double $$, ie: $$(VAR_NAME). Escaped references will never be expanded, regardless of whether the variable exists or not. Cannot be updated. More info: https://kubernetes.io/docs/tasks/inject-data-application/define-command-argument-container/#running-a-command-in-a-shell",
            "summary": "Entrypoint array.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 431,
          },
          "name": "command",
          "optional": true,
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "primitive": "string",
              },
              "kind": "array",
            },
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecContainers#env",
            },
            "remarks": "Cannot be updated.",
            "summary": "List of environment variables to set in the container.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 438,
          },
          "name": "env",
          "optional": true,
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "fqn": "monitoringcoreoscom.AlertmanagerSpecContainersEnv",
              },
              "kind": "array",
            },
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecContainers#envFrom",
            },
            "remarks": "The keys defined within a source must be a C_IDENTIFIER. All invalid keys will be reported as an event when the container is starting. When a key exists in multiple sources, the value associated with the last source will take precedence. Values defined by an Env with a duplicate key will take precedence. Cannot be updated.",
            "summary": "List of sources to populate environment variables in the container.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 445,
          },
          "name": "envFrom",
          "optional": true,
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "fqn": "monitoringcoreoscom.AlertmanagerSpecContainersEnvFrom",
              },
              "kind": "array",
            },
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecContainers#image",
            },
            "remarks": "More info: https://kubernetes.io/docs/concepts/containers/images This field is optional to allow higher level config management to default or override container images in workload controllers like Deployments and StatefulSets.",
            "summary": "Docker image name.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 452,
          },
          "name": "image",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecContainers#imagePullPolicy",
            },
            "default": "Always if :latest tag is specified, or IfNotPresent otherwise. Cannot be updated. More info: https://kubernetes.io/docs/concepts/containers/images#updating-images",
            "remarks": "One of Always, Never, IfNotPresent. Defaults to Always if :latest tag is specified, or IfNotPresent otherwise. Cannot be updated. More info: https://kubernetes.io/docs/concepts/containers/images#updating-images",
            "summary": "Image pull policy.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 460,
          },
          "name": "imagePullPolicy",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecContainers#lifecycle",
            },
            "remarks": "Cannot be updated.",
            "summary": "Actions that the management system should take in response to container lifecycle events.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 467,
          },
          "name": "lifecycle",
          "optional": true,
          "type": Object {
            "fqn": "monitoringcoreoscom.AlertmanagerSpecContainersLifecycle",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecContainers#livenessProbe",
            },
            "remarks": "Container will be restarted if the probe fails. Cannot be updated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes",
            "summary": "Periodic probe of container liveness.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 474,
          },
          "name": "livenessProbe",
          "optional": true,
          "type": Object {
            "fqn": "monitoringcoreoscom.AlertmanagerSpecContainersLivenessProbe",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecContainers#ports",
            },
            "remarks": "Exposing a port here gives the system additional information about the network connections a container uses, but is primarily informational. Not specifying a port here DOES NOT prevent that port from being exposed. Any port which is listening on the default \\"0.0.0.0\\" address inside a container will be accessible from the network. Cannot be updated.",
            "summary": "List of ports to expose from the container.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 488,
          },
          "name": "ports",
          "optional": true,
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "fqn": "monitoringcoreoscom.AlertmanagerSpecContainersPorts",
              },
              "kind": "array",
            },
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecContainers#readinessProbe",
            },
            "remarks": "Container will be removed from service endpoints if the probe fails. Cannot be updated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes",
            "summary": "Periodic probe of container service readiness.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 495,
          },
          "name": "readinessProbe",
          "optional": true,
          "type": Object {
            "fqn": "monitoringcoreoscom.AlertmanagerSpecContainersReadinessProbe",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecContainers#resources",
            },
            "remarks": "Cannot be updated. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/",
            "summary": "Compute Resources required by this container.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 502,
          },
          "name": "resources",
          "optional": true,
          "type": Object {
            "fqn": "monitoringcoreoscom.AlertmanagerSpecContainersResources",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecContainers#securityContext",
            },
            "remarks": "More info: https://kubernetes.io/docs/concepts/policy/security-context/ More info: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
            "summary": "Security options the pod should run with.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 509,
          },
          "name": "securityContext",
          "optional": true,
          "type": Object {
            "fqn": "monitoringcoreoscom.AlertmanagerSpecContainersSecurityContext",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecContainers#startupProbe",
            },
            "remarks": "If specified, no other probes are executed until this completes successfully. If this probe fails, the Pod will be restarted, just as if the livenessProbe failed. This can be used to provide different probe parameters at the beginning of a Pod's lifecycle, when it might take a long time to load data or warm a cache, than during steady-state operation. This cannot be updated. This is a beta feature enabled by the StartupProbe feature flag. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes",
            "summary": "StartupProbe indicates that the Pod has successfully initialized.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 516,
          },
          "name": "startupProbe",
          "optional": true,
          "type": Object {
            "fqn": "monitoringcoreoscom.AlertmanagerSpecContainersStartupProbe",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecContainers#stdin",
            },
            "default": "false.",
            "remarks": "If this is not set, reads from stdin in the container will always result in EOF. Default is false.",
            "summary": "Whether this container should allocate a buffer for stdin in the container runtime.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 524,
          },
          "name": "stdin",
          "optional": true,
          "type": Object {
            "primitive": "boolean",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecContainers#stdinOnce",
            },
            "default": "false",
            "remarks": "When stdin is true the stdin stream will remain open across multiple attach sessions. If stdinOnce is set to true, stdin is opened on container start, is empty until the first client attaches to stdin, and then remains open and accepts data until the client disconnects, at which time stdin is closed and remains closed until the container is restarted. If this flag is false, a container processes that reads from stdin will never receive an EOF. Default is false",
            "summary": "Whether the container runtime should close the stdin channel after it has been opened by a single attach.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 532,
          },
          "name": "stdinOnce",
          "optional": true,
          "type": Object {
            "primitive": "boolean",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecContainers#terminationMessagePath",
            },
            "default": "dev/termination-log. Cannot be updated.",
            "remarks": "Message written is intended to be brief final status, such as an assertion failure message. Will be truncated by the node if greater than 4096 bytes. The total message length across all containers will be limited to 12kb. Defaults to /dev/termination-log. Cannot be updated.",
            "summary": "Optional: Path at which the file to which the container's termination message will be written is mounted into the container's filesystem.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 540,
          },
          "name": "terminationMessagePath",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecContainers#terminationMessagePolicy",
            },
            "default": "File. Cannot be updated.",
            "remarks": "File will use the contents of terminationMessagePath to populate the container status message on both success and failure. FallbackToLogsOnError will use the last chunk of container log output if the termination message file is empty and the container exited with an error. The log output is limited to 2048 bytes or 80 lines, whichever is smaller. Defaults to File. Cannot be updated.",
            "summary": "Indicate how the termination message should be populated.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 548,
          },
          "name": "terminationMessagePolicy",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecContainers#tty",
            },
            "default": "false.",
            "remarks": "Default is false.",
            "summary": "Whether this container should allocate a TTY for itself, also requires 'stdin' to be true.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 556,
          },
          "name": "tty",
          "optional": true,
          "type": Object {
            "primitive": "boolean",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecContainers#volumeDevices",
            },
            "summary": "volumeDevices is the list of block devices to be used by the container.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 563,
          },
          "name": "volumeDevices",
          "optional": true,
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "fqn": "monitoringcoreoscom.AlertmanagerSpecContainersVolumeDevices",
              },
              "kind": "array",
            },
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecContainers#volumeMounts",
            },
            "remarks": "Cannot be updated.",
            "summary": "Pod volumes to mount into the container's filesystem.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 570,
          },
          "name": "volumeMounts",
          "optional": true,
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "fqn": "monitoringcoreoscom.AlertmanagerSpecContainersVolumeMounts",
              },
              "kind": "array",
            },
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecContainers#workingDir",
            },
            "remarks": "If not specified, the container runtime's default will be used, which might be configured in the container image. Cannot be updated.",
            "summary": "Container's working directory.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 577,
          },
          "name": "workingDir",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
      ],
    },
    "monitoringcoreoscom.AlertmanagerSpecContainersEnv": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "AlertmanagerSpecContainersEnv",
        },
        "summary": "EnvVar represents an environment variable present in a Container.",
      },
      "fqn": "monitoringcoreoscom.AlertmanagerSpecContainersEnv",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 1574,
      },
      "name": "AlertmanagerSpecContainersEnv",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecContainersEnv#name",
            },
            "remarks": "Must be a C_IDENTIFIER.",
            "summary": "Name of the environment variable.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 1580,
          },
          "name": "name",
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecContainersEnv#value",
            },
            "default": ".",
            "remarks": "If a variable cannot be resolved, the reference in the input string will be unchanged. The $(VAR_NAME) syntax can be escaped with a double $$, ie: $$(VAR_NAME). Escaped references will never be expanded, regardless of whether the variable exists or not. Defaults to \\"\\".",
            "summary": "Variable references $(VAR_NAME) are expanded using the previous defined environment variables in the container and any service environment variables.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 1588,
          },
          "name": "value",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecContainersEnv#valueFrom",
            },
            "remarks": "Cannot be used if value is not empty.",
            "summary": "Source for the environment variable's value.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 1595,
          },
          "name": "valueFrom",
          "optional": true,
          "type": Object {
            "fqn": "monitoringcoreoscom.AlertmanagerSpecContainersEnvValueFrom",
          },
        },
      ],
    },
    "monitoringcoreoscom.AlertmanagerSpecContainersEnvFrom": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "AlertmanagerSpecContainersEnvFrom",
        },
        "summary": "EnvFromSource represents the source of a set of ConfigMaps.",
      },
      "fqn": "monitoringcoreoscom.AlertmanagerSpecContainersEnvFrom",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 1620,
      },
      "name": "AlertmanagerSpecContainersEnvFrom",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecContainersEnvFrom#configMapRef",
            },
            "summary": "The ConfigMap to select from.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 1626,
          },
          "name": "configMapRef",
          "optional": true,
          "type": Object {
            "fqn": "monitoringcoreoscom.AlertmanagerSpecContainersEnvFromConfigMapRef",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecContainersEnvFrom#prefix",
            },
            "remarks": "Must be a C_IDENTIFIER.",
            "summary": "An optional identifier to prepend to each key in the ConfigMap.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 1633,
          },
          "name": "prefix",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecContainersEnvFrom#secretRef",
            },
            "summary": "The Secret to select from.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 1640,
          },
          "name": "secretRef",
          "optional": true,
          "type": Object {
            "fqn": "monitoringcoreoscom.AlertmanagerSpecContainersEnvFromSecretRef",
          },
        },
      ],
    },
    "monitoringcoreoscom.AlertmanagerSpecContainersEnvFromConfigMapRef": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "AlertmanagerSpecContainersEnvFromConfigMapRef",
        },
        "summary": "The ConfigMap to select from.",
      },
      "fqn": "monitoringcoreoscom.AlertmanagerSpecContainersEnvFromConfigMapRef",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 5084,
      },
      "name": "AlertmanagerSpecContainersEnvFromConfigMapRef",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecContainersEnvFromConfigMapRef#name",
            },
            "remarks": "More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?",
            "summary": "Name of the referent.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 5090,
          },
          "name": "name",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecContainersEnvFromConfigMapRef#optional",
            },
            "summary": "Specify whether the ConfigMap must be defined.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 5097,
          },
          "name": "optional",
          "optional": true,
          "type": Object {
            "primitive": "boolean",
          },
        },
      ],
    },
    "monitoringcoreoscom.AlertmanagerSpecContainersEnvFromSecretRef": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "AlertmanagerSpecContainersEnvFromSecretRef",
        },
        "summary": "The Secret to select from.",
      },
      "fqn": "monitoringcoreoscom.AlertmanagerSpecContainersEnvFromSecretRef",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 5121,
      },
      "name": "AlertmanagerSpecContainersEnvFromSecretRef",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecContainersEnvFromSecretRef#name",
            },
            "remarks": "More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?",
            "summary": "Name of the referent.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 5127,
          },
          "name": "name",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecContainersEnvFromSecretRef#optional",
            },
            "summary": "Specify whether the Secret must be defined.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 5134,
          },
          "name": "optional",
          "optional": true,
          "type": Object {
            "primitive": "boolean",
          },
        },
      ],
    },
    "monitoringcoreoscom.AlertmanagerSpecContainersEnvValueFrom": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "AlertmanagerSpecContainersEnvValueFrom",
        },
        "remarks": "Cannot be used if value is not empty.",
        "summary": "Source for the environment variable's value.",
      },
      "fqn": "monitoringcoreoscom.AlertmanagerSpecContainersEnvValueFrom",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 5031,
      },
      "name": "AlertmanagerSpecContainersEnvValueFrom",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecContainersEnvValueFrom#configMapKeyRef",
            },
            "summary": "Selects a key of a ConfigMap.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 5037,
          },
          "name": "configMapKeyRef",
          "optional": true,
          "type": Object {
            "fqn": "monitoringcoreoscom.AlertmanagerSpecContainersEnvValueFromConfigMapKeyRef",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecContainersEnvValueFrom#fieldRef",
            },
            "summary": "Selects a field of the pod: supports metadata.name, metadata.namespace, metadata.labels, metadata.annotations, spec.nodeName, spec.serviceAccountName, status.hostIP, status.podIP, status.podIPs.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 5044,
          },
          "name": "fieldRef",
          "optional": true,
          "type": Object {
            "fqn": "monitoringcoreoscom.AlertmanagerSpecContainersEnvValueFromFieldRef",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecContainersEnvValueFrom#resourceFieldRef",
            },
            "summary": "Selects a resource of the container: only resources limits and requests (limits.cpu, limits.memory, limits.ephemeral-storage, requests.cpu, requests.memory and requests.ephemeral-storage) are currently supported.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 5051,
          },
          "name": "resourceFieldRef",
          "optional": true,
          "type": Object {
            "fqn": "monitoringcoreoscom.AlertmanagerSpecContainersEnvValueFromResourceFieldRef",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecContainersEnvValueFrom#secretKeyRef",
            },
            "summary": "Selects a key of a secret in the pod's namespace.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 5058,
          },
          "name": "secretKeyRef",
          "optional": true,
          "type": Object {
            "fqn": "monitoringcoreoscom.AlertmanagerSpecContainersEnvValueFromSecretKeyRef",
          },
        },
      ],
    },
    "monitoringcoreoscom.AlertmanagerSpecContainersEnvValueFromConfigMapKeyRef": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "AlertmanagerSpecContainersEnvValueFromConfigMapKeyRef",
        },
        "summary": "Selects a key of a ConfigMap.",
      },
      "fqn": "monitoringcoreoscom.AlertmanagerSpecContainersEnvValueFromConfigMapKeyRef",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 7349,
      },
      "name": "AlertmanagerSpecContainersEnvValueFromConfigMapKeyRef",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecContainersEnvValueFromConfigMapKeyRef#key",
            },
            "summary": "The key to select.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 7355,
          },
          "name": "key",
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecContainersEnvValueFromConfigMapKeyRef#name",
            },
            "remarks": "More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?",
            "summary": "Name of the referent.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 7362,
          },
          "name": "name",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecContainersEnvValueFromConfigMapKeyRef#optional",
            },
            "summary": "Specify whether the ConfigMap or its key must be defined.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 7369,
          },
          "name": "optional",
          "optional": true,
          "type": Object {
            "primitive": "boolean",
          },
        },
      ],
    },
    "monitoringcoreoscom.AlertmanagerSpecContainersEnvValueFromFieldRef": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "AlertmanagerSpecContainersEnvValueFromFieldRef",
        },
        "summary": "Selects a field of the pod: supports metadata.name, metadata.namespace, metadata.labels, metadata.annotations, spec.nodeName, spec.serviceAccountName, status.hostIP, status.podIP, status.podIPs.",
      },
      "fqn": "monitoringcoreoscom.AlertmanagerSpecContainersEnvValueFromFieldRef",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 7394,
      },
      "name": "AlertmanagerSpecContainersEnvValueFromFieldRef",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecContainersEnvValueFromFieldRef#fieldPath",
            },
            "summary": "Path of the field to select in the specified API version.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 7407,
          },
          "name": "fieldPath",
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecContainersEnvValueFromFieldRef#apiVersion",
            },
            "summary": "Version of the schema the FieldPath is written in terms of, defaults to \\"v1\\".",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 7400,
          },
          "name": "apiVersion",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
      ],
    },
    "monitoringcoreoscom.AlertmanagerSpecContainersEnvValueFromResourceFieldRef": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "AlertmanagerSpecContainersEnvValueFromResourceFieldRef",
        },
        "summary": "Selects a resource of the container: only resources limits and requests (limits.cpu, limits.memory, limits.ephemeral-storage, requests.cpu, requests.memory and requests.ephemeral-storage) are currently supported.",
      },
      "fqn": "monitoringcoreoscom.AlertmanagerSpecContainersEnvValueFromResourceFieldRef",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 7431,
      },
      "name": "AlertmanagerSpecContainersEnvValueFromResourceFieldRef",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecContainersEnvValueFromResourceFieldRef#resource",
            },
            "summary": "Required: resource to select.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 7451,
          },
          "name": "resource",
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecContainersEnvValueFromResourceFieldRef#containerName",
            },
            "summary": "Container name: required for volumes, optional for env vars.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 7437,
          },
          "name": "containerName",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecContainersEnvValueFromResourceFieldRef#divisor",
            },
            "summary": "Specifies the output format of the exposed resources, defaults to \\"1\\".",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 7444,
          },
          "name": "divisor",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
      ],
    },
    "monitoringcoreoscom.AlertmanagerSpecContainersEnvValueFromSecretKeyRef": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "AlertmanagerSpecContainersEnvValueFromSecretKeyRef",
        },
        "summary": "Selects a key of a secret in the pod's namespace.",
      },
      "fqn": "monitoringcoreoscom.AlertmanagerSpecContainersEnvValueFromSecretKeyRef",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 7476,
      },
      "name": "AlertmanagerSpecContainersEnvValueFromSecretKeyRef",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecContainersEnvValueFromSecretKeyRef#key",
            },
            "remarks": "Must be a valid secret key.",
            "summary": "The key of the secret to select from.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 7482,
          },
          "name": "key",
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecContainersEnvValueFromSecretKeyRef#name",
            },
            "remarks": "More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?",
            "summary": "Name of the referent.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 7489,
          },
          "name": "name",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecContainersEnvValueFromSecretKeyRef#optional",
            },
            "summary": "Specify whether the Secret or its key must be defined.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 7496,
          },
          "name": "optional",
          "optional": true,
          "type": Object {
            "primitive": "boolean",
          },
        },
      ],
    },
    "monitoringcoreoscom.AlertmanagerSpecContainersLifecycle": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "AlertmanagerSpecContainersLifecycle",
        },
        "remarks": "Cannot be updated.",
        "summary": "Actions that the management system should take in response to container lifecycle events.",
      },
      "fqn": "monitoringcoreoscom.AlertmanagerSpecContainersLifecycle",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 1665,
      },
      "name": "AlertmanagerSpecContainersLifecycle",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecContainersLifecycle#postStart",
            },
            "remarks": "If the handler fails, the container is terminated and restarted according to its restart policy. Other management of the container blocks until the hook completes. More info: https://kubernetes.io/docs/concepts/containers/container-lifecycle-hooks/#container-hooks",
            "summary": "PostStart is called immediately after a container is created.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 1671,
          },
          "name": "postStart",
          "optional": true,
          "type": Object {
            "fqn": "monitoringcoreoscom.AlertmanagerSpecContainersLifecyclePostStart",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecContainersLifecycle#preStop",
            },
            "remarks": "The handler is not called if the container crashes or exits. The reason for termination is passed to the handler. The Pod's termination grace period countdown begins before the PreStop hooked is executed. Regardless of the outcome of the handler, the container will eventually terminate within the Pod's termination grace period. Other management of the container blocks until the hook completes or until the termination grace period is reached. More info: https://kubernetes.io/docs/concepts/containers/container-lifecycle-hooks/#container-hooks",
            "summary": "PreStop is called immediately before a container is terminated due to an API request or management event such as liveness/startup probe failure, preemption, resource contention, etc.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 1678,
          },
          "name": "preStop",
          "optional": true,
          "type": Object {
            "fqn": "monitoringcoreoscom.AlertmanagerSpecContainersLifecyclePreStop",
          },
        },
      ],
    },
    "monitoringcoreoscom.AlertmanagerSpecContainersLifecyclePostStart": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "AlertmanagerSpecContainersLifecyclePostStart",
        },
        "remarks": "If the handler fails, the container is terminated and restarted according to its restart policy. Other management of the container blocks until the hook completes. More info: https://kubernetes.io/docs/concepts/containers/container-lifecycle-hooks/#container-hooks",
        "summary": "PostStart is called immediately after a container is created.",
      },
      "fqn": "monitoringcoreoscom.AlertmanagerSpecContainersLifecyclePostStart",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 5158,
      },
      "name": "AlertmanagerSpecContainersLifecyclePostStart",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecContainersLifecyclePostStart#exec",
            },
            "remarks": "Exec specifies the action to take.",
            "summary": "One and only one of the following should be specified.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 5164,
          },
          "name": "exec",
          "optional": true,
          "type": Object {
            "fqn": "monitoringcoreoscom.AlertmanagerSpecContainersLifecyclePostStartExec",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecContainersLifecyclePostStart#httpGet",
            },
            "summary": "HTTPGet specifies the http request to perform.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 5171,
          },
          "name": "httpGet",
          "optional": true,
          "type": Object {
            "fqn": "monitoringcoreoscom.AlertmanagerSpecContainersLifecyclePostStartHttpGet",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecContainersLifecyclePostStart#tcpSocket",
            },
            "remarks": "TCP hooks not yet supported TODO: implement a realistic TCP lifecycle hook",
            "summary": "TCPSocket specifies an action involving a TCP port.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 5178,
          },
          "name": "tcpSocket",
          "optional": true,
          "type": Object {
            "fqn": "monitoringcoreoscom.AlertmanagerSpecContainersLifecyclePostStartTcpSocket",
          },
        },
      ],
    },
    "monitoringcoreoscom.AlertmanagerSpecContainersLifecyclePostStartExec": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "AlertmanagerSpecContainersLifecyclePostStartExec",
        },
        "remarks": "Exec specifies the action to take.",
        "summary": "One and only one of the following should be specified.",
      },
      "fqn": "monitoringcoreoscom.AlertmanagerSpecContainersLifecyclePostStartExec",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 7521,
      },
      "name": "AlertmanagerSpecContainersLifecyclePostStartExec",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecContainersLifecyclePostStartExec#command",
            },
            "remarks": "The command is simply exec'd, it is not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use a shell, you need to explicitly call out to that shell. Exit status of 0 is treated as live/healthy and non-zero is unhealthy.",
            "summary": "Command is the command line to execute inside the container, the working directory for the command  is root ('/') in the container's filesystem.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 7527,
          },
          "name": "command",
          "optional": true,
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "primitive": "string",
              },
              "kind": "array",
            },
          },
        },
      ],
    },
    "monitoringcoreoscom.AlertmanagerSpecContainersLifecyclePostStartHttpGet": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "AlertmanagerSpecContainersLifecyclePostStartHttpGet",
        },
        "summary": "HTTPGet specifies the http request to perform.",
      },
      "fqn": "monitoringcoreoscom.AlertmanagerSpecContainersLifecyclePostStartHttpGet",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 7550,
      },
      "name": "AlertmanagerSpecContainersLifecyclePostStartHttpGet",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecContainersLifecyclePostStartHttpGet#port",
            },
            "remarks": "Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.",
            "summary": "Name or number of the port to access on the container.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 7577,
          },
          "name": "port",
          "type": Object {
            "fqn": "monitoringcoreoscom.AlertmanagerSpecContainersLifecyclePostStartHttpGetPort",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecContainersLifecyclePostStartHttpGet#host",
            },
            "remarks": "You probably want to set \\"Host\\" in httpHeaders instead.",
            "summary": "Host name to connect to, defaults to the pod IP.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 7556,
          },
          "name": "host",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecContainersLifecyclePostStartHttpGet#httpHeaders",
            },
            "remarks": "HTTP allows repeated headers.",
            "summary": "Custom headers to set in the request.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 7563,
          },
          "name": "httpHeaders",
          "optional": true,
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "fqn": "monitoringcoreoscom.AlertmanagerSpecContainersLifecyclePostStartHttpGetHttpHeaders",
              },
              "kind": "array",
            },
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecContainersLifecyclePostStartHttpGet#path",
            },
            "summary": "Path to access on the HTTP server.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 7570,
          },
          "name": "path",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecContainersLifecyclePostStartHttpGet#scheme",
            },
            "default": "HTTP.",
            "remarks": "Defaults to HTTP.",
            "summary": "Scheme to use for connecting to the host.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 7585,
          },
          "name": "scheme",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
      ],
    },
    "monitoringcoreoscom.AlertmanagerSpecContainersLifecyclePostStartHttpGetHttpHeaders": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "AlertmanagerSpecContainersLifecyclePostStartHttpGetHttpHeaders",
        },
        "summary": "HTTPHeader describes a custom header to be used in HTTP probes.",
      },
      "fqn": "monitoringcoreoscom.AlertmanagerSpecContainersLifecyclePostStartHttpGetHttpHeaders",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 9408,
      },
      "name": "AlertmanagerSpecContainersLifecyclePostStartHttpGetHttpHeaders",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecContainersLifecyclePostStartHttpGetHttpHeaders#name",
            },
            "summary": "The header field name.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 9414,
          },
          "name": "name",
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecContainersLifecyclePostStartHttpGetHttpHeaders#value",
            },
            "summary": "The header field value.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 9421,
          },
          "name": "value",
          "type": Object {
            "primitive": "string",
          },
        },
      ],
    },
    "monitoringcoreoscom.AlertmanagerSpecContainersLifecyclePostStartHttpGetPort": Object {
      "assembly": "monitoringcoreoscom",
      "docs": Object {
        "custom": Object {
          "schema": "AlertmanagerSpecContainersLifecyclePostStartHttpGetPort",
        },
        "remarks": "Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.",
        "summary": "Name or number of the port to access on the container.",
      },
      "fqn": "monitoringcoreoscom.AlertmanagerSpecContainersLifecyclePostStartHttpGetPort",
      "kind": "class",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 9445,
      },
      "methods": Array [
        Object {
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 9446,
          },
          "name": "fromNumber",
          "parameters": Array [
            Object {
              "name": "value",
              "type": Object {
                "primitive": "number",
              },
            },
          ],
          "returns": Object {
            "type": Object {
              "fqn": "monitoringcoreoscom.AlertmanagerSpecContainersLifecyclePostStartHttpGetPort",
            },
          },
          "static": true,
        },
        Object {
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 9449,
          },
          "name": "fromString",
          "parameters": Array [
            Object {
              "name": "value",
              "type": Object {
                "primitive": "string",
              },
            },
          ],
          "returns": Object {
            "type": Object {
              "fqn": "monitoringcoreoscom.AlertmanagerSpecContainersLifecyclePostStartHttpGetPort",
            },
          },
          "static": true,
        },
      ],
      "name": "AlertmanagerSpecContainersLifecyclePostStartHttpGetPort",
      "properties": Array [
        Object {
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 9452,
          },
          "name": "value",
          "type": Object {
            "primitive": "any",
          },
        },
      ],
    },
    "monitoringcoreoscom.AlertmanagerSpecContainersLifecyclePostStartTcpSocket": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "AlertmanagerSpecContainersLifecyclePostStartTcpSocket",
        },
        "remarks": "TCP hooks not yet supported TODO: implement a realistic TCP lifecycle hook",
        "summary": "TCPSocket specifies an action involving a TCP port.",
      },
      "fqn": "monitoringcoreoscom.AlertmanagerSpecContainersLifecyclePostStartTcpSocket",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 7612,
      },
      "name": "AlertmanagerSpecContainersLifecyclePostStartTcpSocket",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecContainersLifecyclePostStartTcpSocket#port",
            },
            "remarks": "Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.",
            "summary": "Number or name of the port to access on the container.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 7625,
          },
          "name": "port",
          "type": Object {
            "fqn": "monitoringcoreoscom.AlertmanagerSpecContainersLifecyclePostStartTcpSocketPort",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecContainersLifecyclePostStartTcpSocket#host",
            },
            "summary": "Optional: Host name to connect to, defaults to the pod IP.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 7618,
          },
          "name": "host",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
      ],
    },
    "monitoringcoreoscom.AlertmanagerSpecContainersLifecyclePostStartTcpSocketPort": Object {
      "assembly": "monitoringcoreoscom",
      "docs": Object {
        "custom": Object {
          "schema": "AlertmanagerSpecContainersLifecyclePostStartTcpSocketPort",
        },
        "remarks": "Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.",
        "summary": "Number or name of the port to access on the container.",
      },
      "fqn": "monitoringcoreoscom.AlertmanagerSpecContainersLifecyclePostStartTcpSocketPort",
      "kind": "class",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 9462,
      },
      "methods": Array [
        Object {
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 9463,
          },
          "name": "fromNumber",
          "parameters": Array [
            Object {
              "name": "value",
              "type": Object {
                "primitive": "number",
              },
            },
          ],
          "returns": Object {
            "type": Object {
              "fqn": "monitoringcoreoscom.AlertmanagerSpecContainersLifecyclePostStartTcpSocketPort",
            },
          },
          "static": true,
        },
        Object {
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 9466,
          },
          "name": "fromString",
          "parameters": Array [
            Object {
              "name": "value",
              "type": Object {
                "primitive": "string",
              },
            },
          ],
          "returns": Object {
            "type": Object {
              "fqn": "monitoringcoreoscom.AlertmanagerSpecContainersLifecyclePostStartTcpSocketPort",
            },
          },
          "static": true,
        },
      ],
      "name": "AlertmanagerSpecContainersLifecyclePostStartTcpSocketPort",
      "properties": Array [
        Object {
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 9469,
          },
          "name": "value",
          "type": Object {
            "primitive": "any",
          },
        },
      ],
    },
    "monitoringcoreoscom.AlertmanagerSpecContainersLifecyclePreStop": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "AlertmanagerSpecContainersLifecyclePreStop",
        },
        "remarks": "The handler is not called if the container crashes or exits. The reason for termination is passed to the handler. The Pod's termination grace period countdown begins before the PreStop hooked is executed. Regardless of the outcome of the handler, the container will eventually terminate within the Pod's termination grace period. Other management of the container blocks until the hook completes or until the termination grace period is reached. More info: https://kubernetes.io/docs/concepts/containers/container-lifecycle-hooks/#container-hooks",
        "summary": "PreStop is called immediately before a container is terminated due to an API request or management event such as liveness/startup probe failure, preemption, resource contention, etc.",
      },
      "fqn": "monitoringcoreoscom.AlertmanagerSpecContainersLifecyclePreStop",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 5203,
      },
      "name": "AlertmanagerSpecContainersLifecyclePreStop",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecContainersLifecyclePreStop#exec",
            },
            "remarks": "Exec specifies the action to take.",
            "summary": "One and only one of the following should be specified.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 5209,
          },
          "name": "exec",
          "optional": true,
          "type": Object {
            "fqn": "monitoringcoreoscom.AlertmanagerSpecContainersLifecyclePreStopExec",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecContainersLifecyclePreStop#httpGet",
            },
            "summary": "HTTPGet specifies the http request to perform.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 5216,
          },
          "name": "httpGet",
          "optional": true,
          "type": Object {
            "fqn": "monitoringcoreoscom.AlertmanagerSpecContainersLifecyclePreStopHttpGet",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecContainersLifecyclePreStop#tcpSocket",
            },
            "remarks": "TCP hooks not yet supported TODO: implement a realistic TCP lifecycle hook",
            "summary": "TCPSocket specifies an action involving a TCP port.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 5223,
          },
          "name": "tcpSocket",
          "optional": true,
          "type": Object {
            "fqn": "monitoringcoreoscom.AlertmanagerSpecContainersLifecyclePreStopTcpSocket",
          },
        },
      ],
    },
    "monitoringcoreoscom.AlertmanagerSpecContainersLifecyclePreStopExec": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "AlertmanagerSpecContainersLifecyclePreStopExec",
        },
        "remarks": "Exec specifies the action to take.",
        "summary": "One and only one of the following should be specified.",
      },
      "fqn": "monitoringcoreoscom.AlertmanagerSpecContainersLifecyclePreStopExec",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 7649,
      },
      "name": "AlertmanagerSpecContainersLifecyclePreStopExec",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecContainersLifecyclePreStopExec#command",
            },
            "remarks": "The command is simply exec'd, it is not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use a shell, you need to explicitly call out to that shell. Exit status of 0 is treated as live/healthy and non-zero is unhealthy.",
            "summary": "Command is the command line to execute inside the container, the working directory for the command  is root ('/') in the container's filesystem.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 7655,
          },
          "name": "command",
          "optional": true,
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "primitive": "string",
              },
              "kind": "array",
            },
          },
        },
      ],
    },
    "monitoringcoreoscom.AlertmanagerSpecContainersLifecyclePreStopHttpGet": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "AlertmanagerSpecContainersLifecyclePreStopHttpGet",
        },
        "summary": "HTTPGet specifies the http request to perform.",
      },
      "fqn": "monitoringcoreoscom.AlertmanagerSpecContainersLifecyclePreStopHttpGet",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 7678,
      },
      "name": "AlertmanagerSpecContainersLifecyclePreStopHttpGet",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecContainersLifecyclePreStopHttpGet#port",
            },
            "remarks": "Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.",
            "summary": "Name or number of the port to access on the container.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 7705,
          },
          "name": "port",
          "type": Object {
            "fqn": "monitoringcoreoscom.AlertmanagerSpecContainersLifecyclePreStopHttpGetPort",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecContainersLifecyclePreStopHttpGet#host",
            },
            "remarks": "You probably want to set \\"Host\\" in httpHeaders instead.",
            "summary": "Host name to connect to, defaults to the pod IP.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 7684,
          },
          "name": "host",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecContainersLifecyclePreStopHttpGet#httpHeaders",
            },
            "remarks": "HTTP allows repeated headers.",
            "summary": "Custom headers to set in the request.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 7691,
          },
          "name": "httpHeaders",
          "optional": true,
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "fqn": "monitoringcoreoscom.AlertmanagerSpecContainersLifecyclePreStopHttpGetHttpHeaders",
              },
              "kind": "array",
            },
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecContainersLifecyclePreStopHttpGet#path",
            },
            "summary": "Path to access on the HTTP server.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 7698,
          },
          "name": "path",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecContainersLifecyclePreStopHttpGet#scheme",
            },
            "default": "HTTP.",
            "remarks": "Defaults to HTTP.",
            "summary": "Scheme to use for connecting to the host.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 7713,
          },
          "name": "scheme",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
      ],
    },
    "monitoringcoreoscom.AlertmanagerSpecContainersLifecyclePreStopHttpGetHttpHeaders": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "AlertmanagerSpecContainersLifecyclePreStopHttpGetHttpHeaders",
        },
        "summary": "HTTPHeader describes a custom header to be used in HTTP probes.",
      },
      "fqn": "monitoringcoreoscom.AlertmanagerSpecContainersLifecyclePreStopHttpGetHttpHeaders",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 9479,
      },
      "name": "AlertmanagerSpecContainersLifecyclePreStopHttpGetHttpHeaders",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecContainersLifecyclePreStopHttpGetHttpHeaders#name",
            },
            "summary": "The header field name.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 9485,
          },
          "name": "name",
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecContainersLifecyclePreStopHttpGetHttpHeaders#value",
            },
            "summary": "The header field value.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 9492,
          },
          "name": "value",
          "type": Object {
            "primitive": "string",
          },
        },
      ],
    },
    "monitoringcoreoscom.AlertmanagerSpecContainersLifecyclePreStopHttpGetPort": Object {
      "assembly": "monitoringcoreoscom",
      "docs": Object {
        "custom": Object {
          "schema": "AlertmanagerSpecContainersLifecyclePreStopHttpGetPort",
        },
        "remarks": "Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.",
        "summary": "Name or number of the port to access on the container.",
      },
      "fqn": "monitoringcoreoscom.AlertmanagerSpecContainersLifecyclePreStopHttpGetPort",
      "kind": "class",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 9516,
      },
      "methods": Array [
        Object {
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 9517,
          },
          "name": "fromNumber",
          "parameters": Array [
            Object {
              "name": "value",
              "type": Object {
                "primitive": "number",
              },
            },
          ],
          "returns": Object {
            "type": Object {
              "fqn": "monitoringcoreoscom.AlertmanagerSpecContainersLifecyclePreStopHttpGetPort",
            },
          },
          "static": true,
        },
        Object {
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 9520,
          },
          "name": "fromString",
          "parameters": Array [
            Object {
              "name": "value",
              "type": Object {
                "primitive": "string",
              },
            },
          ],
          "returns": Object {
            "type": Object {
              "fqn": "monitoringcoreoscom.AlertmanagerSpecContainersLifecyclePreStopHttpGetPort",
            },
          },
          "static": true,
        },
      ],
      "name": "AlertmanagerSpecContainersLifecyclePreStopHttpGetPort",
      "properties": Array [
        Object {
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 9523,
          },
          "name": "value",
          "type": Object {
            "primitive": "any",
          },
        },
      ],
    },
    "monitoringcoreoscom.AlertmanagerSpecContainersLifecyclePreStopTcpSocket": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "AlertmanagerSpecContainersLifecyclePreStopTcpSocket",
        },
        "remarks": "TCP hooks not yet supported TODO: implement a realistic TCP lifecycle hook",
        "summary": "TCPSocket specifies an action involving a TCP port.",
      },
      "fqn": "monitoringcoreoscom.AlertmanagerSpecContainersLifecyclePreStopTcpSocket",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 7740,
      },
      "name": "AlertmanagerSpecContainersLifecyclePreStopTcpSocket",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecContainersLifecyclePreStopTcpSocket#port",
            },
            "remarks": "Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.",
            "summary": "Number or name of the port to access on the container.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 7753,
          },
          "name": "port",
          "type": Object {
            "fqn": "monitoringcoreoscom.AlertmanagerSpecContainersLifecyclePreStopTcpSocketPort",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecContainersLifecyclePreStopTcpSocket#host",
            },
            "summary": "Optional: Host name to connect to, defaults to the pod IP.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 7746,
          },
          "name": "host",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
      ],
    },
    "monitoringcoreoscom.AlertmanagerSpecContainersLifecyclePreStopTcpSocketPort": Object {
      "assembly": "monitoringcoreoscom",
      "docs": Object {
        "custom": Object {
          "schema": "AlertmanagerSpecContainersLifecyclePreStopTcpSocketPort",
        },
        "remarks": "Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.",
        "summary": "Number or name of the port to access on the container.",
      },
      "fqn": "monitoringcoreoscom.AlertmanagerSpecContainersLifecyclePreStopTcpSocketPort",
      "kind": "class",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 9533,
      },
      "methods": Array [
        Object {
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 9534,
          },
          "name": "fromNumber",
          "parameters": Array [
            Object {
              "name": "value",
              "type": Object {
                "primitive": "number",
              },
            },
          ],
          "returns": Object {
            "type": Object {
              "fqn": "monitoringcoreoscom.AlertmanagerSpecContainersLifecyclePreStopTcpSocketPort",
            },
          },
          "static": true,
        },
        Object {
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 9537,
          },
          "name": "fromString",
          "parameters": Array [
            Object {
              "name": "value",
              "type": Object {
                "primitive": "string",
              },
            },
          ],
          "returns": Object {
            "type": Object {
              "fqn": "monitoringcoreoscom.AlertmanagerSpecContainersLifecyclePreStopTcpSocketPort",
            },
          },
          "static": true,
        },
      ],
      "name": "AlertmanagerSpecContainersLifecyclePreStopTcpSocketPort",
      "properties": Array [
        Object {
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 9540,
          },
          "name": "value",
          "type": Object {
            "primitive": "any",
          },
        },
      ],
    },
    "monitoringcoreoscom.AlertmanagerSpecContainersLivenessProbe": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "AlertmanagerSpecContainersLivenessProbe",
        },
        "remarks": "Container will be restarted if the probe fails. Cannot be updated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes",
        "summary": "Periodic probe of container liveness.",
      },
      "fqn": "monitoringcoreoscom.AlertmanagerSpecContainersLivenessProbe",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 1702,
      },
      "name": "AlertmanagerSpecContainersLivenessProbe",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecContainersLivenessProbe#exec",
            },
            "remarks": "Exec specifies the action to take.",
            "summary": "One and only one of the following should be specified.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 1708,
          },
          "name": "exec",
          "optional": true,
          "type": Object {
            "fqn": "monitoringcoreoscom.AlertmanagerSpecContainersLivenessProbeExec",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecContainersLivenessProbe#failureThreshold",
            },
            "default": "3. Minimum value is 1.",
            "remarks": "Defaults to 3. Minimum value is 1.",
            "summary": "Minimum consecutive failures for the probe to be considered failed after having succeeded.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 1716,
          },
          "name": "failureThreshold",
          "optional": true,
          "type": Object {
            "primitive": "number",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecContainersLivenessProbe#httpGet",
            },
            "summary": "HTTPGet specifies the http request to perform.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 1723,
          },
          "name": "httpGet",
          "optional": true,
          "type": Object {
            "fqn": "monitoringcoreoscom.AlertmanagerSpecContainersLivenessProbeHttpGet",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecContainersLivenessProbe#initialDelaySeconds",
            },
            "remarks": "More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes",
            "summary": "Number of seconds after the container has started before liveness probes are initiated.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 1730,
          },
          "name": "initialDelaySeconds",
          "optional": true,
          "type": Object {
            "primitive": "number",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecContainersLivenessProbe#periodSeconds",
            },
            "default": "10 seconds. Minimum value is 1.",
            "remarks": "Default to 10 seconds. Minimum value is 1.",
            "summary": "How often (in seconds) to perform the probe.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 1738,
          },
          "name": "periodSeconds",
          "optional": true,
          "type": Object {
            "primitive": "number",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecContainersLivenessProbe#successThreshold",
            },
            "default": "1. Must be 1 for liveness and startup. Minimum value is 1.",
            "remarks": "Defaults to 1. Must be 1 for liveness and startup. Minimum value is 1.",
            "summary": "Minimum consecutive successes for the probe to be considered successful after having failed.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 1746,
          },
          "name": "successThreshold",
          "optional": true,
          "type": Object {
            "primitive": "number",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecContainersLivenessProbe#tcpSocket",
            },
            "remarks": "TCP hooks not yet supported TODO: implement a realistic TCP lifecycle hook",
            "summary": "TCPSocket specifies an action involving a TCP port.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 1753,
          },
          "name": "tcpSocket",
          "optional": true,
          "type": Object {
            "fqn": "monitoringcoreoscom.AlertmanagerSpecContainersLivenessProbeTcpSocket",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecContainersLivenessProbe#timeoutSeconds",
            },
            "default": "1 second. Minimum value is 1. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes",
            "remarks": "Defaults to 1 second. Minimum value is 1. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes",
            "summary": "Number of seconds after which the probe times out.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 1761,
          },
          "name": "timeoutSeconds",
          "optional": true,
          "type": Object {
            "primitive": "number",
          },
        },
      ],
    },
    "monitoringcoreoscom.AlertmanagerSpecContainersLivenessProbeExec": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "AlertmanagerSpecContainersLivenessProbeExec",
        },
        "remarks": "Exec specifies the action to take.",
        "summary": "One and only one of the following should be specified.",
      },
      "fqn": "monitoringcoreoscom.AlertmanagerSpecContainersLivenessProbeExec",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 5248,
      },
      "name": "AlertmanagerSpecContainersLivenessProbeExec",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecContainersLivenessProbeExec#command",
            },
            "remarks": "The command is simply exec'd, it is not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use a shell, you need to explicitly call out to that shell. Exit status of 0 is treated as live/healthy and non-zero is unhealthy.",
            "summary": "Command is the command line to execute inside the container, the working directory for the command  is root ('/') in the container's filesystem.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 5254,
          },
          "name": "command",
          "optional": true,
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "primitive": "string",
              },
              "kind": "array",
            },
          },
        },
      ],
    },
    "monitoringcoreoscom.AlertmanagerSpecContainersLivenessProbeHttpGet": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "AlertmanagerSpecContainersLivenessProbeHttpGet",
        },
        "summary": "HTTPGet specifies the http request to perform.",
      },
      "fqn": "monitoringcoreoscom.AlertmanagerSpecContainersLivenessProbeHttpGet",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 5277,
      },
      "name": "AlertmanagerSpecContainersLivenessProbeHttpGet",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecContainersLivenessProbeHttpGet#port",
            },
            "remarks": "Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.",
            "summary": "Name or number of the port to access on the container.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 5304,
          },
          "name": "port",
          "type": Object {
            "fqn": "monitoringcoreoscom.AlertmanagerSpecContainersLivenessProbeHttpGetPort",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecContainersLivenessProbeHttpGet#host",
            },
            "remarks": "You probably want to set \\"Host\\" in httpHeaders instead.",
            "summary": "Host name to connect to, defaults to the pod IP.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 5283,
          },
          "name": "host",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecContainersLivenessProbeHttpGet#httpHeaders",
            },
            "remarks": "HTTP allows repeated headers.",
            "summary": "Custom headers to set in the request.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 5290,
          },
          "name": "httpHeaders",
          "optional": true,
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "fqn": "monitoringcoreoscom.AlertmanagerSpecContainersLivenessProbeHttpGetHttpHeaders",
              },
              "kind": "array",
            },
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecContainersLivenessProbeHttpGet#path",
            },
            "summary": "Path to access on the HTTP server.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 5297,
          },
          "name": "path",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecContainersLivenessProbeHttpGet#scheme",
            },
            "default": "HTTP.",
            "remarks": "Defaults to HTTP.",
            "summary": "Scheme to use for connecting to the host.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 5312,
          },
          "name": "scheme",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
      ],
    },
    "monitoringcoreoscom.AlertmanagerSpecContainersLivenessProbeHttpGetHttpHeaders": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "AlertmanagerSpecContainersLivenessProbeHttpGetHttpHeaders",
        },
        "summary": "HTTPHeader describes a custom header to be used in HTTP probes.",
      },
      "fqn": "monitoringcoreoscom.AlertmanagerSpecContainersLivenessProbeHttpGetHttpHeaders",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 7777,
      },
      "name": "AlertmanagerSpecContainersLivenessProbeHttpGetHttpHeaders",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecContainersLivenessProbeHttpGetHttpHeaders#name",
            },
            "summary": "The header field name.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 7783,
          },
          "name": "name",
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecContainersLivenessProbeHttpGetHttpHeaders#value",
            },
            "summary": "The header field value.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 7790,
          },
          "name": "value",
          "type": Object {
            "primitive": "string",
          },
        },
      ],
    },
    "monitoringcoreoscom.AlertmanagerSpecContainersLivenessProbeHttpGetPort": Object {
      "assembly": "monitoringcoreoscom",
      "docs": Object {
        "custom": Object {
          "schema": "AlertmanagerSpecContainersLivenessProbeHttpGetPort",
        },
        "remarks": "Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.",
        "summary": "Name or number of the port to access on the container.",
      },
      "fqn": "monitoringcoreoscom.AlertmanagerSpecContainersLivenessProbeHttpGetPort",
      "kind": "class",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 7814,
      },
      "methods": Array [
        Object {
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 7815,
          },
          "name": "fromNumber",
          "parameters": Array [
            Object {
              "name": "value",
              "type": Object {
                "primitive": "number",
              },
            },
          ],
          "returns": Object {
            "type": Object {
              "fqn": "monitoringcoreoscom.AlertmanagerSpecContainersLivenessProbeHttpGetPort",
            },
          },
          "static": true,
        },
        Object {
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 7818,
          },
          "name": "fromString",
          "parameters": Array [
            Object {
              "name": "value",
              "type": Object {
                "primitive": "string",
              },
            },
          ],
          "returns": Object {
            "type": Object {
              "fqn": "monitoringcoreoscom.AlertmanagerSpecContainersLivenessProbeHttpGetPort",
            },
          },
          "static": true,
        },
      ],
      "name": "AlertmanagerSpecContainersLivenessProbeHttpGetPort",
      "properties": Array [
        Object {
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 7821,
          },
          "name": "value",
          "type": Object {
            "primitive": "any",
          },
        },
      ],
    },
    "monitoringcoreoscom.AlertmanagerSpecContainersLivenessProbeTcpSocket": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "AlertmanagerSpecContainersLivenessProbeTcpSocket",
        },
        "remarks": "TCP hooks not yet supported TODO: implement a realistic TCP lifecycle hook",
        "summary": "TCPSocket specifies an action involving a TCP port.",
      },
      "fqn": "monitoringcoreoscom.AlertmanagerSpecContainersLivenessProbeTcpSocket",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 5339,
      },
      "name": "AlertmanagerSpecContainersLivenessProbeTcpSocket",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecContainersLivenessProbeTcpSocket#port",
            },
            "remarks": "Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.",
            "summary": "Number or name of the port to access on the container.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 5352,
          },
          "name": "port",
          "type": Object {
            "fqn": "monitoringcoreoscom.AlertmanagerSpecContainersLivenessProbeTcpSocketPort",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecContainersLivenessProbeTcpSocket#host",
            },
            "summary": "Optional: Host name to connect to, defaults to the pod IP.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 5345,
          },
          "name": "host",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
      ],
    },
    "monitoringcoreoscom.AlertmanagerSpecContainersLivenessProbeTcpSocketPort": Object {
      "assembly": "monitoringcoreoscom",
      "docs": Object {
        "custom": Object {
          "schema": "AlertmanagerSpecContainersLivenessProbeTcpSocketPort",
        },
        "remarks": "Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.",
        "summary": "Number or name of the port to access on the container.",
      },
      "fqn": "monitoringcoreoscom.AlertmanagerSpecContainersLivenessProbeTcpSocketPort",
      "kind": "class",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 7831,
      },
      "methods": Array [
        Object {
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 7832,
          },
          "name": "fromNumber",
          "parameters": Array [
            Object {
              "name": "value",
              "type": Object {
                "primitive": "number",
              },
            },
          ],
          "returns": Object {
            "type": Object {
              "fqn": "monitoringcoreoscom.AlertmanagerSpecContainersLivenessProbeTcpSocketPort",
            },
          },
          "static": true,
        },
        Object {
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 7835,
          },
          "name": "fromString",
          "parameters": Array [
            Object {
              "name": "value",
              "type": Object {
                "primitive": "string",
              },
            },
          ],
          "returns": Object {
            "type": Object {
              "fqn": "monitoringcoreoscom.AlertmanagerSpecContainersLivenessProbeTcpSocketPort",
            },
          },
          "static": true,
        },
      ],
      "name": "AlertmanagerSpecContainersLivenessProbeTcpSocketPort",
      "properties": Array [
        Object {
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 7838,
          },
          "name": "value",
          "type": Object {
            "primitive": "any",
          },
        },
      ],
    },
    "monitoringcoreoscom.AlertmanagerSpecContainersPorts": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "AlertmanagerSpecContainersPorts",
        },
        "summary": "ContainerPort represents a network port in a single container.",
      },
      "fqn": "monitoringcoreoscom.AlertmanagerSpecContainersPorts",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 1791,
      },
      "name": "AlertmanagerSpecContainersPorts",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecContainersPorts#containerPort",
            },
            "remarks": "This must be a valid port number, 0 < x < 65536.",
            "summary": "Number of port to expose on the pod's IP address.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 1797,
          },
          "name": "containerPort",
          "type": Object {
            "primitive": "number",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecContainersPorts#hostIP",
            },
            "summary": "What host IP to bind the external port to.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 1804,
          },
          "name": "hostIp",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecContainersPorts#hostPort",
            },
            "remarks": "If specified, this must be a valid port number, 0 < x < 65536. If HostNetwork is specified, this must match ContainerPort. Most containers do not need this.",
            "summary": "Number of port to expose on the host.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 1811,
          },
          "name": "hostPort",
          "optional": true,
          "type": Object {
            "primitive": "number",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecContainersPorts#name",
            },
            "remarks": "Each named port in a pod must have a unique name. Name for the port that can be referred to by services.",
            "summary": "If specified, this must be an IANA_SVC_NAME and unique within the pod.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 1818,
          },
          "name": "name",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecContainersPorts#protocol",
            },
            "default": "TCP\\".",
            "remarks": "Must be UDP, TCP, or SCTP. Defaults to \\"TCP\\".",
            "summary": "Protocol for port.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 1826,
          },
          "name": "protocol",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
      ],
    },
    "monitoringcoreoscom.AlertmanagerSpecContainersReadinessProbe": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "AlertmanagerSpecContainersReadinessProbe",
        },
        "remarks": "Container will be removed from service endpoints if the probe fails. Cannot be updated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes",
        "summary": "Periodic probe of container service readiness.",
      },
      "fqn": "monitoringcoreoscom.AlertmanagerSpecContainersReadinessProbe",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 1853,
      },
      "name": "AlertmanagerSpecContainersReadinessProbe",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecContainersReadinessProbe#exec",
            },
            "remarks": "Exec specifies the action to take.",
            "summary": "One and only one of the following should be specified.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 1859,
          },
          "name": "exec",
          "optional": true,
          "type": Object {
            "fqn": "monitoringcoreoscom.AlertmanagerSpecContainersReadinessProbeExec",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecContainersReadinessProbe#failureThreshold",
            },
            "default": "3. Minimum value is 1.",
            "remarks": "Defaults to 3. Minimum value is 1.",
            "summary": "Minimum consecutive failures for the probe to be considered failed after having succeeded.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 1867,
          },
          "name": "failureThreshold",
          "optional": true,
          "type": Object {
            "primitive": "number",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecContainersReadinessProbe#httpGet",
            },
            "summary": "HTTPGet specifies the http request to perform.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 1874,
          },
          "name": "httpGet",
          "optional": true,
          "type": Object {
            "fqn": "monitoringcoreoscom.AlertmanagerSpecContainersReadinessProbeHttpGet",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecContainersReadinessProbe#initialDelaySeconds",
            },
            "remarks": "More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes",
            "summary": "Number of seconds after the container has started before liveness probes are initiated.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 1881,
          },
          "name": "initialDelaySeconds",
          "optional": true,
          "type": Object {
            "primitive": "number",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecContainersReadinessProbe#periodSeconds",
            },
            "default": "10 seconds. Minimum value is 1.",
            "remarks": "Default to 10 seconds. Minimum value is 1.",
            "summary": "How often (in seconds) to perform the probe.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 1889,
          },
          "name": "periodSeconds",
          "optional": true,
          "type": Object {
            "primitive": "number",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecContainersReadinessProbe#successThreshold",
            },
            "default": "1. Must be 1 for liveness and startup. Minimum value is 1.",
            "remarks": "Defaults to 1. Must be 1 for liveness and startup. Minimum value is 1.",
            "summary": "Minimum consecutive successes for the probe to be considered successful after having failed.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 1897,
          },
          "name": "successThreshold",
          "optional": true,
          "type": Object {
            "primitive": "number",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecContainersReadinessProbe#tcpSocket",
            },
            "remarks": "TCP hooks not yet supported TODO: implement a realistic TCP lifecycle hook",
            "summary": "TCPSocket specifies an action involving a TCP port.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 1904,
          },
          "name": "tcpSocket",
          "optional": true,
          "type": Object {
            "fqn": "monitoringcoreoscom.AlertmanagerSpecContainersReadinessProbeTcpSocket",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecContainersReadinessProbe#timeoutSeconds",
            },
            "default": "1 second. Minimum value is 1. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes",
            "remarks": "Defaults to 1 second. Minimum value is 1. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes",
            "summary": "Number of seconds after which the probe times out.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 1912,
          },
          "name": "timeoutSeconds",
          "optional": true,
          "type": Object {
            "primitive": "number",
          },
        },
      ],
    },
    "monitoringcoreoscom.AlertmanagerSpecContainersReadinessProbeExec": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "AlertmanagerSpecContainersReadinessProbeExec",
        },
        "remarks": "Exec specifies the action to take.",
        "summary": "One and only one of the following should be specified.",
      },
      "fqn": "monitoringcoreoscom.AlertmanagerSpecContainersReadinessProbeExec",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 5376,
      },
      "name": "AlertmanagerSpecContainersReadinessProbeExec",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecContainersReadinessProbeExec#command",
            },
            "remarks": "The command is simply exec'd, it is not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use a shell, you need to explicitly call out to that shell. Exit status of 0 is treated as live/healthy and non-zero is unhealthy.",
            "summary": "Command is the command line to execute inside the container, the working directory for the command  is root ('/') in the container's filesystem.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 5382,
          },
          "name": "command",
          "optional": true,
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "primitive": "string",
              },
              "kind": "array",
            },
          },
        },
      ],
    },
    "monitoringcoreoscom.AlertmanagerSpecContainersReadinessProbeHttpGet": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "AlertmanagerSpecContainersReadinessProbeHttpGet",
        },
        "summary": "HTTPGet specifies the http request to perform.",
      },
      "fqn": "monitoringcoreoscom.AlertmanagerSpecContainersReadinessProbeHttpGet",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 5405,
      },
      "name": "AlertmanagerSpecContainersReadinessProbeHttpGet",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecContainersReadinessProbeHttpGet#port",
            },
            "remarks": "Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.",
            "summary": "Name or number of the port to access on the container.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 5432,
          },
          "name": "port",
          "type": Object {
            "fqn": "monitoringcoreoscom.AlertmanagerSpecContainersReadinessProbeHttpGetPort",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecContainersReadinessProbeHttpGet#host",
            },
            "remarks": "You probably want to set \\"Host\\" in httpHeaders instead.",
            "summary": "Host name to connect to, defaults to the pod IP.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 5411,
          },
          "name": "host",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecContainersReadinessProbeHttpGet#httpHeaders",
            },
            "remarks": "HTTP allows repeated headers.",
            "summary": "Custom headers to set in the request.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 5418,
          },
          "name": "httpHeaders",
          "optional": true,
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "fqn": "monitoringcoreoscom.AlertmanagerSpecContainersReadinessProbeHttpGetHttpHeaders",
              },
              "kind": "array",
            },
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecContainersReadinessProbeHttpGet#path",
            },
            "summary": "Path to access on the HTTP server.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 5425,
          },
          "name": "path",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecContainersReadinessProbeHttpGet#scheme",
            },
            "default": "HTTP.",
            "remarks": "Defaults to HTTP.",
            "summary": "Scheme to use for connecting to the host.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 5440,
          },
          "name": "scheme",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
      ],
    },
    "monitoringcoreoscom.AlertmanagerSpecContainersReadinessProbeHttpGetHttpHeaders": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "AlertmanagerSpecContainersReadinessProbeHttpGetHttpHeaders",
        },
        "summary": "HTTPHeader describes a custom header to be used in HTTP probes.",
      },
      "fqn": "monitoringcoreoscom.AlertmanagerSpecContainersReadinessProbeHttpGetHttpHeaders",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 7848,
      },
      "name": "AlertmanagerSpecContainersReadinessProbeHttpGetHttpHeaders",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecContainersReadinessProbeHttpGetHttpHeaders#name",
            },
            "summary": "The header field name.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 7854,
          },
          "name": "name",
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecContainersReadinessProbeHttpGetHttpHeaders#value",
            },
            "summary": "The header field value.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 7861,
          },
          "name": "value",
          "type": Object {
            "primitive": "string",
          },
        },
      ],
    },
    "monitoringcoreoscom.AlertmanagerSpecContainersReadinessProbeHttpGetPort": Object {
      "assembly": "monitoringcoreoscom",
      "docs": Object {
        "custom": Object {
          "schema": "AlertmanagerSpecContainersReadinessProbeHttpGetPort",
        },
        "remarks": "Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.",
        "summary": "Name or number of the port to access on the container.",
      },
      "fqn": "monitoringcoreoscom.AlertmanagerSpecContainersReadinessProbeHttpGetPort",
      "kind": "class",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 7885,
      },
      "methods": Array [
        Object {
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 7886,
          },
          "name": "fromNumber",
          "parameters": Array [
            Object {
              "name": "value",
              "type": Object {
                "primitive": "number",
              },
            },
          ],
          "returns": Object {
            "type": Object {
              "fqn": "monitoringcoreoscom.AlertmanagerSpecContainersReadinessProbeHttpGetPort",
            },
          },
          "static": true,
        },
        Object {
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 7889,
          },
          "name": "fromString",
          "parameters": Array [
            Object {
              "name": "value",
              "type": Object {
                "primitive": "string",
              },
            },
          ],
          "returns": Object {
            "type": Object {
              "fqn": "monitoringcoreoscom.AlertmanagerSpecContainersReadinessProbeHttpGetPort",
            },
          },
          "static": true,
        },
      ],
      "name": "AlertmanagerSpecContainersReadinessProbeHttpGetPort",
      "properties": Array [
        Object {
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 7892,
          },
          "name": "value",
          "type": Object {
            "primitive": "any",
          },
        },
      ],
    },
    "monitoringcoreoscom.AlertmanagerSpecContainersReadinessProbeTcpSocket": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "AlertmanagerSpecContainersReadinessProbeTcpSocket",
        },
        "remarks": "TCP hooks not yet supported TODO: implement a realistic TCP lifecycle hook",
        "summary": "TCPSocket specifies an action involving a TCP port.",
      },
      "fqn": "monitoringcoreoscom.AlertmanagerSpecContainersReadinessProbeTcpSocket",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 5467,
      },
      "name": "AlertmanagerSpecContainersReadinessProbeTcpSocket",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecContainersReadinessProbeTcpSocket#port",
            },
            "remarks": "Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.",
            "summary": "Number or name of the port to access on the container.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 5480,
          },
          "name": "port",
          "type": Object {
            "fqn": "monitoringcoreoscom.AlertmanagerSpecContainersReadinessProbeTcpSocketPort",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecContainersReadinessProbeTcpSocket#host",
            },
            "summary": "Optional: Host name to connect to, defaults to the pod IP.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 5473,
          },
          "name": "host",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
      ],
    },
    "monitoringcoreoscom.AlertmanagerSpecContainersReadinessProbeTcpSocketPort": Object {
      "assembly": "monitoringcoreoscom",
      "docs": Object {
        "custom": Object {
          "schema": "AlertmanagerSpecContainersReadinessProbeTcpSocketPort",
        },
        "remarks": "Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.",
        "summary": "Number or name of the port to access on the container.",
      },
      "fqn": "monitoringcoreoscom.AlertmanagerSpecContainersReadinessProbeTcpSocketPort",
      "kind": "class",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 7902,
      },
      "methods": Array [
        Object {
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 7903,
          },
          "name": "fromNumber",
          "parameters": Array [
            Object {
              "name": "value",
              "type": Object {
                "primitive": "number",
              },
            },
          ],
          "returns": Object {
            "type": Object {
              "fqn": "monitoringcoreoscom.AlertmanagerSpecContainersReadinessProbeTcpSocketPort",
            },
          },
          "static": true,
        },
        Object {
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 7906,
          },
          "name": "fromString",
          "parameters": Array [
            Object {
              "name": "value",
              "type": Object {
                "primitive": "string",
              },
            },
          ],
          "returns": Object {
            "type": Object {
              "fqn": "monitoringcoreoscom.AlertmanagerSpecContainersReadinessProbeTcpSocketPort",
            },
          },
          "static": true,
        },
      ],
      "name": "AlertmanagerSpecContainersReadinessProbeTcpSocketPort",
      "properties": Array [
        Object {
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 7909,
          },
          "name": "value",
          "type": Object {
            "primitive": "any",
          },
        },
      ],
    },
    "monitoringcoreoscom.AlertmanagerSpecContainersResources": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "AlertmanagerSpecContainersResources",
        },
        "remarks": "Cannot be updated. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/",
        "summary": "Compute Resources required by this container.",
      },
      "fqn": "monitoringcoreoscom.AlertmanagerSpecContainersResources",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 1942,
      },
      "name": "AlertmanagerSpecContainersResources",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecContainersResources#limits",
            },
            "remarks": "More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/",
            "summary": "Limits describes the maximum amount of compute resources allowed.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 1948,
          },
          "name": "limits",
          "optional": true,
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "primitive": "string",
              },
              "kind": "map",
            },
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecContainersResources#requests",
            },
            "remarks": "If Requests is omitted for a container, it defaults to Limits if that is explicitly specified, otherwise to an implementation-defined value. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/",
            "summary": "Requests describes the minimum amount of compute resources required.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 1955,
          },
          "name": "requests",
          "optional": true,
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "primitive": "string",
              },
              "kind": "map",
            },
          },
        },
      ],
    },
    "monitoringcoreoscom.AlertmanagerSpecContainersSecurityContext": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "AlertmanagerSpecContainersSecurityContext",
        },
        "remarks": "More info: https://kubernetes.io/docs/concepts/policy/security-context/ More info: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
        "summary": "Security options the pod should run with.",
      },
      "fqn": "monitoringcoreoscom.AlertmanagerSpecContainersSecurityContext",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 1979,
      },
      "name": "AlertmanagerSpecContainersSecurityContext",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecContainersSecurityContext#allowPrivilegeEscalation",
            },
            "remarks": "This bool directly controls if the no_new_privs flag will be set on the container process. AllowPrivilegeEscalation is true always when the container is: 1) run as Privileged 2) has CAP_SYS_ADMIN",
            "summary": "AllowPrivilegeEscalation controls whether a process can gain more privileges than its parent process.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 1985,
          },
          "name": "allowPrivilegeEscalation",
          "optional": true,
          "type": Object {
            "primitive": "boolean",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecContainersSecurityContext#capabilities",
            },
            "default": "the default set of capabilities granted by the container runtime.",
            "remarks": "Defaults to the default set of capabilities granted by the container runtime.",
            "summary": "The capabilities to add/drop when running containers.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 1993,
          },
          "name": "capabilities",
          "optional": true,
          "type": Object {
            "fqn": "monitoringcoreoscom.AlertmanagerSpecContainersSecurityContextCapabilities",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecContainersSecurityContext#privileged",
            },
            "default": "false.",
            "remarks": "Processes in privileged containers are essentially equivalent to root on the host. Defaults to false.",
            "summary": "Run container in privileged mode.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 2001,
          },
          "name": "privileged",
          "optional": true,
          "type": Object {
            "primitive": "boolean",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecContainersSecurityContext#procMount",
            },
            "remarks": "The default is DefaultProcMount which uses the container runtime defaults for readonly paths and masked paths. This requires the ProcMountType feature flag to be enabled.",
            "summary": "procMount denotes the type of proc mount to use for the containers.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 2008,
          },
          "name": "procMount",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecContainersSecurityContext#readOnlyRootFilesystem",
            },
            "default": "false.",
            "remarks": "Default is false.",
            "summary": "Whether this container has a read-only root filesystem.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 2016,
          },
          "name": "readOnlyRootFilesystem",
          "optional": true,
          "type": Object {
            "primitive": "boolean",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecContainersSecurityContext#runAsGroup",
            },
            "remarks": "Uses runtime default if unset. May also be set in PodSecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.",
            "summary": "The GID to run the entrypoint of the container process.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 2023,
          },
          "name": "runAsGroup",
          "optional": true,
          "type": Object {
            "primitive": "number",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecContainersSecurityContext#runAsNonRoot",
            },
            "remarks": "If true, the Kubelet will validate the image at runtime to ensure that it does not run as UID 0 (root) and fail to start the container if it does. If unset or false, no such validation will be performed. May also be set in PodSecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.",
            "summary": "Indicates that the container must run as a non-root user.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 2030,
          },
          "name": "runAsNonRoot",
          "optional": true,
          "type": Object {
            "primitive": "boolean",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecContainersSecurityContext#runAsUser",
            },
            "default": "user specified in image metadata if unspecified. May also be set in PodSecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.",
            "remarks": "Defaults to user specified in image metadata if unspecified. May also be set in PodSecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.",
            "summary": "The UID to run the entrypoint of the container process.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 2038,
          },
          "name": "runAsUser",
          "optional": true,
          "type": Object {
            "primitive": "number",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecContainersSecurityContext#seLinuxOptions",
            },
            "remarks": "If unspecified, the container runtime will allocate a random SELinux context for each container.  May also be set in PodSecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.",
            "summary": "The SELinux context to be applied to the container.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 2045,
          },
          "name": "seLinuxOptions",
          "optional": true,
          "type": Object {
            "fqn": "monitoringcoreoscom.AlertmanagerSpecContainersSecurityContextSeLinuxOptions",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecContainersSecurityContext#windowsOptions",
            },
            "remarks": "If unspecified, the options from the PodSecurityContext will be used. If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.",
            "summary": "The Windows specific settings applied to all containers.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 2052,
          },
          "name": "windowsOptions",
          "optional": true,
          "type": Object {
            "fqn": "monitoringcoreoscom.AlertmanagerSpecContainersSecurityContextWindowsOptions",
          },
        },
      ],
    },
    "monitoringcoreoscom.AlertmanagerSpecContainersSecurityContextCapabilities": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "AlertmanagerSpecContainersSecurityContextCapabilities",
        },
        "default": "the default set of capabilities granted by the container runtime.",
        "remarks": "Defaults to the default set of capabilities granted by the container runtime.",
        "summary": "The capabilities to add/drop when running containers.",
      },
      "fqn": "monitoringcoreoscom.AlertmanagerSpecContainersSecurityContextCapabilities",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 5505,
      },
      "name": "AlertmanagerSpecContainersSecurityContextCapabilities",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecContainersSecurityContextCapabilities#add",
            },
            "summary": "Added capabilities.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 5511,
          },
          "name": "add",
          "optional": true,
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "primitive": "string",
              },
              "kind": "array",
            },
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecContainersSecurityContextCapabilities#drop",
            },
            "summary": "Removed capabilities.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 5518,
          },
          "name": "drop",
          "optional": true,
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "primitive": "string",
              },
              "kind": "array",
            },
          },
        },
      ],
    },
    "monitoringcoreoscom.AlertmanagerSpecContainersSecurityContextSeLinuxOptions": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "AlertmanagerSpecContainersSecurityContextSeLinuxOptions",
        },
        "remarks": "If unspecified, the container runtime will allocate a random SELinux context for each container.  May also be set in PodSecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.",
        "summary": "The SELinux context to be applied to the container.",
      },
      "fqn": "monitoringcoreoscom.AlertmanagerSpecContainersSecurityContextSeLinuxOptions",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 5542,
      },
      "name": "AlertmanagerSpecContainersSecurityContextSeLinuxOptions",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecContainersSecurityContextSeLinuxOptions#level",
            },
            "summary": "Level is SELinux level label that applies to the container.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 5548,
          },
          "name": "level",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecContainersSecurityContextSeLinuxOptions#role",
            },
            "summary": "Role is a SELinux role label that applies to the container.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 5555,
          },
          "name": "role",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecContainersSecurityContextSeLinuxOptions#type",
            },
            "summary": "Type is a SELinux type label that applies to the container.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 5562,
          },
          "name": "type",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecContainersSecurityContextSeLinuxOptions#user",
            },
            "summary": "User is a SELinux user label that applies to the container.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 5569,
          },
          "name": "user",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
      ],
    },
    "monitoringcoreoscom.AlertmanagerSpecContainersSecurityContextWindowsOptions": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "AlertmanagerSpecContainersSecurityContextWindowsOptions",
        },
        "remarks": "If unspecified, the options from the PodSecurityContext will be used. If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.",
        "summary": "The Windows specific settings applied to all containers.",
      },
      "fqn": "monitoringcoreoscom.AlertmanagerSpecContainersSecurityContextWindowsOptions",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 5595,
      },
      "name": "AlertmanagerSpecContainersSecurityContextWindowsOptions",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecContainersSecurityContextWindowsOptions#gmsaCredentialSpec",
            },
            "summary": "GMSACredentialSpec is where the GMSA admission webhook (https://github.com/kubernetes-sigs/windows-gmsa) inlines the contents of the GMSA credential spec named by the GMSACredentialSpecName field.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 5601,
          },
          "name": "gmsaCredentialSpec",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecContainersSecurityContextWindowsOptions#gmsaCredentialSpecName",
            },
            "summary": "GMSACredentialSpecName is the name of the GMSA credential spec to use.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 5608,
          },
          "name": "gmsaCredentialSpecName",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecContainersSecurityContextWindowsOptions#runAsUserName",
            },
            "default": "the user specified in image metadata if unspecified. May also be set in PodSecurityContext. If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.",
            "remarks": "Defaults to the user specified in image metadata if unspecified. May also be set in PodSecurityContext. If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.",
            "summary": "The UserName in Windows to run the entrypoint of the container process.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 5616,
          },
          "name": "runAsUserName",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
      ],
    },
    "monitoringcoreoscom.AlertmanagerSpecContainersStartupProbe": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "AlertmanagerSpecContainersStartupProbe",
        },
        "remarks": "If specified, no other probes are executed until this completes successfully. If this probe fails, the Pod will be restarted, just as if the livenessProbe failed. This can be used to provide different probe parameters at the beginning of a Pod's lifecycle, when it might take a long time to load data or warm a cache, than during steady-state operation. This cannot be updated. This is a beta feature enabled by the StartupProbe feature flag. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes",
        "summary": "StartupProbe indicates that the Pod has successfully initialized.",
      },
      "fqn": "monitoringcoreoscom.AlertmanagerSpecContainersStartupProbe",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 2084,
      },
      "name": "AlertmanagerSpecContainersStartupProbe",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecContainersStartupProbe#exec",
            },
            "remarks": "Exec specifies the action to take.",
            "summary": "One and only one of the following should be specified.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 2090,
          },
          "name": "exec",
          "optional": true,
          "type": Object {
            "fqn": "monitoringcoreoscom.AlertmanagerSpecContainersStartupProbeExec",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecContainersStartupProbe#failureThreshold",
            },
            "default": "3. Minimum value is 1.",
            "remarks": "Defaults to 3. Minimum value is 1.",
            "summary": "Minimum consecutive failures for the probe to be considered failed after having succeeded.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 2098,
          },
          "name": "failureThreshold",
          "optional": true,
          "type": Object {
            "primitive": "number",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecContainersStartupProbe#httpGet",
            },
            "summary": "HTTPGet specifies the http request to perform.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 2105,
          },
          "name": "httpGet",
          "optional": true,
          "type": Object {
            "fqn": "monitoringcoreoscom.AlertmanagerSpecContainersStartupProbeHttpGet",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecContainersStartupProbe#initialDelaySeconds",
            },
            "remarks": "More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes",
            "summary": "Number of seconds after the container has started before liveness probes are initiated.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 2112,
          },
          "name": "initialDelaySeconds",
          "optional": true,
          "type": Object {
            "primitive": "number",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecContainersStartupProbe#periodSeconds",
            },
            "default": "10 seconds. Minimum value is 1.",
            "remarks": "Default to 10 seconds. Minimum value is 1.",
            "summary": "How often (in seconds) to perform the probe.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 2120,
          },
          "name": "periodSeconds",
          "optional": true,
          "type": Object {
            "primitive": "number",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecContainersStartupProbe#successThreshold",
            },
            "default": "1. Must be 1 for liveness and startup. Minimum value is 1.",
            "remarks": "Defaults to 1. Must be 1 for liveness and startup. Minimum value is 1.",
            "summary": "Minimum consecutive successes for the probe to be considered successful after having failed.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 2128,
          },
          "name": "successThreshold",
          "optional": true,
          "type": Object {
            "primitive": "number",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecContainersStartupProbe#tcpSocket",
            },
            "remarks": "TCP hooks not yet supported TODO: implement a realistic TCP lifecycle hook",
            "summary": "TCPSocket specifies an action involving a TCP port.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 2135,
          },
          "name": "tcpSocket",
          "optional": true,
          "type": Object {
            "fqn": "monitoringcoreoscom.AlertmanagerSpecContainersStartupProbeTcpSocket",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecContainersStartupProbe#timeoutSeconds",
            },
            "default": "1 second. Minimum value is 1. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes",
            "remarks": "Defaults to 1 second. Minimum value is 1. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes",
            "summary": "Number of seconds after which the probe times out.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 2143,
          },
          "name": "timeoutSeconds",
          "optional": true,
          "type": Object {
            "primitive": "number",
          },
        },
      ],
    },
    "monitoringcoreoscom.AlertmanagerSpecContainersStartupProbeExec": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "AlertmanagerSpecContainersStartupProbeExec",
        },
        "remarks": "Exec specifies the action to take.",
        "summary": "One and only one of the following should be specified.",
      },
      "fqn": "monitoringcoreoscom.AlertmanagerSpecContainersStartupProbeExec",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 5641,
      },
      "name": "AlertmanagerSpecContainersStartupProbeExec",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecContainersStartupProbeExec#command",
            },
            "remarks": "The command is simply exec'd, it is not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use a shell, you need to explicitly call out to that shell. Exit status of 0 is treated as live/healthy and non-zero is unhealthy.",
            "summary": "Command is the command line to execute inside the container, the working directory for the command  is root ('/') in the container's filesystem.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 5647,
          },
          "name": "command",
          "optional": true,
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "primitive": "string",
              },
              "kind": "array",
            },
          },
        },
      ],
    },
    "monitoringcoreoscom.AlertmanagerSpecContainersStartupProbeHttpGet": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "AlertmanagerSpecContainersStartupProbeHttpGet",
        },
        "summary": "HTTPGet specifies the http request to perform.",
      },
      "fqn": "monitoringcoreoscom.AlertmanagerSpecContainersStartupProbeHttpGet",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 5670,
      },
      "name": "AlertmanagerSpecContainersStartupProbeHttpGet",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecContainersStartupProbeHttpGet#port",
            },
            "remarks": "Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.",
            "summary": "Name or number of the port to access on the container.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 5697,
          },
          "name": "port",
          "type": Object {
            "fqn": "monitoringcoreoscom.AlertmanagerSpecContainersStartupProbeHttpGetPort",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecContainersStartupProbeHttpGet#host",
            },
            "remarks": "You probably want to set \\"Host\\" in httpHeaders instead.",
            "summary": "Host name to connect to, defaults to the pod IP.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 5676,
          },
          "name": "host",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecContainersStartupProbeHttpGet#httpHeaders",
            },
            "remarks": "HTTP allows repeated headers.",
            "summary": "Custom headers to set in the request.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 5683,
          },
          "name": "httpHeaders",
          "optional": true,
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "fqn": "monitoringcoreoscom.AlertmanagerSpecContainersStartupProbeHttpGetHttpHeaders",
              },
              "kind": "array",
            },
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecContainersStartupProbeHttpGet#path",
            },
            "summary": "Path to access on the HTTP server.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 5690,
          },
          "name": "path",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecContainersStartupProbeHttpGet#scheme",
            },
            "default": "HTTP.",
            "remarks": "Defaults to HTTP.",
            "summary": "Scheme to use for connecting to the host.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 5705,
          },
          "name": "scheme",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
      ],
    },
    "monitoringcoreoscom.AlertmanagerSpecContainersStartupProbeHttpGetHttpHeaders": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "AlertmanagerSpecContainersStartupProbeHttpGetHttpHeaders",
        },
        "summary": "HTTPHeader describes a custom header to be used in HTTP probes.",
      },
      "fqn": "monitoringcoreoscom.AlertmanagerSpecContainersStartupProbeHttpGetHttpHeaders",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 7919,
      },
      "name": "AlertmanagerSpecContainersStartupProbeHttpGetHttpHeaders",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecContainersStartupProbeHttpGetHttpHeaders#name",
            },
            "summary": "The header field name.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 7925,
          },
          "name": "name",
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecContainersStartupProbeHttpGetHttpHeaders#value",
            },
            "summary": "The header field value.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 7932,
          },
          "name": "value",
          "type": Object {
            "primitive": "string",
          },
        },
      ],
    },
    "monitoringcoreoscom.AlertmanagerSpecContainersStartupProbeHttpGetPort": Object {
      "assembly": "monitoringcoreoscom",
      "docs": Object {
        "custom": Object {
          "schema": "AlertmanagerSpecContainersStartupProbeHttpGetPort",
        },
        "remarks": "Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.",
        "summary": "Name or number of the port to access on the container.",
      },
      "fqn": "monitoringcoreoscom.AlertmanagerSpecContainersStartupProbeHttpGetPort",
      "kind": "class",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 7956,
      },
      "methods": Array [
        Object {
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 7957,
          },
          "name": "fromNumber",
          "parameters": Array [
            Object {
              "name": "value",
              "type": Object {
                "primitive": "number",
              },
            },
          ],
          "returns": Object {
            "type": Object {
              "fqn": "monitoringcoreoscom.AlertmanagerSpecContainersStartupProbeHttpGetPort",
            },
          },
          "static": true,
        },
        Object {
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 7960,
          },
          "name": "fromString",
          "parameters": Array [
            Object {
              "name": "value",
              "type": Object {
                "primitive": "string",
              },
            },
          ],
          "returns": Object {
            "type": Object {
              "fqn": "monitoringcoreoscom.AlertmanagerSpecContainersStartupProbeHttpGetPort",
            },
          },
          "static": true,
        },
      ],
      "name": "AlertmanagerSpecContainersStartupProbeHttpGetPort",
      "properties": Array [
        Object {
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 7963,
          },
          "name": "value",
          "type": Object {
            "primitive": "any",
          },
        },
      ],
    },
    "monitoringcoreoscom.AlertmanagerSpecContainersStartupProbeTcpSocket": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "AlertmanagerSpecContainersStartupProbeTcpSocket",
        },
        "remarks": "TCP hooks not yet supported TODO: implement a realistic TCP lifecycle hook",
        "summary": "TCPSocket specifies an action involving a TCP port.",
      },
      "fqn": "monitoringcoreoscom.AlertmanagerSpecContainersStartupProbeTcpSocket",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 5732,
      },
      "name": "AlertmanagerSpecContainersStartupProbeTcpSocket",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecContainersStartupProbeTcpSocket#port",
            },
            "remarks": "Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.",
            "summary": "Number or name of the port to access on the container.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 5745,
          },
          "name": "port",
          "type": Object {
            "fqn": "monitoringcoreoscom.AlertmanagerSpecContainersStartupProbeTcpSocketPort",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecContainersStartupProbeTcpSocket#host",
            },
            "summary": "Optional: Host name to connect to, defaults to the pod IP.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 5738,
          },
          "name": "host",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
      ],
    },
    "monitoringcoreoscom.AlertmanagerSpecContainersStartupProbeTcpSocketPort": Object {
      "assembly": "monitoringcoreoscom",
      "docs": Object {
        "custom": Object {
          "schema": "AlertmanagerSpecContainersStartupProbeTcpSocketPort",
        },
        "remarks": "Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.",
        "summary": "Number or name of the port to access on the container.",
      },
      "fqn": "monitoringcoreoscom.AlertmanagerSpecContainersStartupProbeTcpSocketPort",
      "kind": "class",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 7973,
      },
      "methods": Array [
        Object {
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 7974,
          },
          "name": "fromNumber",
          "parameters": Array [
            Object {
              "name": "value",
              "type": Object {
                "primitive": "number",
              },
            },
          ],
          "returns": Object {
            "type": Object {
              "fqn": "monitoringcoreoscom.AlertmanagerSpecContainersStartupProbeTcpSocketPort",
            },
          },
          "static": true,
        },
        Object {
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 7977,
          },
          "name": "fromString",
          "parameters": Array [
            Object {
              "name": "value",
              "type": Object {
                "primitive": "string",
              },
            },
          ],
          "returns": Object {
            "type": Object {
              "fqn": "monitoringcoreoscom.AlertmanagerSpecContainersStartupProbeTcpSocketPort",
            },
          },
          "static": true,
        },
      ],
      "name": "AlertmanagerSpecContainersStartupProbeTcpSocketPort",
      "properties": Array [
        Object {
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 7980,
          },
          "name": "value",
          "type": Object {
            "primitive": "any",
          },
        },
      ],
    },
    "monitoringcoreoscom.AlertmanagerSpecContainersVolumeDevices": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "AlertmanagerSpecContainersVolumeDevices",
        },
        "summary": "volumeDevice describes a mapping of a raw block device within a container.",
      },
      "fqn": "monitoringcoreoscom.AlertmanagerSpecContainersVolumeDevices",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 2173,
      },
      "name": "AlertmanagerSpecContainersVolumeDevices",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecContainersVolumeDevices#devicePath",
            },
            "summary": "devicePath is the path inside of the container that the device will be mapped to.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 2179,
          },
          "name": "devicePath",
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecContainersVolumeDevices#name",
            },
            "summary": "name must match the name of a persistentVolumeClaim in the pod.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 2186,
          },
          "name": "name",
          "type": Object {
            "primitive": "string",
          },
        },
      ],
    },
    "monitoringcoreoscom.AlertmanagerSpecContainersVolumeMounts": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "AlertmanagerSpecContainersVolumeMounts",
        },
        "summary": "VolumeMount describes a mounting of a Volume within a container.",
      },
      "fqn": "monitoringcoreoscom.AlertmanagerSpecContainersVolumeMounts",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 2210,
      },
      "name": "AlertmanagerSpecContainersVolumeMounts",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecContainersVolumeMounts#mountPath",
            },
            "remarks": "Must not contain ':'.",
            "summary": "Path within the container at which the volume should be mounted.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 2216,
          },
          "name": "mountPath",
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecContainersVolumeMounts#name",
            },
            "summary": "This must match the Name of a Volume.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 2230,
          },
          "name": "name",
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecContainersVolumeMounts#mountPropagation",
            },
            "remarks": "When not set, MountPropagationNone is used. This field is beta in 1.10.",
            "summary": "mountPropagation determines how mounts are propagated from the host to container and the other way around.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 2223,
          },
          "name": "mountPropagation",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecContainersVolumeMounts#readOnly",
            },
            "default": "false.",
            "remarks": "Defaults to false.",
            "summary": "Mounted read-only if true, read-write otherwise (false or unspecified).",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 2238,
          },
          "name": "readOnly",
          "optional": true,
          "type": Object {
            "primitive": "boolean",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecContainersVolumeMounts#subPath",
            },
            "default": "volume's root).",
            "remarks": "Defaults to \\"\\" (volume's root).",
            "summary": "Path within the volume from which the container's volume should be mounted.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 2246,
          },
          "name": "subPath",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecContainersVolumeMounts#subPathExpr",
            },
            "default": "volume's root). SubPathExpr and SubPath are mutually exclusive.",
            "remarks": "Behaves similarly to SubPath but environment variable references $(VAR_NAME) are expanded using the container's environment. Defaults to \\"\\" (volume's root). SubPathExpr and SubPath are mutually exclusive.",
            "summary": "Expanded path within the volume from which the container's volume should be mounted.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 2254,
          },
          "name": "subPathExpr",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
      ],
    },
    "monitoringcoreoscom.AlertmanagerSpecImagePullSecrets": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "AlertmanagerSpecImagePullSecrets",
        },
        "summary": "LocalObjectReference contains enough information to let you locate the referenced object inside the same namespace.",
      },
      "fqn": "monitoringcoreoscom.AlertmanagerSpecImagePullSecrets",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 621,
      },
      "name": "AlertmanagerSpecImagePullSecrets",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecImagePullSecrets#name",
            },
            "remarks": "More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?",
            "summary": "Name of the referent.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 627,
          },
          "name": "name",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
      ],
    },
    "monitoringcoreoscom.AlertmanagerSpecInitContainers": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "AlertmanagerSpecInitContainers",
        },
        "summary": "A single application container that you want to run within a pod.",
      },
      "fqn": "monitoringcoreoscom.AlertmanagerSpecInitContainers",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 650,
      },
      "name": "AlertmanagerSpecInitContainers",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecInitContainers#name",
            },
            "remarks": "Each container in a pod must have a unique name (DNS_LABEL). Cannot be updated.",
            "summary": "Name of the container specified as a DNS_LABEL.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 713,
          },
          "name": "name",
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecInitContainers#args",
            },
            "remarks": "The docker image's CMD is used if this is not provided. Variable references $(VAR_NAME) are expanded using the container's environment. If a variable cannot be resolved, the reference in the input string will be unchanged. The $(VAR_NAME) syntax can be escaped with a double $$, ie: $$(VAR_NAME). Escaped references will never be expanded, regardless of whether the variable exists or not. Cannot be updated. More info: https://kubernetes.io/docs/tasks/inject-data-application/define-command-argument-container/#running-a-command-in-a-shell",
            "summary": "Arguments to the entrypoint.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 656,
          },
          "name": "args",
          "optional": true,
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "primitive": "string",
              },
              "kind": "array",
            },
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecInitContainers#command",
            },
            "remarks": "Not executed within a shell. The docker image's ENTRYPOINT is used if this is not provided. Variable references $(VAR_NAME) are expanded using the container's environment. If a variable cannot be resolved, the reference in the input string will be unchanged. The $(VAR_NAME) syntax can be escaped with a double $$, ie: $$(VAR_NAME). Escaped references will never be expanded, regardless of whether the variable exists or not. Cannot be updated. More info: https://kubernetes.io/docs/tasks/inject-data-application/define-command-argument-container/#running-a-command-in-a-shell",
            "summary": "Entrypoint array.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 663,
          },
          "name": "command",
          "optional": true,
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "primitive": "string",
              },
              "kind": "array",
            },
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecInitContainers#env",
            },
            "remarks": "Cannot be updated.",
            "summary": "List of environment variables to set in the container.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 670,
          },
          "name": "env",
          "optional": true,
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "fqn": "monitoringcoreoscom.AlertmanagerSpecInitContainersEnv",
              },
              "kind": "array",
            },
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecInitContainers#envFrom",
            },
            "remarks": "The keys defined within a source must be a C_IDENTIFIER. All invalid keys will be reported as an event when the container is starting. When a key exists in multiple sources, the value associated with the last source will take precedence. Values defined by an Env with a duplicate key will take precedence. Cannot be updated.",
            "summary": "List of sources to populate environment variables in the container.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 677,
          },
          "name": "envFrom",
          "optional": true,
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "fqn": "monitoringcoreoscom.AlertmanagerSpecInitContainersEnvFrom",
              },
              "kind": "array",
            },
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecInitContainers#image",
            },
            "remarks": "More info: https://kubernetes.io/docs/concepts/containers/images This field is optional to allow higher level config management to default or override container images in workload controllers like Deployments and StatefulSets.",
            "summary": "Docker image name.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 684,
          },
          "name": "image",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecInitContainers#imagePullPolicy",
            },
            "default": "Always if :latest tag is specified, or IfNotPresent otherwise. Cannot be updated. More info: https://kubernetes.io/docs/concepts/containers/images#updating-images",
            "remarks": "One of Always, Never, IfNotPresent. Defaults to Always if :latest tag is specified, or IfNotPresent otherwise. Cannot be updated. More info: https://kubernetes.io/docs/concepts/containers/images#updating-images",
            "summary": "Image pull policy.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 692,
          },
          "name": "imagePullPolicy",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecInitContainers#lifecycle",
            },
            "remarks": "Cannot be updated.",
            "summary": "Actions that the management system should take in response to container lifecycle events.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 699,
          },
          "name": "lifecycle",
          "optional": true,
          "type": Object {
            "fqn": "monitoringcoreoscom.AlertmanagerSpecInitContainersLifecycle",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecInitContainers#livenessProbe",
            },
            "remarks": "Container will be restarted if the probe fails. Cannot be updated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes",
            "summary": "Periodic probe of container liveness.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 706,
          },
          "name": "livenessProbe",
          "optional": true,
          "type": Object {
            "fqn": "monitoringcoreoscom.AlertmanagerSpecInitContainersLivenessProbe",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecInitContainers#ports",
            },
            "remarks": "Exposing a port here gives the system additional information about the network connections a container uses, but is primarily informational. Not specifying a port here DOES NOT prevent that port from being exposed. Any port which is listening on the default \\"0.0.0.0\\" address inside a container will be accessible from the network. Cannot be updated.",
            "summary": "List of ports to expose from the container.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 720,
          },
          "name": "ports",
          "optional": true,
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "fqn": "monitoringcoreoscom.AlertmanagerSpecInitContainersPorts",
              },
              "kind": "array",
            },
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecInitContainers#readinessProbe",
            },
            "remarks": "Container will be removed from service endpoints if the probe fails. Cannot be updated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes",
            "summary": "Periodic probe of container service readiness.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 727,
          },
          "name": "readinessProbe",
          "optional": true,
          "type": Object {
            "fqn": "monitoringcoreoscom.AlertmanagerSpecInitContainersReadinessProbe",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecInitContainers#resources",
            },
            "remarks": "Cannot be updated. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/",
            "summary": "Compute Resources required by this container.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 734,
          },
          "name": "resources",
          "optional": true,
          "type": Object {
            "fqn": "monitoringcoreoscom.AlertmanagerSpecInitContainersResources",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecInitContainers#securityContext",
            },
            "remarks": "More info: https://kubernetes.io/docs/concepts/policy/security-context/ More info: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
            "summary": "Security options the pod should run with.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 741,
          },
          "name": "securityContext",
          "optional": true,
          "type": Object {
            "fqn": "monitoringcoreoscom.AlertmanagerSpecInitContainersSecurityContext",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecInitContainers#startupProbe",
            },
            "remarks": "If specified, no other probes are executed until this completes successfully. If this probe fails, the Pod will be restarted, just as if the livenessProbe failed. This can be used to provide different probe parameters at the beginning of a Pod's lifecycle, when it might take a long time to load data or warm a cache, than during steady-state operation. This cannot be updated. This is a beta feature enabled by the StartupProbe feature flag. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes",
            "summary": "StartupProbe indicates that the Pod has successfully initialized.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 748,
          },
          "name": "startupProbe",
          "optional": true,
          "type": Object {
            "fqn": "monitoringcoreoscom.AlertmanagerSpecInitContainersStartupProbe",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecInitContainers#stdin",
            },
            "default": "false.",
            "remarks": "If this is not set, reads from stdin in the container will always result in EOF. Default is false.",
            "summary": "Whether this container should allocate a buffer for stdin in the container runtime.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 756,
          },
          "name": "stdin",
          "optional": true,
          "type": Object {
            "primitive": "boolean",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecInitContainers#stdinOnce",
            },
            "default": "false",
            "remarks": "When stdin is true the stdin stream will remain open across multiple attach sessions. If stdinOnce is set to true, stdin is opened on container start, is empty until the first client attaches to stdin, and then remains open and accepts data until the client disconnects, at which time stdin is closed and remains closed until the container is restarted. If this flag is false, a container processes that reads from stdin will never receive an EOF. Default is false",
            "summary": "Whether the container runtime should close the stdin channel after it has been opened by a single attach.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 764,
          },
          "name": "stdinOnce",
          "optional": true,
          "type": Object {
            "primitive": "boolean",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecInitContainers#terminationMessagePath",
            },
            "default": "dev/termination-log. Cannot be updated.",
            "remarks": "Message written is intended to be brief final status, such as an assertion failure message. Will be truncated by the node if greater than 4096 bytes. The total message length across all containers will be limited to 12kb. Defaults to /dev/termination-log. Cannot be updated.",
            "summary": "Optional: Path at which the file to which the container's termination message will be written is mounted into the container's filesystem.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 772,
          },
          "name": "terminationMessagePath",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecInitContainers#terminationMessagePolicy",
            },
            "default": "File. Cannot be updated.",
            "remarks": "File will use the contents of terminationMessagePath to populate the container status message on both success and failure. FallbackToLogsOnError will use the last chunk of container log output if the termination message file is empty and the container exited with an error. The log output is limited to 2048 bytes or 80 lines, whichever is smaller. Defaults to File. Cannot be updated.",
            "summary": "Indicate how the termination message should be populated.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 780,
          },
          "name": "terminationMessagePolicy",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecInitContainers#tty",
            },
            "default": "false.",
            "remarks": "Default is false.",
            "summary": "Whether this container should allocate a TTY for itself, also requires 'stdin' to be true.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 788,
          },
          "name": "tty",
          "optional": true,
          "type": Object {
            "primitive": "boolean",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecInitContainers#volumeDevices",
            },
            "summary": "volumeDevices is the list of block devices to be used by the container.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 795,
          },
          "name": "volumeDevices",
          "optional": true,
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "fqn": "monitoringcoreoscom.AlertmanagerSpecInitContainersVolumeDevices",
              },
              "kind": "array",
            },
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecInitContainers#volumeMounts",
            },
            "remarks": "Cannot be updated.",
            "summary": "Pod volumes to mount into the container's filesystem.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 802,
          },
          "name": "volumeMounts",
          "optional": true,
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "fqn": "monitoringcoreoscom.AlertmanagerSpecInitContainersVolumeMounts",
              },
              "kind": "array",
            },
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecInitContainers#workingDir",
            },
            "remarks": "If not specified, the container runtime's default will be used, which might be configured in the container image. Cannot be updated.",
            "summary": "Container's working directory.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 809,
          },
          "name": "workingDir",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
      ],
    },
    "monitoringcoreoscom.AlertmanagerSpecInitContainersEnv": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "AlertmanagerSpecInitContainersEnv",
        },
        "summary": "EnvVar represents an environment variable present in a Container.",
      },
      "fqn": "monitoringcoreoscom.AlertmanagerSpecInitContainersEnv",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 2282,
      },
      "name": "AlertmanagerSpecInitContainersEnv",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecInitContainersEnv#name",
            },
            "remarks": "Must be a C_IDENTIFIER.",
            "summary": "Name of the environment variable.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 2288,
          },
          "name": "name",
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecInitContainersEnv#value",
            },
            "default": ".",
            "remarks": "If a variable cannot be resolved, the reference in the input string will be unchanged. The $(VAR_NAME) syntax can be escaped with a double $$, ie: $$(VAR_NAME). Escaped references will never be expanded, regardless of whether the variable exists or not. Defaults to \\"\\".",
            "summary": "Variable references $(VAR_NAME) are expanded using the previous defined environment variables in the container and any service environment variables.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 2296,
          },
          "name": "value",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecInitContainersEnv#valueFrom",
            },
            "remarks": "Cannot be used if value is not empty.",
            "summary": "Source for the environment variable's value.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 2303,
          },
          "name": "valueFrom",
          "optional": true,
          "type": Object {
            "fqn": "monitoringcoreoscom.AlertmanagerSpecInitContainersEnvValueFrom",
          },
        },
      ],
    },
    "monitoringcoreoscom.AlertmanagerSpecInitContainersEnvFrom": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "AlertmanagerSpecInitContainersEnvFrom",
        },
        "summary": "EnvFromSource represents the source of a set of ConfigMaps.",
      },
      "fqn": "monitoringcoreoscom.AlertmanagerSpecInitContainersEnvFrom",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 2328,
      },
      "name": "AlertmanagerSpecInitContainersEnvFrom",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecInitContainersEnvFrom#configMapRef",
            },
            "summary": "The ConfigMap to select from.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 2334,
          },
          "name": "configMapRef",
          "optional": true,
          "type": Object {
            "fqn": "monitoringcoreoscom.AlertmanagerSpecInitContainersEnvFromConfigMapRef",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecInitContainersEnvFrom#prefix",
            },
            "remarks": "Must be a C_IDENTIFIER.",
            "summary": "An optional identifier to prepend to each key in the ConfigMap.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 2341,
          },
          "name": "prefix",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecInitContainersEnvFrom#secretRef",
            },
            "summary": "The Secret to select from.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 2348,
          },
          "name": "secretRef",
          "optional": true,
          "type": Object {
            "fqn": "monitoringcoreoscom.AlertmanagerSpecInitContainersEnvFromSecretRef",
          },
        },
      ],
    },
    "monitoringcoreoscom.AlertmanagerSpecInitContainersEnvFromConfigMapRef": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "AlertmanagerSpecInitContainersEnvFromConfigMapRef",
        },
        "summary": "The ConfigMap to select from.",
      },
      "fqn": "monitoringcoreoscom.AlertmanagerSpecInitContainersEnvFromConfigMapRef",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 5822,
      },
      "name": "AlertmanagerSpecInitContainersEnvFromConfigMapRef",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecInitContainersEnvFromConfigMapRef#name",
            },
            "remarks": "More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?",
            "summary": "Name of the referent.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 5828,
          },
          "name": "name",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecInitContainersEnvFromConfigMapRef#optional",
            },
            "summary": "Specify whether the ConfigMap must be defined.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 5835,
          },
          "name": "optional",
          "optional": true,
          "type": Object {
            "primitive": "boolean",
          },
        },
      ],
    },
    "monitoringcoreoscom.AlertmanagerSpecInitContainersEnvFromSecretRef": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "AlertmanagerSpecInitContainersEnvFromSecretRef",
        },
        "summary": "The Secret to select from.",
      },
      "fqn": "monitoringcoreoscom.AlertmanagerSpecInitContainersEnvFromSecretRef",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 5859,
      },
      "name": "AlertmanagerSpecInitContainersEnvFromSecretRef",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecInitContainersEnvFromSecretRef#name",
            },
            "remarks": "More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?",
            "summary": "Name of the referent.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 5865,
          },
          "name": "name",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecInitContainersEnvFromSecretRef#optional",
            },
            "summary": "Specify whether the Secret must be defined.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 5872,
          },
          "name": "optional",
          "optional": true,
          "type": Object {
            "primitive": "boolean",
          },
        },
      ],
    },
    "monitoringcoreoscom.AlertmanagerSpecInitContainersEnvValueFrom": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "AlertmanagerSpecInitContainersEnvValueFrom",
        },
        "remarks": "Cannot be used if value is not empty.",
        "summary": "Source for the environment variable's value.",
      },
      "fqn": "monitoringcoreoscom.AlertmanagerSpecInitContainersEnvValueFrom",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 5769,
      },
      "name": "AlertmanagerSpecInitContainersEnvValueFrom",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecInitContainersEnvValueFrom#configMapKeyRef",
            },
            "summary": "Selects a key of a ConfigMap.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 5775,
          },
          "name": "configMapKeyRef",
          "optional": true,
          "type": Object {
            "fqn": "monitoringcoreoscom.AlertmanagerSpecInitContainersEnvValueFromConfigMapKeyRef",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecInitContainersEnvValueFrom#fieldRef",
            },
            "summary": "Selects a field of the pod: supports metadata.name, metadata.namespace, metadata.labels, metadata.annotations, spec.nodeName, spec.serviceAccountName, status.hostIP, status.podIP, status.podIPs.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 5782,
          },
          "name": "fieldRef",
          "optional": true,
          "type": Object {
            "fqn": "monitoringcoreoscom.AlertmanagerSpecInitContainersEnvValueFromFieldRef",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecInitContainersEnvValueFrom#resourceFieldRef",
            },
            "summary": "Selects a resource of the container: only resources limits and requests (limits.cpu, limits.memory, limits.ephemeral-storage, requests.cpu, requests.memory and requests.ephemeral-storage) are currently supported.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 5789,
          },
          "name": "resourceFieldRef",
          "optional": true,
          "type": Object {
            "fqn": "monitoringcoreoscom.AlertmanagerSpecInitContainersEnvValueFromResourceFieldRef",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecInitContainersEnvValueFrom#secretKeyRef",
            },
            "summary": "Selects a key of a secret in the pod's namespace.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 5796,
          },
          "name": "secretKeyRef",
          "optional": true,
          "type": Object {
            "fqn": "monitoringcoreoscom.AlertmanagerSpecInitContainersEnvValueFromSecretKeyRef",
          },
        },
      ],
    },
    "monitoringcoreoscom.AlertmanagerSpecInitContainersEnvValueFromConfigMapKeyRef": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "AlertmanagerSpecInitContainersEnvValueFromConfigMapKeyRef",
        },
        "summary": "Selects a key of a ConfigMap.",
      },
      "fqn": "monitoringcoreoscom.AlertmanagerSpecInitContainersEnvValueFromConfigMapKeyRef",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 7990,
      },
      "name": "AlertmanagerSpecInitContainersEnvValueFromConfigMapKeyRef",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecInitContainersEnvValueFromConfigMapKeyRef#key",
            },
            "summary": "The key to select.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 7996,
          },
          "name": "key",
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecInitContainersEnvValueFromConfigMapKeyRef#name",
            },
            "remarks": "More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?",
            "summary": "Name of the referent.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 8003,
          },
          "name": "name",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecInitContainersEnvValueFromConfigMapKeyRef#optional",
            },
            "summary": "Specify whether the ConfigMap or its key must be defined.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 8010,
          },
          "name": "optional",
          "optional": true,
          "type": Object {
            "primitive": "boolean",
          },
        },
      ],
    },
    "monitoringcoreoscom.AlertmanagerSpecInitContainersEnvValueFromFieldRef": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "AlertmanagerSpecInitContainersEnvValueFromFieldRef",
        },
        "summary": "Selects a field of the pod: supports metadata.name, metadata.namespace, metadata.labels, metadata.annotations, spec.nodeName, spec.serviceAccountName, status.hostIP, status.podIP, status.podIPs.",
      },
      "fqn": "monitoringcoreoscom.AlertmanagerSpecInitContainersEnvValueFromFieldRef",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 8035,
      },
      "name": "AlertmanagerSpecInitContainersEnvValueFromFieldRef",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecInitContainersEnvValueFromFieldRef#fieldPath",
            },
            "summary": "Path of the field to select in the specified API version.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 8048,
          },
          "name": "fieldPath",
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecInitContainersEnvValueFromFieldRef#apiVersion",
            },
            "summary": "Version of the schema the FieldPath is written in terms of, defaults to \\"v1\\".",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 8041,
          },
          "name": "apiVersion",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
      ],
    },
    "monitoringcoreoscom.AlertmanagerSpecInitContainersEnvValueFromResourceFieldRef": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "AlertmanagerSpecInitContainersEnvValueFromResourceFieldRef",
        },
        "summary": "Selects a resource of the container: only resources limits and requests (limits.cpu, limits.memory, limits.ephemeral-storage, requests.cpu, requests.memory and requests.ephemeral-storage) are currently supported.",
      },
      "fqn": "monitoringcoreoscom.AlertmanagerSpecInitContainersEnvValueFromResourceFieldRef",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 8072,
      },
      "name": "AlertmanagerSpecInitContainersEnvValueFromResourceFieldRef",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecInitContainersEnvValueFromResourceFieldRef#resource",
            },
            "summary": "Required: resource to select.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 8092,
          },
          "name": "resource",
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecInitContainersEnvValueFromResourceFieldRef#containerName",
            },
            "summary": "Container name: required for volumes, optional for env vars.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 8078,
          },
          "name": "containerName",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecInitContainersEnvValueFromResourceFieldRef#divisor",
            },
            "summary": "Specifies the output format of the exposed resources, defaults to \\"1\\".",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 8085,
          },
          "name": "divisor",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
      ],
    },
    "monitoringcoreoscom.AlertmanagerSpecInitContainersEnvValueFromSecretKeyRef": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "AlertmanagerSpecInitContainersEnvValueFromSecretKeyRef",
        },
        "summary": "Selects a key of a secret in the pod's namespace.",
      },
      "fqn": "monitoringcoreoscom.AlertmanagerSpecInitContainersEnvValueFromSecretKeyRef",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 8117,
      },
      "name": "AlertmanagerSpecInitContainersEnvValueFromSecretKeyRef",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecInitContainersEnvValueFromSecretKeyRef#key",
            },
            "remarks": "Must be a valid secret key.",
            "summary": "The key of the secret to select from.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 8123,
          },
          "name": "key",
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecInitContainersEnvValueFromSecretKeyRef#name",
            },
            "remarks": "More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?",
            "summary": "Name of the referent.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 8130,
          },
          "name": "name",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecInitContainersEnvValueFromSecretKeyRef#optional",
            },
            "summary": "Specify whether the Secret or its key must be defined.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 8137,
          },
          "name": "optional",
          "optional": true,
          "type": Object {
            "primitive": "boolean",
          },
        },
      ],
    },
    "monitoringcoreoscom.AlertmanagerSpecInitContainersLifecycle": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "AlertmanagerSpecInitContainersLifecycle",
        },
        "remarks": "Cannot be updated.",
        "summary": "Actions that the management system should take in response to container lifecycle events.",
      },
      "fqn": "monitoringcoreoscom.AlertmanagerSpecInitContainersLifecycle",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 2373,
      },
      "name": "AlertmanagerSpecInitContainersLifecycle",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecInitContainersLifecycle#postStart",
            },
            "remarks": "If the handler fails, the container is terminated and restarted according to its restart policy. Other management of the container blocks until the hook completes. More info: https://kubernetes.io/docs/concepts/containers/container-lifecycle-hooks/#container-hooks",
            "summary": "PostStart is called immediately after a container is created.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 2379,
          },
          "name": "postStart",
          "optional": true,
          "type": Object {
            "fqn": "monitoringcoreoscom.AlertmanagerSpecInitContainersLifecyclePostStart",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecInitContainersLifecycle#preStop",
            },
            "remarks": "The handler is not called if the container crashes or exits. The reason for termination is passed to the handler. The Pod's termination grace period countdown begins before the PreStop hooked is executed. Regardless of the outcome of the handler, the container will eventually terminate within the Pod's termination grace period. Other management of the container blocks until the hook completes or until the termination grace period is reached. More info: https://kubernetes.io/docs/concepts/containers/container-lifecycle-hooks/#container-hooks",
            "summary": "PreStop is called immediately before a container is terminated due to an API request or management event such as liveness/startup probe failure, preemption, resource contention, etc.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 2386,
          },
          "name": "preStop",
          "optional": true,
          "type": Object {
            "fqn": "monitoringcoreoscom.AlertmanagerSpecInitContainersLifecyclePreStop",
          },
        },
      ],
    },
    "monitoringcoreoscom.AlertmanagerSpecInitContainersLifecyclePostStart": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "AlertmanagerSpecInitContainersLifecyclePostStart",
        },
        "remarks": "If the handler fails, the container is terminated and restarted according to its restart policy. Other management of the container blocks until the hook completes. More info: https://kubernetes.io/docs/concepts/containers/container-lifecycle-hooks/#container-hooks",
        "summary": "PostStart is called immediately after a container is created.",
      },
      "fqn": "monitoringcoreoscom.AlertmanagerSpecInitContainersLifecyclePostStart",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 5896,
      },
      "name": "AlertmanagerSpecInitContainersLifecyclePostStart",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecInitContainersLifecyclePostStart#exec",
            },
            "remarks": "Exec specifies the action to take.",
            "summary": "One and only one of the following should be specified.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 5902,
          },
          "name": "exec",
          "optional": true,
          "type": Object {
            "fqn": "monitoringcoreoscom.AlertmanagerSpecInitContainersLifecyclePostStartExec",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecInitContainersLifecyclePostStart#httpGet",
            },
            "summary": "HTTPGet specifies the http request to perform.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 5909,
          },
          "name": "httpGet",
          "optional": true,
          "type": Object {
            "fqn": "monitoringcoreoscom.AlertmanagerSpecInitContainersLifecyclePostStartHttpGet",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecInitContainersLifecyclePostStart#tcpSocket",
            },
            "remarks": "TCP hooks not yet supported TODO: implement a realistic TCP lifecycle hook",
            "summary": "TCPSocket specifies an action involving a TCP port.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 5916,
          },
          "name": "tcpSocket",
          "optional": true,
          "type": Object {
            "fqn": "monitoringcoreoscom.AlertmanagerSpecInitContainersLifecyclePostStartTcpSocket",
          },
        },
      ],
    },
    "monitoringcoreoscom.AlertmanagerSpecInitContainersLifecyclePostStartExec": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "AlertmanagerSpecInitContainersLifecyclePostStartExec",
        },
        "remarks": "Exec specifies the action to take.",
        "summary": "One and only one of the following should be specified.",
      },
      "fqn": "monitoringcoreoscom.AlertmanagerSpecInitContainersLifecyclePostStartExec",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 8162,
      },
      "name": "AlertmanagerSpecInitContainersLifecyclePostStartExec",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecInitContainersLifecyclePostStartExec#command",
            },
            "remarks": "The command is simply exec'd, it is not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use a shell, you need to explicitly call out to that shell. Exit status of 0 is treated as live/healthy and non-zero is unhealthy.",
            "summary": "Command is the command line to execute inside the container, the working directory for the command  is root ('/') in the container's filesystem.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 8168,
          },
          "name": "command",
          "optional": true,
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "primitive": "string",
              },
              "kind": "array",
            },
          },
        },
      ],
    },
    "monitoringcoreoscom.AlertmanagerSpecInitContainersLifecyclePostStartHttpGet": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "AlertmanagerSpecInitContainersLifecyclePostStartHttpGet",
        },
        "summary": "HTTPGet specifies the http request to perform.",
      },
      "fqn": "monitoringcoreoscom.AlertmanagerSpecInitContainersLifecyclePostStartHttpGet",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 8191,
      },
      "name": "AlertmanagerSpecInitContainersLifecyclePostStartHttpGet",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecInitContainersLifecyclePostStartHttpGet#port",
            },
            "remarks": "Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.",
            "summary": "Name or number of the port to access on the container.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 8218,
          },
          "name": "port",
          "type": Object {
            "fqn": "monitoringcoreoscom.AlertmanagerSpecInitContainersLifecyclePostStartHttpGetPort",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecInitContainersLifecyclePostStartHttpGet#host",
            },
            "remarks": "You probably want to set \\"Host\\" in httpHeaders instead.",
            "summary": "Host name to connect to, defaults to the pod IP.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 8197,
          },
          "name": "host",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecInitContainersLifecyclePostStartHttpGet#httpHeaders",
            },
            "remarks": "HTTP allows repeated headers.",
            "summary": "Custom headers to set in the request.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 8204,
          },
          "name": "httpHeaders",
          "optional": true,
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "fqn": "monitoringcoreoscom.AlertmanagerSpecInitContainersLifecyclePostStartHttpGetHttpHeaders",
              },
              "kind": "array",
            },
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecInitContainersLifecyclePostStartHttpGet#path",
            },
            "summary": "Path to access on the HTTP server.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 8211,
          },
          "name": "path",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecInitContainersLifecyclePostStartHttpGet#scheme",
            },
            "default": "HTTP.",
            "remarks": "Defaults to HTTP.",
            "summary": "Scheme to use for connecting to the host.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 8226,
          },
          "name": "scheme",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
      ],
    },
    "monitoringcoreoscom.AlertmanagerSpecInitContainersLifecyclePostStartHttpGetHttpHeaders": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "AlertmanagerSpecInitContainersLifecyclePostStartHttpGetHttpHeaders",
        },
        "summary": "HTTPHeader describes a custom header to be used in HTTP probes.",
      },
      "fqn": "monitoringcoreoscom.AlertmanagerSpecInitContainersLifecyclePostStartHttpGetHttpHeaders",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 9550,
      },
      "name": "AlertmanagerSpecInitContainersLifecyclePostStartHttpGetHttpHeaders",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecInitContainersLifecyclePostStartHttpGetHttpHeaders#name",
            },
            "summary": "The header field name.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 9556,
          },
          "name": "name",
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecInitContainersLifecyclePostStartHttpGetHttpHeaders#value",
            },
            "summary": "The header field value.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 9563,
          },
          "name": "value",
          "type": Object {
            "primitive": "string",
          },
        },
      ],
    },
    "monitoringcoreoscom.AlertmanagerSpecInitContainersLifecyclePostStartHttpGetPort": Object {
      "assembly": "monitoringcoreoscom",
      "docs": Object {
        "custom": Object {
          "schema": "AlertmanagerSpecInitContainersLifecyclePostStartHttpGetPort",
        },
        "remarks": "Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.",
        "summary": "Name or number of the port to access on the container.",
      },
      "fqn": "monitoringcoreoscom.AlertmanagerSpecInitContainersLifecyclePostStartHttpGetPort",
      "kind": "class",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 9587,
      },
      "methods": Array [
        Object {
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 9588,
          },
          "name": "fromNumber",
          "parameters": Array [
            Object {
              "name": "value",
              "type": Object {
                "primitive": "number",
              },
            },
          ],
          "returns": Object {
            "type": Object {
              "fqn": "monitoringcoreoscom.AlertmanagerSpecInitContainersLifecyclePostStartHttpGetPort",
            },
          },
          "static": true,
        },
        Object {
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 9591,
          },
          "name": "fromString",
          "parameters": Array [
            Object {
              "name": "value",
              "type": Object {
                "primitive": "string",
              },
            },
          ],
          "returns": Object {
            "type": Object {
              "fqn": "monitoringcoreoscom.AlertmanagerSpecInitContainersLifecyclePostStartHttpGetPort",
            },
          },
          "static": true,
        },
      ],
      "name": "AlertmanagerSpecInitContainersLifecyclePostStartHttpGetPort",
      "properties": Array [
        Object {
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 9594,
          },
          "name": "value",
          "type": Object {
            "primitive": "any",
          },
        },
      ],
    },
    "monitoringcoreoscom.AlertmanagerSpecInitContainersLifecyclePostStartTcpSocket": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "AlertmanagerSpecInitContainersLifecyclePostStartTcpSocket",
        },
        "remarks": "TCP hooks not yet supported TODO: implement a realistic TCP lifecycle hook",
        "summary": "TCPSocket specifies an action involving a TCP port.",
      },
      "fqn": "monitoringcoreoscom.AlertmanagerSpecInitContainersLifecyclePostStartTcpSocket",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 8253,
      },
      "name": "AlertmanagerSpecInitContainersLifecyclePostStartTcpSocket",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecInitContainersLifecyclePostStartTcpSocket#port",
            },
            "remarks": "Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.",
            "summary": "Number or name of the port to access on the container.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 8266,
          },
          "name": "port",
          "type": Object {
            "fqn": "monitoringcoreoscom.AlertmanagerSpecInitContainersLifecyclePostStartTcpSocketPort",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecInitContainersLifecyclePostStartTcpSocket#host",
            },
            "summary": "Optional: Host name to connect to, defaults to the pod IP.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 8259,
          },
          "name": "host",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
      ],
    },
    "monitoringcoreoscom.AlertmanagerSpecInitContainersLifecyclePostStartTcpSocketPort": Object {
      "assembly": "monitoringcoreoscom",
      "docs": Object {
        "custom": Object {
          "schema": "AlertmanagerSpecInitContainersLifecyclePostStartTcpSocketPort",
        },
        "remarks": "Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.",
        "summary": "Number or name of the port to access on the container.",
      },
      "fqn": "monitoringcoreoscom.AlertmanagerSpecInitContainersLifecyclePostStartTcpSocketPort",
      "kind": "class",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 9604,
      },
      "methods": Array [
        Object {
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 9605,
          },
          "name": "fromNumber",
          "parameters": Array [
            Object {
              "name": "value",
              "type": Object {
                "primitive": "number",
              },
            },
          ],
          "returns": Object {
            "type": Object {
              "fqn": "monitoringcoreoscom.AlertmanagerSpecInitContainersLifecyclePostStartTcpSocketPort",
            },
          },
          "static": true,
        },
        Object {
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 9608,
          },
          "name": "fromString",
          "parameters": Array [
            Object {
              "name": "value",
              "type": Object {
                "primitive": "string",
              },
            },
          ],
          "returns": Object {
            "type": Object {
              "fqn": "monitoringcoreoscom.AlertmanagerSpecInitContainersLifecyclePostStartTcpSocketPort",
            },
          },
          "static": true,
        },
      ],
      "name": "AlertmanagerSpecInitContainersLifecyclePostStartTcpSocketPort",
      "properties": Array [
        Object {
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 9611,
          },
          "name": "value",
          "type": Object {
            "primitive": "any",
          },
        },
      ],
    },
    "monitoringcoreoscom.AlertmanagerSpecInitContainersLifecyclePreStop": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "AlertmanagerSpecInitContainersLifecyclePreStop",
        },
        "remarks": "The handler is not called if the container crashes or exits. The reason for termination is passed to the handler. The Pod's termination grace period countdown begins before the PreStop hooked is executed. Regardless of the outcome of the handler, the container will eventually terminate within the Pod's termination grace period. Other management of the container blocks until the hook completes or until the termination grace period is reached. More info: https://kubernetes.io/docs/concepts/containers/container-lifecycle-hooks/#container-hooks",
        "summary": "PreStop is called immediately before a container is terminated due to an API request or management event such as liveness/startup probe failure, preemption, resource contention, etc.",
      },
      "fqn": "monitoringcoreoscom.AlertmanagerSpecInitContainersLifecyclePreStop",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 5941,
      },
      "name": "AlertmanagerSpecInitContainersLifecyclePreStop",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecInitContainersLifecyclePreStop#exec",
            },
            "remarks": "Exec specifies the action to take.",
            "summary": "One and only one of the following should be specified.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 5947,
          },
          "name": "exec",
          "optional": true,
          "type": Object {
            "fqn": "monitoringcoreoscom.AlertmanagerSpecInitContainersLifecyclePreStopExec",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecInitContainersLifecyclePreStop#httpGet",
            },
            "summary": "HTTPGet specifies the http request to perform.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 5954,
          },
          "name": "httpGet",
          "optional": true,
          "type": Object {
            "fqn": "monitoringcoreoscom.AlertmanagerSpecInitContainersLifecyclePreStopHttpGet",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecInitContainersLifecyclePreStop#tcpSocket",
            },
            "remarks": "TCP hooks not yet supported TODO: implement a realistic TCP lifecycle hook",
            "summary": "TCPSocket specifies an action involving a TCP port.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 5961,
          },
          "name": "tcpSocket",
          "optional": true,
          "type": Object {
            "fqn": "monitoringcoreoscom.AlertmanagerSpecInitContainersLifecyclePreStopTcpSocket",
          },
        },
      ],
    },
    "monitoringcoreoscom.AlertmanagerSpecInitContainersLifecyclePreStopExec": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "AlertmanagerSpecInitContainersLifecyclePreStopExec",
        },
        "remarks": "Exec specifies the action to take.",
        "summary": "One and only one of the following should be specified.",
      },
      "fqn": "monitoringcoreoscom.AlertmanagerSpecInitContainersLifecyclePreStopExec",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 8290,
      },
      "name": "AlertmanagerSpecInitContainersLifecyclePreStopExec",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecInitContainersLifecyclePreStopExec#command",
            },
            "remarks": "The command is simply exec'd, it is not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use a shell, you need to explicitly call out to that shell. Exit status of 0 is treated as live/healthy and non-zero is unhealthy.",
            "summary": "Command is the command line to execute inside the container, the working directory for the command  is root ('/') in the container's filesystem.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 8296,
          },
          "name": "command",
          "optional": true,
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "primitive": "string",
              },
              "kind": "array",
            },
          },
        },
      ],
    },
    "monitoringcoreoscom.AlertmanagerSpecInitContainersLifecyclePreStopHttpGet": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "AlertmanagerSpecInitContainersLifecyclePreStopHttpGet",
        },
        "summary": "HTTPGet specifies the http request to perform.",
      },
      "fqn": "monitoringcoreoscom.AlertmanagerSpecInitContainersLifecyclePreStopHttpGet",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 8319,
      },
      "name": "AlertmanagerSpecInitContainersLifecyclePreStopHttpGet",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecInitContainersLifecyclePreStopHttpGet#port",
            },
            "remarks": "Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.",
            "summary": "Name or number of the port to access on the container.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 8346,
          },
          "name": "port",
          "type": Object {
            "fqn": "monitoringcoreoscom.AlertmanagerSpecInitContainersLifecyclePreStopHttpGetPort",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecInitContainersLifecyclePreStopHttpGet#host",
            },
            "remarks": "You probably want to set \\"Host\\" in httpHeaders instead.",
            "summary": "Host name to connect to, defaults to the pod IP.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 8325,
          },
          "name": "host",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecInitContainersLifecyclePreStopHttpGet#httpHeaders",
            },
            "remarks": "HTTP allows repeated headers.",
            "summary": "Custom headers to set in the request.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 8332,
          },
          "name": "httpHeaders",
          "optional": true,
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "fqn": "monitoringcoreoscom.AlertmanagerSpecInitContainersLifecyclePreStopHttpGetHttpHeaders",
              },
              "kind": "array",
            },
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecInitContainersLifecyclePreStopHttpGet#path",
            },
            "summary": "Path to access on the HTTP server.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 8339,
          },
          "name": "path",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecInitContainersLifecyclePreStopHttpGet#scheme",
            },
            "default": "HTTP.",
            "remarks": "Defaults to HTTP.",
            "summary": "Scheme to use for connecting to the host.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 8354,
          },
          "name": "scheme",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
      ],
    },
    "monitoringcoreoscom.AlertmanagerSpecInitContainersLifecyclePreStopHttpGetHttpHeaders": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "AlertmanagerSpecInitContainersLifecyclePreStopHttpGetHttpHeaders",
        },
        "summary": "HTTPHeader describes a custom header to be used in HTTP probes.",
      },
      "fqn": "monitoringcoreoscom.AlertmanagerSpecInitContainersLifecyclePreStopHttpGetHttpHeaders",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 9621,
      },
      "name": "AlertmanagerSpecInitContainersLifecyclePreStopHttpGetHttpHeaders",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecInitContainersLifecyclePreStopHttpGetHttpHeaders#name",
            },
            "summary": "The header field name.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 9627,
          },
          "name": "name",
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecInitContainersLifecyclePreStopHttpGetHttpHeaders#value",
            },
            "summary": "The header field value.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 9634,
          },
          "name": "value",
          "type": Object {
            "primitive": "string",
          },
        },
      ],
    },
    "monitoringcoreoscom.AlertmanagerSpecInitContainersLifecyclePreStopHttpGetPort": Object {
      "assembly": "monitoringcoreoscom",
      "docs": Object {
        "custom": Object {
          "schema": "AlertmanagerSpecInitContainersLifecyclePreStopHttpGetPort",
        },
        "remarks": "Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.",
        "summary": "Name or number of the port to access on the container.",
      },
      "fqn": "monitoringcoreoscom.AlertmanagerSpecInitContainersLifecyclePreStopHttpGetPort",
      "kind": "class",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 9658,
      },
      "methods": Array [
        Object {
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 9659,
          },
          "name": "fromNumber",
          "parameters": Array [
            Object {
              "name": "value",
              "type": Object {
                "primitive": "number",
              },
            },
          ],
          "returns": Object {
            "type": Object {
              "fqn": "monitoringcoreoscom.AlertmanagerSpecInitContainersLifecyclePreStopHttpGetPort",
            },
          },
          "static": true,
        },
        Object {
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 9662,
          },
          "name": "fromString",
          "parameters": Array [
            Object {
              "name": "value",
              "type": Object {
                "primitive": "string",
              },
            },
          ],
          "returns": Object {
            "type": Object {
              "fqn": "monitoringcoreoscom.AlertmanagerSpecInitContainersLifecyclePreStopHttpGetPort",
            },
          },
          "static": true,
        },
      ],
      "name": "AlertmanagerSpecInitContainersLifecyclePreStopHttpGetPort",
      "properties": Array [
        Object {
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 9665,
          },
          "name": "value",
          "type": Object {
            "primitive": "any",
          },
        },
      ],
    },
    "monitoringcoreoscom.AlertmanagerSpecInitContainersLifecyclePreStopTcpSocket": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "AlertmanagerSpecInitContainersLifecyclePreStopTcpSocket",
        },
        "remarks": "TCP hooks not yet supported TODO: implement a realistic TCP lifecycle hook",
        "summary": "TCPSocket specifies an action involving a TCP port.",
      },
      "fqn": "monitoringcoreoscom.AlertmanagerSpecInitContainersLifecyclePreStopTcpSocket",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 8381,
      },
      "name": "AlertmanagerSpecInitContainersLifecyclePreStopTcpSocket",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecInitContainersLifecyclePreStopTcpSocket#port",
            },
            "remarks": "Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.",
            "summary": "Number or name of the port to access on the container.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 8394,
          },
          "name": "port",
          "type": Object {
            "fqn": "monitoringcoreoscom.AlertmanagerSpecInitContainersLifecyclePreStopTcpSocketPort",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecInitContainersLifecyclePreStopTcpSocket#host",
            },
            "summary": "Optional: Host name to connect to, defaults to the pod IP.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 8387,
          },
          "name": "host",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
      ],
    },
    "monitoringcoreoscom.AlertmanagerSpecInitContainersLifecyclePreStopTcpSocketPort": Object {
      "assembly": "monitoringcoreoscom",
      "docs": Object {
        "custom": Object {
          "schema": "AlertmanagerSpecInitContainersLifecyclePreStopTcpSocketPort",
        },
        "remarks": "Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.",
        "summary": "Number or name of the port to access on the container.",
      },
      "fqn": "monitoringcoreoscom.AlertmanagerSpecInitContainersLifecyclePreStopTcpSocketPort",
      "kind": "class",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 9675,
      },
      "methods": Array [
        Object {
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 9676,
          },
          "name": "fromNumber",
          "parameters": Array [
            Object {
              "name": "value",
              "type": Object {
                "primitive": "number",
              },
            },
          ],
          "returns": Object {
            "type": Object {
              "fqn": "monitoringcoreoscom.AlertmanagerSpecInitContainersLifecyclePreStopTcpSocketPort",
            },
          },
          "static": true,
        },
        Object {
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 9679,
          },
          "name": "fromString",
          "parameters": Array [
            Object {
              "name": "value",
              "type": Object {
                "primitive": "string",
              },
            },
          ],
          "returns": Object {
            "type": Object {
              "fqn": "monitoringcoreoscom.AlertmanagerSpecInitContainersLifecyclePreStopTcpSocketPort",
            },
          },
          "static": true,
        },
      ],
      "name": "AlertmanagerSpecInitContainersLifecyclePreStopTcpSocketPort",
      "properties": Array [
        Object {
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 9682,
          },
          "name": "value",
          "type": Object {
            "primitive": "any",
          },
        },
      ],
    },
    "monitoringcoreoscom.AlertmanagerSpecInitContainersLivenessProbe": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "AlertmanagerSpecInitContainersLivenessProbe",
        },
        "remarks": "Container will be restarted if the probe fails. Cannot be updated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes",
        "summary": "Periodic probe of container liveness.",
      },
      "fqn": "monitoringcoreoscom.AlertmanagerSpecInitContainersLivenessProbe",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 2410,
      },
      "name": "AlertmanagerSpecInitContainersLivenessProbe",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecInitContainersLivenessProbe#exec",
            },
            "remarks": "Exec specifies the action to take.",
            "summary": "One and only one of the following should be specified.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 2416,
          },
          "name": "exec",
          "optional": true,
          "type": Object {
            "fqn": "monitoringcoreoscom.AlertmanagerSpecInitContainersLivenessProbeExec",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecInitContainersLivenessProbe#failureThreshold",
            },
            "default": "3. Minimum value is 1.",
            "remarks": "Defaults to 3. Minimum value is 1.",
            "summary": "Minimum consecutive failures for the probe to be considered failed after having succeeded.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 2424,
          },
          "name": "failureThreshold",
          "optional": true,
          "type": Object {
            "primitive": "number",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecInitContainersLivenessProbe#httpGet",
            },
            "summary": "HTTPGet specifies the http request to perform.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 2431,
          },
          "name": "httpGet",
          "optional": true,
          "type": Object {
            "fqn": "monitoringcoreoscom.AlertmanagerSpecInitContainersLivenessProbeHttpGet",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecInitContainersLivenessProbe#initialDelaySeconds",
            },
            "remarks": "More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes",
            "summary": "Number of seconds after the container has started before liveness probes are initiated.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 2438,
          },
          "name": "initialDelaySeconds",
          "optional": true,
          "type": Object {
            "primitive": "number",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecInitContainersLivenessProbe#periodSeconds",
            },
            "default": "10 seconds. Minimum value is 1.",
            "remarks": "Default to 10 seconds. Minimum value is 1.",
            "summary": "How often (in seconds) to perform the probe.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 2446,
          },
          "name": "periodSeconds",
          "optional": true,
          "type": Object {
            "primitive": "number",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecInitContainersLivenessProbe#successThreshold",
            },
            "default": "1. Must be 1 for liveness and startup. Minimum value is 1.",
            "remarks": "Defaults to 1. Must be 1 for liveness and startup. Minimum value is 1.",
            "summary": "Minimum consecutive successes for the probe to be considered successful after having failed.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 2454,
          },
          "name": "successThreshold",
          "optional": true,
          "type": Object {
            "primitive": "number",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecInitContainersLivenessProbe#tcpSocket",
            },
            "remarks": "TCP hooks not yet supported TODO: implement a realistic TCP lifecycle hook",
            "summary": "TCPSocket specifies an action involving a TCP port.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 2461,
          },
          "name": "tcpSocket",
          "optional": true,
          "type": Object {
            "fqn": "monitoringcoreoscom.AlertmanagerSpecInitContainersLivenessProbeTcpSocket",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecInitContainersLivenessProbe#timeoutSeconds",
            },
            "default": "1 second. Minimum value is 1. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes",
            "remarks": "Defaults to 1 second. Minimum value is 1. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes",
            "summary": "Number of seconds after which the probe times out.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 2469,
          },
          "name": "timeoutSeconds",
          "optional": true,
          "type": Object {
            "primitive": "number",
          },
        },
      ],
    },
    "monitoringcoreoscom.AlertmanagerSpecInitContainersLivenessProbeExec": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "AlertmanagerSpecInitContainersLivenessProbeExec",
        },
        "remarks": "Exec specifies the action to take.",
        "summary": "One and only one of the following should be specified.",
      },
      "fqn": "monitoringcoreoscom.AlertmanagerSpecInitContainersLivenessProbeExec",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 5986,
      },
      "name": "AlertmanagerSpecInitContainersLivenessProbeExec",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecInitContainersLivenessProbeExec#command",
            },
            "remarks": "The command is simply exec'd, it is not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use a shell, you need to explicitly call out to that shell. Exit status of 0 is treated as live/healthy and non-zero is unhealthy.",
            "summary": "Command is the command line to execute inside the container, the working directory for the command  is root ('/') in the container's filesystem.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 5992,
          },
          "name": "command",
          "optional": true,
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "primitive": "string",
              },
              "kind": "array",
            },
          },
        },
      ],
    },
    "monitoringcoreoscom.AlertmanagerSpecInitContainersLivenessProbeHttpGet": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "AlertmanagerSpecInitContainersLivenessProbeHttpGet",
        },
        "summary": "HTTPGet specifies the http request to perform.",
      },
      "fqn": "monitoringcoreoscom.AlertmanagerSpecInitContainersLivenessProbeHttpGet",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 6015,
      },
      "name": "AlertmanagerSpecInitContainersLivenessProbeHttpGet",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecInitContainersLivenessProbeHttpGet#port",
            },
            "remarks": "Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.",
            "summary": "Name or number of the port to access on the container.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 6042,
          },
          "name": "port",
          "type": Object {
            "fqn": "monitoringcoreoscom.AlertmanagerSpecInitContainersLivenessProbeHttpGetPort",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecInitContainersLivenessProbeHttpGet#host",
            },
            "remarks": "You probably want to set \\"Host\\" in httpHeaders instead.",
            "summary": "Host name to connect to, defaults to the pod IP.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 6021,
          },
          "name": "host",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecInitContainersLivenessProbeHttpGet#httpHeaders",
            },
            "remarks": "HTTP allows repeated headers.",
            "summary": "Custom headers to set in the request.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 6028,
          },
          "name": "httpHeaders",
          "optional": true,
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "fqn": "monitoringcoreoscom.AlertmanagerSpecInitContainersLivenessProbeHttpGetHttpHeaders",
              },
              "kind": "array",
            },
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecInitContainersLivenessProbeHttpGet#path",
            },
            "summary": "Path to access on the HTTP server.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 6035,
          },
          "name": "path",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecInitContainersLivenessProbeHttpGet#scheme",
            },
            "default": "HTTP.",
            "remarks": "Defaults to HTTP.",
            "summary": "Scheme to use for connecting to the host.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 6050,
          },
          "name": "scheme",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
      ],
    },
    "monitoringcoreoscom.AlertmanagerSpecInitContainersLivenessProbeHttpGetHttpHeaders": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "AlertmanagerSpecInitContainersLivenessProbeHttpGetHttpHeaders",
        },
        "summary": "HTTPHeader describes a custom header to be used in HTTP probes.",
      },
      "fqn": "monitoringcoreoscom.AlertmanagerSpecInitContainersLivenessProbeHttpGetHttpHeaders",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 8418,
      },
      "name": "AlertmanagerSpecInitContainersLivenessProbeHttpGetHttpHeaders",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecInitContainersLivenessProbeHttpGetHttpHeaders#name",
            },
            "summary": "The header field name.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 8424,
          },
          "name": "name",
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecInitContainersLivenessProbeHttpGetHttpHeaders#value",
            },
            "summary": "The header field value.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 8431,
          },
          "name": "value",
          "type": Object {
            "primitive": "string",
          },
        },
      ],
    },
    "monitoringcoreoscom.AlertmanagerSpecInitContainersLivenessProbeHttpGetPort": Object {
      "assembly": "monitoringcoreoscom",
      "docs": Object {
        "custom": Object {
          "schema": "AlertmanagerSpecInitContainersLivenessProbeHttpGetPort",
        },
        "remarks": "Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.",
        "summary": "Name or number of the port to access on the container.",
      },
      "fqn": "monitoringcoreoscom.AlertmanagerSpecInitContainersLivenessProbeHttpGetPort",
      "kind": "class",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 8455,
      },
      "methods": Array [
        Object {
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 8456,
          },
          "name": "fromNumber",
          "parameters": Array [
            Object {
              "name": "value",
              "type": Object {
                "primitive": "number",
              },
            },
          ],
          "returns": Object {
            "type": Object {
              "fqn": "monitoringcoreoscom.AlertmanagerSpecInitContainersLivenessProbeHttpGetPort",
            },
          },
          "static": true,
        },
        Object {
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 8459,
          },
          "name": "fromString",
          "parameters": Array [
            Object {
              "name": "value",
              "type": Object {
                "primitive": "string",
              },
            },
          ],
          "returns": Object {
            "type": Object {
              "fqn": "monitoringcoreoscom.AlertmanagerSpecInitContainersLivenessProbeHttpGetPort",
            },
          },
          "static": true,
        },
      ],
      "name": "AlertmanagerSpecInitContainersLivenessProbeHttpGetPort",
      "properties": Array [
        Object {
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 8462,
          },
          "name": "value",
          "type": Object {
            "primitive": "any",
          },
        },
      ],
    },
    "monitoringcoreoscom.AlertmanagerSpecInitContainersLivenessProbeTcpSocket": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "AlertmanagerSpecInitContainersLivenessProbeTcpSocket",
        },
        "remarks": "TCP hooks not yet supported TODO: implement a realistic TCP lifecycle hook",
        "summary": "TCPSocket specifies an action involving a TCP port.",
      },
      "fqn": "monitoringcoreoscom.AlertmanagerSpecInitContainersLivenessProbeTcpSocket",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 6077,
      },
      "name": "AlertmanagerSpecInitContainersLivenessProbeTcpSocket",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecInitContainersLivenessProbeTcpSocket#port",
            },
            "remarks": "Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.",
            "summary": "Number or name of the port to access on the container.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 6090,
          },
          "name": "port",
          "type": Object {
            "fqn": "monitoringcoreoscom.AlertmanagerSpecInitContainersLivenessProbeTcpSocketPort",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecInitContainersLivenessProbeTcpSocket#host",
            },
            "summary": "Optional: Host name to connect to, defaults to the pod IP.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 6083,
          },
          "name": "host",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
      ],
    },
    "monitoringcoreoscom.AlertmanagerSpecInitContainersLivenessProbeTcpSocketPort": Object {
      "assembly": "monitoringcoreoscom",
      "docs": Object {
        "custom": Object {
          "schema": "AlertmanagerSpecInitContainersLivenessProbeTcpSocketPort",
        },
        "remarks": "Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.",
        "summary": "Number or name of the port to access on the container.",
      },
      "fqn": "monitoringcoreoscom.AlertmanagerSpecInitContainersLivenessProbeTcpSocketPort",
      "kind": "class",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 8472,
      },
      "methods": Array [
        Object {
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 8473,
          },
          "name": "fromNumber",
          "parameters": Array [
            Object {
              "name": "value",
              "type": Object {
                "primitive": "number",
              },
            },
          ],
          "returns": Object {
            "type": Object {
              "fqn": "monitoringcoreoscom.AlertmanagerSpecInitContainersLivenessProbeTcpSocketPort",
            },
          },
          "static": true,
        },
        Object {
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 8476,
          },
          "name": "fromString",
          "parameters": Array [
            Object {
              "name": "value",
              "type": Object {
                "primitive": "string",
              },
            },
          ],
          "returns": Object {
            "type": Object {
              "fqn": "monitoringcoreoscom.AlertmanagerSpecInitContainersLivenessProbeTcpSocketPort",
            },
          },
          "static": true,
        },
      ],
      "name": "AlertmanagerSpecInitContainersLivenessProbeTcpSocketPort",
      "properties": Array [
        Object {
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 8479,
          },
          "name": "value",
          "type": Object {
            "primitive": "any",
          },
        },
      ],
    },
    "monitoringcoreoscom.AlertmanagerSpecInitContainersPorts": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "AlertmanagerSpecInitContainersPorts",
        },
        "summary": "ContainerPort represents a network port in a single container.",
      },
      "fqn": "monitoringcoreoscom.AlertmanagerSpecInitContainersPorts",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 2499,
      },
      "name": "AlertmanagerSpecInitContainersPorts",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecInitContainersPorts#containerPort",
            },
            "remarks": "This must be a valid port number, 0 < x < 65536.",
            "summary": "Number of port to expose on the pod's IP address.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 2505,
          },
          "name": "containerPort",
          "type": Object {
            "primitive": "number",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecInitContainersPorts#hostIP",
            },
            "summary": "What host IP to bind the external port to.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 2512,
          },
          "name": "hostIp",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecInitContainersPorts#hostPort",
            },
            "remarks": "If specified, this must be a valid port number, 0 < x < 65536. If HostNetwork is specified, this must match ContainerPort. Most containers do not need this.",
            "summary": "Number of port to expose on the host.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 2519,
          },
          "name": "hostPort",
          "optional": true,
          "type": Object {
            "primitive": "number",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecInitContainersPorts#name",
            },
            "remarks": "Each named port in a pod must have a unique name. Name for the port that can be referred to by services.",
            "summary": "If specified, this must be an IANA_SVC_NAME and unique within the pod.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 2526,
          },
          "name": "name",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecInitContainersPorts#protocol",
            },
            "default": "TCP\\".",
            "remarks": "Must be UDP, TCP, or SCTP. Defaults to \\"TCP\\".",
            "summary": "Protocol for port.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 2534,
          },
          "name": "protocol",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
      ],
    },
    "monitoringcoreoscom.AlertmanagerSpecInitContainersReadinessProbe": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "AlertmanagerSpecInitContainersReadinessProbe",
        },
        "remarks": "Container will be removed from service endpoints if the probe fails. Cannot be updated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes",
        "summary": "Periodic probe of container service readiness.",
      },
      "fqn": "monitoringcoreoscom.AlertmanagerSpecInitContainersReadinessProbe",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 2561,
      },
      "name": "AlertmanagerSpecInitContainersReadinessProbe",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecInitContainersReadinessProbe#exec",
            },
            "remarks": "Exec specifies the action to take.",
            "summary": "One and only one of the following should be specified.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 2567,
          },
          "name": "exec",
          "optional": true,
          "type": Object {
            "fqn": "monitoringcoreoscom.AlertmanagerSpecInitContainersReadinessProbeExec",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecInitContainersReadinessProbe#failureThreshold",
            },
            "default": "3. Minimum value is 1.",
            "remarks": "Defaults to 3. Minimum value is 1.",
            "summary": "Minimum consecutive failures for the probe to be considered failed after having succeeded.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 2575,
          },
          "name": "failureThreshold",
          "optional": true,
          "type": Object {
            "primitive": "number",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecInitContainersReadinessProbe#httpGet",
            },
            "summary": "HTTPGet specifies the http request to perform.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 2582,
          },
          "name": "httpGet",
          "optional": true,
          "type": Object {
            "fqn": "monitoringcoreoscom.AlertmanagerSpecInitContainersReadinessProbeHttpGet",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecInitContainersReadinessProbe#initialDelaySeconds",
            },
            "remarks": "More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes",
            "summary": "Number of seconds after the container has started before liveness probes are initiated.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 2589,
          },
          "name": "initialDelaySeconds",
          "optional": true,
          "type": Object {
            "primitive": "number",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecInitContainersReadinessProbe#periodSeconds",
            },
            "default": "10 seconds. Minimum value is 1.",
            "remarks": "Default to 10 seconds. Minimum value is 1.",
            "summary": "How often (in seconds) to perform the probe.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 2597,
          },
          "name": "periodSeconds",
          "optional": true,
          "type": Object {
            "primitive": "number",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecInitContainersReadinessProbe#successThreshold",
            },
            "default": "1. Must be 1 for liveness and startup. Minimum value is 1.",
            "remarks": "Defaults to 1. Must be 1 for liveness and startup. Minimum value is 1.",
            "summary": "Minimum consecutive successes for the probe to be considered successful after having failed.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 2605,
          },
          "name": "successThreshold",
          "optional": true,
          "type": Object {
            "primitive": "number",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecInitContainersReadinessProbe#tcpSocket",
            },
            "remarks": "TCP hooks not yet supported TODO: implement a realistic TCP lifecycle hook",
            "summary": "TCPSocket specifies an action involving a TCP port.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 2612,
          },
          "name": "tcpSocket",
          "optional": true,
          "type": Object {
            "fqn": "monitoringcoreoscom.AlertmanagerSpecInitContainersReadinessProbeTcpSocket",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecInitContainersReadinessProbe#timeoutSeconds",
            },
            "default": "1 second. Minimum value is 1. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes",
            "remarks": "Defaults to 1 second. Minimum value is 1. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes",
            "summary": "Number of seconds after which the probe times out.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 2620,
          },
          "name": "timeoutSeconds",
          "optional": true,
          "type": Object {
            "primitive": "number",
          },
        },
      ],
    },
    "monitoringcoreoscom.AlertmanagerSpecInitContainersReadinessProbeExec": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "AlertmanagerSpecInitContainersReadinessProbeExec",
        },
        "remarks": "Exec specifies the action to take.",
        "summary": "One and only one of the following should be specified.",
      },
      "fqn": "monitoringcoreoscom.AlertmanagerSpecInitContainersReadinessProbeExec",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 6114,
      },
      "name": "AlertmanagerSpecInitContainersReadinessProbeExec",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecInitContainersReadinessProbeExec#command",
            },
            "remarks": "The command is simply exec'd, it is not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use a shell, you need to explicitly call out to that shell. Exit status of 0 is treated as live/healthy and non-zero is unhealthy.",
            "summary": "Command is the command line to execute inside the container, the working directory for the command  is root ('/') in the container's filesystem.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 6120,
          },
          "name": "command",
          "optional": true,
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "primitive": "string",
              },
              "kind": "array",
            },
          },
        },
      ],
    },
    "monitoringcoreoscom.AlertmanagerSpecInitContainersReadinessProbeHttpGet": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "AlertmanagerSpecInitContainersReadinessProbeHttpGet",
        },
        "summary": "HTTPGet specifies the http request to perform.",
      },
      "fqn": "monitoringcoreoscom.AlertmanagerSpecInitContainersReadinessProbeHttpGet",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 6143,
      },
      "name": "AlertmanagerSpecInitContainersReadinessProbeHttpGet",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecInitContainersReadinessProbeHttpGet#port",
            },
            "remarks": "Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.",
            "summary": "Name or number of the port to access on the container.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 6170,
          },
          "name": "port",
          "type": Object {
            "fqn": "monitoringcoreoscom.AlertmanagerSpecInitContainersReadinessProbeHttpGetPort",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecInitContainersReadinessProbeHttpGet#host",
            },
            "remarks": "You probably want to set \\"Host\\" in httpHeaders instead.",
            "summary": "Host name to connect to, defaults to the pod IP.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 6149,
          },
          "name": "host",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecInitContainersReadinessProbeHttpGet#httpHeaders",
            },
            "remarks": "HTTP allows repeated headers.",
            "summary": "Custom headers to set in the request.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 6156,
          },
          "name": "httpHeaders",
          "optional": true,
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "fqn": "monitoringcoreoscom.AlertmanagerSpecInitContainersReadinessProbeHttpGetHttpHeaders",
              },
              "kind": "array",
            },
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecInitContainersReadinessProbeHttpGet#path",
            },
            "summary": "Path to access on the HTTP server.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 6163,
          },
          "name": "path",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecInitContainersReadinessProbeHttpGet#scheme",
            },
            "default": "HTTP.",
            "remarks": "Defaults to HTTP.",
            "summary": "Scheme to use for connecting to the host.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 6178,
          },
          "name": "scheme",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
      ],
    },
    "monitoringcoreoscom.AlertmanagerSpecInitContainersReadinessProbeHttpGetHttpHeaders": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "AlertmanagerSpecInitContainersReadinessProbeHttpGetHttpHeaders",
        },
        "summary": "HTTPHeader describes a custom header to be used in HTTP probes.",
      },
      "fqn": "monitoringcoreoscom.AlertmanagerSpecInitContainersReadinessProbeHttpGetHttpHeaders",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 8489,
      },
      "name": "AlertmanagerSpecInitContainersReadinessProbeHttpGetHttpHeaders",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecInitContainersReadinessProbeHttpGetHttpHeaders#name",
            },
            "summary": "The header field name.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 8495,
          },
          "name": "name",
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecInitContainersReadinessProbeHttpGetHttpHeaders#value",
            },
            "summary": "The header field value.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 8502,
          },
          "name": "value",
          "type": Object {
            "primitive": "string",
          },
        },
      ],
    },
    "monitoringcoreoscom.AlertmanagerSpecInitContainersReadinessProbeHttpGetPort": Object {
      "assembly": "monitoringcoreoscom",
      "docs": Object {
        "custom": Object {
          "schema": "AlertmanagerSpecInitContainersReadinessProbeHttpGetPort",
        },
        "remarks": "Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.",
        "summary": "Name or number of the port to access on the container.",
      },
      "fqn": "monitoringcoreoscom.AlertmanagerSpecInitContainersReadinessProbeHttpGetPort",
      "kind": "class",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 8526,
      },
      "methods": Array [
        Object {
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 8527,
          },
          "name": "fromNumber",
          "parameters": Array [
            Object {
              "name": "value",
              "type": Object {
                "primitive": "number",
              },
            },
          ],
          "returns": Object {
            "type": Object {
              "fqn": "monitoringcoreoscom.AlertmanagerSpecInitContainersReadinessProbeHttpGetPort",
            },
          },
          "static": true,
        },
        Object {
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 8530,
          },
          "name": "fromString",
          "parameters": Array [
            Object {
              "name": "value",
              "type": Object {
                "primitive": "string",
              },
            },
          ],
          "returns": Object {
            "type": Object {
              "fqn": "monitoringcoreoscom.AlertmanagerSpecInitContainersReadinessProbeHttpGetPort",
            },
          },
          "static": true,
        },
      ],
      "name": "AlertmanagerSpecInitContainersReadinessProbeHttpGetPort",
      "properties": Array [
        Object {
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 8533,
          },
          "name": "value",
          "type": Object {
            "primitive": "any",
          },
        },
      ],
    },
    "monitoringcoreoscom.AlertmanagerSpecInitContainersReadinessProbeTcpSocket": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "AlertmanagerSpecInitContainersReadinessProbeTcpSocket",
        },
        "remarks": "TCP hooks not yet supported TODO: implement a realistic TCP lifecycle hook",
        "summary": "TCPSocket specifies an action involving a TCP port.",
      },
      "fqn": "monitoringcoreoscom.AlertmanagerSpecInitContainersReadinessProbeTcpSocket",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 6205,
      },
      "name": "AlertmanagerSpecInitContainersReadinessProbeTcpSocket",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecInitContainersReadinessProbeTcpSocket#port",
            },
            "remarks": "Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.",
            "summary": "Number or name of the port to access on the container.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 6218,
          },
          "name": "port",
          "type": Object {
            "fqn": "monitoringcoreoscom.AlertmanagerSpecInitContainersReadinessProbeTcpSocketPort",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecInitContainersReadinessProbeTcpSocket#host",
            },
            "summary": "Optional: Host name to connect to, defaults to the pod IP.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 6211,
          },
          "name": "host",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
      ],
    },
    "monitoringcoreoscom.AlertmanagerSpecInitContainersReadinessProbeTcpSocketPort": Object {
      "assembly": "monitoringcoreoscom",
      "docs": Object {
        "custom": Object {
          "schema": "AlertmanagerSpecInitContainersReadinessProbeTcpSocketPort",
        },
        "remarks": "Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.",
        "summary": "Number or name of the port to access on the container.",
      },
      "fqn": "monitoringcoreoscom.AlertmanagerSpecInitContainersReadinessProbeTcpSocketPort",
      "kind": "class",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 8543,
      },
      "methods": Array [
        Object {
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 8544,
          },
          "name": "fromNumber",
          "parameters": Array [
            Object {
              "name": "value",
              "type": Object {
                "primitive": "number",
              },
            },
          ],
          "returns": Object {
            "type": Object {
              "fqn": "monitoringcoreoscom.AlertmanagerSpecInitContainersReadinessProbeTcpSocketPort",
            },
          },
          "static": true,
        },
        Object {
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 8547,
          },
          "name": "fromString",
          "parameters": Array [
            Object {
              "name": "value",
              "type": Object {
                "primitive": "string",
              },
            },
          ],
          "returns": Object {
            "type": Object {
              "fqn": "monitoringcoreoscom.AlertmanagerSpecInitContainersReadinessProbeTcpSocketPort",
            },
          },
          "static": true,
        },
      ],
      "name": "AlertmanagerSpecInitContainersReadinessProbeTcpSocketPort",
      "properties": Array [
        Object {
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 8550,
          },
          "name": "value",
          "type": Object {
            "primitive": "any",
          },
        },
      ],
    },
    "monitoringcoreoscom.AlertmanagerSpecInitContainersResources": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "AlertmanagerSpecInitContainersResources",
        },
        "remarks": "Cannot be updated. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/",
        "summary": "Compute Resources required by this container.",
      },
      "fqn": "monitoringcoreoscom.AlertmanagerSpecInitContainersResources",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 2650,
      },
      "name": "AlertmanagerSpecInitContainersResources",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecInitContainersResources#limits",
            },
            "remarks": "More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/",
            "summary": "Limits describes the maximum amount of compute resources allowed.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 2656,
          },
          "name": "limits",
          "optional": true,
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "primitive": "string",
              },
              "kind": "map",
            },
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecInitContainersResources#requests",
            },
            "remarks": "If Requests is omitted for a container, it defaults to Limits if that is explicitly specified, otherwise to an implementation-defined value. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/",
            "summary": "Requests describes the minimum amount of compute resources required.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 2663,
          },
          "name": "requests",
          "optional": true,
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "primitive": "string",
              },
              "kind": "map",
            },
          },
        },
      ],
    },
    "monitoringcoreoscom.AlertmanagerSpecInitContainersSecurityContext": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "AlertmanagerSpecInitContainersSecurityContext",
        },
        "remarks": "More info: https://kubernetes.io/docs/concepts/policy/security-context/ More info: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
        "summary": "Security options the pod should run with.",
      },
      "fqn": "monitoringcoreoscom.AlertmanagerSpecInitContainersSecurityContext",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 2687,
      },
      "name": "AlertmanagerSpecInitContainersSecurityContext",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecInitContainersSecurityContext#allowPrivilegeEscalation",
            },
            "remarks": "This bool directly controls if the no_new_privs flag will be set on the container process. AllowPrivilegeEscalation is true always when the container is: 1) run as Privileged 2) has CAP_SYS_ADMIN",
            "summary": "AllowPrivilegeEscalation controls whether a process can gain more privileges than its parent process.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 2693,
          },
          "name": "allowPrivilegeEscalation",
          "optional": true,
          "type": Object {
            "primitive": "boolean",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecInitContainersSecurityContext#capabilities",
            },
            "default": "the default set of capabilities granted by the container runtime.",
            "remarks": "Defaults to the default set of capabilities granted by the container runtime.",
            "summary": "The capabilities to add/drop when running containers.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 2701,
          },
          "name": "capabilities",
          "optional": true,
          "type": Object {
            "fqn": "monitoringcoreoscom.AlertmanagerSpecInitContainersSecurityContextCapabilities",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecInitContainersSecurityContext#privileged",
            },
            "default": "false.",
            "remarks": "Processes in privileged containers are essentially equivalent to root on the host. Defaults to false.",
            "summary": "Run container in privileged mode.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 2709,
          },
          "name": "privileged",
          "optional": true,
          "type": Object {
            "primitive": "boolean",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecInitContainersSecurityContext#procMount",
            },
            "remarks": "The default is DefaultProcMount which uses the container runtime defaults for readonly paths and masked paths. This requires the ProcMountType feature flag to be enabled.",
            "summary": "procMount denotes the type of proc mount to use for the containers.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 2716,
          },
          "name": "procMount",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecInitContainersSecurityContext#readOnlyRootFilesystem",
            },
            "default": "false.",
            "remarks": "Default is false.",
            "summary": "Whether this container has a read-only root filesystem.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 2724,
          },
          "name": "readOnlyRootFilesystem",
          "optional": true,
          "type": Object {
            "primitive": "boolean",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecInitContainersSecurityContext#runAsGroup",
            },
            "remarks": "Uses runtime default if unset. May also be set in PodSecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.",
            "summary": "The GID to run the entrypoint of the container process.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 2731,
          },
          "name": "runAsGroup",
          "optional": true,
          "type": Object {
            "primitive": "number",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecInitContainersSecurityContext#runAsNonRoot",
            },
            "remarks": "If true, the Kubelet will validate the image at runtime to ensure that it does not run as UID 0 (root) and fail to start the container if it does. If unset or false, no such validation will be performed. May also be set in PodSecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.",
            "summary": "Indicates that the container must run as a non-root user.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 2738,
          },
          "name": "runAsNonRoot",
          "optional": true,
          "type": Object {
            "primitive": "boolean",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecInitContainersSecurityContext#runAsUser",
            },
            "default": "user specified in image metadata if unspecified. May also be set in PodSecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.",
            "remarks": "Defaults to user specified in image metadata if unspecified. May also be set in PodSecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.",
            "summary": "The UID to run the entrypoint of the container process.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 2746,
          },
          "name": "runAsUser",
          "optional": true,
          "type": Object {
            "primitive": "number",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecInitContainersSecurityContext#seLinuxOptions",
            },
            "remarks": "If unspecified, the container runtime will allocate a random SELinux context for each container.  May also be set in PodSecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.",
            "summary": "The SELinux context to be applied to the container.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 2753,
          },
          "name": "seLinuxOptions",
          "optional": true,
          "type": Object {
            "fqn": "monitoringcoreoscom.AlertmanagerSpecInitContainersSecurityContextSeLinuxOptions",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecInitContainersSecurityContext#windowsOptions",
            },
            "remarks": "If unspecified, the options from the PodSecurityContext will be used. If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.",
            "summary": "The Windows specific settings applied to all containers.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 2760,
          },
          "name": "windowsOptions",
          "optional": true,
          "type": Object {
            "fqn": "monitoringcoreoscom.AlertmanagerSpecInitContainersSecurityContextWindowsOptions",
          },
        },
      ],
    },
    "monitoringcoreoscom.AlertmanagerSpecInitContainersSecurityContextCapabilities": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "AlertmanagerSpecInitContainersSecurityContextCapabilities",
        },
        "default": "the default set of capabilities granted by the container runtime.",
        "remarks": "Defaults to the default set of capabilities granted by the container runtime.",
        "summary": "The capabilities to add/drop when running containers.",
      },
      "fqn": "monitoringcoreoscom.AlertmanagerSpecInitContainersSecurityContextCapabilities",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 6243,
      },
      "name": "AlertmanagerSpecInitContainersSecurityContextCapabilities",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecInitContainersSecurityContextCapabilities#add",
            },
            "summary": "Added capabilities.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 6249,
          },
          "name": "add",
          "optional": true,
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "primitive": "string",
              },
              "kind": "array",
            },
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecInitContainersSecurityContextCapabilities#drop",
            },
            "summary": "Removed capabilities.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 6256,
          },
          "name": "drop",
          "optional": true,
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "primitive": "string",
              },
              "kind": "array",
            },
          },
        },
      ],
    },
    "monitoringcoreoscom.AlertmanagerSpecInitContainersSecurityContextSeLinuxOptions": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "AlertmanagerSpecInitContainersSecurityContextSeLinuxOptions",
        },
        "remarks": "If unspecified, the container runtime will allocate a random SELinux context for each container.  May also be set in PodSecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.",
        "summary": "The SELinux context to be applied to the container.",
      },
      "fqn": "monitoringcoreoscom.AlertmanagerSpecInitContainersSecurityContextSeLinuxOptions",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 6280,
      },
      "name": "AlertmanagerSpecInitContainersSecurityContextSeLinuxOptions",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecInitContainersSecurityContextSeLinuxOptions#level",
            },
            "summary": "Level is SELinux level label that applies to the container.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 6286,
          },
          "name": "level",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecInitContainersSecurityContextSeLinuxOptions#role",
            },
            "summary": "Role is a SELinux role label that applies to the container.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 6293,
          },
          "name": "role",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecInitContainersSecurityContextSeLinuxOptions#type",
            },
            "summary": "Type is a SELinux type label that applies to the container.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 6300,
          },
          "name": "type",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecInitContainersSecurityContextSeLinuxOptions#user",
            },
            "summary": "User is a SELinux user label that applies to the container.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 6307,
          },
          "name": "user",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
      ],
    },
    "monitoringcoreoscom.AlertmanagerSpecInitContainersSecurityContextWindowsOptions": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "AlertmanagerSpecInitContainersSecurityContextWindowsOptions",
        },
        "remarks": "If unspecified, the options from the PodSecurityContext will be used. If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.",
        "summary": "The Windows specific settings applied to all containers.",
      },
      "fqn": "monitoringcoreoscom.AlertmanagerSpecInitContainersSecurityContextWindowsOptions",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 6333,
      },
      "name": "AlertmanagerSpecInitContainersSecurityContextWindowsOptions",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecInitContainersSecurityContextWindowsOptions#gmsaCredentialSpec",
            },
            "summary": "GMSACredentialSpec is where the GMSA admission webhook (https://github.com/kubernetes-sigs/windows-gmsa) inlines the contents of the GMSA credential spec named by the GMSACredentialSpecName field.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 6339,
          },
          "name": "gmsaCredentialSpec",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecInitContainersSecurityContextWindowsOptions#gmsaCredentialSpecName",
            },
            "summary": "GMSACredentialSpecName is the name of the GMSA credential spec to use.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 6346,
          },
          "name": "gmsaCredentialSpecName",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecInitContainersSecurityContextWindowsOptions#runAsUserName",
            },
            "default": "the user specified in image metadata if unspecified. May also be set in PodSecurityContext. If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.",
            "remarks": "Defaults to the user specified in image metadata if unspecified. May also be set in PodSecurityContext. If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.",
            "summary": "The UserName in Windows to run the entrypoint of the container process.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 6354,
          },
          "name": "runAsUserName",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
      ],
    },
    "monitoringcoreoscom.AlertmanagerSpecInitContainersStartupProbe": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "AlertmanagerSpecInitContainersStartupProbe",
        },
        "remarks": "If specified, no other probes are executed until this completes successfully. If this probe fails, the Pod will be restarted, just as if the livenessProbe failed. This can be used to provide different probe parameters at the beginning of a Pod's lifecycle, when it might take a long time to load data or warm a cache, than during steady-state operation. This cannot be updated. This is a beta feature enabled by the StartupProbe feature flag. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes",
        "summary": "StartupProbe indicates that the Pod has successfully initialized.",
      },
      "fqn": "monitoringcoreoscom.AlertmanagerSpecInitContainersStartupProbe",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 2792,
      },
      "name": "AlertmanagerSpecInitContainersStartupProbe",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecInitContainersStartupProbe#exec",
            },
            "remarks": "Exec specifies the action to take.",
            "summary": "One and only one of the following should be specified.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 2798,
          },
          "name": "exec",
          "optional": true,
          "type": Object {
            "fqn": "monitoringcoreoscom.AlertmanagerSpecInitContainersStartupProbeExec",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecInitContainersStartupProbe#failureThreshold",
            },
            "default": "3. Minimum value is 1.",
            "remarks": "Defaults to 3. Minimum value is 1.",
            "summary": "Minimum consecutive failures for the probe to be considered failed after having succeeded.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 2806,
          },
          "name": "failureThreshold",
          "optional": true,
          "type": Object {
            "primitive": "number",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecInitContainersStartupProbe#httpGet",
            },
            "summary": "HTTPGet specifies the http request to perform.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 2813,
          },
          "name": "httpGet",
          "optional": true,
          "type": Object {
            "fqn": "monitoringcoreoscom.AlertmanagerSpecInitContainersStartupProbeHttpGet",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecInitContainersStartupProbe#initialDelaySeconds",
            },
            "remarks": "More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes",
            "summary": "Number of seconds after the container has started before liveness probes are initiated.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 2820,
          },
          "name": "initialDelaySeconds",
          "optional": true,
          "type": Object {
            "primitive": "number",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecInitContainersStartupProbe#periodSeconds",
            },
            "default": "10 seconds. Minimum value is 1.",
            "remarks": "Default to 10 seconds. Minimum value is 1.",
            "summary": "How often (in seconds) to perform the probe.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 2828,
          },
          "name": "periodSeconds",
          "optional": true,
          "type": Object {
            "primitive": "number",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecInitContainersStartupProbe#successThreshold",
            },
            "default": "1. Must be 1 for liveness and startup. Minimum value is 1.",
            "remarks": "Defaults to 1. Must be 1 for liveness and startup. Minimum value is 1.",
            "summary": "Minimum consecutive successes for the probe to be considered successful after having failed.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 2836,
          },
          "name": "successThreshold",
          "optional": true,
          "type": Object {
            "primitive": "number",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecInitContainersStartupProbe#tcpSocket",
            },
            "remarks": "TCP hooks not yet supported TODO: implement a realistic TCP lifecycle hook",
            "summary": "TCPSocket specifies an action involving a TCP port.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 2843,
          },
          "name": "tcpSocket",
          "optional": true,
          "type": Object {
            "fqn": "monitoringcoreoscom.AlertmanagerSpecInitContainersStartupProbeTcpSocket",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecInitContainersStartupProbe#timeoutSeconds",
            },
            "default": "1 second. Minimum value is 1. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes",
            "remarks": "Defaults to 1 second. Minimum value is 1. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes",
            "summary": "Number of seconds after which the probe times out.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 2851,
          },
          "name": "timeoutSeconds",
          "optional": true,
          "type": Object {
            "primitive": "number",
          },
        },
      ],
    },
    "monitoringcoreoscom.AlertmanagerSpecInitContainersStartupProbeExec": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "AlertmanagerSpecInitContainersStartupProbeExec",
        },
        "remarks": "Exec specifies the action to take.",
        "summary": "One and only one of the following should be specified.",
      },
      "fqn": "monitoringcoreoscom.AlertmanagerSpecInitContainersStartupProbeExec",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 6379,
      },
      "name": "AlertmanagerSpecInitContainersStartupProbeExec",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecInitContainersStartupProbeExec#command",
            },
            "remarks": "The command is simply exec'd, it is not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use a shell, you need to explicitly call out to that shell. Exit status of 0 is treated as live/healthy and non-zero is unhealthy.",
            "summary": "Command is the command line to execute inside the container, the working directory for the command  is root ('/') in the container's filesystem.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 6385,
          },
          "name": "command",
          "optional": true,
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "primitive": "string",
              },
              "kind": "array",
            },
          },
        },
      ],
    },
    "monitoringcoreoscom.AlertmanagerSpecInitContainersStartupProbeHttpGet": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "AlertmanagerSpecInitContainersStartupProbeHttpGet",
        },
        "summary": "HTTPGet specifies the http request to perform.",
      },
      "fqn": "monitoringcoreoscom.AlertmanagerSpecInitContainersStartupProbeHttpGet",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 6408,
      },
      "name": "AlertmanagerSpecInitContainersStartupProbeHttpGet",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecInitContainersStartupProbeHttpGet#port",
            },
            "remarks": "Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.",
            "summary": "Name or number of the port to access on the container.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 6435,
          },
          "name": "port",
          "type": Object {
            "fqn": "monitoringcoreoscom.AlertmanagerSpecInitContainersStartupProbeHttpGetPort",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecInitContainersStartupProbeHttpGet#host",
            },
            "remarks": "You probably want to set \\"Host\\" in httpHeaders instead.",
            "summary": "Host name to connect to, defaults to the pod IP.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 6414,
          },
          "name": "host",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecInitContainersStartupProbeHttpGet#httpHeaders",
            },
            "remarks": "HTTP allows repeated headers.",
            "summary": "Custom headers to set in the request.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 6421,
          },
          "name": "httpHeaders",
          "optional": true,
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "fqn": "monitoringcoreoscom.AlertmanagerSpecInitContainersStartupProbeHttpGetHttpHeaders",
              },
              "kind": "array",
            },
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecInitContainersStartupProbeHttpGet#path",
            },
            "summary": "Path to access on the HTTP server.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 6428,
          },
          "name": "path",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecInitContainersStartupProbeHttpGet#scheme",
            },
            "default": "HTTP.",
            "remarks": "Defaults to HTTP.",
            "summary": "Scheme to use for connecting to the host.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 6443,
          },
          "name": "scheme",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
      ],
    },
    "monitoringcoreoscom.AlertmanagerSpecInitContainersStartupProbeHttpGetHttpHeaders": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "AlertmanagerSpecInitContainersStartupProbeHttpGetHttpHeaders",
        },
        "summary": "HTTPHeader describes a custom header to be used in HTTP probes.",
      },
      "fqn": "monitoringcoreoscom.AlertmanagerSpecInitContainersStartupProbeHttpGetHttpHeaders",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 8560,
      },
      "name": "AlertmanagerSpecInitContainersStartupProbeHttpGetHttpHeaders",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecInitContainersStartupProbeHttpGetHttpHeaders#name",
            },
            "summary": "The header field name.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 8566,
          },
          "name": "name",
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecInitContainersStartupProbeHttpGetHttpHeaders#value",
            },
            "summary": "The header field value.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 8573,
          },
          "name": "value",
          "type": Object {
            "primitive": "string",
          },
        },
      ],
    },
    "monitoringcoreoscom.AlertmanagerSpecInitContainersStartupProbeHttpGetPort": Object {
      "assembly": "monitoringcoreoscom",
      "docs": Object {
        "custom": Object {
          "schema": "AlertmanagerSpecInitContainersStartupProbeHttpGetPort",
        },
        "remarks": "Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.",
        "summary": "Name or number of the port to access on the container.",
      },
      "fqn": "monitoringcoreoscom.AlertmanagerSpecInitContainersStartupProbeHttpGetPort",
      "kind": "class",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 8597,
      },
      "methods": Array [
        Object {
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 8598,
          },
          "name": "fromNumber",
          "parameters": Array [
            Object {
              "name": "value",
              "type": Object {
                "primitive": "number",
              },
            },
          ],
          "returns": Object {
            "type": Object {
              "fqn": "monitoringcoreoscom.AlertmanagerSpecInitContainersStartupProbeHttpGetPort",
            },
          },
          "static": true,
        },
        Object {
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 8601,
          },
          "name": "fromString",
          "parameters": Array [
            Object {
              "name": "value",
              "type": Object {
                "primitive": "string",
              },
            },
          ],
          "returns": Object {
            "type": Object {
              "fqn": "monitoringcoreoscom.AlertmanagerSpecInitContainersStartupProbeHttpGetPort",
            },
          },
          "static": true,
        },
      ],
      "name": "AlertmanagerSpecInitContainersStartupProbeHttpGetPort",
      "properties": Array [
        Object {
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 8604,
          },
          "name": "value",
          "type": Object {
            "primitive": "any",
          },
        },
      ],
    },
    "monitoringcoreoscom.AlertmanagerSpecInitContainersStartupProbeTcpSocket": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "AlertmanagerSpecInitContainersStartupProbeTcpSocket",
        },
        "remarks": "TCP hooks not yet supported TODO: implement a realistic TCP lifecycle hook",
        "summary": "TCPSocket specifies an action involving a TCP port.",
      },
      "fqn": "monitoringcoreoscom.AlertmanagerSpecInitContainersStartupProbeTcpSocket",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 6470,
      },
      "name": "AlertmanagerSpecInitContainersStartupProbeTcpSocket",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecInitContainersStartupProbeTcpSocket#port",
            },
            "remarks": "Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.",
            "summary": "Number or name of the port to access on the container.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 6483,
          },
          "name": "port",
          "type": Object {
            "fqn": "monitoringcoreoscom.AlertmanagerSpecInitContainersStartupProbeTcpSocketPort",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecInitContainersStartupProbeTcpSocket#host",
            },
            "summary": "Optional: Host name to connect to, defaults to the pod IP.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 6476,
          },
          "name": "host",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
      ],
    },
    "monitoringcoreoscom.AlertmanagerSpecInitContainersStartupProbeTcpSocketPort": Object {
      "assembly": "monitoringcoreoscom",
      "docs": Object {
        "custom": Object {
          "schema": "AlertmanagerSpecInitContainersStartupProbeTcpSocketPort",
        },
        "remarks": "Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.",
        "summary": "Number or name of the port to access on the container.",
      },
      "fqn": "monitoringcoreoscom.AlertmanagerSpecInitContainersStartupProbeTcpSocketPort",
      "kind": "class",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 8614,
      },
      "methods": Array [
        Object {
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 8615,
          },
          "name": "fromNumber",
          "parameters": Array [
            Object {
              "name": "value",
              "type": Object {
                "primitive": "number",
              },
            },
          ],
          "returns": Object {
            "type": Object {
              "fqn": "monitoringcoreoscom.AlertmanagerSpecInitContainersStartupProbeTcpSocketPort",
            },
          },
          "static": true,
        },
        Object {
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 8618,
          },
          "name": "fromString",
          "parameters": Array [
            Object {
              "name": "value",
              "type": Object {
                "primitive": "string",
              },
            },
          ],
          "returns": Object {
            "type": Object {
              "fqn": "monitoringcoreoscom.AlertmanagerSpecInitContainersStartupProbeTcpSocketPort",
            },
          },
          "static": true,
        },
      ],
      "name": "AlertmanagerSpecInitContainersStartupProbeTcpSocketPort",
      "properties": Array [
        Object {
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 8621,
          },
          "name": "value",
          "type": Object {
            "primitive": "any",
          },
        },
      ],
    },
    "monitoringcoreoscom.AlertmanagerSpecInitContainersVolumeDevices": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "AlertmanagerSpecInitContainersVolumeDevices",
        },
        "summary": "volumeDevice describes a mapping of a raw block device within a container.",
      },
      "fqn": "monitoringcoreoscom.AlertmanagerSpecInitContainersVolumeDevices",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 2881,
      },
      "name": "AlertmanagerSpecInitContainersVolumeDevices",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecInitContainersVolumeDevices#devicePath",
            },
            "summary": "devicePath is the path inside of the container that the device will be mapped to.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 2887,
          },
          "name": "devicePath",
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecInitContainersVolumeDevices#name",
            },
            "summary": "name must match the name of a persistentVolumeClaim in the pod.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 2894,
          },
          "name": "name",
          "type": Object {
            "primitive": "string",
          },
        },
      ],
    },
    "monitoringcoreoscom.AlertmanagerSpecInitContainersVolumeMounts": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "AlertmanagerSpecInitContainersVolumeMounts",
        },
        "summary": "VolumeMount describes a mounting of a Volume within a container.",
      },
      "fqn": "monitoringcoreoscom.AlertmanagerSpecInitContainersVolumeMounts",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 2918,
      },
      "name": "AlertmanagerSpecInitContainersVolumeMounts",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecInitContainersVolumeMounts#mountPath",
            },
            "remarks": "Must not contain ':'.",
            "summary": "Path within the container at which the volume should be mounted.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 2924,
          },
          "name": "mountPath",
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecInitContainersVolumeMounts#name",
            },
            "summary": "This must match the Name of a Volume.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 2938,
          },
          "name": "name",
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecInitContainersVolumeMounts#mountPropagation",
            },
            "remarks": "When not set, MountPropagationNone is used. This field is beta in 1.10.",
            "summary": "mountPropagation determines how mounts are propagated from the host to container and the other way around.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 2931,
          },
          "name": "mountPropagation",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecInitContainersVolumeMounts#readOnly",
            },
            "default": "false.",
            "remarks": "Defaults to false.",
            "summary": "Mounted read-only if true, read-write otherwise (false or unspecified).",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 2946,
          },
          "name": "readOnly",
          "optional": true,
          "type": Object {
            "primitive": "boolean",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecInitContainersVolumeMounts#subPath",
            },
            "default": "volume's root).",
            "remarks": "Defaults to \\"\\" (volume's root).",
            "summary": "Path within the volume from which the container's volume should be mounted.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 2954,
          },
          "name": "subPath",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecInitContainersVolumeMounts#subPathExpr",
            },
            "default": "volume's root). SubPathExpr and SubPath are mutually exclusive.",
            "remarks": "Behaves similarly to SubPath but environment variable references $(VAR_NAME) are expanded using the container's environment. Defaults to \\"\\" (volume's root). SubPathExpr and SubPath are mutually exclusive.",
            "summary": "Expanded path within the volume from which the container's volume should be mounted.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 2962,
          },
          "name": "subPathExpr",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
      ],
    },
    "monitoringcoreoscom.AlertmanagerSpecPodMetadata": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "AlertmanagerSpecPodMetadata",
        },
        "summary": "PodMetadata configures Labels and Annotations which are propagated to the alertmanager pods.",
      },
      "fqn": "monitoringcoreoscom.AlertmanagerSpecPodMetadata",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 853,
      },
      "name": "AlertmanagerSpecPodMetadata",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecPodMetadata#annotations",
            },
            "remarks": "They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations",
            "summary": "Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 859,
          },
          "name": "annotations",
          "optional": true,
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "primitive": "string",
              },
              "kind": "map",
            },
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecPodMetadata#labels",
            },
            "remarks": "May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels",
            "summary": "Map of string keys and values that can be used to organize and categorize (scope and select) objects.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 866,
          },
          "name": "labels",
          "optional": true,
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "primitive": "string",
              },
              "kind": "map",
            },
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecPodMetadata#name",
            },
            "remarks": "Is required when creating resources, although some resources may allow a client to request the generation of an appropriate name automatically. Name is primarily intended for creation idempotence and configuration definition. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names",
            "summary": "Name must be unique within a namespace.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 873,
          },
          "name": "name",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
      ],
    },
    "monitoringcoreoscom.AlertmanagerSpecResources": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "AlertmanagerSpecResources",
        },
        "summary": "Define resources requests and limits for single Pods.",
      },
      "fqn": "monitoringcoreoscom.AlertmanagerSpecResources",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 898,
      },
      "name": "AlertmanagerSpecResources",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecResources#limits",
            },
            "remarks": "More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/",
            "summary": "Limits describes the maximum amount of compute resources allowed.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 904,
          },
          "name": "limits",
          "optional": true,
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "primitive": "string",
              },
              "kind": "map",
            },
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecResources#requests",
            },
            "remarks": "If Requests is omitted for a container, it defaults to Limits if that is explicitly specified, otherwise to an implementation-defined value. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/",
            "summary": "Requests describes the minimum amount of compute resources required.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 911,
          },
          "name": "requests",
          "optional": true,
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "primitive": "string",
              },
              "kind": "map",
            },
          },
        },
      ],
    },
    "monitoringcoreoscom.AlertmanagerSpecSecurityContext": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "AlertmanagerSpecSecurityContext",
        },
        "remarks": "This defaults to the default PodSecurityContext.",
        "summary": "SecurityContext holds pod-level security attributes and common container settings.",
      },
      "fqn": "monitoringcoreoscom.AlertmanagerSpecSecurityContext",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 935,
      },
      "name": "AlertmanagerSpecSecurityContext",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecSecurityContext#fsGroup",
            },
            "remarks": "Some volume types allow the Kubelet to change the ownership of that volume to be owned by the pod:
1. The owning GID will be the FSGroup 2. The setgid bit is set (new files created in the volume will be owned by FSGroup) 3. The permission bits are OR'd with rw-rw----
If unset, the Kubelet will not modify the ownership and permissions of any volume.",
            "summary": "A special supplemental group that applies to all containers in a pod.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 943,
          },
          "name": "fsGroup",
          "optional": true,
          "type": Object {
            "primitive": "number",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecSecurityContext#fsGroupChangePolicy",
            },
            "remarks": "This field will only apply to volume types which support fsGroup based ownership(and permissions). It will have no effect on ephemeral volume types such as: secret, configmaps and emptydir. Valid values are \\"OnRootMismatch\\" and \\"Always\\". If not specified defaults to \\"Always\\".",
            "summary": "fsGroupChangePolicy defines behavior of changing ownership and permission of the volume before being exposed inside Pod.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 950,
          },
          "name": "fsGroupChangePolicy",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecSecurityContext#runAsGroup",
            },
            "remarks": "Uses runtime default if unset. May also be set in SecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence for that container.",
            "summary": "The GID to run the entrypoint of the container process.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 957,
          },
          "name": "runAsGroup",
          "optional": true,
          "type": Object {
            "primitive": "number",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecSecurityContext#runAsNonRoot",
            },
            "remarks": "If true, the Kubelet will validate the image at runtime to ensure that it does not run as UID 0 (root) and fail to start the container if it does. If unset or false, no such validation will be performed. May also be set in SecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.",
            "summary": "Indicates that the container must run as a non-root user.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 964,
          },
          "name": "runAsNonRoot",
          "optional": true,
          "type": Object {
            "primitive": "boolean",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecSecurityContext#runAsUser",
            },
            "default": "user specified in image metadata if unspecified. May also be set in SecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence for that container.",
            "remarks": "Defaults to user specified in image metadata if unspecified. May also be set in SecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence for that container.",
            "summary": "The UID to run the entrypoint of the container process.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 972,
          },
          "name": "runAsUser",
          "optional": true,
          "type": Object {
            "primitive": "number",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecSecurityContext#seLinuxOptions",
            },
            "remarks": "If unspecified, the container runtime will allocate a random SELinux context for each container.  May also be set in SecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence for that container.",
            "summary": "The SELinux context to be applied to all containers.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 979,
          },
          "name": "seLinuxOptions",
          "optional": true,
          "type": Object {
            "fqn": "monitoringcoreoscom.AlertmanagerSpecSecurityContextSeLinuxOptions",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecSecurityContext#supplementalGroups",
            },
            "remarks": "If unspecified, no groups will be added to any container.",
            "summary": "A list of groups applied to the first process run in each container, in addition to the container's primary GID.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 986,
          },
          "name": "supplementalGroups",
          "optional": true,
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "primitive": "number",
              },
              "kind": "array",
            },
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecSecurityContext#sysctls",
            },
            "remarks": "Pods with unsupported sysctls (by the container runtime) might fail to launch.",
            "summary": "Sysctls hold a list of namespaced sysctls used for the pod.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 993,
          },
          "name": "sysctls",
          "optional": true,
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "fqn": "monitoringcoreoscom.AlertmanagerSpecSecurityContextSysctls",
              },
              "kind": "array",
            },
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecSecurityContext#windowsOptions",
            },
            "remarks": "If unspecified, the options within a container's SecurityContext will be used. If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.",
            "summary": "The Windows specific settings applied to all containers.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 1000,
          },
          "name": "windowsOptions",
          "optional": true,
          "type": Object {
            "fqn": "monitoringcoreoscom.AlertmanagerSpecSecurityContextWindowsOptions",
          },
        },
      ],
    },
    "monitoringcoreoscom.AlertmanagerSpecSecurityContextSeLinuxOptions": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "AlertmanagerSpecSecurityContextSeLinuxOptions",
        },
        "remarks": "If unspecified, the container runtime will allocate a random SELinux context for each container.  May also be set in SecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence for that container.",
        "summary": "The SELinux context to be applied to all containers.",
      },
      "fqn": "monitoringcoreoscom.AlertmanagerSpecSecurityContextSeLinuxOptions",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 2990,
      },
      "name": "AlertmanagerSpecSecurityContextSeLinuxOptions",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecSecurityContextSeLinuxOptions#level",
            },
            "summary": "Level is SELinux level label that applies to the container.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 2996,
          },
          "name": "level",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecSecurityContextSeLinuxOptions#role",
            },
            "summary": "Role is a SELinux role label that applies to the container.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 3003,
          },
          "name": "role",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecSecurityContextSeLinuxOptions#type",
            },
            "summary": "Type is a SELinux type label that applies to the container.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 3010,
          },
          "name": "type",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecSecurityContextSeLinuxOptions#user",
            },
            "summary": "User is a SELinux user label that applies to the container.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 3017,
          },
          "name": "user",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
      ],
    },
    "monitoringcoreoscom.AlertmanagerSpecSecurityContextSysctls": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "AlertmanagerSpecSecurityContextSysctls",
        },
        "summary": "Sysctl defines a kernel parameter to be set.",
      },
      "fqn": "monitoringcoreoscom.AlertmanagerSpecSecurityContextSysctls",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 3043,
      },
      "name": "AlertmanagerSpecSecurityContextSysctls",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecSecurityContextSysctls#name",
            },
            "summary": "Name of a property to set.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 3049,
          },
          "name": "name",
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecSecurityContextSysctls#value",
            },
            "summary": "Value of a property to set.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 3056,
          },
          "name": "value",
          "type": Object {
            "primitive": "string",
          },
        },
      ],
    },
    "monitoringcoreoscom.AlertmanagerSpecSecurityContextWindowsOptions": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "AlertmanagerSpecSecurityContextWindowsOptions",
        },
        "remarks": "If unspecified, the options within a container's SecurityContext will be used. If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.",
        "summary": "The Windows specific settings applied to all containers.",
      },
      "fqn": "monitoringcoreoscom.AlertmanagerSpecSecurityContextWindowsOptions",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 3080,
      },
      "name": "AlertmanagerSpecSecurityContextWindowsOptions",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecSecurityContextWindowsOptions#gmsaCredentialSpec",
            },
            "summary": "GMSACredentialSpec is where the GMSA admission webhook (https://github.com/kubernetes-sigs/windows-gmsa) inlines the contents of the GMSA credential spec named by the GMSACredentialSpecName field.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 3086,
          },
          "name": "gmsaCredentialSpec",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecSecurityContextWindowsOptions#gmsaCredentialSpecName",
            },
            "summary": "GMSACredentialSpecName is the name of the GMSA credential spec to use.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 3093,
          },
          "name": "gmsaCredentialSpecName",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecSecurityContextWindowsOptions#runAsUserName",
            },
            "default": "the user specified in image metadata if unspecified. May also be set in PodSecurityContext. If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.",
            "remarks": "Defaults to the user specified in image metadata if unspecified. May also be set in PodSecurityContext. If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.",
            "summary": "The UserName in Windows to run the entrypoint of the container process.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 3101,
          },
          "name": "runAsUserName",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
      ],
    },
    "monitoringcoreoscom.AlertmanagerSpecStorage": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "AlertmanagerSpecStorage",
        },
        "summary": "Storage is the definition of how storage will be used by the Alertmanager instances.",
      },
      "fqn": "monitoringcoreoscom.AlertmanagerSpecStorage",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 1031,
      },
      "name": "AlertmanagerSpecStorage",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecStorage#disableMountSubPath",
            },
            "remarks": "DisableMountSubPath allows to remove any subPath usage in volume mounts.",
            "summary": "Deprecated: subPath usage will be disabled by default in a future release, this option will become unnecessary.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 1037,
          },
          "name": "disableMountSubPath",
          "optional": true,
          "type": Object {
            "primitive": "boolean",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecStorage#emptyDir",
            },
            "remarks": "If specified, used in place of any volumeClaimTemplate. More info: https://kubernetes.io/docs/concepts/storage/volumes/#emptydir",
            "summary": "EmptyDirVolumeSource to be used by the Prometheus StatefulSets.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 1044,
          },
          "name": "emptyDir",
          "optional": true,
          "type": Object {
            "fqn": "monitoringcoreoscom.AlertmanagerSpecStorageEmptyDir",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecStorage#volumeClaimTemplate",
            },
            "summary": "A PVC spec to be used by the Prometheus StatefulSets.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 1051,
          },
          "name": "volumeClaimTemplate",
          "optional": true,
          "type": Object {
            "fqn": "monitoringcoreoscom.AlertmanagerSpecStorageVolumeClaimTemplate",
          },
        },
      ],
    },
    "monitoringcoreoscom.AlertmanagerSpecStorageEmptyDir": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "AlertmanagerSpecStorageEmptyDir",
        },
        "remarks": "If specified, used in place of any volumeClaimTemplate. More info: https://kubernetes.io/docs/concepts/storage/volumes/#emptydir",
        "summary": "EmptyDirVolumeSource to be used by the Prometheus StatefulSets.",
      },
      "fqn": "monitoringcoreoscom.AlertmanagerSpecStorageEmptyDir",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 3126,
      },
      "name": "AlertmanagerSpecStorageEmptyDir",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecStorageEmptyDir#medium",
            },
            "remarks": "The default is \\"\\" which means to use the node's default medium. Must be an empty string (default) or Memory. More info: https://kubernetes.io/docs/concepts/storage/volumes#emptydir",
            "summary": "What type of storage medium should back this directory.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 3132,
          },
          "name": "medium",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecStorageEmptyDir#sizeLimit",
            },
            "remarks": "The size limit is also applicable for memory medium. The maximum usage on memory medium EmptyDir would be the minimum value between the SizeLimit specified here and the sum of memory limits of all containers in a pod. The default is nil which means that the limit is undefined. More info: http://kubernetes.io/docs/user-guide/volumes#emptydir",
            "summary": "Total amount of local storage required for this EmptyDir volume.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 3139,
          },
          "name": "sizeLimit",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
      ],
    },
    "monitoringcoreoscom.AlertmanagerSpecStorageVolumeClaimTemplate": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "AlertmanagerSpecStorageVolumeClaimTemplate",
        },
        "summary": "A PVC spec to be used by the Prometheus StatefulSets.",
      },
      "fqn": "monitoringcoreoscom.AlertmanagerSpecStorageVolumeClaimTemplate",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 3163,
      },
      "name": "AlertmanagerSpecStorageVolumeClaimTemplate",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecStorageVolumeClaimTemplate#apiVersion",
            },
            "remarks": "Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
            "summary": "APIVersion defines the versioned schema of this representation of an object.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 3169,
          },
          "name": "apiVersion",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecStorageVolumeClaimTemplate#kind",
            },
            "remarks": "Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
            "summary": "Kind is a string value representing the REST resource this object represents.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 3176,
          },
          "name": "kind",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecStorageVolumeClaimTemplate#metadata",
            },
            "summary": "EmbeddedMetadata contains metadata relevant to an EmbeddedResource.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 3183,
          },
          "name": "metadata",
          "optional": true,
          "type": Object {
            "fqn": "monitoringcoreoscom.AlertmanagerSpecStorageVolumeClaimTemplateMetadata",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecStorageVolumeClaimTemplate#spec",
            },
            "remarks": "More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims",
            "summary": "Spec defines the desired characteristics of a volume requested by a pod author.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 3190,
          },
          "name": "spec",
          "optional": true,
          "type": Object {
            "fqn": "monitoringcoreoscom.AlertmanagerSpecStorageVolumeClaimTemplateSpec",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecStorageVolumeClaimTemplate#status",
            },
            "remarks": "Read-only. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims",
            "summary": "Status represents the current information/status of a persistent volume claim.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 3197,
          },
          "name": "status",
          "optional": true,
          "type": Object {
            "fqn": "monitoringcoreoscom.AlertmanagerSpecStorageVolumeClaimTemplateStatus",
          },
        },
      ],
    },
    "monitoringcoreoscom.AlertmanagerSpecStorageVolumeClaimTemplateMetadata": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "AlertmanagerSpecStorageVolumeClaimTemplateMetadata",
        },
        "summary": "EmbeddedMetadata contains metadata relevant to an EmbeddedResource.",
      },
      "fqn": "monitoringcoreoscom.AlertmanagerSpecStorageVolumeClaimTemplateMetadata",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 6507,
      },
      "name": "AlertmanagerSpecStorageVolumeClaimTemplateMetadata",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecStorageVolumeClaimTemplateMetadata#annotations",
            },
            "remarks": "They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations",
            "summary": "Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 6513,
          },
          "name": "annotations",
          "optional": true,
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "primitive": "string",
              },
              "kind": "map",
            },
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecStorageVolumeClaimTemplateMetadata#labels",
            },
            "remarks": "May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels",
            "summary": "Map of string keys and values that can be used to organize and categorize (scope and select) objects.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 6520,
          },
          "name": "labels",
          "optional": true,
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "primitive": "string",
              },
              "kind": "map",
            },
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecStorageVolumeClaimTemplateMetadata#name",
            },
            "remarks": "Is required when creating resources, although some resources may allow a client to request the generation of an appropriate name automatically. Name is primarily intended for creation idempotence and configuration definition. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names",
            "summary": "Name must be unique within a namespace.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 6527,
          },
          "name": "name",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
      ],
    },
    "monitoringcoreoscom.AlertmanagerSpecStorageVolumeClaimTemplateSpec": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "AlertmanagerSpecStorageVolumeClaimTemplateSpec",
        },
        "remarks": "More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims",
        "summary": "Spec defines the desired characteristics of a volume requested by a pod author.",
      },
      "fqn": "monitoringcoreoscom.AlertmanagerSpecStorageVolumeClaimTemplateSpec",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 6552,
      },
      "name": "AlertmanagerSpecStorageVolumeClaimTemplateSpec",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecStorageVolumeClaimTemplateSpec#accessModes",
            },
            "remarks": "More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#access-modes-1",
            "summary": "AccessModes contains the desired access modes the volume should have.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 6558,
          },
          "name": "accessModes",
          "optional": true,
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "primitive": "string",
              },
              "kind": "array",
            },
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecStorageVolumeClaimTemplateSpec#dataSource",
            },
            "summary": "This field can be used to specify either: * An existing VolumeSnapshot object (snapshot.storage.k8s.io/VolumeSnapshot - Beta) * An existing PVC (PersistentVolumeClaim) * An existing custom resource/object that implements data population (Alpha) In order to use VolumeSnapshot object types, the appropriate feature gate must be enabled (VolumeSnapshotDataSource or AnyVolumeDataSource) If the provisioner or an external controller can support the specified data source, it will create a new volume based on the contents of the specified data source. If the specified data source is not supported, the volume will not be created and the failure will be reported as an event. In the future, we plan to support more data source types and the behavior of the provisioner may change.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 6565,
          },
          "name": "dataSource",
          "optional": true,
          "type": Object {
            "fqn": "monitoringcoreoscom.AlertmanagerSpecStorageVolumeClaimTemplateSpecDataSource",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecStorageVolumeClaimTemplateSpec#resources",
            },
            "remarks": "More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#resources",
            "summary": "Resources represents the minimum resources the volume should have.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 6572,
          },
          "name": "resources",
          "optional": true,
          "type": Object {
            "fqn": "monitoringcoreoscom.AlertmanagerSpecStorageVolumeClaimTemplateSpecResources",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecStorageVolumeClaimTemplateSpec#selector",
            },
            "summary": "A label query over volumes to consider for binding.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 6579,
          },
          "name": "selector",
          "optional": true,
          "type": Object {
            "fqn": "monitoringcoreoscom.AlertmanagerSpecStorageVolumeClaimTemplateSpecSelector",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecStorageVolumeClaimTemplateSpec#storageClassName",
            },
            "remarks": "More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#class-1",
            "summary": "Name of the StorageClass required by the claim.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 6586,
          },
          "name": "storageClassName",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecStorageVolumeClaimTemplateSpec#volumeMode",
            },
            "remarks": "Value of Filesystem is implied when not included in claim spec.",
            "summary": "volumeMode defines what type of volume is required by the claim.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 6593,
          },
          "name": "volumeMode",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecStorageVolumeClaimTemplateSpec#volumeName",
            },
            "summary": "VolumeName is the binding reference to the PersistentVolume backing this claim.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 6600,
          },
          "name": "volumeName",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
      ],
    },
    "monitoringcoreoscom.AlertmanagerSpecStorageVolumeClaimTemplateSpecDataSource": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "AlertmanagerSpecStorageVolumeClaimTemplateSpecDataSource",
        },
        "summary": "This field can be used to specify either: * An existing VolumeSnapshot object (snapshot.storage.k8s.io/VolumeSnapshot - Beta) * An existing PVC (PersistentVolumeClaim) * An existing custom resource/object that implements data population (Alpha) In order to use VolumeSnapshot object types, the appropriate feature gate must be enabled (VolumeSnapshotDataSource or AnyVolumeDataSource) If the provisioner or an external controller can support the specified data source, it will create a new volume based on the contents of the specified data source. If the specified data source is not supported, the volume will not be created and the failure will be reported as an event. In the future, we plan to support more data source types and the behavior of the provisioner may change.",
      },
      "fqn": "monitoringcoreoscom.AlertmanagerSpecStorageVolumeClaimTemplateSpecDataSource",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 8631,
      },
      "name": "AlertmanagerSpecStorageVolumeClaimTemplateSpecDataSource",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecStorageVolumeClaimTemplateSpecDataSource#kind",
            },
            "summary": "Kind is the type of resource being referenced.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 8644,
          },
          "name": "kind",
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecStorageVolumeClaimTemplateSpecDataSource#name",
            },
            "summary": "Name is the name of resource being referenced.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 8651,
          },
          "name": "name",
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecStorageVolumeClaimTemplateSpecDataSource#apiGroup",
            },
            "remarks": "If APIGroup is not specified, the specified Kind must be in the core API group. For any other third-party types, APIGroup is required.",
            "summary": "APIGroup is the group for the resource being referenced.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 8637,
          },
          "name": "apiGroup",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
      ],
    },
    "monitoringcoreoscom.AlertmanagerSpecStorageVolumeClaimTemplateSpecResources": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "AlertmanagerSpecStorageVolumeClaimTemplateSpecResources",
        },
        "remarks": "More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#resources",
        "summary": "Resources represents the minimum resources the volume should have.",
      },
      "fqn": "monitoringcoreoscom.AlertmanagerSpecStorageVolumeClaimTemplateSpecResources",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 8676,
      },
      "name": "AlertmanagerSpecStorageVolumeClaimTemplateSpecResources",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecStorageVolumeClaimTemplateSpecResources#limits",
            },
            "remarks": "More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/",
            "summary": "Limits describes the maximum amount of compute resources allowed.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 8682,
          },
          "name": "limits",
          "optional": true,
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "primitive": "string",
              },
              "kind": "map",
            },
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecStorageVolumeClaimTemplateSpecResources#requests",
            },
            "remarks": "If Requests is omitted for a container, it defaults to Limits if that is explicitly specified, otherwise to an implementation-defined value. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/",
            "summary": "Requests describes the minimum amount of compute resources required.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 8689,
          },
          "name": "requests",
          "optional": true,
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "primitive": "string",
              },
              "kind": "map",
            },
          },
        },
      ],
    },
    "monitoringcoreoscom.AlertmanagerSpecStorageVolumeClaimTemplateSpecSelector": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "AlertmanagerSpecStorageVolumeClaimTemplateSpecSelector",
        },
        "summary": "A label query over volumes to consider for binding.",
      },
      "fqn": "monitoringcoreoscom.AlertmanagerSpecStorageVolumeClaimTemplateSpecSelector",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 8713,
      },
      "name": "AlertmanagerSpecStorageVolumeClaimTemplateSpecSelector",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecStorageVolumeClaimTemplateSpecSelector#matchExpressions",
            },
            "remarks": "The requirements are ANDed.",
            "summary": "matchExpressions is a list of label selector requirements.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 8719,
          },
          "name": "matchExpressions",
          "optional": true,
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "fqn": "monitoringcoreoscom.AlertmanagerSpecStorageVolumeClaimTemplateSpecSelectorMatchExpressions",
              },
              "kind": "array",
            },
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecStorageVolumeClaimTemplateSpecSelector#matchLabels",
            },
            "remarks": "A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is \\"key\\", the operator is \\"In\\", and the values array contains only \\"value\\". The requirements are ANDed.",
            "summary": "matchLabels is a map of {key,value} pairs.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 8726,
          },
          "name": "matchLabels",
          "optional": true,
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "primitive": "string",
              },
              "kind": "map",
            },
          },
        },
      ],
    },
    "monitoringcoreoscom.AlertmanagerSpecStorageVolumeClaimTemplateSpecSelectorMatchExpressions": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "AlertmanagerSpecStorageVolumeClaimTemplateSpecSelectorMatchExpressions",
        },
        "summary": "A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.",
      },
      "fqn": "monitoringcoreoscom.AlertmanagerSpecStorageVolumeClaimTemplateSpecSelectorMatchExpressions",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 9692,
      },
      "name": "AlertmanagerSpecStorageVolumeClaimTemplateSpecSelectorMatchExpressions",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecStorageVolumeClaimTemplateSpecSelectorMatchExpressions#key",
            },
            "summary": "key is the label key that the selector applies to.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 9698,
          },
          "name": "key",
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecStorageVolumeClaimTemplateSpecSelectorMatchExpressions#operator",
            },
            "remarks": "Valid operators are In, NotIn, Exists and DoesNotExist.",
            "summary": "operator represents a key's relationship to a set of values.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 9705,
          },
          "name": "operator",
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecStorageVolumeClaimTemplateSpecSelectorMatchExpressions#values",
            },
            "remarks": "If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.",
            "summary": "values is an array of string values.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 9712,
          },
          "name": "values",
          "optional": true,
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "primitive": "string",
              },
              "kind": "array",
            },
          },
        },
      ],
    },
    "monitoringcoreoscom.AlertmanagerSpecStorageVolumeClaimTemplateStatus": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "AlertmanagerSpecStorageVolumeClaimTemplateStatus",
        },
        "remarks": "Read-only. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims",
        "summary": "Status represents the current information/status of a persistent volume claim.",
      },
      "fqn": "monitoringcoreoscom.AlertmanagerSpecStorageVolumeClaimTemplateStatus",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 6629,
      },
      "name": "AlertmanagerSpecStorageVolumeClaimTemplateStatus",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecStorageVolumeClaimTemplateStatus#accessModes",
            },
            "remarks": "More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#access-modes-1",
            "summary": "AccessModes contains the actual access modes the volume backing the PVC has.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 6635,
          },
          "name": "accessModes",
          "optional": true,
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "primitive": "string",
              },
              "kind": "array",
            },
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecStorageVolumeClaimTemplateStatus#capacity",
            },
            "summary": "Represents the actual resources of the underlying volume.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 6642,
          },
          "name": "capacity",
          "optional": true,
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "primitive": "string",
              },
              "kind": "map",
            },
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecStorageVolumeClaimTemplateStatus#conditions",
            },
            "remarks": "If underlying persistent volume is being resized then the Condition will be set to 'ResizeStarted'.",
            "summary": "Current Condition of persistent volume claim.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 6649,
          },
          "name": "conditions",
          "optional": true,
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "fqn": "monitoringcoreoscom.AlertmanagerSpecStorageVolumeClaimTemplateStatusConditions",
              },
              "kind": "array",
            },
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecStorageVolumeClaimTemplateStatus#phase",
            },
            "summary": "Phase represents the current phase of PersistentVolumeClaim.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 6656,
          },
          "name": "phase",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
      ],
    },
    "monitoringcoreoscom.AlertmanagerSpecStorageVolumeClaimTemplateStatusConditions": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "AlertmanagerSpecStorageVolumeClaimTemplateStatusConditions",
        },
        "summary": "PersistentVolumeClaimCondition contails details about state of pvc.",
      },
      "fqn": "monitoringcoreoscom.AlertmanagerSpecStorageVolumeClaimTemplateStatusConditions",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 8750,
      },
      "name": "AlertmanagerSpecStorageVolumeClaimTemplateStatusConditions",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecStorageVolumeClaimTemplateStatusConditions#status",
            },
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 8782,
          },
          "name": "status",
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecStorageVolumeClaimTemplateStatusConditions#type",
            },
            "summary": "PersistentVolumeClaimConditionType is a valid value of PersistentVolumeClaimCondition.Type.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 8789,
          },
          "name": "type",
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecStorageVolumeClaimTemplateStatusConditions#lastProbeTime",
            },
            "summary": "Last time we probed the condition.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 8756,
          },
          "name": "lastProbeTime",
          "optional": true,
          "type": Object {
            "primitive": "date",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecStorageVolumeClaimTemplateStatusConditions#lastTransitionTime",
            },
            "summary": "Last time the condition transitioned from one status to another.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 8763,
          },
          "name": "lastTransitionTime",
          "optional": true,
          "type": Object {
            "primitive": "date",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecStorageVolumeClaimTemplateStatusConditions#message",
            },
            "summary": "Human-readable message indicating details about last transition.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 8770,
          },
          "name": "message",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecStorageVolumeClaimTemplateStatusConditions#reason",
            },
            "remarks": "If it reports \\"ResizeStarted\\" that means the underlying persistent volume is being resized.",
            "summary": "Unique, this should be a short, machine understandable string that gives the reason for condition's last transition.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 8777,
          },
          "name": "reason",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
      ],
    },
    "monitoringcoreoscom.AlertmanagerSpecTolerations": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "AlertmanagerSpecTolerations",
        },
        "summary": "The pod this Toleration is attached to tolerates any taint that matches the triple <key,value,effect> using the matching operator <operator>.",
      },
      "fqn": "monitoringcoreoscom.AlertmanagerSpecTolerations",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 1076,
      },
      "name": "AlertmanagerSpecTolerations",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecTolerations#effect",
            },
            "remarks": "Empty means match all taint effects. When specified, allowed values are NoSchedule, PreferNoSchedule and NoExecute.",
            "summary": "Effect indicates the taint effect to match.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 1082,
          },
          "name": "effect",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecTolerations#key",
            },
            "remarks": "Empty means match all taint keys. If the key is empty, operator must be Exists; this combination means to match all values and all keys.",
            "summary": "Key is the taint key that the toleration applies to.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 1089,
          },
          "name": "key",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecTolerations#operator",
            },
            "default": "Equal. Exists is equivalent to wildcard for value, so that a pod can tolerate all taints of a particular category.",
            "remarks": "Valid operators are Exists and Equal. Defaults to Equal. Exists is equivalent to wildcard for value, so that a pod can tolerate all taints of a particular category.",
            "summary": "Operator represents a key's relationship to the value.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 1097,
          },
          "name": "operator",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecTolerations#tolerationSeconds",
            },
            "remarks": "By default, it is not set, which means tolerate the taint forever (do not evict). Zero and negative values will be treated as 0 (evict immediately) by the system.",
            "summary": "TolerationSeconds represents the period of time the toleration (which must be of effect NoExecute, otherwise this field is ignored) tolerates the taint.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 1104,
          },
          "name": "tolerationSeconds",
          "optional": true,
          "type": Object {
            "primitive": "number",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecTolerations#value",
            },
            "remarks": "If the operator is Exists, the value should be empty, otherwise just a regular string.",
            "summary": "Value is the taint value the toleration matches to.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 1111,
          },
          "name": "value",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
      ],
    },
    "monitoringcoreoscom.AlertmanagerSpecVolumeMounts": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "AlertmanagerSpecVolumeMounts",
        },
        "summary": "VolumeMount describes a mounting of a Volume within a container.",
      },
      "fqn": "monitoringcoreoscom.AlertmanagerSpecVolumeMounts",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 1138,
      },
      "name": "AlertmanagerSpecVolumeMounts",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecVolumeMounts#mountPath",
            },
            "remarks": "Must not contain ':'.",
            "summary": "Path within the container at which the volume should be mounted.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 1144,
          },
          "name": "mountPath",
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecVolumeMounts#name",
            },
            "summary": "This must match the Name of a Volume.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 1158,
          },
          "name": "name",
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecVolumeMounts#mountPropagation",
            },
            "remarks": "When not set, MountPropagationNone is used. This field is beta in 1.10.",
            "summary": "mountPropagation determines how mounts are propagated from the host to container and the other way around.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 1151,
          },
          "name": "mountPropagation",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecVolumeMounts#readOnly",
            },
            "default": "false.",
            "remarks": "Defaults to false.",
            "summary": "Mounted read-only if true, read-write otherwise (false or unspecified).",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 1166,
          },
          "name": "readOnly",
          "optional": true,
          "type": Object {
            "primitive": "boolean",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecVolumeMounts#subPath",
            },
            "default": "volume's root).",
            "remarks": "Defaults to \\"\\" (volume's root).",
            "summary": "Path within the volume from which the container's volume should be mounted.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 1174,
          },
          "name": "subPath",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecVolumeMounts#subPathExpr",
            },
            "default": "volume's root). SubPathExpr and SubPath are mutually exclusive.",
            "remarks": "Behaves similarly to SubPath but environment variable references $(VAR_NAME) are expanded using the container's environment. Defaults to \\"\\" (volume's root). SubPathExpr and SubPath are mutually exclusive.",
            "summary": "Expanded path within the volume from which the container's volume should be mounted.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 1182,
          },
          "name": "subPathExpr",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
      ],
    },
    "monitoringcoreoscom.AlertmanagerSpecVolumes": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "AlertmanagerSpecVolumes",
        },
        "summary": "Volume represents a named volume in a pod that may be accessed by any container in the pod.",
      },
      "fqn": "monitoringcoreoscom.AlertmanagerSpecVolumes",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 1210,
      },
      "name": "AlertmanagerSpecVolumes",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecVolumes#name",
            },
            "remarks": "Must be a DNS_LABEL and unique within the pod. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
            "summary": "Volume's name.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 1335,
          },
          "name": "name",
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecVolumes#awsElasticBlockStore",
            },
            "remarks": "More info: https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore",
            "summary": "AWSElasticBlockStore represents an AWS Disk resource that is attached to a kubelet's host machine and then exposed to the pod.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 1216,
          },
          "name": "awsElasticBlockStore",
          "optional": true,
          "type": Object {
            "fqn": "monitoringcoreoscom.AlertmanagerSpecVolumesAwsElasticBlockStore",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecVolumes#azureDisk",
            },
            "summary": "AzureDisk represents an Azure Data Disk mount on the host and bind mount to the pod.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 1223,
          },
          "name": "azureDisk",
          "optional": true,
          "type": Object {
            "fqn": "monitoringcoreoscom.AlertmanagerSpecVolumesAzureDisk",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecVolumes#azureFile",
            },
            "summary": "AzureFile represents an Azure File Service mount on the host and bind mount to the pod.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 1230,
          },
          "name": "azureFile",
          "optional": true,
          "type": Object {
            "fqn": "monitoringcoreoscom.AlertmanagerSpecVolumesAzureFile",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecVolumes#cephfs",
            },
            "summary": "CephFS represents a Ceph FS mount on the host that shares a pod's lifetime.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 1237,
          },
          "name": "cephfs",
          "optional": true,
          "type": Object {
            "fqn": "monitoringcoreoscom.AlertmanagerSpecVolumesCephfs",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecVolumes#cinder",
            },
            "remarks": "More info: https://examples.k8s.io/mysql-cinder-pd/README.md",
            "summary": "Cinder represents a cinder volume attached and mounted on kubelets host machine.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 1244,
          },
          "name": "cinder",
          "optional": true,
          "type": Object {
            "fqn": "monitoringcoreoscom.AlertmanagerSpecVolumesCinder",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecVolumes#configMap",
            },
            "summary": "ConfigMap represents a configMap that should populate this volume.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 1251,
          },
          "name": "configMap",
          "optional": true,
          "type": Object {
            "fqn": "monitoringcoreoscom.AlertmanagerSpecVolumesConfigMap",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecVolumes#csi",
            },
            "summary": "CSI (Container Storage Interface) represents storage that is handled by an external CSI driver (Alpha feature).",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 1258,
          },
          "name": "csi",
          "optional": true,
          "type": Object {
            "fqn": "monitoringcoreoscom.AlertmanagerSpecVolumesCsi",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecVolumes#downwardAPI",
            },
            "summary": "DownwardAPI represents downward API about the pod that should populate this volume.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 1265,
          },
          "name": "downwardApi",
          "optional": true,
          "type": Object {
            "fqn": "monitoringcoreoscom.AlertmanagerSpecVolumesDownwardApi",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecVolumes#emptyDir",
            },
            "remarks": "More info: https://kubernetes.io/docs/concepts/storage/volumes#emptydir",
            "summary": "EmptyDir represents a temporary directory that shares a pod's lifetime.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 1272,
          },
          "name": "emptyDir",
          "optional": true,
          "type": Object {
            "fqn": "monitoringcoreoscom.AlertmanagerSpecVolumesEmptyDir",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecVolumes#fc",
            },
            "summary": "FC represents a Fibre Channel resource that is attached to a kubelet's host machine and then exposed to the pod.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 1279,
          },
          "name": "fc",
          "optional": true,
          "type": Object {
            "fqn": "monitoringcoreoscom.AlertmanagerSpecVolumesFc",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecVolumes#flexVolume",
            },
            "summary": "FlexVolume represents a generic volume resource that is provisioned/attached using an exec based plugin.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 1286,
          },
          "name": "flexVolume",
          "optional": true,
          "type": Object {
            "fqn": "monitoringcoreoscom.AlertmanagerSpecVolumesFlexVolume",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecVolumes#flocker",
            },
            "remarks": "This depends on the Flocker control service being running",
            "summary": "Flocker represents a Flocker volume attached to a kubelet's host machine.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 1293,
          },
          "name": "flocker",
          "optional": true,
          "type": Object {
            "fqn": "monitoringcoreoscom.AlertmanagerSpecVolumesFlocker",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecVolumes#gcePersistentDisk",
            },
            "remarks": "More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk",
            "summary": "GCEPersistentDisk represents a GCE Disk resource that is attached to a kubelet's host machine and then exposed to the pod.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 1300,
          },
          "name": "gcePersistentDisk",
          "optional": true,
          "type": Object {
            "fqn": "monitoringcoreoscom.AlertmanagerSpecVolumesGcePersistentDisk",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecVolumes#gitRepo",
            },
            "remarks": "DEPRECATED: GitRepo is deprecated. To provision a container with a git repo, mount an EmptyDir into an InitContainer that clones the repo using git, then mount the EmptyDir into the Pod's container.",
            "summary": "GitRepo represents a git repository at a particular revision.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 1307,
          },
          "name": "gitRepo",
          "optional": true,
          "type": Object {
            "fqn": "monitoringcoreoscom.AlertmanagerSpecVolumesGitRepo",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecVolumes#glusterfs",
            },
            "remarks": "More info: https://examples.k8s.io/volumes/glusterfs/README.md",
            "summary": "Glusterfs represents a Glusterfs mount on the host that shares a pod's lifetime.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 1314,
          },
          "name": "glusterfs",
          "optional": true,
          "type": Object {
            "fqn": "monitoringcoreoscom.AlertmanagerSpecVolumesGlusterfs",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecVolumes#hostPath",
            },
            "remarks": "This is generally used for system agents or other privileged things that are allowed to see the host machine. Most containers will NOT need this. More info: https://kubernetes.io/docs/concepts/storage/volumes#hostpath --- TODO(jonesdl) We need to restrict who can use host directory mounts and who can/can not mount host directories as read/write.",
            "summary": "HostPath represents a pre-existing file or directory on the host machine that is directly exposed to the container.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 1321,
          },
          "name": "hostPath",
          "optional": true,
          "type": Object {
            "fqn": "monitoringcoreoscom.AlertmanagerSpecVolumesHostPath",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecVolumes#iscsi",
            },
            "remarks": "More info: https://examples.k8s.io/volumes/iscsi/README.md",
            "summary": "ISCSI represents an ISCSI Disk resource that is attached to a kubelet's host machine and then exposed to the pod.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 1328,
          },
          "name": "iscsi",
          "optional": true,
          "type": Object {
            "fqn": "monitoringcoreoscom.AlertmanagerSpecVolumesIscsi",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecVolumes#nfs",
            },
            "summary": "NFS represents an NFS mount on the host that shares a pod's lifetime More info: https://kubernetes.io/docs/concepts/storage/volumes#nfs.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 1342,
          },
          "name": "nfs",
          "optional": true,
          "type": Object {
            "fqn": "monitoringcoreoscom.AlertmanagerSpecVolumesNfs",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecVolumes#persistentVolumeClaim",
            },
            "remarks": "More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims",
            "summary": "PersistentVolumeClaimVolumeSource represents a reference to a PersistentVolumeClaim in the same namespace.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 1349,
          },
          "name": "persistentVolumeClaim",
          "optional": true,
          "type": Object {
            "fqn": "monitoringcoreoscom.AlertmanagerSpecVolumesPersistentVolumeClaim",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecVolumes#photonPersistentDisk",
            },
            "summary": "PhotonPersistentDisk represents a PhotonController persistent disk attached and mounted on kubelets host machine.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 1356,
          },
          "name": "photonPersistentDisk",
          "optional": true,
          "type": Object {
            "fqn": "monitoringcoreoscom.AlertmanagerSpecVolumesPhotonPersistentDisk",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecVolumes#portworxVolume",
            },
            "summary": "PortworxVolume represents a portworx volume attached and mounted on kubelets host machine.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 1363,
          },
          "name": "portworxVolume",
          "optional": true,
          "type": Object {
            "fqn": "monitoringcoreoscom.AlertmanagerSpecVolumesPortworxVolume",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecVolumes#projected",
            },
            "summary": "Items for all in one resources secrets, configmaps, and downward API.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 1370,
          },
          "name": "projected",
          "optional": true,
          "type": Object {
            "fqn": "monitoringcoreoscom.AlertmanagerSpecVolumesProjected",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecVolumes#quobyte",
            },
            "summary": "Quobyte represents a Quobyte mount on the host that shares a pod's lifetime.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 1377,
          },
          "name": "quobyte",
          "optional": true,
          "type": Object {
            "fqn": "monitoringcoreoscom.AlertmanagerSpecVolumesQuobyte",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecVolumes#rbd",
            },
            "remarks": "More info: https://examples.k8s.io/volumes/rbd/README.md",
            "summary": "RBD represents a Rados Block Device mount on the host that shares a pod's lifetime.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 1384,
          },
          "name": "rbd",
          "optional": true,
          "type": Object {
            "fqn": "monitoringcoreoscom.AlertmanagerSpecVolumesRbd",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecVolumes#scaleIO",
            },
            "summary": "ScaleIO represents a ScaleIO persistent volume attached and mounted on Kubernetes nodes.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 1391,
          },
          "name": "scaleIo",
          "optional": true,
          "type": Object {
            "fqn": "monitoringcoreoscom.AlertmanagerSpecVolumesScaleIo",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecVolumes#secret",
            },
            "remarks": "More info: https://kubernetes.io/docs/concepts/storage/volumes#secret",
            "summary": "Secret represents a secret that should populate this volume.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 1398,
          },
          "name": "secret",
          "optional": true,
          "type": Object {
            "fqn": "monitoringcoreoscom.AlertmanagerSpecVolumesSecret",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecVolumes#storageos",
            },
            "summary": "StorageOS represents a StorageOS volume attached and mounted on Kubernetes nodes.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 1405,
          },
          "name": "storageos",
          "optional": true,
          "type": Object {
            "fqn": "monitoringcoreoscom.AlertmanagerSpecVolumesStorageos",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecVolumes#vsphereVolume",
            },
            "summary": "VsphereVolume represents a vSphere volume attached and mounted on kubelets host machine.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 1412,
          },
          "name": "vsphereVolume",
          "optional": true,
          "type": Object {
            "fqn": "monitoringcoreoscom.AlertmanagerSpecVolumesVsphereVolume",
          },
        },
      ],
    },
    "monitoringcoreoscom.AlertmanagerSpecVolumesAwsElasticBlockStore": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "AlertmanagerSpecVolumesAwsElasticBlockStore",
        },
        "remarks": "More info: https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore",
        "summary": "AWSElasticBlockStore represents an AWS Disk resource that is attached to a kubelet's host machine and then exposed to the pod.",
      },
      "fqn": "monitoringcoreoscom.AlertmanagerSpecVolumesAwsElasticBlockStore",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 3224,
      },
      "name": "AlertmanagerSpecVolumesAwsElasticBlockStore",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecVolumesAwsElasticBlockStore#volumeID",
            },
            "remarks": "More info: https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore",
            "summary": "Unique ID of the persistent disk resource in AWS (Amazon EBS volume).",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 3251,
          },
          "name": "volumeId",
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecVolumesAwsElasticBlockStore#fsType",
            },
            "remarks": "Tip: Ensure that the filesystem type is supported by the host operating system. Examples: \\"ext4\\", \\"xfs\\", \\"ntfs\\". Implicitly inferred to be \\"ext4\\" if unspecified. More info: https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore TODO: how do we prevent errors in the filesystem from compromising the machine",
            "summary": "Filesystem type of the volume that you want to mount.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 3230,
          },
          "name": "fsType",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecVolumesAwsElasticBlockStore#partition",
            },
            "remarks": "If omitted, the default is to mount by volume name. Examples: For volume /dev/sda1, you specify the partition as \\"1\\". Similarly, the volume partition for /dev/sda is \\"0\\" (or you can leave the property empty).",
            "summary": "The partition in the volume that you want to mount.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 3237,
          },
          "name": "partition",
          "optional": true,
          "type": Object {
            "primitive": "number",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecVolumesAwsElasticBlockStore#readOnly",
            },
            "remarks": "If omitted, the default is \\"false\\". More info: https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore",
            "summary": "Specify \\"true\\" to force and set the ReadOnly property in VolumeMounts to \\"true\\".",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 3244,
          },
          "name": "readOnly",
          "optional": true,
          "type": Object {
            "primitive": "boolean",
          },
        },
      ],
    },
    "monitoringcoreoscom.AlertmanagerSpecVolumesAzureDisk": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "AlertmanagerSpecVolumesAzureDisk",
        },
        "summary": "AzureDisk represents an Azure Data Disk mount on the host and bind mount to the pod.",
      },
      "fqn": "monitoringcoreoscom.AlertmanagerSpecVolumesAzureDisk",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 3277,
      },
      "name": "AlertmanagerSpecVolumesAzureDisk",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecVolumesAzureDisk#diskName",
            },
            "summary": "The Name of the data disk in the blob storage.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 3290,
          },
          "name": "diskName",
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecVolumesAzureDisk#diskURI",
            },
            "summary": "The URI the data disk in the blob storage.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 3297,
          },
          "name": "diskUri",
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecVolumesAzureDisk#cachingMode",
            },
            "summary": "Host Caching mode: None, Read Only, Read Write.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 3283,
          },
          "name": "cachingMode",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecVolumesAzureDisk#fsType",
            },
            "remarks": "Must be a filesystem type supported by the host operating system. Ex. \\"ext4\\", \\"xfs\\", \\"ntfs\\". Implicitly inferred to be \\"ext4\\" if unspecified.",
            "summary": "Filesystem type to mount.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 3304,
          },
          "name": "fsType",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecVolumesAzureDisk#kind",
            },
            "remarks": "defaults to shared",
            "summary": "Expected values Shared: multiple blob disks per storage account  Dedicated: single blob disk per storage account  Managed: azure managed data disk (only in managed availability set).",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 3311,
          },
          "name": "kind",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecVolumesAzureDisk#readOnly",
            },
            "default": "false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts.",
            "remarks": "ReadOnly here will force the ReadOnly setting in VolumeMounts.",
            "summary": "Defaults to false (read/write).",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 3319,
          },
          "name": "readOnly",
          "optional": true,
          "type": Object {
            "primitive": "boolean",
          },
        },
      ],
    },
    "monitoringcoreoscom.AlertmanagerSpecVolumesAzureFile": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "AlertmanagerSpecVolumesAzureFile",
        },
        "summary": "AzureFile represents an Azure File Service mount on the host and bind mount to the pod.",
      },
      "fqn": "monitoringcoreoscom.AlertmanagerSpecVolumesAzureFile",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 3347,
      },
      "name": "AlertmanagerSpecVolumesAzureFile",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecVolumesAzureFile#secretName",
            },
            "summary": "the name of secret that contains Azure Storage Account Name and Key.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 3361,
          },
          "name": "secretName",
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecVolumesAzureFile#shareName",
            },
            "summary": "Share Name.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 3368,
          },
          "name": "shareName",
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecVolumesAzureFile#readOnly",
            },
            "default": "false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts.",
            "remarks": "ReadOnly here will force the ReadOnly setting in VolumeMounts.",
            "summary": "Defaults to false (read/write).",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 3354,
          },
          "name": "readOnly",
          "optional": true,
          "type": Object {
            "primitive": "boolean",
          },
        },
      ],
    },
    "monitoringcoreoscom.AlertmanagerSpecVolumesCephfs": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "AlertmanagerSpecVolumesCephfs",
        },
        "summary": "CephFS represents a Ceph FS mount on the host that shares a pod's lifetime.",
      },
      "fqn": "monitoringcoreoscom.AlertmanagerSpecVolumesCephfs",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 3393,
      },
      "name": "AlertmanagerSpecVolumesCephfs",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecVolumesCephfs#monitors",
            },
            "summary": "Required: Monitors is a collection of Ceph monitors More info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 3399,
          },
          "name": "monitors",
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "primitive": "string",
              },
              "kind": "array",
            },
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecVolumesCephfs#path",
            },
            "summary": "Optional: Used as the mounted root, rather than the full Ceph tree, default is /.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 3406,
          },
          "name": "path",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecVolumesCephfs#readOnly",
            },
            "default": "false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts. More info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it",
            "remarks": "ReadOnly here will force the ReadOnly setting in VolumeMounts. More info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it",
            "summary": "Optional: Defaults to false (read/write).",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 3414,
          },
          "name": "readOnly",
          "optional": true,
          "type": Object {
            "primitive": "boolean",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecVolumesCephfs#secretFile",
            },
            "summary": "Optional: SecretFile is the path to key ring for User, default is /etc/ceph/user.secret More info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 3421,
          },
          "name": "secretFile",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecVolumesCephfs#secretRef",
            },
            "remarks": "More info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it",
            "summary": "Optional: SecretRef is reference to the authentication secret for User, default is empty.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 3428,
          },
          "name": "secretRef",
          "optional": true,
          "type": Object {
            "fqn": "monitoringcoreoscom.AlertmanagerSpecVolumesCephfsSecretRef",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecVolumesCephfs#user",
            },
            "summary": "Optional: User is the rados user name, default is admin More info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 3435,
          },
          "name": "user",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
      ],
    },
    "monitoringcoreoscom.AlertmanagerSpecVolumesCephfsSecretRef": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "AlertmanagerSpecVolumesCephfsSecretRef",
        },
        "remarks": "More info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it",
        "summary": "Optional: SecretRef is reference to the authentication secret for User, default is empty.",
      },
      "fqn": "monitoringcoreoscom.AlertmanagerSpecVolumesCephfsSecretRef",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 6682,
      },
      "name": "AlertmanagerSpecVolumesCephfsSecretRef",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecVolumesCephfsSecretRef#name",
            },
            "remarks": "More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?",
            "summary": "Name of the referent.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 6688,
          },
          "name": "name",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
      ],
    },
    "monitoringcoreoscom.AlertmanagerSpecVolumesCinder": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "AlertmanagerSpecVolumesCinder",
        },
        "remarks": "More info: https://examples.k8s.io/mysql-cinder-pd/README.md",
        "summary": "Cinder represents a cinder volume attached and mounted on kubelets host machine.",
      },
      "fqn": "monitoringcoreoscom.AlertmanagerSpecVolumesCinder",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 3463,
      },
      "name": "AlertmanagerSpecVolumesCinder",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecVolumesCinder#volumeID",
            },
            "remarks": "More info: https://examples.k8s.io/mysql-cinder-pd/README.md",
            "summary": "volume id used to identify the volume in cinder.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 3491,
          },
          "name": "volumeId",
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecVolumesCinder#fsType",
            },
            "remarks": "Must be a filesystem type supported by the host operating system. Examples: \\"ext4\\", \\"xfs\\", \\"ntfs\\". Implicitly inferred to be \\"ext4\\" if unspecified. More info: https://examples.k8s.io/mysql-cinder-pd/README.md",
            "summary": "Filesystem type to mount.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 3469,
          },
          "name": "fsType",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecVolumesCinder#readOnly",
            },
            "default": "false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts. More info: https://examples.k8s.io/mysql-cinder-pd/README.md",
            "remarks": "ReadOnly here will force the ReadOnly setting in VolumeMounts. More info: https://examples.k8s.io/mysql-cinder-pd/README.md",
            "summary": "Optional: Defaults to false (read/write).",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 3477,
          },
          "name": "readOnly",
          "optional": true,
          "type": Object {
            "primitive": "boolean",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecVolumesCinder#secretRef",
            },
            "summary": "Optional: points to a secret object containing parameters used to connect to OpenStack.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 3484,
          },
          "name": "secretRef",
          "optional": true,
          "type": Object {
            "fqn": "monitoringcoreoscom.AlertmanagerSpecVolumesCinderSecretRef",
          },
        },
      ],
    },
    "monitoringcoreoscom.AlertmanagerSpecVolumesCinderSecretRef": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "AlertmanagerSpecVolumesCinderSecretRef",
        },
        "summary": "Optional: points to a secret object containing parameters used to connect to OpenStack.",
      },
      "fqn": "monitoringcoreoscom.AlertmanagerSpecVolumesCinderSecretRef",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 6711,
      },
      "name": "AlertmanagerSpecVolumesCinderSecretRef",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecVolumesCinderSecretRef#name",
            },
            "remarks": "More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?",
            "summary": "Name of the referent.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 6717,
          },
          "name": "name",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
      ],
    },
    "monitoringcoreoscom.AlertmanagerSpecVolumesConfigMap": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "AlertmanagerSpecVolumesConfigMap",
        },
        "summary": "ConfigMap represents a configMap that should populate this volume.",
      },
      "fqn": "monitoringcoreoscom.AlertmanagerSpecVolumesConfigMap",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 3517,
      },
      "name": "AlertmanagerSpecVolumesConfigMap",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecVolumesConfigMap#defaultMode",
            },
            "default": "0644. Directories within the path are not affected by this setting. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.",
            "remarks": "Must be a value between 0 and 0777. Defaults to 0644. Directories within the path are not affected by this setting. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.",
            "summary": "Optional: mode bits to use on created files by default.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 3524,
          },
          "name": "defaultMode",
          "optional": true,
          "type": Object {
            "primitive": "number",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecVolumesConfigMap#items",
            },
            "remarks": "If specified, the listed keys will be projected into the specified paths, and unlisted keys will not be present. If a key is specified which is not present in the ConfigMap, the volume setup will error unless it is marked optional. Paths must be relative and may not contain the '..' path or start with '..'.",
            "summary": "If unspecified, each key-value pair in the Data field of the referenced ConfigMap will be projected into the volume as a file whose name is the key and content is the value.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 3531,
          },
          "name": "items",
          "optional": true,
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "fqn": "monitoringcoreoscom.AlertmanagerSpecVolumesConfigMapItems",
              },
              "kind": "array",
            },
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecVolumesConfigMap#name",
            },
            "remarks": "More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?",
            "summary": "Name of the referent.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 3538,
          },
          "name": "name",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecVolumesConfigMap#optional",
            },
            "summary": "Specify whether the ConfigMap or its keys must be defined.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 3545,
          },
          "name": "optional",
          "optional": true,
          "type": Object {
            "primitive": "boolean",
          },
        },
      ],
    },
    "monitoringcoreoscom.AlertmanagerSpecVolumesConfigMapItems": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "AlertmanagerSpecVolumesConfigMapItems",
        },
        "summary": "Maps a string key to a path within a volume.",
      },
      "fqn": "monitoringcoreoscom.AlertmanagerSpecVolumesConfigMapItems",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 6740,
      },
      "name": "AlertmanagerSpecVolumesConfigMapItems",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecVolumesConfigMapItems#key",
            },
            "summary": "The key to project.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 6746,
          },
          "name": "key",
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecVolumesConfigMapItems#path",
            },
            "remarks": "May not be an absolute path. May not contain the path element '..'. May not start with the string '..'.",
            "summary": "The relative path of the file to map the key to.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 6760,
          },
          "name": "path",
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecVolumesConfigMapItems#mode",
            },
            "remarks": "If not specified, the volume defaultMode will be used. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.",
            "summary": "Optional: mode bits to use on this file, must be a value between 0 and 0777.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 6753,
          },
          "name": "mode",
          "optional": true,
          "type": Object {
            "primitive": "number",
          },
        },
      ],
    },
    "monitoringcoreoscom.AlertmanagerSpecVolumesCsi": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "AlertmanagerSpecVolumesCsi",
        },
        "summary": "CSI (Container Storage Interface) represents storage that is handled by an external CSI driver (Alpha feature).",
      },
      "fqn": "monitoringcoreoscom.AlertmanagerSpecVolumesCsi",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 3571,
      },
      "name": "AlertmanagerSpecVolumesCsi",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecVolumesCsi#driver",
            },
            "remarks": "Consult with your admin for the correct name as registered in the cluster.",
            "summary": "Driver is the name of the CSI driver that handles this volume.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 3577,
          },
          "name": "driver",
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecVolumesCsi#fsType",
            },
            "remarks": "Ex. \\"ext4\\", \\"xfs\\", \\"ntfs\\". If not provided, the empty value is passed to the associated CSI driver which will determine the default filesystem to apply.",
            "summary": "Filesystem type to mount.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 3584,
          },
          "name": "fsType",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecVolumesCsi#nodePublishSecretRef",
            },
            "remarks": "This field is optional, and  may be empty if no secret is required. If the secret object contains more than one secret, all secret references are passed.",
            "summary": "NodePublishSecretRef is a reference to the secret object containing sensitive information to pass to the CSI driver to complete the CSI NodePublishVolume and NodeUnpublishVolume calls.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 3591,
          },
          "name": "nodePublishSecretRef",
          "optional": true,
          "type": Object {
            "fqn": "monitoringcoreoscom.AlertmanagerSpecVolumesCsiNodePublishSecretRef",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecVolumesCsi#readOnly",
            },
            "default": "false (read/write).",
            "remarks": "Defaults to false (read/write).",
            "summary": "Specifies a read-only configuration for the volume.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 3599,
          },
          "name": "readOnly",
          "optional": true,
          "type": Object {
            "primitive": "boolean",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecVolumesCsi#volumeAttributes",
            },
            "remarks": "Consult your driver's documentation for supported values.",
            "summary": "VolumeAttributes stores driver-specific properties that are passed to the CSI driver.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 3606,
          },
          "name": "volumeAttributes",
          "optional": true,
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "primitive": "string",
              },
              "kind": "map",
            },
          },
        },
      ],
    },
    "monitoringcoreoscom.AlertmanagerSpecVolumesCsiNodePublishSecretRef": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "AlertmanagerSpecVolumesCsiNodePublishSecretRef",
        },
        "remarks": "This field is optional, and  may be empty if no secret is required. If the secret object contains more than one secret, all secret references are passed.",
        "summary": "NodePublishSecretRef is a reference to the secret object containing sensitive information to pass to the CSI driver to complete the CSI NodePublishVolume and NodeUnpublishVolume calls.",
      },
      "fqn": "monitoringcoreoscom.AlertmanagerSpecVolumesCsiNodePublishSecretRef",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 6785,
      },
      "name": "AlertmanagerSpecVolumesCsiNodePublishSecretRef",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecVolumesCsiNodePublishSecretRef#name",
            },
            "remarks": "More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?",
            "summary": "Name of the referent.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 6791,
          },
          "name": "name",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
      ],
    },
    "monitoringcoreoscom.AlertmanagerSpecVolumesDownwardApi": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "AlertmanagerSpecVolumesDownwardApi",
        },
        "summary": "DownwardAPI represents downward API about the pod that should populate this volume.",
      },
      "fqn": "monitoringcoreoscom.AlertmanagerSpecVolumesDownwardApi",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 3633,
      },
      "name": "AlertmanagerSpecVolumesDownwardApi",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecVolumesDownwardApi#defaultMode",
            },
            "default": "0644. Directories within the path are not affected by this setting. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.",
            "remarks": "Must be a value between 0 and 0777. Defaults to 0644. Directories within the path are not affected by this setting. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.",
            "summary": "Optional: mode bits to use on created files by default.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 3640,
          },
          "name": "defaultMode",
          "optional": true,
          "type": Object {
            "primitive": "number",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecVolumesDownwardApi#items",
            },
            "summary": "Items is a list of downward API volume file.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 3647,
          },
          "name": "items",
          "optional": true,
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "fqn": "monitoringcoreoscom.AlertmanagerSpecVolumesDownwardApiItems",
              },
              "kind": "array",
            },
          },
        },
      ],
    },
    "monitoringcoreoscom.AlertmanagerSpecVolumesDownwardApiItems": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "AlertmanagerSpecVolumesDownwardApiItems",
        },
        "summary": "DownwardAPIVolumeFile represents information to create the file containing the pod field.",
      },
      "fqn": "monitoringcoreoscom.AlertmanagerSpecVolumesDownwardApiItems",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 6814,
      },
      "name": "AlertmanagerSpecVolumesDownwardApiItems",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecVolumesDownwardApiItems#path",
            },
            "remarks": "Must not be absolute or contain the '..' path. Must be utf-8 encoded. The first item of the relative path must not start with '..'",
            "summary": "Required: Path is  the relative path name of the file to be created.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 6834,
          },
          "name": "path",
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecVolumesDownwardApiItems#fieldRef",
            },
            "summary": "Required: Selects a field of the pod: only annotations, labels, name and namespace are supported.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 6820,
          },
          "name": "fieldRef",
          "optional": true,
          "type": Object {
            "fqn": "monitoringcoreoscom.AlertmanagerSpecVolumesDownwardApiItemsFieldRef",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecVolumesDownwardApiItems#mode",
            },
            "remarks": "If not specified, the volume defaultMode will be used. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.",
            "summary": "Optional: mode bits to use on this file, must be a value between 0 and 0777.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 6827,
          },
          "name": "mode",
          "optional": true,
          "type": Object {
            "primitive": "number",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecVolumesDownwardApiItems#resourceFieldRef",
            },
            "summary": "Selects a resource of the container: only resources limits and requests (limits.cpu, limits.memory, requests.cpu and requests.memory) are currently supported.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 6841,
          },
          "name": "resourceFieldRef",
          "optional": true,
          "type": Object {
            "fqn": "monitoringcoreoscom.AlertmanagerSpecVolumesDownwardApiItemsResourceFieldRef",
          },
        },
      ],
    },
    "monitoringcoreoscom.AlertmanagerSpecVolumesDownwardApiItemsFieldRef": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "AlertmanagerSpecVolumesDownwardApiItemsFieldRef",
        },
        "summary": "Required: Selects a field of the pod: only annotations, labels, name and namespace are supported.",
      },
      "fqn": "monitoringcoreoscom.AlertmanagerSpecVolumesDownwardApiItemsFieldRef",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 8817,
      },
      "name": "AlertmanagerSpecVolumesDownwardApiItemsFieldRef",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecVolumesDownwardApiItemsFieldRef#fieldPath",
            },
            "summary": "Path of the field to select in the specified API version.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 8830,
          },
          "name": "fieldPath",
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecVolumesDownwardApiItemsFieldRef#apiVersion",
            },
            "summary": "Version of the schema the FieldPath is written in terms of, defaults to \\"v1\\".",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 8823,
          },
          "name": "apiVersion",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
      ],
    },
    "monitoringcoreoscom.AlertmanagerSpecVolumesDownwardApiItemsResourceFieldRef": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "AlertmanagerSpecVolumesDownwardApiItemsResourceFieldRef",
        },
        "summary": "Selects a resource of the container: only resources limits and requests (limits.cpu, limits.memory, requests.cpu and requests.memory) are currently supported.",
      },
      "fqn": "monitoringcoreoscom.AlertmanagerSpecVolumesDownwardApiItemsResourceFieldRef",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 8854,
      },
      "name": "AlertmanagerSpecVolumesDownwardApiItemsResourceFieldRef",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecVolumesDownwardApiItemsResourceFieldRef#resource",
            },
            "summary": "Required: resource to select.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 8874,
          },
          "name": "resource",
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecVolumesDownwardApiItemsResourceFieldRef#containerName",
            },
            "summary": "Container name: required for volumes, optional for env vars.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 8860,
          },
          "name": "containerName",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecVolumesDownwardApiItemsResourceFieldRef#divisor",
            },
            "summary": "Specifies the output format of the exposed resources, defaults to \\"1\\".",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 8867,
          },
          "name": "divisor",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
      ],
    },
    "monitoringcoreoscom.AlertmanagerSpecVolumesEmptyDir": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "AlertmanagerSpecVolumesEmptyDir",
        },
        "remarks": "More info: https://kubernetes.io/docs/concepts/storage/volumes#emptydir",
        "summary": "EmptyDir represents a temporary directory that shares a pod's lifetime.",
      },
      "fqn": "monitoringcoreoscom.AlertmanagerSpecVolumesEmptyDir",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 3671,
      },
      "name": "AlertmanagerSpecVolumesEmptyDir",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecVolumesEmptyDir#medium",
            },
            "remarks": "The default is \\"\\" which means to use the node's default medium. Must be an empty string (default) or Memory. More info: https://kubernetes.io/docs/concepts/storage/volumes#emptydir",
            "summary": "What type of storage medium should back this directory.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 3677,
          },
          "name": "medium",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecVolumesEmptyDir#sizeLimit",
            },
            "remarks": "The size limit is also applicable for memory medium. The maximum usage on memory medium EmptyDir would be the minimum value between the SizeLimit specified here and the sum of memory limits of all containers in a pod. The default is nil which means that the limit is undefined. More info: http://kubernetes.io/docs/user-guide/volumes#emptydir",
            "summary": "Total amount of local storage required for this EmptyDir volume.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 3684,
          },
          "name": "sizeLimit",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
      ],
    },
    "monitoringcoreoscom.AlertmanagerSpecVolumesFc": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "AlertmanagerSpecVolumesFc",
        },
        "summary": "FC represents a Fibre Channel resource that is attached to a kubelet's host machine and then exposed to the pod.",
      },
      "fqn": "monitoringcoreoscom.AlertmanagerSpecVolumesFc",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 3708,
      },
      "name": "AlertmanagerSpecVolumesFc",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecVolumesFc#fsType",
            },
            "remarks": "Must be a filesystem type supported by the host operating system. Ex. \\"ext4\\", \\"xfs\\", \\"ntfs\\". Implicitly inferred to be \\"ext4\\" if unspecified. TODO: how do we prevent errors in the filesystem from compromising the machine",
            "summary": "Filesystem type to mount.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 3714,
          },
          "name": "fsType",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecVolumesFc#lun",
            },
            "summary": "Optional: FC target lun number.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 3721,
          },
          "name": "lun",
          "optional": true,
          "type": Object {
            "primitive": "number",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecVolumesFc#readOnly",
            },
            "default": "false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts.",
            "remarks": "ReadOnly here will force the ReadOnly setting in VolumeMounts.",
            "summary": "Optional: Defaults to false (read/write).",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 3729,
          },
          "name": "readOnly",
          "optional": true,
          "type": Object {
            "primitive": "boolean",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecVolumesFc#targetWWNs",
            },
            "summary": "Optional: FC target worldwide names (WWNs).",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 3736,
          },
          "name": "targetWwNs",
          "optional": true,
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "primitive": "string",
              },
              "kind": "array",
            },
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecVolumesFc#wwids",
            },
            "summary": "Optional: FC volume world wide identifiers (wwids) Either wwids or combination of targetWWNs and lun must be set, but not both simultaneously.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 3743,
          },
          "name": "wwids",
          "optional": true,
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "primitive": "string",
              },
              "kind": "array",
            },
          },
        },
      ],
    },
    "monitoringcoreoscom.AlertmanagerSpecVolumesFlexVolume": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "AlertmanagerSpecVolumesFlexVolume",
        },
        "summary": "FlexVolume represents a generic volume resource that is provisioned/attached using an exec based plugin.",
      },
      "fqn": "monitoringcoreoscom.AlertmanagerSpecVolumesFlexVolume",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 3770,
      },
      "name": "AlertmanagerSpecVolumesFlexVolume",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecVolumesFlexVolume#driver",
            },
            "summary": "Driver is the name of the driver to use for this volume.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 3776,
          },
          "name": "driver",
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecVolumesFlexVolume#fsType",
            },
            "remarks": "Must be a filesystem type supported by the host operating system. Ex. \\"ext4\\", \\"xfs\\", \\"ntfs\\". The default filesystem depends on FlexVolume script.",
            "summary": "Filesystem type to mount.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 3783,
          },
          "name": "fsType",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecVolumesFlexVolume#options",
            },
            "summary": "Optional: Extra command options if any.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 3790,
          },
          "name": "options",
          "optional": true,
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "primitive": "string",
              },
              "kind": "map",
            },
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecVolumesFlexVolume#readOnly",
            },
            "default": "false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts.",
            "remarks": "ReadOnly here will force the ReadOnly setting in VolumeMounts.",
            "summary": "Optional: Defaults to false (read/write).",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 3798,
          },
          "name": "readOnly",
          "optional": true,
          "type": Object {
            "primitive": "boolean",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecVolumesFlexVolume#secretRef",
            },
            "remarks": "This may be empty if no secret object is specified. If the secret object contains more than one secret, all secrets are passed to the plugin scripts.",
            "summary": "Optional: SecretRef is reference to the secret object containing sensitive information to pass to the plugin scripts.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 3805,
          },
          "name": "secretRef",
          "optional": true,
          "type": Object {
            "fqn": "monitoringcoreoscom.AlertmanagerSpecVolumesFlexVolumeSecretRef",
          },
        },
      ],
    },
    "monitoringcoreoscom.AlertmanagerSpecVolumesFlexVolumeSecretRef": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "AlertmanagerSpecVolumesFlexVolumeSecretRef",
        },
        "remarks": "This may be empty if no secret object is specified. If the secret object contains more than one secret, all secrets are passed to the plugin scripts.",
        "summary": "Optional: SecretRef is reference to the secret object containing sensitive information to pass to the plugin scripts.",
      },
      "fqn": "monitoringcoreoscom.AlertmanagerSpecVolumesFlexVolumeSecretRef",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 6867,
      },
      "name": "AlertmanagerSpecVolumesFlexVolumeSecretRef",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecVolumesFlexVolumeSecretRef#name",
            },
            "remarks": "More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?",
            "summary": "Name of the referent.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 6873,
          },
          "name": "name",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
      ],
    },
    "monitoringcoreoscom.AlertmanagerSpecVolumesFlocker": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "AlertmanagerSpecVolumesFlocker",
        },
        "remarks": "This depends on the Flocker control service being running",
        "summary": "Flocker represents a Flocker volume attached to a kubelet's host machine.",
      },
      "fqn": "monitoringcoreoscom.AlertmanagerSpecVolumesFlocker",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 3832,
      },
      "name": "AlertmanagerSpecVolumesFlocker",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecVolumesFlocker#datasetName",
            },
            "summary": "Name of the dataset stored as metadata -> name on the dataset for Flocker should be considered as deprecated.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 3838,
          },
          "name": "datasetName",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecVolumesFlocker#datasetUUID",
            },
            "remarks": "This is unique identifier of a Flocker dataset",
            "summary": "UUID of the dataset.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 3845,
          },
          "name": "datasetUuid",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
      ],
    },
    "monitoringcoreoscom.AlertmanagerSpecVolumesGcePersistentDisk": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "AlertmanagerSpecVolumesGcePersistentDisk",
        },
        "remarks": "More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk",
        "summary": "GCEPersistentDisk represents a GCE Disk resource that is attached to a kubelet's host machine and then exposed to the pod.",
      },
      "fqn": "monitoringcoreoscom.AlertmanagerSpecVolumesGcePersistentDisk",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 3869,
      },
      "name": "AlertmanagerSpecVolumesGcePersistentDisk",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecVolumesGcePersistentDisk#pdName",
            },
            "remarks": "Used to identify the disk in GCE. More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk",
            "summary": "Unique name of the PD resource in GCE.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 3889,
          },
          "name": "pdName",
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecVolumesGcePersistentDisk#fsType",
            },
            "remarks": "Tip: Ensure that the filesystem type is supported by the host operating system. Examples: \\"ext4\\", \\"xfs\\", \\"ntfs\\". Implicitly inferred to be \\"ext4\\" if unspecified. More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk TODO: how do we prevent errors in the filesystem from compromising the machine",
            "summary": "Filesystem type of the volume that you want to mount.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 3875,
          },
          "name": "fsType",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecVolumesGcePersistentDisk#partition",
            },
            "remarks": "If omitted, the default is to mount by volume name. Examples: For volume /dev/sda1, you specify the partition as \\"1\\". Similarly, the volume partition for /dev/sda is \\"0\\" (or you can leave the property empty). More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk",
            "summary": "The partition in the volume that you want to mount.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 3882,
          },
          "name": "partition",
          "optional": true,
          "type": Object {
            "primitive": "number",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecVolumesGcePersistentDisk#readOnly",
            },
            "default": "false. More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk",
            "remarks": "Defaults to false. More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk",
            "summary": "ReadOnly here will force the ReadOnly setting in VolumeMounts.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 3897,
          },
          "name": "readOnly",
          "optional": true,
          "type": Object {
            "primitive": "boolean",
          },
        },
      ],
    },
    "monitoringcoreoscom.AlertmanagerSpecVolumesGitRepo": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "AlertmanagerSpecVolumesGitRepo",
        },
        "remarks": "DEPRECATED: GitRepo is deprecated. To provision a container with a git repo, mount an EmptyDir into an InitContainer that clones the repo using git, then mount the EmptyDir into the Pod's container.",
        "summary": "GitRepo represents a git repository at a particular revision.",
      },
      "fqn": "monitoringcoreoscom.AlertmanagerSpecVolumesGitRepo",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 3923,
      },
      "name": "AlertmanagerSpecVolumesGitRepo",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecVolumesGitRepo#repository",
            },
            "summary": "Repository URL.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 3936,
          },
          "name": "repository",
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecVolumesGitRepo#directory",
            },
            "remarks": "Must not contain or start with '..'.  If '.' is supplied, the volume directory will be the git repository.  Otherwise, if specified, the volume will contain the git repository in the subdirectory with the given name.",
            "summary": "Target directory name.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 3929,
          },
          "name": "directory",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecVolumesGitRepo#revision",
            },
            "summary": "Commit hash for the specified revision.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 3943,
          },
          "name": "revision",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
      ],
    },
    "monitoringcoreoscom.AlertmanagerSpecVolumesGlusterfs": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "AlertmanagerSpecVolumesGlusterfs",
        },
        "remarks": "More info: https://examples.k8s.io/volumes/glusterfs/README.md",
        "summary": "Glusterfs represents a Glusterfs mount on the host that shares a pod's lifetime.",
      },
      "fqn": "monitoringcoreoscom.AlertmanagerSpecVolumesGlusterfs",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 3968,
      },
      "name": "AlertmanagerSpecVolumesGlusterfs",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecVolumesGlusterfs#endpoints",
            },
            "remarks": "More info: https://examples.k8s.io/volumes/glusterfs/README.md#create-a-pod",
            "summary": "EndpointsName is the endpoint name that details Glusterfs topology.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 3974,
          },
          "name": "endpoints",
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecVolumesGlusterfs#path",
            },
            "remarks": "More info: https://examples.k8s.io/volumes/glusterfs/README.md#create-a-pod",
            "summary": "Path is the Glusterfs volume path.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 3981,
          },
          "name": "path",
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecVolumesGlusterfs#readOnly",
            },
            "default": "false. More info: https://examples.k8s.io/volumes/glusterfs/README.md#create-a-pod",
            "remarks": "Defaults to false. More info: https://examples.k8s.io/volumes/glusterfs/README.md#create-a-pod",
            "summary": "ReadOnly here will force the Glusterfs volume to be mounted with read-only permissions.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 3989,
          },
          "name": "readOnly",
          "optional": true,
          "type": Object {
            "primitive": "boolean",
          },
        },
      ],
    },
    "monitoringcoreoscom.AlertmanagerSpecVolumesHostPath": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "AlertmanagerSpecVolumesHostPath",
        },
        "remarks": "This is generally used for system agents or other privileged things that are allowed to see the host machine. Most containers will NOT need this. More info: https://kubernetes.io/docs/concepts/storage/volumes#hostpath --- TODO(jonesdl) We need to restrict who can use host directory mounts and who can/can not mount host directories as read/write.",
        "summary": "HostPath represents a pre-existing file or directory on the host machine that is directly exposed to the container.",
      },
      "fqn": "monitoringcoreoscom.AlertmanagerSpecVolumesHostPath",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 4014,
      },
      "name": "AlertmanagerSpecVolumesHostPath",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecVolumesHostPath#path",
            },
            "remarks": "If the path is a symlink, it will follow the link to the real path. More info: https://kubernetes.io/docs/concepts/storage/volumes#hostpath",
            "summary": "Path of the directory on the host.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 4020,
          },
          "name": "path",
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecVolumesHostPath#type",
            },
            "default": "More info: https://kubernetes.io/docs/concepts/storage/volumes#hostpath",
            "summary": "Type for HostPath Volume Defaults to \\"\\" More info: https://kubernetes.io/docs/concepts/storage/volumes#hostpath.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 4028,
          },
          "name": "type",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
      ],
    },
    "monitoringcoreoscom.AlertmanagerSpecVolumesIscsi": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "AlertmanagerSpecVolumesIscsi",
        },
        "remarks": "More info: https://examples.k8s.io/volumes/iscsi/README.md",
        "summary": "ISCSI represents an ISCSI Disk resource that is attached to a kubelet's host machine and then exposed to the pod.",
      },
      "fqn": "monitoringcoreoscom.AlertmanagerSpecVolumesIscsi",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 4052,
      },
      "name": "AlertmanagerSpecVolumesIscsi",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecVolumesIscsi#iqn",
            },
            "summary": "Target iSCSI Qualified Name.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 4086,
          },
          "name": "iqn",
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecVolumesIscsi#lun",
            },
            "summary": "iSCSI Target Lun number.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 4101,
          },
          "name": "lun",
          "type": Object {
            "primitive": "number",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecVolumesIscsi#targetPortal",
            },
            "remarks": "The Portal is either an IP or ip_addr:port if the port is other than default (typically TCP ports 860 and 3260).",
            "summary": "iSCSI Target Portal.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 4130,
          },
          "name": "targetPortal",
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecVolumesIscsi#chapAuthDiscovery",
            },
            "summary": "whether support iSCSI Discovery CHAP authentication.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 4058,
          },
          "name": "chapAuthDiscovery",
          "optional": true,
          "type": Object {
            "primitive": "boolean",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecVolumesIscsi#chapAuthSession",
            },
            "summary": "whether support iSCSI Session CHAP authentication.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 4065,
          },
          "name": "chapAuthSession",
          "optional": true,
          "type": Object {
            "primitive": "boolean",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecVolumesIscsi#fsType",
            },
            "remarks": "Tip: Ensure that the filesystem type is supported by the host operating system. Examples: \\"ext4\\", \\"xfs\\", \\"ntfs\\". Implicitly inferred to be \\"ext4\\" if unspecified. More info: https://kubernetes.io/docs/concepts/storage/volumes#iscsi TODO: how do we prevent errors in the filesystem from compromising the machine",
            "summary": "Filesystem type of the volume that you want to mount.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 4072,
          },
          "name": "fsType",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecVolumesIscsi#initiatorName",
            },
            "remarks": "If initiatorName is specified with iscsiInterface simultaneously, new iSCSI interface <target portal>:<volume name> will be created for the connection.",
            "summary": "Custom iSCSI Initiator Name.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 4079,
          },
          "name": "initiatorName",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecVolumesIscsi#iscsiInterface",
            },
            "default": "default' (tcp).",
            "remarks": "Defaults to 'default' (tcp).",
            "summary": "iSCSI Interface Name that uses an iSCSI transport.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 4094,
          },
          "name": "iscsiInterface",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecVolumesIscsi#portals",
            },
            "remarks": "The portal is either an IP or ip_addr:port if the port is other than default (typically TCP ports 860 and 3260).",
            "summary": "iSCSI Target Portal List.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 4108,
          },
          "name": "portals",
          "optional": true,
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "primitive": "string",
              },
              "kind": "array",
            },
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecVolumesIscsi#readOnly",
            },
            "default": "false.",
            "remarks": "Defaults to false.",
            "summary": "ReadOnly here will force the ReadOnly setting in VolumeMounts.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 4116,
          },
          "name": "readOnly",
          "optional": true,
          "type": Object {
            "primitive": "boolean",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecVolumesIscsi#secretRef",
            },
            "summary": "CHAP Secret for iSCSI target and initiator authentication.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 4123,
          },
          "name": "secretRef",
          "optional": true,
          "type": Object {
            "fqn": "monitoringcoreoscom.AlertmanagerSpecVolumesIscsiSecretRef",
          },
        },
      ],
    },
    "monitoringcoreoscom.AlertmanagerSpecVolumesIscsiSecretRef": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "AlertmanagerSpecVolumesIscsiSecretRef",
        },
        "summary": "CHAP Secret for iSCSI target and initiator authentication.",
      },
      "fqn": "monitoringcoreoscom.AlertmanagerSpecVolumesIscsiSecretRef",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 6896,
      },
      "name": "AlertmanagerSpecVolumesIscsiSecretRef",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecVolumesIscsiSecretRef#name",
            },
            "remarks": "More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?",
            "summary": "Name of the referent.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 6902,
          },
          "name": "name",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
      ],
    },
    "monitoringcoreoscom.AlertmanagerSpecVolumesNfs": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "AlertmanagerSpecVolumesNfs",
        },
        "summary": "NFS represents an NFS mount on the host that shares a pod's lifetime More info: https://kubernetes.io/docs/concepts/storage/volumes#nfs.",
      },
      "fqn": "monitoringcoreoscom.AlertmanagerSpecVolumesNfs",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 4163,
      },
      "name": "AlertmanagerSpecVolumesNfs",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecVolumesNfs#path",
            },
            "remarks": "More info: https://kubernetes.io/docs/concepts/storage/volumes#nfs",
            "summary": "Path that is exported by the NFS server.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 4169,
          },
          "name": "path",
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecVolumesNfs#server",
            },
            "remarks": "More info: https://kubernetes.io/docs/concepts/storage/volumes#nfs",
            "summary": "Server is the hostname or IP address of the NFS server.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 4184,
          },
          "name": "server",
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecVolumesNfs#readOnly",
            },
            "default": "false. More info: https://kubernetes.io/docs/concepts/storage/volumes#nfs",
            "remarks": "Defaults to false. More info: https://kubernetes.io/docs/concepts/storage/volumes#nfs",
            "summary": "ReadOnly here will force the NFS export to be mounted with read-only permissions.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 4177,
          },
          "name": "readOnly",
          "optional": true,
          "type": Object {
            "primitive": "boolean",
          },
        },
      ],
    },
    "monitoringcoreoscom.AlertmanagerSpecVolumesPersistentVolumeClaim": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "AlertmanagerSpecVolumesPersistentVolumeClaim",
        },
        "remarks": "More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims",
        "summary": "PersistentVolumeClaimVolumeSource represents a reference to a PersistentVolumeClaim in the same namespace.",
      },
      "fqn": "monitoringcoreoscom.AlertmanagerSpecVolumesPersistentVolumeClaim",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 4209,
      },
      "name": "AlertmanagerSpecVolumesPersistentVolumeClaim",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecVolumesPersistentVolumeClaim#claimName",
            },
            "remarks": "More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims",
            "summary": "ClaimName is the name of a PersistentVolumeClaim in the same namespace as the pod using this volume.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 4215,
          },
          "name": "claimName",
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecVolumesPersistentVolumeClaim#readOnly",
            },
            "remarks": "Default false.",
            "summary": "Will force the ReadOnly setting in VolumeMounts.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 4222,
          },
          "name": "readOnly",
          "optional": true,
          "type": Object {
            "primitive": "boolean",
          },
        },
      ],
    },
    "monitoringcoreoscom.AlertmanagerSpecVolumesPhotonPersistentDisk": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "AlertmanagerSpecVolumesPhotonPersistentDisk",
        },
        "summary": "PhotonPersistentDisk represents a PhotonController persistent disk attached and mounted on kubelets host machine.",
      },
      "fqn": "monitoringcoreoscom.AlertmanagerSpecVolumesPhotonPersistentDisk",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 4246,
      },
      "name": "AlertmanagerSpecVolumesPhotonPersistentDisk",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecVolumesPhotonPersistentDisk#pdID",
            },
            "summary": "ID that identifies Photon Controller persistent disk.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 4259,
          },
          "name": "pdId",
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecVolumesPhotonPersistentDisk#fsType",
            },
            "remarks": "Must be a filesystem type supported by the host operating system. Ex. \\"ext4\\", \\"xfs\\", \\"ntfs\\". Implicitly inferred to be \\"ext4\\" if unspecified.",
            "summary": "Filesystem type to mount.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 4252,
          },
          "name": "fsType",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
      ],
    },
    "monitoringcoreoscom.AlertmanagerSpecVolumesPortworxVolume": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "AlertmanagerSpecVolumesPortworxVolume",
        },
        "summary": "PortworxVolume represents a portworx volume attached and mounted on kubelets host machine.",
      },
      "fqn": "monitoringcoreoscom.AlertmanagerSpecVolumesPortworxVolume",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 4283,
      },
      "name": "AlertmanagerSpecVolumesPortworxVolume",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecVolumesPortworxVolume#volumeID",
            },
            "summary": "VolumeID uniquely identifies a Portworx volume.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 4304,
          },
          "name": "volumeId",
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecVolumesPortworxVolume#fsType",
            },
            "remarks": "Ex. \\"ext4\\", \\"xfs\\". Implicitly inferred to be \\"ext4\\" if unspecified.",
            "summary": "FSType represents the filesystem type to mount Must be a filesystem type supported by the host operating system.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 4289,
          },
          "name": "fsType",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecVolumesPortworxVolume#readOnly",
            },
            "default": "false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts.",
            "remarks": "ReadOnly here will force the ReadOnly setting in VolumeMounts.",
            "summary": "Defaults to false (read/write).",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 4297,
          },
          "name": "readOnly",
          "optional": true,
          "type": Object {
            "primitive": "boolean",
          },
        },
      ],
    },
    "monitoringcoreoscom.AlertmanagerSpecVolumesProjected": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "AlertmanagerSpecVolumesProjected",
        },
        "summary": "Items for all in one resources secrets, configmaps, and downward API.",
      },
      "fqn": "monitoringcoreoscom.AlertmanagerSpecVolumesProjected",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 4329,
      },
      "name": "AlertmanagerSpecVolumesProjected",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecVolumesProjected#sources",
            },
            "summary": "list of volume projections.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 4342,
          },
          "name": "sources",
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "fqn": "monitoringcoreoscom.AlertmanagerSpecVolumesProjectedSources",
              },
              "kind": "array",
            },
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecVolumesProjected#defaultMode",
            },
            "remarks": "Must be a value between 0 and 0777. Directories within the path are not affected by this setting. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.",
            "summary": "Mode bits to use on created files by default.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 4335,
          },
          "name": "defaultMode",
          "optional": true,
          "type": Object {
            "primitive": "number",
          },
        },
      ],
    },
    "monitoringcoreoscom.AlertmanagerSpecVolumesProjectedSources": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "AlertmanagerSpecVolumesProjectedSources",
        },
        "summary": "Projection that may be projected along with other supported volume types.",
      },
      "fqn": "monitoringcoreoscom.AlertmanagerSpecVolumesProjectedSources",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 6925,
      },
      "name": "AlertmanagerSpecVolumesProjectedSources",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecVolumesProjectedSources#configMap",
            },
            "summary": "information about the configMap data to project.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 6931,
          },
          "name": "configMap",
          "optional": true,
          "type": Object {
            "fqn": "monitoringcoreoscom.AlertmanagerSpecVolumesProjectedSourcesConfigMap",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecVolumesProjectedSources#downwardAPI",
            },
            "summary": "information about the downwardAPI data to project.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 6938,
          },
          "name": "downwardApi",
          "optional": true,
          "type": Object {
            "fqn": "monitoringcoreoscom.AlertmanagerSpecVolumesProjectedSourcesDownwardApi",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecVolumesProjectedSources#secret",
            },
            "summary": "information about the secret data to project.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 6945,
          },
          "name": "secret",
          "optional": true,
          "type": Object {
            "fqn": "monitoringcoreoscom.AlertmanagerSpecVolumesProjectedSourcesSecret",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecVolumesProjectedSources#serviceAccountToken",
            },
            "summary": "information about the serviceAccountToken data to project.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 6952,
          },
          "name": "serviceAccountToken",
          "optional": true,
          "type": Object {
            "fqn": "monitoringcoreoscom.AlertmanagerSpecVolumesProjectedSourcesServiceAccountToken",
          },
        },
      ],
    },
    "monitoringcoreoscom.AlertmanagerSpecVolumesProjectedSourcesConfigMap": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "AlertmanagerSpecVolumesProjectedSourcesConfigMap",
        },
        "summary": "information about the configMap data to project.",
      },
      "fqn": "monitoringcoreoscom.AlertmanagerSpecVolumesProjectedSourcesConfigMap",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 8899,
      },
      "name": "AlertmanagerSpecVolumesProjectedSourcesConfigMap",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecVolumesProjectedSourcesConfigMap#items",
            },
            "remarks": "If specified, the listed keys will be projected into the specified paths, and unlisted keys will not be present. If a key is specified which is not present in the ConfigMap, the volume setup will error unless it is marked optional. Paths must be relative and may not contain the '..' path or start with '..'.",
            "summary": "If unspecified, each key-value pair in the Data field of the referenced ConfigMap will be projected into the volume as a file whose name is the key and content is the value.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 8905,
          },
          "name": "items",
          "optional": true,
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "fqn": "monitoringcoreoscom.AlertmanagerSpecVolumesProjectedSourcesConfigMapItems",
              },
              "kind": "array",
            },
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecVolumesProjectedSourcesConfigMap#name",
            },
            "remarks": "More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?",
            "summary": "Name of the referent.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 8912,
          },
          "name": "name",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecVolumesProjectedSourcesConfigMap#optional",
            },
            "summary": "Specify whether the ConfigMap or its keys must be defined.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 8919,
          },
          "name": "optional",
          "optional": true,
          "type": Object {
            "primitive": "boolean",
          },
        },
      ],
    },
    "monitoringcoreoscom.AlertmanagerSpecVolumesProjectedSourcesConfigMapItems": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "AlertmanagerSpecVolumesProjectedSourcesConfigMapItems",
        },
        "summary": "Maps a string key to a path within a volume.",
      },
      "fqn": "monitoringcoreoscom.AlertmanagerSpecVolumesProjectedSourcesConfigMapItems",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 9737,
      },
      "name": "AlertmanagerSpecVolumesProjectedSourcesConfigMapItems",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecVolumesProjectedSourcesConfigMapItems#key",
            },
            "summary": "The key to project.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 9743,
          },
          "name": "key",
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecVolumesProjectedSourcesConfigMapItems#path",
            },
            "remarks": "May not be an absolute path. May not contain the path element '..'. May not start with the string '..'.",
            "summary": "The relative path of the file to map the key to.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 9757,
          },
          "name": "path",
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecVolumesProjectedSourcesConfigMapItems#mode",
            },
            "remarks": "If not specified, the volume defaultMode will be used. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.",
            "summary": "Optional: mode bits to use on this file, must be a value between 0 and 0777.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 9750,
          },
          "name": "mode",
          "optional": true,
          "type": Object {
            "primitive": "number",
          },
        },
      ],
    },
    "monitoringcoreoscom.AlertmanagerSpecVolumesProjectedSourcesDownwardApi": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "AlertmanagerSpecVolumesProjectedSourcesDownwardApi",
        },
        "summary": "information about the downwardAPI data to project.",
      },
      "fqn": "monitoringcoreoscom.AlertmanagerSpecVolumesProjectedSourcesDownwardApi",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 8944,
      },
      "name": "AlertmanagerSpecVolumesProjectedSourcesDownwardApi",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecVolumesProjectedSourcesDownwardApi#items",
            },
            "summary": "Items is a list of DownwardAPIVolume file.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 8950,
          },
          "name": "items",
          "optional": true,
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "fqn": "monitoringcoreoscom.AlertmanagerSpecVolumesProjectedSourcesDownwardApiItems",
              },
              "kind": "array",
            },
          },
        },
      ],
    },
    "monitoringcoreoscom.AlertmanagerSpecVolumesProjectedSourcesDownwardApiItems": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "AlertmanagerSpecVolumesProjectedSourcesDownwardApiItems",
        },
        "summary": "DownwardAPIVolumeFile represents information to create the file containing the pod field.",
      },
      "fqn": "monitoringcoreoscom.AlertmanagerSpecVolumesProjectedSourcesDownwardApiItems",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 9782,
      },
      "name": "AlertmanagerSpecVolumesProjectedSourcesDownwardApiItems",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecVolumesProjectedSourcesDownwardApiItems#path",
            },
            "remarks": "Must not be absolute or contain the '..' path. Must be utf-8 encoded. The first item of the relative path must not start with '..'",
            "summary": "Required: Path is  the relative path name of the file to be created.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 9802,
          },
          "name": "path",
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecVolumesProjectedSourcesDownwardApiItems#fieldRef",
            },
            "summary": "Required: Selects a field of the pod: only annotations, labels, name and namespace are supported.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 9788,
          },
          "name": "fieldRef",
          "optional": true,
          "type": Object {
            "fqn": "monitoringcoreoscom.AlertmanagerSpecVolumesProjectedSourcesDownwardApiItemsFieldRef",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecVolumesProjectedSourcesDownwardApiItems#mode",
            },
            "remarks": "If not specified, the volume defaultMode will be used. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.",
            "summary": "Optional: mode bits to use on this file, must be a value between 0 and 0777.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 9795,
          },
          "name": "mode",
          "optional": true,
          "type": Object {
            "primitive": "number",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecVolumesProjectedSourcesDownwardApiItems#resourceFieldRef",
            },
            "summary": "Selects a resource of the container: only resources limits and requests (limits.cpu, limits.memory, requests.cpu and requests.memory) are currently supported.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 9809,
          },
          "name": "resourceFieldRef",
          "optional": true,
          "type": Object {
            "fqn": "monitoringcoreoscom.AlertmanagerSpecVolumesProjectedSourcesDownwardApiItemsResourceFieldRef",
          },
        },
      ],
    },
    "monitoringcoreoscom.AlertmanagerSpecVolumesProjectedSourcesDownwardApiItemsFieldRef": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "AlertmanagerSpecVolumesProjectedSourcesDownwardApiItemsFieldRef",
        },
        "summary": "Required: Selects a field of the pod: only annotations, labels, name and namespace are supported.",
      },
      "fqn": "monitoringcoreoscom.AlertmanagerSpecVolumesProjectedSourcesDownwardApiItemsFieldRef",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 9970,
      },
      "name": "AlertmanagerSpecVolumesProjectedSourcesDownwardApiItemsFieldRef",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecVolumesProjectedSourcesDownwardApiItemsFieldRef#fieldPath",
            },
            "summary": "Path of the field to select in the specified API version.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 9983,
          },
          "name": "fieldPath",
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecVolumesProjectedSourcesDownwardApiItemsFieldRef#apiVersion",
            },
            "summary": "Version of the schema the FieldPath is written in terms of, defaults to \\"v1\\".",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 9976,
          },
          "name": "apiVersion",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
      ],
    },
    "monitoringcoreoscom.AlertmanagerSpecVolumesProjectedSourcesDownwardApiItemsResourceFieldRef": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "AlertmanagerSpecVolumesProjectedSourcesDownwardApiItemsResourceFieldRef",
        },
        "summary": "Selects a resource of the container: only resources limits and requests (limits.cpu, limits.memory, requests.cpu and requests.memory) are currently supported.",
      },
      "fqn": "monitoringcoreoscom.AlertmanagerSpecVolumesProjectedSourcesDownwardApiItemsResourceFieldRef",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 10007,
      },
      "name": "AlertmanagerSpecVolumesProjectedSourcesDownwardApiItemsResourceFieldRef",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecVolumesProjectedSourcesDownwardApiItemsResourceFieldRef#resource",
            },
            "summary": "Required: resource to select.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 10027,
          },
          "name": "resource",
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecVolumesProjectedSourcesDownwardApiItemsResourceFieldRef#containerName",
            },
            "summary": "Container name: required for volumes, optional for env vars.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 10013,
          },
          "name": "containerName",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecVolumesProjectedSourcesDownwardApiItemsResourceFieldRef#divisor",
            },
            "summary": "Specifies the output format of the exposed resources, defaults to \\"1\\".",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 10020,
          },
          "name": "divisor",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
      ],
    },
    "monitoringcoreoscom.AlertmanagerSpecVolumesProjectedSourcesSecret": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "AlertmanagerSpecVolumesProjectedSourcesSecret",
        },
        "summary": "information about the secret data to project.",
      },
      "fqn": "monitoringcoreoscom.AlertmanagerSpecVolumesProjectedSourcesSecret",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 8973,
      },
      "name": "AlertmanagerSpecVolumesProjectedSourcesSecret",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecVolumesProjectedSourcesSecret#items",
            },
            "remarks": "If specified, the listed keys will be projected into the specified paths, and unlisted keys will not be present. If a key is specified which is not present in the Secret, the volume setup will error unless it is marked optional. Paths must be relative and may not contain the '..' path or start with '..'.",
            "summary": "If unspecified, each key-value pair in the Data field of the referenced Secret will be projected into the volume as a file whose name is the key and content is the value.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 8979,
          },
          "name": "items",
          "optional": true,
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "fqn": "monitoringcoreoscom.AlertmanagerSpecVolumesProjectedSourcesSecretItems",
              },
              "kind": "array",
            },
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecVolumesProjectedSourcesSecret#name",
            },
            "remarks": "More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?",
            "summary": "Name of the referent.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 8986,
          },
          "name": "name",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecVolumesProjectedSourcesSecret#optional",
            },
            "summary": "Specify whether the Secret or its key must be defined.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 8993,
          },
          "name": "optional",
          "optional": true,
          "type": Object {
            "primitive": "boolean",
          },
        },
      ],
    },
    "monitoringcoreoscom.AlertmanagerSpecVolumesProjectedSourcesSecretItems": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "AlertmanagerSpecVolumesProjectedSourcesSecretItems",
        },
        "summary": "Maps a string key to a path within a volume.",
      },
      "fqn": "monitoringcoreoscom.AlertmanagerSpecVolumesProjectedSourcesSecretItems",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 9835,
      },
      "name": "AlertmanagerSpecVolumesProjectedSourcesSecretItems",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecVolumesProjectedSourcesSecretItems#key",
            },
            "summary": "The key to project.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 9841,
          },
          "name": "key",
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecVolumesProjectedSourcesSecretItems#path",
            },
            "remarks": "May not be an absolute path. May not contain the path element '..'. May not start with the string '..'.",
            "summary": "The relative path of the file to map the key to.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 9855,
          },
          "name": "path",
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecVolumesProjectedSourcesSecretItems#mode",
            },
            "remarks": "If not specified, the volume defaultMode will be used. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.",
            "summary": "Optional: mode bits to use on this file, must be a value between 0 and 0777.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 9848,
          },
          "name": "mode",
          "optional": true,
          "type": Object {
            "primitive": "number",
          },
        },
      ],
    },
    "monitoringcoreoscom.AlertmanagerSpecVolumesProjectedSourcesServiceAccountToken": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "AlertmanagerSpecVolumesProjectedSourcesServiceAccountToken",
        },
        "summary": "information about the serviceAccountToken data to project.",
      },
      "fqn": "monitoringcoreoscom.AlertmanagerSpecVolumesProjectedSourcesServiceAccountToken",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 9018,
      },
      "name": "AlertmanagerSpecVolumesProjectedSourcesServiceAccountToken",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecVolumesProjectedSourcesServiceAccountToken#path",
            },
            "summary": "Path is the path relative to the mount point of the file to project the token into.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 9039,
          },
          "name": "path",
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecVolumesProjectedSourcesServiceAccountToken#audience",
            },
            "remarks": "A recipient of a token must identify itself with an identifier specified in the audience of the token, and otherwise should reject the token. The audience defaults to the identifier of the apiserver.",
            "summary": "Audience is the intended audience of the token.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 9024,
          },
          "name": "audience",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecVolumesProjectedSourcesServiceAccountToken#expirationSeconds",
            },
            "default": "1 hour and must be at least 10 minutes.",
            "remarks": "As the token approaches expiration, the kubelet volume plugin will proactively rotate the service account token. The kubelet will start trying to rotate the token if the token is older than 80 percent of its time to live or if the token is older than 24 hours.Defaults to 1 hour and must be at least 10 minutes.",
            "summary": "ExpirationSeconds is the requested duration of validity of the service account token.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 9032,
          },
          "name": "expirationSeconds",
          "optional": true,
          "type": Object {
            "primitive": "number",
          },
        },
      ],
    },
    "monitoringcoreoscom.AlertmanagerSpecVolumesQuobyte": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "AlertmanagerSpecVolumesQuobyte",
        },
        "summary": "Quobyte represents a Quobyte mount on the host that shares a pod's lifetime.",
      },
      "fqn": "monitoringcoreoscom.AlertmanagerSpecVolumesQuobyte",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 4366,
      },
      "name": "AlertmanagerSpecVolumesQuobyte",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecVolumesQuobyte#registry",
            },
            "summary": "Registry represents a single or multiple Quobyte Registry services specified as a string as host:port pair (multiple entries are separated with commas) which acts as the central registry for volumes.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 4388,
          },
          "name": "registry",
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecVolumesQuobyte#volume",
            },
            "summary": "Volume is a string that references an already created Quobyte volume by name.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 4410,
          },
          "name": "volume",
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecVolumesQuobyte#group",
            },
            "default": "no group",
            "summary": "Group to map volume access to Default is no group.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 4373,
          },
          "name": "group",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecVolumesQuobyte#readOnly",
            },
            "default": "false.",
            "remarks": "Defaults to false.",
            "summary": "ReadOnly here will force the Quobyte volume to be mounted with read-only permissions.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 4381,
          },
          "name": "readOnly",
          "optional": true,
          "type": Object {
            "primitive": "boolean",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecVolumesQuobyte#tenant",
            },
            "summary": "Tenant owning the given Quobyte volume in the Backend Used with dynamically provisioned Quobyte volumes, value is set by the plugin.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 4395,
          },
          "name": "tenant",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecVolumesQuobyte#user",
            },
            "default": "serivceaccount user",
            "summary": "User to map volume access to Defaults to serivceaccount user.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 4403,
          },
          "name": "user",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
      ],
    },
    "monitoringcoreoscom.AlertmanagerSpecVolumesRbd": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "AlertmanagerSpecVolumesRbd",
        },
        "remarks": "More info: https://examples.k8s.io/volumes/rbd/README.md",
        "summary": "RBD represents a Rados Block Device mount on the host that shares a pod's lifetime.",
      },
      "fqn": "monitoringcoreoscom.AlertmanagerSpecVolumesRbd",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 4438,
      },
      "name": "AlertmanagerSpecVolumesRbd",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecVolumesRbd#image",
            },
            "remarks": "More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it",
            "summary": "The rados image name.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 4451,
          },
          "name": "image",
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecVolumesRbd#monitors",
            },
            "remarks": "More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it",
            "summary": "A collection of Ceph monitors.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 4466,
          },
          "name": "monitors",
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "primitive": "string",
              },
              "kind": "array",
            },
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecVolumesRbd#fsType",
            },
            "remarks": "Tip: Ensure that the filesystem type is supported by the host operating system. Examples: \\"ext4\\", \\"xfs\\", \\"ntfs\\". Implicitly inferred to be \\"ext4\\" if unspecified. More info: https://kubernetes.io/docs/concepts/storage/volumes#rbd TODO: how do we prevent errors in the filesystem from compromising the machine",
            "summary": "Filesystem type of the volume that you want to mount.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 4444,
          },
          "name": "fsType",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecVolumesRbd#keyring",
            },
            "default": "etc/ceph/keyring. More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it",
            "remarks": "Default is /etc/ceph/keyring. More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it",
            "summary": "Keyring is the path to key ring for RBDUser.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 4459,
          },
          "name": "keyring",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecVolumesRbd#pool",
            },
            "default": "rbd. More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it",
            "remarks": "Default is rbd. More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it",
            "summary": "The rados pool name.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 4474,
          },
          "name": "pool",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecVolumesRbd#readOnly",
            },
            "default": "false. More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it",
            "remarks": "Defaults to false. More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it",
            "summary": "ReadOnly here will force the ReadOnly setting in VolumeMounts.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 4482,
          },
          "name": "readOnly",
          "optional": true,
          "type": Object {
            "primitive": "boolean",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecVolumesRbd#secretRef",
            },
            "default": "nil. More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it",
            "remarks": "If provided overrides keyring. Default is nil. More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it",
            "summary": "SecretRef is name of the authentication secret for RBDUser.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 4490,
          },
          "name": "secretRef",
          "optional": true,
          "type": Object {
            "fqn": "monitoringcoreoscom.AlertmanagerSpecVolumesRbdSecretRef",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecVolumesRbd#user",
            },
            "default": "admin. More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it",
            "remarks": "Default is admin. More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it",
            "summary": "The rados user name.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 4498,
          },
          "name": "user",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
      ],
    },
    "monitoringcoreoscom.AlertmanagerSpecVolumesRbdSecretRef": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "AlertmanagerSpecVolumesRbdSecretRef",
        },
        "default": "nil. More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it",
        "remarks": "If provided overrides keyring. Default is nil. More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it",
        "summary": "SecretRef is name of the authentication secret for RBDUser.",
      },
      "fqn": "monitoringcoreoscom.AlertmanagerSpecVolumesRbdSecretRef",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 6979,
      },
      "name": "AlertmanagerSpecVolumesRbdSecretRef",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecVolumesRbdSecretRef#name",
            },
            "remarks": "More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?",
            "summary": "Name of the referent.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 6985,
          },
          "name": "name",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
      ],
    },
    "monitoringcoreoscom.AlertmanagerSpecVolumesScaleIo": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "AlertmanagerSpecVolumesScaleIo",
        },
        "summary": "ScaleIO represents a ScaleIO persistent volume attached and mounted on Kubernetes nodes.",
      },
      "fqn": "monitoringcoreoscom.AlertmanagerSpecVolumesScaleIo",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 4528,
      },
      "name": "AlertmanagerSpecVolumesScaleIo",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecVolumesScaleIo#gateway",
            },
            "summary": "The host address of the ScaleIO API Gateway.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 4542,
          },
          "name": "gateway",
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecVolumesScaleIo#secretRef",
            },
            "remarks": "If this is not provided, Login operation will fail.",
            "summary": "SecretRef references to the secret for ScaleIO user and other sensitive information.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 4564,
          },
          "name": "secretRef",
          "type": Object {
            "fqn": "monitoringcoreoscom.AlertmanagerSpecVolumesScaleIoSecretRef",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecVolumesScaleIo#system",
            },
            "summary": "The name of the storage system as configured in ScaleIO.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 4593,
          },
          "name": "system",
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecVolumesScaleIo#fsType",
            },
            "default": "xfs\\".",
            "remarks": "Must be a filesystem type supported by the host operating system. Ex. \\"ext4\\", \\"xfs\\", \\"ntfs\\". Default is \\"xfs\\".",
            "summary": "Filesystem type to mount.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 4535,
          },
          "name": "fsType",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecVolumesScaleIo#protectionDomain",
            },
            "summary": "The name of the ScaleIO Protection Domain for the configured storage.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 4549,
          },
          "name": "protectionDomain",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecVolumesScaleIo#readOnly",
            },
            "default": "false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts.",
            "remarks": "ReadOnly here will force the ReadOnly setting in VolumeMounts.",
            "summary": "Defaults to false (read/write).",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 4557,
          },
          "name": "readOnly",
          "optional": true,
          "type": Object {
            "primitive": "boolean",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecVolumesScaleIo#sslEnabled",
            },
            "summary": "Flag to enable/disable SSL communication with Gateway, default false.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 4571,
          },
          "name": "sslEnabled",
          "optional": true,
          "type": Object {
            "primitive": "boolean",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecVolumesScaleIo#storageMode",
            },
            "default": "ThinProvisioned.",
            "remarks": "Default is ThinProvisioned.",
            "summary": "Indicates whether the storage for a volume should be ThickProvisioned or ThinProvisioned.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 4579,
          },
          "name": "storageMode",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecVolumesScaleIo#storagePool",
            },
            "summary": "The ScaleIO Storage Pool associated with the protection domain.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 4586,
          },
          "name": "storagePool",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecVolumesScaleIo#volumeName",
            },
            "summary": "The name of a volume already created in the ScaleIO system that is associated with this volume source.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 4600,
          },
          "name": "volumeName",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
      ],
    },
    "monitoringcoreoscom.AlertmanagerSpecVolumesScaleIoSecretRef": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "AlertmanagerSpecVolumesScaleIoSecretRef",
        },
        "remarks": "If this is not provided, Login operation will fail.",
        "summary": "SecretRef references to the secret for ScaleIO user and other sensitive information.",
      },
      "fqn": "monitoringcoreoscom.AlertmanagerSpecVolumesScaleIoSecretRef",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 7008,
      },
      "name": "AlertmanagerSpecVolumesScaleIoSecretRef",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecVolumesScaleIoSecretRef#name",
            },
            "remarks": "More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?",
            "summary": "Name of the referent.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 7014,
          },
          "name": "name",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
      ],
    },
    "monitoringcoreoscom.AlertmanagerSpecVolumesSecret": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "AlertmanagerSpecVolumesSecret",
        },
        "remarks": "More info: https://kubernetes.io/docs/concepts/storage/volumes#secret",
        "summary": "Secret represents a secret that should populate this volume.",
      },
      "fqn": "monitoringcoreoscom.AlertmanagerSpecVolumesSecret",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 4632,
      },
      "name": "AlertmanagerSpecVolumesSecret",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecVolumesSecret#defaultMode",
            },
            "default": "0644. Directories within the path are not affected by this setting. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.",
            "remarks": "Must be a value between 0 and 0777. Defaults to 0644. Directories within the path are not affected by this setting. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.",
            "summary": "Optional: mode bits to use on created files by default.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 4639,
          },
          "name": "defaultMode",
          "optional": true,
          "type": Object {
            "primitive": "number",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecVolumesSecret#items",
            },
            "remarks": "If specified, the listed keys will be projected into the specified paths, and unlisted keys will not be present. If a key is specified which is not present in the Secret, the volume setup will error unless it is marked optional. Paths must be relative and may not contain the '..' path or start with '..'.",
            "summary": "If unspecified, each key-value pair in the Data field of the referenced Secret will be projected into the volume as a file whose name is the key and content is the value.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 4646,
          },
          "name": "items",
          "optional": true,
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "fqn": "monitoringcoreoscom.AlertmanagerSpecVolumesSecretItems",
              },
              "kind": "array",
            },
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecVolumesSecret#optional",
            },
            "summary": "Specify whether the Secret or its keys must be defined.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 4653,
          },
          "name": "optional",
          "optional": true,
          "type": Object {
            "primitive": "boolean",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecVolumesSecret#secretName",
            },
            "remarks": "More info: https://kubernetes.io/docs/concepts/storage/volumes#secret",
            "summary": "Name of the secret in the pod's namespace to use.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 4660,
          },
          "name": "secretName",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
      ],
    },
    "monitoringcoreoscom.AlertmanagerSpecVolumesSecretItems": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "AlertmanagerSpecVolumesSecretItems",
        },
        "summary": "Maps a string key to a path within a volume.",
      },
      "fqn": "monitoringcoreoscom.AlertmanagerSpecVolumesSecretItems",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 7037,
      },
      "name": "AlertmanagerSpecVolumesSecretItems",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecVolumesSecretItems#key",
            },
            "summary": "The key to project.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 7043,
          },
          "name": "key",
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecVolumesSecretItems#path",
            },
            "remarks": "May not be an absolute path. May not contain the path element '..'. May not start with the string '..'.",
            "summary": "The relative path of the file to map the key to.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 7057,
          },
          "name": "path",
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecVolumesSecretItems#mode",
            },
            "remarks": "If not specified, the volume defaultMode will be used. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.",
            "summary": "Optional: mode bits to use on this file, must be a value between 0 and 0777.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 7050,
          },
          "name": "mode",
          "optional": true,
          "type": Object {
            "primitive": "number",
          },
        },
      ],
    },
    "monitoringcoreoscom.AlertmanagerSpecVolumesStorageos": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "AlertmanagerSpecVolumesStorageos",
        },
        "summary": "StorageOS represents a StorageOS volume attached and mounted on Kubernetes nodes.",
      },
      "fqn": "monitoringcoreoscom.AlertmanagerSpecVolumesStorageos",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 4686,
      },
      "name": "AlertmanagerSpecVolumesStorageos",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecVolumesStorageos#fsType",
            },
            "remarks": "Must be a filesystem type supported by the host operating system. Ex. \\"ext4\\", \\"xfs\\", \\"ntfs\\". Implicitly inferred to be \\"ext4\\" if unspecified.",
            "summary": "Filesystem type to mount.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 4692,
          },
          "name": "fsType",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecVolumesStorageos#readOnly",
            },
            "default": "false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts.",
            "remarks": "ReadOnly here will force the ReadOnly setting in VolumeMounts.",
            "summary": "Defaults to false (read/write).",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 4700,
          },
          "name": "readOnly",
          "optional": true,
          "type": Object {
            "primitive": "boolean",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecVolumesStorageos#secretRef",
            },
            "remarks": "If not specified, default values will be attempted.",
            "summary": "SecretRef specifies the secret to use for obtaining the StorageOS API credentials.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 4707,
          },
          "name": "secretRef",
          "optional": true,
          "type": Object {
            "fqn": "monitoringcoreoscom.AlertmanagerSpecVolumesStorageosSecretRef",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecVolumesStorageos#volumeName",
            },
            "remarks": "Volume names are only unique within a namespace.",
            "summary": "VolumeName is the human-readable name of the StorageOS volume.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 4714,
          },
          "name": "volumeName",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecVolumesStorageos#volumeNamespace",
            },
            "remarks": "If no namespace is specified then the Pod's namespace will be used.  This allows the Kubernetes name scoping to be mirrored within StorageOS for tighter integration. Set VolumeName to any name to override the default behaviour. Set to \\"default\\" if you are not using namespaces within StorageOS. Namespaces that do not pre-exist within StorageOS will be created.",
            "summary": "VolumeNamespace specifies the scope of the volume within StorageOS.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 4721,
          },
          "name": "volumeNamespace",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
      ],
    },
    "monitoringcoreoscom.AlertmanagerSpecVolumesStorageosSecretRef": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "AlertmanagerSpecVolumesStorageosSecretRef",
        },
        "remarks": "If not specified, default values will be attempted.",
        "summary": "SecretRef specifies the secret to use for obtaining the StorageOS API credentials.",
      },
      "fqn": "monitoringcoreoscom.AlertmanagerSpecVolumesStorageosSecretRef",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 7082,
      },
      "name": "AlertmanagerSpecVolumesStorageosSecretRef",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecVolumesStorageosSecretRef#name",
            },
            "remarks": "More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?",
            "summary": "Name of the referent.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 7088,
          },
          "name": "name",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
      ],
    },
    "monitoringcoreoscom.AlertmanagerSpecVolumesVsphereVolume": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "AlertmanagerSpecVolumesVsphereVolume",
        },
        "summary": "VsphereVolume represents a vSphere volume attached and mounted on kubelets host machine.",
      },
      "fqn": "monitoringcoreoscom.AlertmanagerSpecVolumesVsphereVolume",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 4748,
      },
      "name": "AlertmanagerSpecVolumesVsphereVolume",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecVolumesVsphereVolume#volumePath",
            },
            "summary": "Path that identifies vSphere volume vmdk.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 4775,
          },
          "name": "volumePath",
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecVolumesVsphereVolume#fsType",
            },
            "remarks": "Must be a filesystem type supported by the host operating system. Ex. \\"ext4\\", \\"xfs\\", \\"ntfs\\". Implicitly inferred to be \\"ext4\\" if unspecified.",
            "summary": "Filesystem type to mount.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 4754,
          },
          "name": "fsType",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecVolumesVsphereVolume#storagePolicyID",
            },
            "summary": "Storage Policy Based Management (SPBM) profile ID associated with the StoragePolicyName.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 4761,
          },
          "name": "storagePolicyId",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "AlertmanagerSpecVolumesVsphereVolume#storagePolicyName",
            },
            "summary": "Storage Policy Based Management (SPBM) profile name.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 4768,
          },
          "name": "storagePolicyName",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
      ],
    },
    "monitoringcoreoscom.PodMonitor": Object {
      "assembly": "monitoringcoreoscom",
      "base": "cdk8s.ApiObject",
      "docs": Object {
        "custom": Object {
          "schema": "PodMonitor",
        },
        "summary": "PodMonitor defines monitoring for a set of pods.",
      },
      "fqn": "monitoringcoreoscom.PodMonitor",
      "initializer": Object {
        "docs": Object {
          "summary": "Defines a \\"PodMonitor\\" API object.",
        },
        "locationInModule": Object {
          "filename": "monitoring.coreos.com.ts",
          "line": 10081,
        },
        "parameters": Array [
          Object {
            "docs": Object {
              "summary": "the scope in which to define this object.",
            },
            "name": "scope",
            "type": Object {
              "fqn": "constructs.Construct",
            },
          },
          Object {
            "docs": Object {
              "summary": "a scope-local name for the object.",
            },
            "name": "id",
            "type": Object {
              "primitive": "string",
            },
          },
          Object {
            "docs": Object {
              "summary": "initialization props.",
            },
            "name": "props",
            "type": Object {
              "fqn": "monitoringcoreoscom.PodMonitorProps",
            },
          },
        ],
      },
      "kind": "class",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 10052,
      },
      "methods": Array [
        Object {
          "docs": Object {
            "remarks": "This can be used to inline resource manifests inside other objects (e.g. as templates).",
            "summary": "Renders a Kubernetes manifest for \\"PodMonitor\\".",
          },
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 10068,
          },
          "name": "manifest",
          "parameters": Array [
            Object {
              "docs": Object {
                "summary": "initialization props.",
              },
              "name": "props",
              "type": Object {
                "fqn": "monitoringcoreoscom.PodMonitorProps",
              },
            },
          ],
          "returns": Object {
            "type": Object {
              "primitive": "any",
            },
          },
          "static": true,
        },
      ],
      "name": "PodMonitor",
      "properties": Array [
        Object {
          "const": true,
          "docs": Object {
            "summary": "Returns the apiVersion and kind for \\"PodMonitor\\".",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 10056,
          },
          "name": "GVK",
          "static": true,
          "type": Object {
            "fqn": "cdk8s.GroupVersionKind",
          },
        },
      ],
    },
    "monitoringcoreoscom.PodMonitorProps": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "PodMonitor",
        },
        "summary": "PodMonitor defines monitoring for a set of pods.",
      },
      "fqn": "monitoringcoreoscom.PodMonitorProps",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 10091,
      },
      "name": "PodMonitorProps",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PodMonitor#spec",
            },
            "summary": "Specification of desired Pod selection for target discovery by Prometheus.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 10102,
          },
          "name": "spec",
          "type": Object {
            "fqn": "monitoringcoreoscom.PodMonitorSpec",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PodMonitor#metadata",
            },
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 10095,
          },
          "name": "metadata",
          "optional": true,
          "type": Object {
            "primitive": "any",
          },
        },
      ],
    },
    "monitoringcoreoscom.PodMonitorSpec": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "PodMonitorSpec",
        },
        "summary": "Specification of desired Pod selection for target discovery by Prometheus.",
      },
      "fqn": "monitoringcoreoscom.PodMonitorSpec",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 10126,
      },
      "name": "PodMonitorSpec",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PodMonitorSpec#podMetricsEndpoints",
            },
            "summary": "A list of endpoints allowed as part of this PodMonitor.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 10146,
          },
          "name": "podMetricsEndpoints",
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "fqn": "monitoringcoreoscom.PodMonitorSpecPodMetricsEndpoints",
              },
              "kind": "array",
            },
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PodMonitorSpec#selector",
            },
            "summary": "Selector to select Pod objects.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 10167,
          },
          "name": "selector",
          "type": Object {
            "fqn": "monitoringcoreoscom.PodMonitorSpecSelector",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PodMonitorSpec#jobLabel",
            },
            "summary": "The label to use to retrieve the job name from.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 10132,
          },
          "name": "jobLabel",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PodMonitorSpec#namespaceSelector",
            },
            "summary": "Selector to select which namespaces the Endpoints objects are discovered from.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 10139,
          },
          "name": "namespaceSelector",
          "optional": true,
          "type": Object {
            "fqn": "monitoringcoreoscom.PodMonitorSpecNamespaceSelector",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PodMonitorSpec#podTargetLabels",
            },
            "summary": "PodTargetLabels transfers labels on the Kubernetes Pod onto the target.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 10153,
          },
          "name": "podTargetLabels",
          "optional": true,
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "primitive": "string",
              },
              "kind": "array",
            },
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PodMonitorSpec#sampleLimit",
            },
            "summary": "SampleLimit defines per-scrape limit on number of scraped samples that will be accepted.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 10160,
          },
          "name": "sampleLimit",
          "optional": true,
          "type": Object {
            "primitive": "number",
          },
        },
      ],
    },
    "monitoringcoreoscom.PodMonitorSpecNamespaceSelector": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "PodMonitorSpecNamespaceSelector",
        },
        "summary": "Selector to select which namespaces the Endpoints objects are discovered from.",
      },
      "fqn": "monitoringcoreoscom.PodMonitorSpecNamespaceSelector",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 10195,
      },
      "name": "PodMonitorSpecNamespaceSelector",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PodMonitorSpecNamespaceSelector#any",
            },
            "summary": "Boolean describing whether all namespaces are selected in contrast to a list restricting them.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 10201,
          },
          "name": "any",
          "optional": true,
          "type": Object {
            "primitive": "boolean",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PodMonitorSpecNamespaceSelector#matchNames",
            },
            "summary": "List of namespace names.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 10208,
          },
          "name": "matchNames",
          "optional": true,
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "primitive": "string",
              },
              "kind": "array",
            },
          },
        },
      ],
    },
    "monitoringcoreoscom.PodMonitorSpecPodMetricsEndpoints": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "PodMonitorSpecPodMetricsEndpoints",
        },
        "summary": "PodMetricsEndpoint defines a scrapeable endpoint of a Kubernetes Pod serving Prometheus metrics.",
      },
      "fqn": "monitoringcoreoscom.PodMonitorSpecPodMetricsEndpoints",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 10232,
      },
      "name": "PodMonitorSpecPodMetricsEndpoints",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PodMonitorSpecPodMetricsEndpoints#honorLabels",
            },
            "summary": "HonorLabels chooses the metric's labels on collisions with target labels.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 10238,
          },
          "name": "honorLabels",
          "optional": true,
          "type": Object {
            "primitive": "boolean",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PodMonitorSpecPodMetricsEndpoints#honorTimestamps",
            },
            "summary": "HonorTimestamps controls whether Prometheus respects the timestamps present in scraped data.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 10245,
          },
          "name": "honorTimestamps",
          "optional": true,
          "type": Object {
            "primitive": "boolean",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PodMonitorSpecPodMetricsEndpoints#interval",
            },
            "summary": "Interval at which metrics should be scraped.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 10252,
          },
          "name": "interval",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PodMonitorSpecPodMetricsEndpoints#metricRelabelings",
            },
            "summary": "MetricRelabelConfigs to apply to samples before ingestion.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 10259,
          },
          "name": "metricRelabelings",
          "optional": true,
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "fqn": "monitoringcoreoscom.PodMonitorSpecPodMetricsEndpointsMetricRelabelings",
              },
              "kind": "array",
            },
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PodMonitorSpecPodMetricsEndpoints#params",
            },
            "summary": "Optional HTTP URL parameters.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 10266,
          },
          "name": "params",
          "optional": true,
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "collection": Object {
                  "elementtype": Object {
                    "primitive": "string",
                  },
                  "kind": "array",
                },
              },
              "kind": "map",
            },
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PodMonitorSpecPodMetricsEndpoints#path",
            },
            "summary": "HTTP path to scrape for metrics.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 10273,
          },
          "name": "path",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PodMonitorSpecPodMetricsEndpoints#port",
            },
            "remarks": "Mutually exclusive with targetPort.",
            "summary": "Name of the pod port this endpoint refers to.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 10280,
          },
          "name": "port",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PodMonitorSpecPodMetricsEndpoints#proxyUrl",
            },
            "summary": "ProxyURL eg http://proxyserver:2195 Directs scrapes to proxy through this endpoint.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 10287,
          },
          "name": "proxyUrl",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PodMonitorSpecPodMetricsEndpoints#relabelings",
            },
            "remarks": "More info: https://prometheus.io/docs/prometheus/latest/configuration/configuration/#relabel_config",
            "summary": "RelabelConfigs to apply to samples before ingestion.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 10294,
          },
          "name": "relabelings",
          "optional": true,
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "fqn": "monitoringcoreoscom.PodMonitorSpecPodMetricsEndpointsRelabelings",
              },
              "kind": "array",
            },
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PodMonitorSpecPodMetricsEndpoints#scheme",
            },
            "summary": "HTTP scheme to use for scraping.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 10301,
          },
          "name": "scheme",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PodMonitorSpecPodMetricsEndpoints#scrapeTimeout",
            },
            "summary": "Timeout after which the scrape is ended.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 10308,
          },
          "name": "scrapeTimeout",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PodMonitorSpecPodMetricsEndpoints#targetPort",
            },
            "summary": "Deprecated: Use 'port' instead.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 10315,
          },
          "name": "targetPort",
          "optional": true,
          "type": Object {
            "fqn": "monitoringcoreoscom.PodMonitorSpecPodMetricsEndpointsTargetPort",
          },
        },
      ],
    },
    "monitoringcoreoscom.PodMonitorSpecPodMetricsEndpointsMetricRelabelings": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "PodMonitorSpecPodMetricsEndpointsMetricRelabelings",
        },
        "remarks": "It defines \`<metric_relabel_configs>\`-section of Prometheus configuration. More info: https://prometheus.io/docs/prometheus/latest/configuration/configuration/#metric_relabel_configs",
        "summary": "RelabelConfig allows dynamic rewriting of the label set, being applied to samples before ingestion.",
      },
      "fqn": "monitoringcoreoscom.PodMonitorSpecPodMetricsEndpointsMetricRelabelings",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 10386,
      },
      "name": "PodMonitorSpecPodMetricsEndpointsMetricRelabelings",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PodMonitorSpecPodMetricsEndpointsMetricRelabelings#action",
            },
            "default": "replace'",
            "remarks": "Default is 'replace'",
            "summary": "Action to perform based on regex matching.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 10393,
          },
          "name": "action",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PodMonitorSpecPodMetricsEndpointsMetricRelabelings#modulus",
            },
            "summary": "Modulus to take of the hash of the source label values.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 10400,
          },
          "name": "modulus",
          "optional": true,
          "type": Object {
            "primitive": "number",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PodMonitorSpecPodMetricsEndpointsMetricRelabelings#regex",
            },
            "default": "'",
            "remarks": "Default is '(.*)'",
            "summary": "Regular expression against which the extracted value is matched.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 10408,
          },
          "name": "regex",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PodMonitorSpecPodMetricsEndpointsMetricRelabelings#replacement",
            },
            "default": "1'",
            "remarks": "Regex capture groups are available. Default is '$1'",
            "summary": "Replacement value against which a regex replace is performed if the regular expression matches.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 10416,
          },
          "name": "replacement",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PodMonitorSpecPodMetricsEndpointsMetricRelabelings#separator",
            },
            "remarks": "default is ';'.",
            "summary": "Separator placed between concatenated source label values.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 10423,
          },
          "name": "separator",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PodMonitorSpecPodMetricsEndpointsMetricRelabelings#sourceLabels",
            },
            "remarks": "Their content is concatenated using the configured separator and matched against the configured regular expression for the replace, keep, and drop actions.",
            "summary": "The source labels select values from existing labels.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 10430,
          },
          "name": "sourceLabels",
          "optional": true,
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "primitive": "string",
              },
              "kind": "array",
            },
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PodMonitorSpecPodMetricsEndpointsMetricRelabelings#targetLabel",
            },
            "remarks": "It is mandatory for replace actions. Regex capture groups are available.",
            "summary": "Label to which the resulting value is written in a replace action.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 10437,
          },
          "name": "targetLabel",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
      ],
    },
    "monitoringcoreoscom.PodMonitorSpecPodMetricsEndpointsRelabelings": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "PodMonitorSpecPodMetricsEndpointsRelabelings",
        },
        "remarks": "It defines \`<metric_relabel_configs>\`-section of Prometheus configuration. More info: https://prometheus.io/docs/prometheus/latest/configuration/configuration/#metric_relabel_configs",
        "summary": "RelabelConfig allows dynamic rewriting of the label set, being applied to samples before ingestion.",
      },
      "fqn": "monitoringcoreoscom.PodMonitorSpecPodMetricsEndpointsRelabelings",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 10466,
      },
      "name": "PodMonitorSpecPodMetricsEndpointsRelabelings",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PodMonitorSpecPodMetricsEndpointsRelabelings#action",
            },
            "default": "replace'",
            "remarks": "Default is 'replace'",
            "summary": "Action to perform based on regex matching.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 10473,
          },
          "name": "action",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PodMonitorSpecPodMetricsEndpointsRelabelings#modulus",
            },
            "summary": "Modulus to take of the hash of the source label values.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 10480,
          },
          "name": "modulus",
          "optional": true,
          "type": Object {
            "primitive": "number",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PodMonitorSpecPodMetricsEndpointsRelabelings#regex",
            },
            "default": "'",
            "remarks": "Default is '(.*)'",
            "summary": "Regular expression against which the extracted value is matched.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 10488,
          },
          "name": "regex",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PodMonitorSpecPodMetricsEndpointsRelabelings#replacement",
            },
            "default": "1'",
            "remarks": "Regex capture groups are available. Default is '$1'",
            "summary": "Replacement value against which a regex replace is performed if the regular expression matches.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 10496,
          },
          "name": "replacement",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PodMonitorSpecPodMetricsEndpointsRelabelings#separator",
            },
            "remarks": "default is ';'.",
            "summary": "Separator placed between concatenated source label values.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 10503,
          },
          "name": "separator",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PodMonitorSpecPodMetricsEndpointsRelabelings#sourceLabels",
            },
            "remarks": "Their content is concatenated using the configured separator and matched against the configured regular expression for the replace, keep, and drop actions.",
            "summary": "The source labels select values from existing labels.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 10510,
          },
          "name": "sourceLabels",
          "optional": true,
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "primitive": "string",
              },
              "kind": "array",
            },
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PodMonitorSpecPodMetricsEndpointsRelabelings#targetLabel",
            },
            "remarks": "It is mandatory for replace actions. Regex capture groups are available.",
            "summary": "Label to which the resulting value is written in a replace action.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 10517,
          },
          "name": "targetLabel",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
      ],
    },
    "monitoringcoreoscom.PodMonitorSpecPodMetricsEndpointsTargetPort": Object {
      "assembly": "monitoringcoreoscom",
      "docs": Object {
        "custom": Object {
          "schema": "PodMonitorSpecPodMetricsEndpointsTargetPort",
        },
        "summary": "Deprecated: Use 'port' instead.",
      },
      "fqn": "monitoringcoreoscom.PodMonitorSpecPodMetricsEndpointsTargetPort",
      "kind": "class",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 10546,
      },
      "methods": Array [
        Object {
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 10547,
          },
          "name": "fromNumber",
          "parameters": Array [
            Object {
              "name": "value",
              "type": Object {
                "primitive": "number",
              },
            },
          ],
          "returns": Object {
            "type": Object {
              "fqn": "monitoringcoreoscom.PodMonitorSpecPodMetricsEndpointsTargetPort",
            },
          },
          "static": true,
        },
        Object {
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 10550,
          },
          "name": "fromString",
          "parameters": Array [
            Object {
              "name": "value",
              "type": Object {
                "primitive": "string",
              },
            },
          ],
          "returns": Object {
            "type": Object {
              "fqn": "monitoringcoreoscom.PodMonitorSpecPodMetricsEndpointsTargetPort",
            },
          },
          "static": true,
        },
      ],
      "name": "PodMonitorSpecPodMetricsEndpointsTargetPort",
      "properties": Array [
        Object {
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 10553,
          },
          "name": "value",
          "type": Object {
            "primitive": "any",
          },
        },
      ],
    },
    "monitoringcoreoscom.PodMonitorSpecSelector": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "PodMonitorSpecSelector",
        },
        "summary": "Selector to select Pod objects.",
      },
      "fqn": "monitoringcoreoscom.PodMonitorSpecSelector",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 10349,
      },
      "name": "PodMonitorSpecSelector",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PodMonitorSpecSelector#matchExpressions",
            },
            "remarks": "The requirements are ANDed.",
            "summary": "matchExpressions is a list of label selector requirements.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 10355,
          },
          "name": "matchExpressions",
          "optional": true,
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "fqn": "monitoringcoreoscom.PodMonitorSpecSelectorMatchExpressions",
              },
              "kind": "array",
            },
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PodMonitorSpecSelector#matchLabels",
            },
            "remarks": "A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is \\"key\\", the operator is \\"In\\", and the values array contains only \\"value\\". The requirements are ANDed.",
            "summary": "matchLabels is a map of {key,value} pairs.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 10362,
          },
          "name": "matchLabels",
          "optional": true,
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "primitive": "string",
              },
              "kind": "map",
            },
          },
        },
      ],
    },
    "monitoringcoreoscom.PodMonitorSpecSelectorMatchExpressions": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "PodMonitorSpecSelectorMatchExpressions",
        },
        "summary": "A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.",
      },
      "fqn": "monitoringcoreoscom.PodMonitorSpecSelectorMatchExpressions",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 10563,
      },
      "name": "PodMonitorSpecSelectorMatchExpressions",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PodMonitorSpecSelectorMatchExpressions#key",
            },
            "summary": "key is the label key that the selector applies to.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 10569,
          },
          "name": "key",
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PodMonitorSpecSelectorMatchExpressions#operator",
            },
            "remarks": "Valid operators are In, NotIn, Exists and DoesNotExist.",
            "summary": "operator represents a key's relationship to a set of values.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 10576,
          },
          "name": "operator",
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PodMonitorSpecSelectorMatchExpressions#values",
            },
            "remarks": "If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.",
            "summary": "values is an array of string values.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 10583,
          },
          "name": "values",
          "optional": true,
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "primitive": "string",
              },
              "kind": "array",
            },
          },
        },
      ],
    },
    "monitoringcoreoscom.Prometheus": Object {
      "assembly": "monitoringcoreoscom",
      "base": "cdk8s.ApiObject",
      "docs": Object {
        "custom": Object {
          "schema": "Prometheus",
        },
        "summary": "Prometheus defines a Prometheus deployment.",
      },
      "fqn": "monitoringcoreoscom.Prometheus",
      "initializer": Object {
        "docs": Object {
          "summary": "Defines a \\"Prometheus\\" API object.",
        },
        "locationInModule": Object {
          "filename": "monitoring.coreos.com.ts",
          "line": 10637,
        },
        "parameters": Array [
          Object {
            "docs": Object {
              "summary": "the scope in which to define this object.",
            },
            "name": "scope",
            "type": Object {
              "fqn": "constructs.Construct",
            },
          },
          Object {
            "docs": Object {
              "summary": "a scope-local name for the object.",
            },
            "name": "id",
            "type": Object {
              "primitive": "string",
            },
          },
          Object {
            "docs": Object {
              "summary": "initialization props.",
            },
            "name": "props",
            "type": Object {
              "fqn": "monitoringcoreoscom.PrometheusProps",
            },
          },
        ],
      },
      "kind": "class",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 10608,
      },
      "methods": Array [
        Object {
          "docs": Object {
            "remarks": "This can be used to inline resource manifests inside other objects (e.g. as templates).",
            "summary": "Renders a Kubernetes manifest for \\"Prometheus\\".",
          },
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 10624,
          },
          "name": "manifest",
          "parameters": Array [
            Object {
              "docs": Object {
                "summary": "initialization props.",
              },
              "name": "props",
              "type": Object {
                "fqn": "monitoringcoreoscom.PrometheusProps",
              },
            },
          ],
          "returns": Object {
            "type": Object {
              "primitive": "any",
            },
          },
          "static": true,
        },
      ],
      "name": "Prometheus",
      "properties": Array [
        Object {
          "const": true,
          "docs": Object {
            "summary": "Returns the apiVersion and kind for \\"Prometheus\\".",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 10612,
          },
          "name": "GVK",
          "static": true,
          "type": Object {
            "fqn": "cdk8s.GroupVersionKind",
          },
        },
      ],
    },
    "monitoringcoreoscom.PrometheusProps": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "Prometheus",
        },
        "summary": "Prometheus defines a Prometheus deployment.",
      },
      "fqn": "monitoringcoreoscom.PrometheusProps",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 10647,
      },
      "name": "PrometheusProps",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "Prometheus#spec",
            },
            "remarks": "More info: https://github.com/kubernetes/community/blob/master/contributors/devel/sig-architecture/api-conventions.md#spec-and-status",
            "summary": "Specification of the desired behavior of the Prometheus cluster.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 10658,
          },
          "name": "spec",
          "type": Object {
            "fqn": "monitoringcoreoscom.PrometheusSpec",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "Prometheus#metadata",
            },
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 10651,
          },
          "name": "metadata",
          "optional": true,
          "type": Object {
            "primitive": "any",
          },
        },
      ],
    },
    "monitoringcoreoscom.PrometheusRule": Object {
      "assembly": "monitoringcoreoscom",
      "base": "cdk8s.ApiObject",
      "docs": Object {
        "custom": Object {
          "schema": "PrometheusRule",
        },
        "summary": "PrometheusRule defines alerting rules for a Prometheus instance.",
      },
      "fqn": "monitoringcoreoscom.PrometheusRule",
      "initializer": Object {
        "docs": Object {
          "summary": "Defines a \\"PrometheusRule\\" API object.",
        },
        "locationInModule": Object {
          "filename": "monitoring.coreos.com.ts",
          "line": 24797,
        },
        "parameters": Array [
          Object {
            "docs": Object {
              "summary": "the scope in which to define this object.",
            },
            "name": "scope",
            "type": Object {
              "fqn": "constructs.Construct",
            },
          },
          Object {
            "docs": Object {
              "summary": "a scope-local name for the object.",
            },
            "name": "id",
            "type": Object {
              "primitive": "string",
            },
          },
          Object {
            "docs": Object {
              "summary": "initialization props.",
            },
            "name": "props",
            "type": Object {
              "fqn": "monitoringcoreoscom.PrometheusRuleProps",
            },
          },
        ],
      },
      "kind": "class",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 24768,
      },
      "methods": Array [
        Object {
          "docs": Object {
            "remarks": "This can be used to inline resource manifests inside other objects (e.g. as templates).",
            "summary": "Renders a Kubernetes manifest for \\"PrometheusRule\\".",
          },
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 24784,
          },
          "name": "manifest",
          "parameters": Array [
            Object {
              "docs": Object {
                "summary": "initialization props.",
              },
              "name": "props",
              "type": Object {
                "fqn": "monitoringcoreoscom.PrometheusRuleProps",
              },
            },
          ],
          "returns": Object {
            "type": Object {
              "primitive": "any",
            },
          },
          "static": true,
        },
      ],
      "name": "PrometheusRule",
      "properties": Array [
        Object {
          "const": true,
          "docs": Object {
            "summary": "Returns the apiVersion and kind for \\"PrometheusRule\\".",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 24772,
          },
          "name": "GVK",
          "static": true,
          "type": Object {
            "fqn": "cdk8s.GroupVersionKind",
          },
        },
      ],
    },
    "monitoringcoreoscom.PrometheusRuleProps": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "PrometheusRule",
        },
        "summary": "PrometheusRule defines alerting rules for a Prometheus instance.",
      },
      "fqn": "monitoringcoreoscom.PrometheusRuleProps",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 24807,
      },
      "name": "PrometheusRuleProps",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusRule#spec",
            },
            "summary": "Specification of desired alerting rule definitions for Prometheus.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 24818,
          },
          "name": "spec",
          "type": Object {
            "fqn": "monitoringcoreoscom.PrometheusRuleSpec",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusRule#metadata",
            },
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 24811,
          },
          "name": "metadata",
          "optional": true,
          "type": Object {
            "primitive": "any",
          },
        },
      ],
    },
    "monitoringcoreoscom.PrometheusRuleSpec": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "PrometheusRuleSpec",
        },
        "summary": "Specification of desired alerting rule definitions for Prometheus.",
      },
      "fqn": "monitoringcoreoscom.PrometheusRuleSpec",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 24842,
      },
      "name": "PrometheusRuleSpec",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusRuleSpec#groups",
            },
            "summary": "Content of Prometheus rule file.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 24848,
          },
          "name": "groups",
          "optional": true,
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "fqn": "monitoringcoreoscom.PrometheusRuleSpecGroups",
              },
              "kind": "array",
            },
          },
        },
      ],
    },
    "monitoringcoreoscom.PrometheusRuleSpecGroups": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "PrometheusRuleSpecGroups",
        },
        "remarks": "Note: PartialResponseStrategy is only used by ThanosRuler and will be ignored by Prometheus instances.  Valid values for this field are 'warn' or 'abort'.  More info: https://github.com/thanos-io/thanos/blob/master/docs/components/rule.md#partial-response",
        "summary": "RuleGroup is a list of sequentially evaluated recording and alerting rules.",
      },
      "fqn": "monitoringcoreoscom.PrometheusRuleSpecGroups",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 24871,
      },
      "name": "PrometheusRuleSpecGroups",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusRuleSpecGroups#name",
            },
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 24880,
          },
          "name": "name",
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusRuleSpecGroups#rules",
            },
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 24890,
          },
          "name": "rules",
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "fqn": "monitoringcoreoscom.PrometheusRuleSpecGroupsRules",
              },
              "kind": "array",
            },
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusRuleSpecGroups#interval",
            },
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 24875,
          },
          "name": "interval",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusRuleSpecGroups#partial_response_strategy",
            },
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 24885,
          },
          "name": "partialResponseStrategy",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
      ],
    },
    "monitoringcoreoscom.PrometheusRuleSpecGroupsRules": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "PrometheusRuleSpecGroupsRules",
        },
        "summary": "Rule describes an alerting or recording rule.",
      },
      "fqn": "monitoringcoreoscom.PrometheusRuleSpecGroupsRules",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 24916,
      },
      "name": "PrometheusRuleSpecGroupsRules",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusRuleSpecGroupsRules#expr",
            },
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 24930,
          },
          "name": "expr",
          "type": Object {
            "fqn": "monitoringcoreoscom.PrometheusRuleSpecGroupsRulesExpr",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusRuleSpecGroupsRules#alert",
            },
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 24920,
          },
          "name": "alert",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusRuleSpecGroupsRules#annotations",
            },
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 24925,
          },
          "name": "annotations",
          "optional": true,
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "primitive": "string",
              },
              "kind": "map",
            },
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusRuleSpecGroupsRules#for",
            },
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 24935,
          },
          "name": "for",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusRuleSpecGroupsRules#labels",
            },
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 24940,
          },
          "name": "labels",
          "optional": true,
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "primitive": "string",
              },
              "kind": "map",
            },
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusRuleSpecGroupsRules#record",
            },
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 24945,
          },
          "name": "record",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
      ],
    },
    "monitoringcoreoscom.PrometheusRuleSpecGroupsRulesExpr": Object {
      "assembly": "monitoringcoreoscom",
      "docs": Object {
        "custom": Object {
          "schema": "PrometheusRuleSpecGroupsRulesExpr",
        },
      },
      "fqn": "monitoringcoreoscom.PrometheusRuleSpecGroupsRulesExpr",
      "kind": "class",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 24971,
      },
      "methods": Array [
        Object {
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 24972,
          },
          "name": "fromNumber",
          "parameters": Array [
            Object {
              "name": "value",
              "type": Object {
                "primitive": "number",
              },
            },
          ],
          "returns": Object {
            "type": Object {
              "fqn": "monitoringcoreoscom.PrometheusRuleSpecGroupsRulesExpr",
            },
          },
          "static": true,
        },
        Object {
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 24975,
          },
          "name": "fromString",
          "parameters": Array [
            Object {
              "name": "value",
              "type": Object {
                "primitive": "string",
              },
            },
          ],
          "returns": Object {
            "type": Object {
              "fqn": "monitoringcoreoscom.PrometheusRuleSpecGroupsRulesExpr",
            },
          },
          "static": true,
        },
      ],
      "name": "PrometheusRuleSpecGroupsRulesExpr",
      "properties": Array [
        Object {
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 24978,
          },
          "name": "value",
          "type": Object {
            "primitive": "any",
          },
        },
      ],
    },
    "monitoringcoreoscom.PrometheusSpec": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "PrometheusSpec",
        },
        "remarks": "More info: https://github.com/kubernetes/community/blob/master/contributors/devel/sig-architecture/api-conventions.md#spec-and-status",
        "summary": "Specification of the desired behavior of the Prometheus cluster.",
      },
      "fqn": "monitoringcoreoscom.PrometheusSpec",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 10682,
      },
      "name": "PrometheusSpec",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpec#additionalAlertManagerConfigs",
            },
            "remarks": "AlertManager configurations specified are appended to the configurations generated by the Prometheus Operator. Job configurations specified must have the form as specified in the official Prometheus documentation: https://prometheus.io/docs/prometheus/latest/configuration/configuration/#alertmanager_config. As AlertManager configs are appended, the user is responsible to make sure it is valid. Note that using this feature may expose the possibility to break upgrades of Prometheus. It is advised to review Prometheus release notes to ensure that no incompatible AlertManager configs are going to break Prometheus after the upgrade.",
            "summary": "AdditionalAlertManagerConfigs allows specifying a key of a Secret containing additional Prometheus AlertManager configurations.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 10688,
          },
          "name": "additionalAlertManagerConfigs",
          "optional": true,
          "type": Object {
            "fqn": "monitoringcoreoscom.PrometheusSpecAdditionalAlertManagerConfigs",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpec#additionalAlertRelabelConfigs",
            },
            "remarks": "Alert relabel configurations specified are appended to the configurations generated by the Prometheus Operator. Alert relabel configurations specified must have the form as specified in the official Prometheus documentation: https://prometheus.io/docs/prometheus/latest/configuration/configuration/#alert_relabel_configs. As alert relabel configs are appended, the user is responsible to make sure it is valid. Note that using this feature may expose the possibility to break upgrades of Prometheus. It is advised to review Prometheus release notes to ensure that no incompatible alert relabel configs are going to break Prometheus after the upgrade.",
            "summary": "AdditionalAlertRelabelConfigs allows specifying a key of a Secret containing additional Prometheus alert relabel configurations.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 10695,
          },
          "name": "additionalAlertRelabelConfigs",
          "optional": true,
          "type": Object {
            "fqn": "monitoringcoreoscom.PrometheusSpecAdditionalAlertRelabelConfigs",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpec#additionalScrapeConfigs",
            },
            "remarks": "Scrape configurations specified are appended to the configurations generated by the Prometheus Operator. Job configurations specified must have the form as specified in the official Prometheus documentation: https://prometheus.io/docs/prometheus/latest/configuration/configuration/#scrape_config. As scrape configs are appended, the user is responsible to make sure it is valid. Note that using this feature may expose the possibility to break upgrades of Prometheus. It is advised to review Prometheus release notes to ensure that no incompatible scrape configs are going to break Prometheus after the upgrade.",
            "summary": "AdditionalScrapeConfigs allows specifying a key of a Secret containing additional Prometheus scrape configurations.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 10702,
          },
          "name": "additionalScrapeConfigs",
          "optional": true,
          "type": Object {
            "fqn": "monitoringcoreoscom.PrometheusSpecAdditionalScrapeConfigs",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpec#affinity",
            },
            "summary": "If specified, the pod's scheduling constraints.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 10709,
          },
          "name": "affinity",
          "optional": true,
          "type": Object {
            "fqn": "monitoringcoreoscom.PrometheusSpecAffinity",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpec#alerting",
            },
            "summary": "Define details regarding alerting.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 10716,
          },
          "name": "alerting",
          "optional": true,
          "type": Object {
            "fqn": "monitoringcoreoscom.PrometheusSpecAlerting",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpec#apiserverConfig",
            },
            "remarks": "If left empty, Prometheus is assumed to run inside of the cluster and will discover API servers automatically and use the pod's CA certificate and bearer token file at /var/run/secrets/kubernetes.io/serviceaccount/.",
            "summary": "APIServerConfig allows specifying a host and auth methods to access apiserver.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 10723,
          },
          "name": "apiserverConfig",
          "optional": true,
          "type": Object {
            "fqn": "monitoringcoreoscom.PrometheusSpecApiserverConfig",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpec#arbitraryFSAccessThroughSMs",
            },
            "summary": "ArbitraryFSAccessThroughSMs configures whether configuration based on a service monitor can access arbitrary files on the file system of the Prometheus container e.g. bearer token files.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 10730,
          },
          "name": "arbitraryFsAccessThroughSMs",
          "optional": true,
          "type": Object {
            "fqn": "monitoringcoreoscom.PrometheusSpecArbitraryFsAccessThroughSMs",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpec#baseImage",
            },
            "summary": "Base image to use for a Prometheus deployment.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 10737,
          },
          "name": "baseImage",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpec#configMaps",
            },
            "remarks": "The ConfigMaps are mounted into /etc/prometheus/configmaps/<configmap-name>.",
            "summary": "ConfigMaps is a list of ConfigMaps in the same namespace as the Prometheus object, which shall be mounted into the Prometheus Pods.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 10744,
          },
          "name": "configMaps",
          "optional": true,
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "primitive": "string",
              },
              "kind": "array",
            },
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpec#containers",
            },
            "remarks": "This can be used to allow adding an authentication proxy to a Prometheus pod or to change the behavior of an operator generated container. Containers described here modify an operator generated container if they share the same name and modifications are done via a strategic merge patch. The current container names are: \`prometheus\`, \`prometheus-config-reloader\`, \`rules-configmap-reloader\`, and \`thanos-sidecar\`. Overriding containers is entirely outside the scope of what the maintainers will support and by doing so, you accept that this behaviour may break at any time without notice.",
            "summary": "Containers allows injecting additional containers or modifying operator generated containers.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 10751,
          },
          "name": "containers",
          "optional": true,
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "fqn": "monitoringcoreoscom.PrometheusSpecContainers",
              },
              "kind": "array",
            },
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpec#disableCompaction",
            },
            "summary": "Disable prometheus compaction.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 10758,
          },
          "name": "disableCompaction",
          "optional": true,
          "type": Object {
            "primitive": "boolean",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpec#enableAdminAPI",
            },
            "default": "the value of \`false\`. WARNING: Enabling the admin APIs enables mutating endpoints, to delete data, shutdown Prometheus, and more. Enabling this should be done with care and the user is advised to add additional authentication authorization via a proxy to ensure only clients authorized to perform these actions can do so. For more information see https://prometheus.io/docs/prometheus/latest/querying/api/#tsdb-admin-apis",
            "remarks": "Defaults to the value of \`false\`. WARNING: Enabling the admin APIs enables mutating endpoints, to delete data, shutdown Prometheus, and more. Enabling this should be done with care and the user is advised to add additional authentication authorization via a proxy to ensure only clients authorized to perform these actions can do so. For more information see https://prometheus.io/docs/prometheus/latest/querying/api/#tsdb-admin-apis",
            "summary": "Enable access to prometheus web admin API.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 10766,
          },
          "name": "enableAdminApi",
          "optional": true,
          "type": Object {
            "primitive": "boolean",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpec#enforcedNamespaceLabel",
            },
            "remarks": "The label value will always be the namespace of the object that is being created.",
            "summary": "EnforcedNamespaceLabel enforces adding a namespace label of origin for each alert and metric that is user created.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 10773,
          },
          "name": "enforcedNamespaceLabel",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpec#evaluationInterval",
            },
            "summary": "Interval between consecutive evaluations.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 10780,
          },
          "name": "evaluationInterval",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpec#externalLabels",
            },
            "summary": "The labels to add to any time series or alerts when communicating with external systems (federation, remote storage, Alertmanager).",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 10787,
          },
          "name": "externalLabels",
          "optional": true,
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "primitive": "string",
              },
              "kind": "map",
            },
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpec#externalUrl",
            },
            "remarks": "This is necessary to generate correct URLs. This is necessary if Prometheus is not served from root of a DNS name.",
            "summary": "The external URL the Prometheus instances will be available under.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 10794,
          },
          "name": "externalUrl",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpec#ignoreNamespaceSelectors",
            },
            "default": "false.",
            "remarks": "Defaults to false.",
            "summary": "IgnoreNamespaceSelectors if set to true will ignore NamespaceSelector settings from the podmonitor and servicemonitor configs, and they will only discover endpoints within their current namespace.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 10802,
          },
          "name": "ignoreNamespaceSelectors",
          "optional": true,
          "type": Object {
            "primitive": "boolean",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpec#image",
            },
            "remarks": "Specifying the version is still necessary to ensure the Prometheus Operator knows what version of Prometheus is being configured.",
            "summary": "Image if specified has precedence over baseImage, tag and sha combinations.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 10809,
          },
          "name": "image",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpec#imagePullSecrets",
            },
            "summary": "An optional list of references to secrets in the same namespace to use for pulling prometheus and alertmanager images from registries see http://kubernetes.io/docs/user-guide/images#specifying-imagepullsecrets-on-a-pod.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 10816,
          },
          "name": "imagePullSecrets",
          "optional": true,
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "fqn": "monitoringcoreoscom.PrometheusSpecImagePullSecrets",
              },
              "kind": "array",
            },
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpec#initContainers",
            },
            "remarks": "Those can be used to e.g. fetch secrets for injection into the Prometheus configuration from external sources. Any errors during the execution of an initContainer will lead to a restart of the Pod. More info: https://kubernetes.io/docs/concepts/workloads/pods/init-containers/ Using initContainers for any use case other then secret fetching is entirely outside the scope of what the maintainers will support and by doing so, you accept that this behaviour may break at any time without notice.",
            "summary": "InitContainers allows adding initContainers to the pod definition.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 10823,
          },
          "name": "initContainers",
          "optional": true,
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "fqn": "monitoringcoreoscom.PrometheusSpecInitContainers",
              },
              "kind": "array",
            },
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpec#listenLocal",
            },
            "summary": "ListenLocal makes the Prometheus server listen on loopback, so that it does not bind against the Pod IP.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 10830,
          },
          "name": "listenLocal",
          "optional": true,
          "type": Object {
            "primitive": "boolean",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpec#logFormat",
            },
            "summary": "Log format for Prometheus to be configured with.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 10837,
          },
          "name": "logFormat",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpec#logLevel",
            },
            "summary": "Log level for Prometheus to be configured with.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 10844,
          },
          "name": "logLevel",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpec#nodeSelector",
            },
            "summary": "Define which Nodes the Pods are scheduled on.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 10851,
          },
          "name": "nodeSelector",
          "optional": true,
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "primitive": "string",
              },
              "kind": "map",
            },
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpec#overrideHonorLabels",
            },
            "remarks": "If HonorLabels is set in ServiceMonitor or PodMonitor to true, this overrides honor_labels to false.",
            "summary": "OverrideHonorLabels if set to true overrides all user configured honor_labels.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 10858,
          },
          "name": "overrideHonorLabels",
          "optional": true,
          "type": Object {
            "primitive": "boolean",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpec#overrideHonorTimestamps",
            },
            "summary": "OverrideHonorTimestamps allows to globally enforce honoring timestamps in all scrape configs.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 10865,
          },
          "name": "overrideHonorTimestamps",
          "optional": true,
          "type": Object {
            "primitive": "boolean",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpec#paused",
            },
            "summary": "When a Prometheus deployment is paused, no actions except for deletion will be performed on the underlying objects.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 10872,
          },
          "name": "paused",
          "optional": true,
          "type": Object {
            "primitive": "boolean",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpec#podMetadata",
            },
            "summary": "PodMetadata configures Labels and Annotations which are propagated to the prometheus pods.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 10879,
          },
          "name": "podMetadata",
          "optional": true,
          "type": Object {
            "fqn": "monitoringcoreoscom.PrometheusSpecPodMetadata",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpec#podMonitorNamespaceSelector",
            },
            "remarks": "If nil, only check own namespace.",
            "summary": "Namespaces to be selected for PodMonitor discovery.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 10886,
          },
          "name": "podMonitorNamespaceSelector",
          "optional": true,
          "type": Object {
            "fqn": "monitoringcoreoscom.PrometheusSpecPodMonitorNamespaceSelector",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpec#podMonitorSelector",
            },
            "remarks": "*Deprecated:* if neither this nor serviceMonitorSelector are specified, configuration is unmanaged.",
            "summary": "*Experimental* PodMonitors to be selected for target discovery.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 10893,
          },
          "name": "podMonitorSelector",
          "optional": true,
          "type": Object {
            "fqn": "monitoringcoreoscom.PrometheusSpecPodMonitorSelector",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpec#portName",
            },
            "remarks": "This defaults to web",
            "summary": "Port name used for the pods and governing service.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 10900,
          },
          "name": "portName",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpec#priorityClassName",
            },
            "summary": "Priority class assigned to the Pods.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 10907,
          },
          "name": "priorityClassName",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpec#prometheusExternalLabelName",
            },
            "default": "the value of \`prometheus\`. External label will _not_ be added when value is set to empty string (\`\\"\\"\`).",
            "remarks": "Defaults to the value of \`prometheus\`. External label will _not_ be added when value is set to empty string (\`\\"\\"\`).",
            "summary": "Name of Prometheus external label used to denote Prometheus instance name.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 10915,
          },
          "name": "prometheusExternalLabelName",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpec#query",
            },
            "summary": "QuerySpec defines the query command line flags when starting Prometheus.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 10922,
          },
          "name": "query",
          "optional": true,
          "type": Object {
            "fqn": "monitoringcoreoscom.PrometheusSpecQuery",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpec#queryLogFile",
            },
            "remarks": "Note that this location must be writable, and can be persisted using an attached volume. Alternatively, the location can be set to a stdout location such as \`/dev/stdout\` to log querie information to the default Prometheus log stream. This is only available in versions of Prometheus >= 2.16.0. For more details, see the Prometheus docs (https://prometheus.io/docs/guides/query-log/)",
            "summary": "QueryLogFile specifies the file to which PromQL queries are logged.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 10929,
          },
          "name": "queryLogFile",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpec#remoteRead",
            },
            "remarks": "This is an experimental feature, it may change in any upcoming release in a breaking way.",
            "summary": "If specified, the remote_read spec.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 10936,
          },
          "name": "remoteRead",
          "optional": true,
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "fqn": "monitoringcoreoscom.PrometheusSpecRemoteRead",
              },
              "kind": "array",
            },
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpec#remoteWrite",
            },
            "remarks": "This is an experimental feature, it may change in any upcoming release in a breaking way.",
            "summary": "If specified, the remote_write spec.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 10943,
          },
          "name": "remoteWrite",
          "optional": true,
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "fqn": "monitoringcoreoscom.PrometheusSpecRemoteWrite",
              },
              "kind": "array",
            },
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpec#replicaExternalLabelName",
            },
            "default": "the value of \`prometheus_replica\`. External label will _not_ be added when value is set to empty string (\`\\"\\"\`).",
            "remarks": "Defaults to the value of \`prometheus_replica\`. External label will _not_ be added when value is set to empty string (\`\\"\\"\`).",
            "summary": "Name of Prometheus external label used to denote replica name.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 10951,
          },
          "name": "replicaExternalLabelName",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpec#replicas",
            },
            "summary": "Number of instances to deploy for a Prometheus deployment.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 10958,
          },
          "name": "replicas",
          "optional": true,
          "type": Object {
            "primitive": "number",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpec#resources",
            },
            "summary": "Define resources requests and limits for single Pods.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 10965,
          },
          "name": "resources",
          "optional": true,
          "type": Object {
            "fqn": "monitoringcoreoscom.PrometheusSpecResources",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpec#retention",
            },
            "default": "24h', and must match the regular expression \`[0-9]+(ms|s|m|h|d|w|y)\` (milliseconds seconds minutes hours days weeks years).",
            "remarks": "Default is '24h', and must match the regular expression \`[0-9]+(ms|s|m|h|d|w|y)\` (milliseconds seconds minutes hours days weeks years).",
            "summary": "Time duration Prometheus shall retain data for.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 10973,
          },
          "name": "retention",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpec#retentionSize",
            },
            "summary": "Maximum amount of disk space used by blocks.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 10980,
          },
          "name": "retentionSize",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpec#routePrefix",
            },
            "remarks": "This is useful, if using ExternalURL and a proxy is rewriting HTTP routes of a request, and the actual ExternalURL is still true, but the server serves requests under a different route prefix. For example for use with \`kubectl proxy\`.",
            "summary": "The route prefix Prometheus registers HTTP handlers for.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 10987,
          },
          "name": "routePrefix",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpec#ruleNamespaceSelector",
            },
            "remarks": "If unspecified, only the same namespace as the Prometheus object is in is used.",
            "summary": "Namespaces to be selected for PrometheusRules discovery.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 10994,
          },
          "name": "ruleNamespaceSelector",
          "optional": true,
          "type": Object {
            "fqn": "monitoringcoreoscom.PrometheusSpecRuleNamespaceSelector",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpec#rules",
            },
            "summary": "/--rules._/ command-line arguments.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 11008,
          },
          "name": "rules",
          "optional": true,
          "type": Object {
            "fqn": "monitoringcoreoscom.PrometheusSpecRules",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpec#ruleSelector",
            },
            "remarks": "Until (excluding) Prometheus Operator v0.24.0 Prometheus Operator will migrate any legacy rule ConfigMaps to PrometheusRule custom resources selected by RuleSelector. Make sure it does not match any config maps that you do not want to be migrated.",
            "summary": "A selector to select which PrometheusRules to mount for loading alerting/recording rules from.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 11001,
          },
          "name": "ruleSelector",
          "optional": true,
          "type": Object {
            "fqn": "monitoringcoreoscom.PrometheusSpecRuleSelector",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpec#scrapeInterval",
            },
            "summary": "Interval between consecutive scrapes.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 11015,
          },
          "name": "scrapeInterval",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpec#secrets",
            },
            "remarks": "The Secrets are mounted into /etc/prometheus/secrets/<secret-name>.",
            "summary": "Secrets is a list of Secrets in the same namespace as the Prometheus object, which shall be mounted into the Prometheus Pods.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 11022,
          },
          "name": "secrets",
          "optional": true,
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "primitive": "string",
              },
              "kind": "array",
            },
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpec#securityContext",
            },
            "remarks": "This defaults to the default PodSecurityContext.",
            "summary": "SecurityContext holds pod-level security attributes and common container settings.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 11029,
          },
          "name": "securityContext",
          "optional": true,
          "type": Object {
            "fqn": "monitoringcoreoscom.PrometheusSpecSecurityContext",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpec#serviceAccountName",
            },
            "summary": "ServiceAccountName is the name of the ServiceAccount to use to run the Prometheus Pods.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 11036,
          },
          "name": "serviceAccountName",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpec#serviceMonitorNamespaceSelector",
            },
            "remarks": "If nil, only check own namespace.",
            "summary": "Namespaces to be selected for ServiceMonitor discovery.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 11043,
          },
          "name": "serviceMonitorNamespaceSelector",
          "optional": true,
          "type": Object {
            "fqn": "monitoringcoreoscom.PrometheusSpecServiceMonitorNamespaceSelector",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpec#serviceMonitorSelector",
            },
            "remarks": "*Deprecated:* if neither this nor podMonitorSelector are specified, configuration is unmanaged.",
            "summary": "ServiceMonitors to be selected for target discovery.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 11050,
          },
          "name": "serviceMonitorSelector",
          "optional": true,
          "type": Object {
            "fqn": "monitoringcoreoscom.PrometheusSpecServiceMonitorSelector",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpec#sha",
            },
            "default": "the value of \`version\`. Similar to a tag, but the SHA explicitly deploys an immutable container image. Version and Tag are ignored if SHA is set.",
            "remarks": "Defaults to the value of \`version\`. Similar to a tag, but the SHA explicitly deploys an immutable container image. Version and Tag are ignored if SHA is set.",
            "summary": "SHA of Prometheus container image to be deployed.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 11058,
          },
          "name": "sha",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpec#storage",
            },
            "summary": "Storage spec to specify how storage shall be used.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 11065,
          },
          "name": "storage",
          "optional": true,
          "type": Object {
            "fqn": "monitoringcoreoscom.PrometheusSpecStorage",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpec#tag",
            },
            "default": "the value of \`version\`. Version is ignored if Tag is set.",
            "remarks": "Defaults to the value of \`version\`. Version is ignored if Tag is set.",
            "summary": "Tag of Prometheus container image to be deployed.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 11073,
          },
          "name": "tag",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpec#thanos",
            },
            "remarks": "This section is experimental, it may change significantly without deprecation notice in any release.
This is experimental and may change significantly without backward compatibility in any release.",
            "summary": "Thanos configuration allows configuring various aspects of a Prometheus server in a Thanos environment.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 11082,
          },
          "name": "thanos",
          "optional": true,
          "type": Object {
            "fqn": "monitoringcoreoscom.PrometheusSpecThanos",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpec#tolerations",
            },
            "summary": "If specified, the pod's tolerations.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 11089,
          },
          "name": "tolerations",
          "optional": true,
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "fqn": "monitoringcoreoscom.PrometheusSpecTolerations",
              },
              "kind": "array",
            },
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpec#version",
            },
            "summary": "Version of Prometheus to be deployed.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 11096,
          },
          "name": "version",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpec#volumeMounts",
            },
            "remarks": "VolumeMounts specified will be appended to other VolumeMounts in the prometheus container, that are generated as a result of StorageSpec objects.",
            "summary": "VolumeMounts allows configuration of additional VolumeMounts on the output StatefulSet definition.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 11103,
          },
          "name": "volumeMounts",
          "optional": true,
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "fqn": "monitoringcoreoscom.PrometheusSpecVolumeMounts",
              },
              "kind": "array",
            },
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpec#volumes",
            },
            "remarks": "Volumes specified will be appended to other volumes that are generated as a result of StorageSpec objects.",
            "summary": "Volumes allows configuration of additional volumes on the output StatefulSet definition.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 11110,
          },
          "name": "volumes",
          "optional": true,
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "fqn": "monitoringcoreoscom.PrometheusSpecVolumes",
              },
              "kind": "array",
            },
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpec#walCompression",
            },
            "remarks": "This flag is only available in versions of Prometheus >= 2.11.0.",
            "summary": "Enable compression of the write-ahead log using Snappy.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 11117,
          },
          "name": "walCompression",
          "optional": true,
          "type": Object {
            "primitive": "boolean",
          },
        },
      ],
    },
    "monitoringcoreoscom.PrometheusSpecAdditionalAlertManagerConfigs": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "PrometheusSpecAdditionalAlertManagerConfigs",
        },
        "remarks": "AlertManager configurations specified are appended to the configurations generated by the Prometheus Operator. Job configurations specified must have the form as specified in the official Prometheus documentation: https://prometheus.io/docs/prometheus/latest/configuration/configuration/#alertmanager_config. As AlertManager configs are appended, the user is responsible to make sure it is valid. Note that using this feature may expose the possibility to break upgrades of Prometheus. It is advised to review Prometheus release notes to ensure that no incompatible AlertManager configs are going to break Prometheus after the upgrade.",
        "summary": "AdditionalAlertManagerConfigs allows specifying a key of a Secret containing additional Prometheus AlertManager configurations.",
      },
      "fqn": "monitoringcoreoscom.PrometheusSpecAdditionalAlertManagerConfigs",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 11200,
      },
      "name": "PrometheusSpecAdditionalAlertManagerConfigs",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecAdditionalAlertManagerConfigs#key",
            },
            "remarks": "Must be a valid secret key.",
            "summary": "The key of the secret to select from.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 11206,
          },
          "name": "key",
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecAdditionalAlertManagerConfigs#name",
            },
            "remarks": "More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?",
            "summary": "Name of the referent.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 11213,
          },
          "name": "name",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecAdditionalAlertManagerConfigs#optional",
            },
            "summary": "Specify whether the Secret or its key must be defined.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 11220,
          },
          "name": "optional",
          "optional": true,
          "type": Object {
            "primitive": "boolean",
          },
        },
      ],
    },
    "monitoringcoreoscom.PrometheusSpecAdditionalAlertRelabelConfigs": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "PrometheusSpecAdditionalAlertRelabelConfigs",
        },
        "remarks": "Alert relabel configurations specified are appended to the configurations generated by the Prometheus Operator. Alert relabel configurations specified must have the form as specified in the official Prometheus documentation: https://prometheus.io/docs/prometheus/latest/configuration/configuration/#alert_relabel_configs. As alert relabel configs are appended, the user is responsible to make sure it is valid. Note that using this feature may expose the possibility to break upgrades of Prometheus. It is advised to review Prometheus release notes to ensure that no incompatible alert relabel configs are going to break Prometheus after the upgrade.",
        "summary": "AdditionalAlertRelabelConfigs allows specifying a key of a Secret containing additional Prometheus alert relabel configurations.",
      },
      "fqn": "monitoringcoreoscom.PrometheusSpecAdditionalAlertRelabelConfigs",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 11245,
      },
      "name": "PrometheusSpecAdditionalAlertRelabelConfigs",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecAdditionalAlertRelabelConfigs#key",
            },
            "remarks": "Must be a valid secret key.",
            "summary": "The key of the secret to select from.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 11251,
          },
          "name": "key",
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecAdditionalAlertRelabelConfigs#name",
            },
            "remarks": "More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?",
            "summary": "Name of the referent.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 11258,
          },
          "name": "name",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecAdditionalAlertRelabelConfigs#optional",
            },
            "summary": "Specify whether the Secret or its key must be defined.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 11265,
          },
          "name": "optional",
          "optional": true,
          "type": Object {
            "primitive": "boolean",
          },
        },
      ],
    },
    "monitoringcoreoscom.PrometheusSpecAdditionalScrapeConfigs": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "PrometheusSpecAdditionalScrapeConfigs",
        },
        "remarks": "Scrape configurations specified are appended to the configurations generated by the Prometheus Operator. Job configurations specified must have the form as specified in the official Prometheus documentation: https://prometheus.io/docs/prometheus/latest/configuration/configuration/#scrape_config. As scrape configs are appended, the user is responsible to make sure it is valid. Note that using this feature may expose the possibility to break upgrades of Prometheus. It is advised to review Prometheus release notes to ensure that no incompatible scrape configs are going to break Prometheus after the upgrade.",
        "summary": "AdditionalScrapeConfigs allows specifying a key of a Secret containing additional Prometheus scrape configurations.",
      },
      "fqn": "monitoringcoreoscom.PrometheusSpecAdditionalScrapeConfigs",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 11290,
      },
      "name": "PrometheusSpecAdditionalScrapeConfigs",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecAdditionalScrapeConfigs#key",
            },
            "remarks": "Must be a valid secret key.",
            "summary": "The key of the secret to select from.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 11296,
          },
          "name": "key",
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecAdditionalScrapeConfigs#name",
            },
            "remarks": "More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?",
            "summary": "Name of the referent.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 11303,
          },
          "name": "name",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecAdditionalScrapeConfigs#optional",
            },
            "summary": "Specify whether the Secret or its key must be defined.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 11310,
          },
          "name": "optional",
          "optional": true,
          "type": Object {
            "primitive": "boolean",
          },
        },
      ],
    },
    "monitoringcoreoscom.PrometheusSpecAffinity": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "PrometheusSpecAffinity",
        },
        "summary": "If specified, the pod's scheduling constraints.",
      },
      "fqn": "monitoringcoreoscom.PrometheusSpecAffinity",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 11335,
      },
      "name": "PrometheusSpecAffinity",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecAffinity#nodeAffinity",
            },
            "summary": "Describes node affinity scheduling rules for the pod.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 11341,
          },
          "name": "nodeAffinity",
          "optional": true,
          "type": Object {
            "fqn": "monitoringcoreoscom.PrometheusSpecAffinityNodeAffinity",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecAffinity#podAffinity",
            },
            "summary": "Describes pod affinity scheduling rules (e.g. co-locate this pod in the same node, zone, etc. as some other pod(s)).",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 11348,
          },
          "name": "podAffinity",
          "optional": true,
          "type": Object {
            "fqn": "monitoringcoreoscom.PrometheusSpecAffinityPodAffinity",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecAffinity#podAntiAffinity",
            },
            "summary": "Describes pod anti-affinity scheduling rules (e.g. avoid putting this pod in the same node, zone, etc. as some other pod(s)).",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 11355,
          },
          "name": "podAntiAffinity",
          "optional": true,
          "type": Object {
            "fqn": "monitoringcoreoscom.PrometheusSpecAffinityPodAntiAffinity",
          },
        },
      ],
    },
    "monitoringcoreoscom.PrometheusSpecAffinityNodeAffinity": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "PrometheusSpecAffinityNodeAffinity",
        },
        "summary": "Describes node affinity scheduling rules for the pod.",
      },
      "fqn": "monitoringcoreoscom.PrometheusSpecAffinityNodeAffinity",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 13169,
      },
      "name": "PrometheusSpecAffinityNodeAffinity",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecAffinityNodeAffinity#preferredDuringSchedulingIgnoredDuringExecution",
            },
            "remarks": "The node that is most preferred is the one with the greatest sum of weights, i.e. for each node that meets all of the scheduling requirements (resource request, requiredDuringScheduling affinity expressions, etc.), compute a sum by iterating through the elements of this field and adding \\"weight\\" to the sum if the node matches the corresponding matchExpressions; the node(s) with the highest sum are the most preferred.",
            "summary": "The scheduler will prefer to schedule pods to nodes that satisfy the affinity expressions specified by this field, but it may choose a node that violates one or more of the expressions.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 13175,
          },
          "name": "preferredDuringSchedulingIgnoredDuringExecution",
          "optional": true,
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "fqn": "monitoringcoreoscom.PrometheusSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecution",
              },
              "kind": "array",
            },
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecAffinityNodeAffinity#requiredDuringSchedulingIgnoredDuringExecution",
            },
            "remarks": "If the affinity requirements specified by this field cease to be met at some point during pod execution (e.g. due to an update), the system may or may not try to eventually evict the pod from its node.",
            "summary": "If the affinity requirements specified by this field are not met at scheduling time, the pod will not be scheduled onto the node.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 13182,
          },
          "name": "requiredDuringSchedulingIgnoredDuringExecution",
          "optional": true,
          "type": Object {
            "fqn": "monitoringcoreoscom.PrometheusSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecution",
          },
        },
      ],
    },
    "monitoringcoreoscom.PrometheusSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecution": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "PrometheusSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecution",
        },
        "summary": "An empty preferred scheduling term matches all objects with implicit weight 0 (i.e. it's a no-op). A null preferred scheduling term matches no objects (i.e. is also a no-op).",
      },
      "fqn": "monitoringcoreoscom.PrometheusSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecution",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 17650,
      },
      "name": "PrometheusSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecution",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecution#preference",
            },
            "summary": "A node selector term, associated with the corresponding weight.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 17656,
          },
          "name": "preference",
          "type": Object {
            "fqn": "monitoringcoreoscom.PrometheusSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreference",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecution#weight",
            },
            "summary": "Weight associated with matching the corresponding nodeSelectorTerm, in the range 1-100.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 17663,
          },
          "name": "weight",
          "type": Object {
            "primitive": "number",
          },
        },
      ],
    },
    "monitoringcoreoscom.PrometheusSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreference": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "PrometheusSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreference",
        },
        "summary": "A node selector term, associated with the corresponding weight.",
      },
      "fqn": "monitoringcoreoscom.PrometheusSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreference",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 20808,
      },
      "name": "PrometheusSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreference",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreference#matchExpressions",
            },
            "summary": "A list of node selector requirements by node's labels.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 20814,
          },
          "name": "matchExpressions",
          "optional": true,
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "fqn": "monitoringcoreoscom.PrometheusSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressions",
              },
              "kind": "array",
            },
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreference#matchFields",
            },
            "summary": "A list of node selector requirements by node's fields.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 20821,
          },
          "name": "matchFields",
          "optional": true,
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "fqn": "monitoringcoreoscom.PrometheusSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFields",
              },
              "kind": "array",
            },
          },
        },
      ],
    },
    "monitoringcoreoscom.PrometheusSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressions": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "PrometheusSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressions",
        },
        "summary": "A node selector requirement is a selector that contains values, a key, and an operator that relates the key and values.",
      },
      "fqn": "monitoringcoreoscom.PrometheusSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressions",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 23600,
      },
      "name": "PrometheusSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressions",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressions#key",
            },
            "summary": "The label key that the selector applies to.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 23606,
          },
          "name": "key",
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressions#operator",
            },
            "remarks": "Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.",
            "summary": "Represents a key's relationship to a set of values.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 23613,
          },
          "name": "operator",
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressions#values",
            },
            "remarks": "If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. If the operator is Gt or Lt, the values array must have a single element, which will be interpreted as an integer. This array is replaced during a strategic merge patch.",
            "summary": "An array of string values.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 23620,
          },
          "name": "values",
          "optional": true,
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "primitive": "string",
              },
              "kind": "array",
            },
          },
        },
      ],
    },
    "monitoringcoreoscom.PrometheusSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFields": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "PrometheusSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFields",
        },
        "summary": "A node selector requirement is a selector that contains values, a key, and an operator that relates the key and values.",
      },
      "fqn": "monitoringcoreoscom.PrometheusSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFields",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 23645,
      },
      "name": "PrometheusSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFields",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFields#key",
            },
            "summary": "The label key that the selector applies to.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 23651,
          },
          "name": "key",
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFields#operator",
            },
            "remarks": "Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.",
            "summary": "Represents a key's relationship to a set of values.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 23658,
          },
          "name": "operator",
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFields#values",
            },
            "remarks": "If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. If the operator is Gt or Lt, the values array must have a single element, which will be interpreted as an integer. This array is replaced during a strategic merge patch.",
            "summary": "An array of string values.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 23665,
          },
          "name": "values",
          "optional": true,
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "primitive": "string",
              },
              "kind": "array",
            },
          },
        },
      ],
    },
    "monitoringcoreoscom.PrometheusSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecution": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "PrometheusSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecution",
        },
        "remarks": "If the affinity requirements specified by this field cease to be met at some point during pod execution (e.g. due to an update), the system may or may not try to eventually evict the pod from its node.",
        "summary": "If the affinity requirements specified by this field are not met at scheduling time, the pod will not be scheduled onto the node.",
      },
      "fqn": "monitoringcoreoscom.PrometheusSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecution",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 17687,
      },
      "name": "PrometheusSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecution",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecution#nodeSelectorTerms",
            },
            "remarks": "A list of node selector terms. The terms are ORed.",
            "summary": "Required.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 17693,
          },
          "name": "nodeSelectorTerms",
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "fqn": "monitoringcoreoscom.PrometheusSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTerms",
              },
              "kind": "array",
            },
          },
        },
      ],
    },
    "monitoringcoreoscom.PrometheusSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTerms": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "PrometheusSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTerms",
        },
        "remarks": "The requirements of them are ANDed. The TopologySelectorTerm type implements a subset of the NodeSelectorTerm.",
        "summary": "A null or empty node selector term matches no objects.",
      },
      "fqn": "monitoringcoreoscom.PrometheusSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTerms",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 20845,
      },
      "name": "PrometheusSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTerms",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTerms#matchExpressions",
            },
            "summary": "A list of node selector requirements by node's labels.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 20851,
          },
          "name": "matchExpressions",
          "optional": true,
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "fqn": "monitoringcoreoscom.PrometheusSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressions",
              },
              "kind": "array",
            },
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTerms#matchFields",
            },
            "summary": "A list of node selector requirements by node's fields.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 20858,
          },
          "name": "matchFields",
          "optional": true,
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "fqn": "monitoringcoreoscom.PrometheusSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFields",
              },
              "kind": "array",
            },
          },
        },
      ],
    },
    "monitoringcoreoscom.PrometheusSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressions": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "PrometheusSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressions",
        },
        "summary": "A node selector requirement is a selector that contains values, a key, and an operator that relates the key and values.",
      },
      "fqn": "monitoringcoreoscom.PrometheusSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressions",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 23690,
      },
      "name": "PrometheusSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressions",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressions#key",
            },
            "summary": "The label key that the selector applies to.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 23696,
          },
          "name": "key",
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressions#operator",
            },
            "remarks": "Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.",
            "summary": "Represents a key's relationship to a set of values.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 23703,
          },
          "name": "operator",
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressions#values",
            },
            "remarks": "If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. If the operator is Gt or Lt, the values array must have a single element, which will be interpreted as an integer. This array is replaced during a strategic merge patch.",
            "summary": "An array of string values.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 23710,
          },
          "name": "values",
          "optional": true,
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "primitive": "string",
              },
              "kind": "array",
            },
          },
        },
      ],
    },
    "monitoringcoreoscom.PrometheusSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFields": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "PrometheusSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFields",
        },
        "summary": "A node selector requirement is a selector that contains values, a key, and an operator that relates the key and values.",
      },
      "fqn": "monitoringcoreoscom.PrometheusSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFields",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 23735,
      },
      "name": "PrometheusSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFields",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFields#key",
            },
            "summary": "The label key that the selector applies to.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 23741,
          },
          "name": "key",
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFields#operator",
            },
            "remarks": "Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.",
            "summary": "Represents a key's relationship to a set of values.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 23748,
          },
          "name": "operator",
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFields#values",
            },
            "remarks": "If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. If the operator is Gt or Lt, the values array must have a single element, which will be interpreted as an integer. This array is replaced during a strategic merge patch.",
            "summary": "An array of string values.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 23755,
          },
          "name": "values",
          "optional": true,
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "primitive": "string",
              },
              "kind": "array",
            },
          },
        },
      ],
    },
    "monitoringcoreoscom.PrometheusSpecAffinityPodAffinity": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "PrometheusSpecAffinityPodAffinity",
        },
        "summary": "Describes pod affinity scheduling rules (e.g. co-locate this pod in the same node, zone, etc. as some other pod(s)).",
      },
      "fqn": "monitoringcoreoscom.PrometheusSpecAffinityPodAffinity",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 13206,
      },
      "name": "PrometheusSpecAffinityPodAffinity",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecAffinityPodAffinity#preferredDuringSchedulingIgnoredDuringExecution",
            },
            "remarks": "The node that is most preferred is the one with the greatest sum of weights, i.e. for each node that meets all of the scheduling requirements (resource request, requiredDuringScheduling affinity expressions, etc.), compute a sum by iterating through the elements of this field and adding \\"weight\\" to the sum if the node has pods which matches the corresponding podAffinityTerm; the node(s) with the highest sum are the most preferred.",
            "summary": "The scheduler will prefer to schedule pods to nodes that satisfy the affinity expressions specified by this field, but it may choose a node that violates one or more of the expressions.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 13212,
          },
          "name": "preferredDuringSchedulingIgnoredDuringExecution",
          "optional": true,
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "fqn": "monitoringcoreoscom.PrometheusSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecution",
              },
              "kind": "array",
            },
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecAffinityPodAffinity#requiredDuringSchedulingIgnoredDuringExecution",
            },
            "remarks": "If the affinity requirements specified by this field cease to be met at some point during pod execution (e.g. due to a pod label update), the system may or may not try to eventually evict the pod from its node. When there are multiple elements, the lists of nodes corresponding to each podAffinityTerm are intersected, i.e. all terms must be satisfied.",
            "summary": "If the affinity requirements specified by this field are not met at scheduling time, the pod will not be scheduled onto the node.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 13219,
          },
          "name": "requiredDuringSchedulingIgnoredDuringExecution",
          "optional": true,
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "fqn": "monitoringcoreoscom.PrometheusSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecution",
              },
              "kind": "array",
            },
          },
        },
      ],
    },
    "monitoringcoreoscom.PrometheusSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecution": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "PrometheusSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecution",
        },
        "summary": "The weights of all of the matched WeightedPodAffinityTerm fields are added per-node to find the most preferred node(s).",
      },
      "fqn": "monitoringcoreoscom.PrometheusSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecution",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 17716,
      },
      "name": "PrometheusSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecution",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecution#podAffinityTerm",
            },
            "remarks": "A pod affinity term, associated with the corresponding weight.",
            "summary": "Required.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 17722,
          },
          "name": "podAffinityTerm",
          "type": Object {
            "fqn": "monitoringcoreoscom.PrometheusSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecution#weight",
            },
            "summary": "weight associated with matching the corresponding podAffinityTerm, in the range 1-100.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 17729,
          },
          "name": "weight",
          "type": Object {
            "primitive": "number",
          },
        },
      ],
    },
    "monitoringcoreoscom.PrometheusSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "PrometheusSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm",
        },
        "remarks": "A pod affinity term, associated with the corresponding weight.",
        "summary": "Required.",
      },
      "fqn": "monitoringcoreoscom.PrometheusSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 20882,
      },
      "name": "PrometheusSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm#topologyKey",
            },
            "remarks": "Empty topologyKey is not allowed.",
            "summary": "This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching the labelSelector in the specified namespaces, where co-located is defined as running on a node whose value of the label with key topologyKey matches that of any node on which any of the selected pods is running.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 20902,
          },
          "name": "topologyKey",
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm#labelSelector",
            },
            "summary": "A label query over a set of resources, in this case pods.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 20888,
          },
          "name": "labelSelector",
          "optional": true,
          "type": Object {
            "fqn": "monitoringcoreoscom.PrometheusSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm#namespaces",
            },
            "remarks": "null or empty list means \\"this pod's namespace\\"",
            "summary": "namespaces specifies which namespaces the labelSelector applies to (matches against);",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 20895,
          },
          "name": "namespaces",
          "optional": true,
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "primitive": "string",
              },
              "kind": "array",
            },
          },
        },
      ],
    },
    "monitoringcoreoscom.PrometheusSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "PrometheusSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector",
        },
        "summary": "A label query over a set of resources, in this case pods.",
      },
      "fqn": "monitoringcoreoscom.PrometheusSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 23780,
      },
      "name": "PrometheusSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector#matchExpressions",
            },
            "remarks": "The requirements are ANDed.",
            "summary": "matchExpressions is a list of label selector requirements.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 23786,
          },
          "name": "matchExpressions",
          "optional": true,
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "fqn": "monitoringcoreoscom.PrometheusSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions",
              },
              "kind": "array",
            },
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector#matchLabels",
            },
            "remarks": "A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is \\"key\\", the operator is \\"In\\", and the values array contains only \\"value\\". The requirements are ANDed.",
            "summary": "matchLabels is a map of {key,value} pairs.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 23793,
          },
          "name": "matchLabels",
          "optional": true,
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "primitive": "string",
              },
              "kind": "map",
            },
          },
        },
      ],
    },
    "monitoringcoreoscom.PrometheusSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "PrometheusSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions",
        },
        "summary": "A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.",
      },
      "fqn": "monitoringcoreoscom.PrometheusSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 24596,
      },
      "name": "PrometheusSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions#key",
            },
            "summary": "key is the label key that the selector applies to.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 24602,
          },
          "name": "key",
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions#operator",
            },
            "remarks": "Valid operators are In, NotIn, Exists and DoesNotExist.",
            "summary": "operator represents a key's relationship to a set of values.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 24609,
          },
          "name": "operator",
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions#values",
            },
            "remarks": "If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.",
            "summary": "values is an array of string values.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 24616,
          },
          "name": "values",
          "optional": true,
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "primitive": "string",
              },
              "kind": "array",
            },
          },
        },
      ],
    },
    "monitoringcoreoscom.PrometheusSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecution": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "PrometheusSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecution",
        },
        "summary": "Defines a set of pods (namely those matching the labelSelector relative to the given namespace(s)) that this pod should be co-located (affinity) or not co-located (anti-affinity) with, where co-located is defined as running on a node whose value of the label with key <topologyKey> matches that of any node on which a pod of the set of pods is running.",
      },
      "fqn": "monitoringcoreoscom.PrometheusSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecution",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 17753,
      },
      "name": "PrometheusSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecution",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecution#topologyKey",
            },
            "remarks": "Empty topologyKey is not allowed.",
            "summary": "This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching the labelSelector in the specified namespaces, where co-located is defined as running on a node whose value of the label with key topologyKey matches that of any node on which any of the selected pods is running.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 17773,
          },
          "name": "topologyKey",
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecution#labelSelector",
            },
            "summary": "A label query over a set of resources, in this case pods.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 17759,
          },
          "name": "labelSelector",
          "optional": true,
          "type": Object {
            "fqn": "monitoringcoreoscom.PrometheusSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecution#namespaces",
            },
            "remarks": "null or empty list means \\"this pod's namespace\\"",
            "summary": "namespaces specifies which namespaces the labelSelector applies to (matches against);",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 17766,
          },
          "name": "namespaces",
          "optional": true,
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "primitive": "string",
              },
              "kind": "array",
            },
          },
        },
      ],
    },
    "monitoringcoreoscom.PrometheusSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "PrometheusSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector",
        },
        "summary": "A label query over a set of resources, in this case pods.",
      },
      "fqn": "monitoringcoreoscom.PrometheusSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 20927,
      },
      "name": "PrometheusSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector#matchExpressions",
            },
            "remarks": "The requirements are ANDed.",
            "summary": "matchExpressions is a list of label selector requirements.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 20933,
          },
          "name": "matchExpressions",
          "optional": true,
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "fqn": "monitoringcoreoscom.PrometheusSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions",
              },
              "kind": "array",
            },
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector#matchLabels",
            },
            "remarks": "A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is \\"key\\", the operator is \\"In\\", and the values array contains only \\"value\\". The requirements are ANDed.",
            "summary": "matchLabels is a map of {key,value} pairs.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 20940,
          },
          "name": "matchLabels",
          "optional": true,
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "primitive": "string",
              },
              "kind": "map",
            },
          },
        },
      ],
    },
    "monitoringcoreoscom.PrometheusSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "PrometheusSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions",
        },
        "summary": "A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.",
      },
      "fqn": "monitoringcoreoscom.PrometheusSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 23817,
      },
      "name": "PrometheusSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions#key",
            },
            "summary": "key is the label key that the selector applies to.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 23823,
          },
          "name": "key",
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions#operator",
            },
            "remarks": "Valid operators are In, NotIn, Exists and DoesNotExist.",
            "summary": "operator represents a key's relationship to a set of values.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 23830,
          },
          "name": "operator",
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions#values",
            },
            "remarks": "If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.",
            "summary": "values is an array of string values.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 23837,
          },
          "name": "values",
          "optional": true,
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "primitive": "string",
              },
              "kind": "array",
            },
          },
        },
      ],
    },
    "monitoringcoreoscom.PrometheusSpecAffinityPodAntiAffinity": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "PrometheusSpecAffinityPodAntiAffinity",
        },
        "summary": "Describes pod anti-affinity scheduling rules (e.g. avoid putting this pod in the same node, zone, etc. as some other pod(s)).",
      },
      "fqn": "monitoringcoreoscom.PrometheusSpecAffinityPodAntiAffinity",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 13243,
      },
      "name": "PrometheusSpecAffinityPodAntiAffinity",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecAffinityPodAntiAffinity#preferredDuringSchedulingIgnoredDuringExecution",
            },
            "remarks": "The node that is most preferred is the one with the greatest sum of weights, i.e. for each node that meets all of the scheduling requirements (resource request, requiredDuringScheduling anti-affinity expressions, etc.), compute a sum by iterating through the elements of this field and adding \\"weight\\" to the sum if the node has pods which matches the corresponding podAffinityTerm; the node(s) with the highest sum are the most preferred.",
            "summary": "The scheduler will prefer to schedule pods to nodes that satisfy the anti-affinity expressions specified by this field, but it may choose a node that violates one or more of the expressions.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 13249,
          },
          "name": "preferredDuringSchedulingIgnoredDuringExecution",
          "optional": true,
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "fqn": "monitoringcoreoscom.PrometheusSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecution",
              },
              "kind": "array",
            },
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecAffinityPodAntiAffinity#requiredDuringSchedulingIgnoredDuringExecution",
            },
            "remarks": "If the anti-affinity requirements specified by this field cease to be met at some point during pod execution (e.g. due to a pod label update), the system may or may not try to eventually evict the pod from its node. When there are multiple elements, the lists of nodes corresponding to each podAffinityTerm are intersected, i.e. all terms must be satisfied.",
            "summary": "If the anti-affinity requirements specified by this field are not met at scheduling time, the pod will not be scheduled onto the node.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 13256,
          },
          "name": "requiredDuringSchedulingIgnoredDuringExecution",
          "optional": true,
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "fqn": "monitoringcoreoscom.PrometheusSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecution",
              },
              "kind": "array",
            },
          },
        },
      ],
    },
    "monitoringcoreoscom.PrometheusSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecution": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "PrometheusSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecution",
        },
        "summary": "The weights of all of the matched WeightedPodAffinityTerm fields are added per-node to find the most preferred node(s).",
      },
      "fqn": "monitoringcoreoscom.PrometheusSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecution",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 17798,
      },
      "name": "PrometheusSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecution",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecution#podAffinityTerm",
            },
            "remarks": "A pod affinity term, associated with the corresponding weight.",
            "summary": "Required.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 17804,
          },
          "name": "podAffinityTerm",
          "type": Object {
            "fqn": "monitoringcoreoscom.PrometheusSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecution#weight",
            },
            "summary": "weight associated with matching the corresponding podAffinityTerm, in the range 1-100.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 17811,
          },
          "name": "weight",
          "type": Object {
            "primitive": "number",
          },
        },
      ],
    },
    "monitoringcoreoscom.PrometheusSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "PrometheusSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm",
        },
        "remarks": "A pod affinity term, associated with the corresponding weight.",
        "summary": "Required.",
      },
      "fqn": "monitoringcoreoscom.PrometheusSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 20964,
      },
      "name": "PrometheusSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm#topologyKey",
            },
            "remarks": "Empty topologyKey is not allowed.",
            "summary": "This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching the labelSelector in the specified namespaces, where co-located is defined as running on a node whose value of the label with key topologyKey matches that of any node on which any of the selected pods is running.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 20984,
          },
          "name": "topologyKey",
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm#labelSelector",
            },
            "summary": "A label query over a set of resources, in this case pods.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 20970,
          },
          "name": "labelSelector",
          "optional": true,
          "type": Object {
            "fqn": "monitoringcoreoscom.PrometheusSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm#namespaces",
            },
            "remarks": "null or empty list means \\"this pod's namespace\\"",
            "summary": "namespaces specifies which namespaces the labelSelector applies to (matches against);",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 20977,
          },
          "name": "namespaces",
          "optional": true,
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "primitive": "string",
              },
              "kind": "array",
            },
          },
        },
      ],
    },
    "monitoringcoreoscom.PrometheusSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "PrometheusSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector",
        },
        "summary": "A label query over a set of resources, in this case pods.",
      },
      "fqn": "monitoringcoreoscom.PrometheusSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 23862,
      },
      "name": "PrometheusSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector#matchExpressions",
            },
            "remarks": "The requirements are ANDed.",
            "summary": "matchExpressions is a list of label selector requirements.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 23868,
          },
          "name": "matchExpressions",
          "optional": true,
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "fqn": "monitoringcoreoscom.PrometheusSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions",
              },
              "kind": "array",
            },
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector#matchLabels",
            },
            "remarks": "A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is \\"key\\", the operator is \\"In\\", and the values array contains only \\"value\\". The requirements are ANDed.",
            "summary": "matchLabels is a map of {key,value} pairs.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 23875,
          },
          "name": "matchLabels",
          "optional": true,
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "primitive": "string",
              },
              "kind": "map",
            },
          },
        },
      ],
    },
    "monitoringcoreoscom.PrometheusSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "PrometheusSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions",
        },
        "summary": "A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.",
      },
      "fqn": "monitoringcoreoscom.PrometheusSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 24641,
      },
      "name": "PrometheusSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions#key",
            },
            "summary": "key is the label key that the selector applies to.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 24647,
          },
          "name": "key",
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions#operator",
            },
            "remarks": "Valid operators are In, NotIn, Exists and DoesNotExist.",
            "summary": "operator represents a key's relationship to a set of values.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 24654,
          },
          "name": "operator",
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions#values",
            },
            "remarks": "If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.",
            "summary": "values is an array of string values.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 24661,
          },
          "name": "values",
          "optional": true,
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "primitive": "string",
              },
              "kind": "array",
            },
          },
        },
      ],
    },
    "monitoringcoreoscom.PrometheusSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecution": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "PrometheusSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecution",
        },
        "summary": "Defines a set of pods (namely those matching the labelSelector relative to the given namespace(s)) that this pod should be co-located (affinity) or not co-located (anti-affinity) with, where co-located is defined as running on a node whose value of the label with key <topologyKey> matches that of any node on which a pod of the set of pods is running.",
      },
      "fqn": "monitoringcoreoscom.PrometheusSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecution",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 17835,
      },
      "name": "PrometheusSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecution",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecution#topologyKey",
            },
            "remarks": "Empty topologyKey is not allowed.",
            "summary": "This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching the labelSelector in the specified namespaces, where co-located is defined as running on a node whose value of the label with key topologyKey matches that of any node on which any of the selected pods is running.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 17855,
          },
          "name": "topologyKey",
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecution#labelSelector",
            },
            "summary": "A label query over a set of resources, in this case pods.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 17841,
          },
          "name": "labelSelector",
          "optional": true,
          "type": Object {
            "fqn": "monitoringcoreoscom.PrometheusSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecution#namespaces",
            },
            "remarks": "null or empty list means \\"this pod's namespace\\"",
            "summary": "namespaces specifies which namespaces the labelSelector applies to (matches against);",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 17848,
          },
          "name": "namespaces",
          "optional": true,
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "primitive": "string",
              },
              "kind": "array",
            },
          },
        },
      ],
    },
    "monitoringcoreoscom.PrometheusSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "PrometheusSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector",
        },
        "summary": "A label query over a set of resources, in this case pods.",
      },
      "fqn": "monitoringcoreoscom.PrometheusSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 21009,
      },
      "name": "PrometheusSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector#matchExpressions",
            },
            "remarks": "The requirements are ANDed.",
            "summary": "matchExpressions is a list of label selector requirements.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 21015,
          },
          "name": "matchExpressions",
          "optional": true,
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "fqn": "monitoringcoreoscom.PrometheusSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions",
              },
              "kind": "array",
            },
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector#matchLabels",
            },
            "remarks": "A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is \\"key\\", the operator is \\"In\\", and the values array contains only \\"value\\". The requirements are ANDed.",
            "summary": "matchLabels is a map of {key,value} pairs.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 21022,
          },
          "name": "matchLabels",
          "optional": true,
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "primitive": "string",
              },
              "kind": "map",
            },
          },
        },
      ],
    },
    "monitoringcoreoscom.PrometheusSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "PrometheusSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions",
        },
        "summary": "A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.",
      },
      "fqn": "monitoringcoreoscom.PrometheusSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 23899,
      },
      "name": "PrometheusSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions#key",
            },
            "summary": "key is the label key that the selector applies to.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 23905,
          },
          "name": "key",
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions#operator",
            },
            "remarks": "Valid operators are In, NotIn, Exists and DoesNotExist.",
            "summary": "operator represents a key's relationship to a set of values.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 23912,
          },
          "name": "operator",
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions#values",
            },
            "remarks": "If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.",
            "summary": "values is an array of string values.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 23919,
          },
          "name": "values",
          "optional": true,
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "primitive": "string",
              },
              "kind": "array",
            },
          },
        },
      ],
    },
    "monitoringcoreoscom.PrometheusSpecAlerting": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "PrometheusSpecAlerting",
        },
        "summary": "Define details regarding alerting.",
      },
      "fqn": "monitoringcoreoscom.PrometheusSpecAlerting",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 11380,
      },
      "name": "PrometheusSpecAlerting",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecAlerting#alertmanagers",
            },
            "summary": "AlertmanagerEndpoints Prometheus should fire alerts against.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 11386,
          },
          "name": "alertmanagers",
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "fqn": "monitoringcoreoscom.PrometheusSpecAlertingAlertmanagers",
              },
              "kind": "array",
            },
          },
        },
      ],
    },
    "monitoringcoreoscom.PrometheusSpecAlertingAlertmanagers": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "PrometheusSpecAlertingAlertmanagers",
        },
        "summary": "AlertmanagerEndpoints defines a selection of a single Endpoints object containing alertmanager IPs to fire alerts against.",
      },
      "fqn": "monitoringcoreoscom.PrometheusSpecAlertingAlertmanagers",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 13280,
      },
      "name": "PrometheusSpecAlertingAlertmanagers",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecAlertingAlertmanagers#name",
            },
            "summary": "Name of Endpoints object in Namespace.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 13300,
          },
          "name": "name",
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecAlertingAlertmanagers#namespace",
            },
            "summary": "Namespace of Endpoints object.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 13307,
          },
          "name": "namespace",
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecAlertingAlertmanagers#port",
            },
            "summary": "Port the Alertmanager API is exposed on.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 13321,
          },
          "name": "port",
          "type": Object {
            "fqn": "monitoringcoreoscom.PrometheusSpecAlertingAlertmanagersPort",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecAlertingAlertmanagers#apiVersion",
            },
            "remarks": "It can be \\"v1\\" or \\"v2\\".",
            "summary": "Version of the Alertmanager API that Prometheus uses to send alerts.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 13286,
          },
          "name": "apiVersion",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecAlertingAlertmanagers#bearerTokenFile",
            },
            "summary": "BearerTokenFile to read from filesystem to use when authenticating to Alertmanager.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 13293,
          },
          "name": "bearerTokenFile",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecAlertingAlertmanagers#pathPrefix",
            },
            "summary": "Prefix for the HTTP path alerts are pushed to.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 13314,
          },
          "name": "pathPrefix",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecAlertingAlertmanagers#scheme",
            },
            "summary": "Scheme to use when firing alerts.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 13328,
          },
          "name": "scheme",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecAlertingAlertmanagers#tlsConfig",
            },
            "summary": "TLS Config to use for alertmanager connection.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 13335,
          },
          "name": "tlsConfig",
          "optional": true,
          "type": Object {
            "fqn": "monitoringcoreoscom.PrometheusSpecAlertingAlertmanagersTlsConfig",
          },
        },
      ],
    },
    "monitoringcoreoscom.PrometheusSpecAlertingAlertmanagersPort": Object {
      "assembly": "monitoringcoreoscom",
      "docs": Object {
        "custom": Object {
          "schema": "PrometheusSpecAlertingAlertmanagersPort",
        },
        "summary": "Port the Alertmanager API is exposed on.",
      },
      "fqn": "monitoringcoreoscom.PrometheusSpecAlertingAlertmanagersPort",
      "kind": "class",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 17880,
      },
      "methods": Array [
        Object {
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 17881,
          },
          "name": "fromNumber",
          "parameters": Array [
            Object {
              "name": "value",
              "type": Object {
                "primitive": "number",
              },
            },
          ],
          "returns": Object {
            "type": Object {
              "fqn": "monitoringcoreoscom.PrometheusSpecAlertingAlertmanagersPort",
            },
          },
          "static": true,
        },
        Object {
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 17884,
          },
          "name": "fromString",
          "parameters": Array [
            Object {
              "name": "value",
              "type": Object {
                "primitive": "string",
              },
            },
          ],
          "returns": Object {
            "type": Object {
              "fqn": "monitoringcoreoscom.PrometheusSpecAlertingAlertmanagersPort",
            },
          },
          "static": true,
        },
      ],
      "name": "PrometheusSpecAlertingAlertmanagersPort",
      "properties": Array [
        Object {
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 17887,
          },
          "name": "value",
          "type": Object {
            "primitive": "any",
          },
        },
      ],
    },
    "monitoringcoreoscom.PrometheusSpecAlertingAlertmanagersTlsConfig": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "PrometheusSpecAlertingAlertmanagersTlsConfig",
        },
        "summary": "TLS Config to use for alertmanager connection.",
      },
      "fqn": "monitoringcoreoscom.PrometheusSpecAlertingAlertmanagersTlsConfig",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 17897,
      },
      "name": "PrometheusSpecAlertingAlertmanagersTlsConfig",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecAlertingAlertmanagersTlsConfig#ca",
            },
            "summary": "Stuct containing the CA cert to use for the targets.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 17903,
          },
          "name": "ca",
          "optional": true,
          "type": Object {
            "fqn": "monitoringcoreoscom.PrometheusSpecAlertingAlertmanagersTlsConfigCa",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecAlertingAlertmanagersTlsConfig#caFile",
            },
            "summary": "Path to the CA cert in the Prometheus container to use for the targets.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 17910,
          },
          "name": "caFile",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecAlertingAlertmanagersTlsConfig#cert",
            },
            "summary": "Struct containing the client cert file for the targets.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 17917,
          },
          "name": "cert",
          "optional": true,
          "type": Object {
            "fqn": "monitoringcoreoscom.PrometheusSpecAlertingAlertmanagersTlsConfigCert",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecAlertingAlertmanagersTlsConfig#certFile",
            },
            "summary": "Path to the client cert file in the Prometheus container for the targets.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 17924,
          },
          "name": "certFile",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecAlertingAlertmanagersTlsConfig#insecureSkipVerify",
            },
            "summary": "Disable target certificate validation.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 17931,
          },
          "name": "insecureSkipVerify",
          "optional": true,
          "type": Object {
            "primitive": "boolean",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecAlertingAlertmanagersTlsConfig#keyFile",
            },
            "summary": "Path to the client key file in the Prometheus container for the targets.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 17938,
          },
          "name": "keyFile",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecAlertingAlertmanagersTlsConfig#keySecret",
            },
            "summary": "Secret containing the client key file for the targets.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 17945,
          },
          "name": "keySecret",
          "optional": true,
          "type": Object {
            "fqn": "monitoringcoreoscom.PrometheusSpecAlertingAlertmanagersTlsConfigKeySecret",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecAlertingAlertmanagersTlsConfig#serverName",
            },
            "summary": "Used to verify the hostname for the targets.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 17952,
          },
          "name": "serverName",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
      ],
    },
    "monitoringcoreoscom.PrometheusSpecAlertingAlertmanagersTlsConfigCa": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "PrometheusSpecAlertingAlertmanagersTlsConfigCa",
        },
        "summary": "Stuct containing the CA cert to use for the targets.",
      },
      "fqn": "monitoringcoreoscom.PrometheusSpecAlertingAlertmanagersTlsConfigCa",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 21046,
      },
      "name": "PrometheusSpecAlertingAlertmanagersTlsConfigCa",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecAlertingAlertmanagersTlsConfigCa#configMap",
            },
            "summary": "ConfigMap containing data to use for the targets.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 21052,
          },
          "name": "configMap",
          "optional": true,
          "type": Object {
            "fqn": "monitoringcoreoscom.PrometheusSpecAlertingAlertmanagersTlsConfigCaConfigMap",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecAlertingAlertmanagersTlsConfigCa#secret",
            },
            "summary": "Secret containing data to use for the targets.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 21059,
          },
          "name": "secret",
          "optional": true,
          "type": Object {
            "fqn": "monitoringcoreoscom.PrometheusSpecAlertingAlertmanagersTlsConfigCaSecret",
          },
        },
      ],
    },
    "monitoringcoreoscom.PrometheusSpecAlertingAlertmanagersTlsConfigCaConfigMap": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "PrometheusSpecAlertingAlertmanagersTlsConfigCaConfigMap",
        },
        "summary": "ConfigMap containing data to use for the targets.",
      },
      "fqn": "monitoringcoreoscom.PrometheusSpecAlertingAlertmanagersTlsConfigCaConfigMap",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 23944,
      },
      "name": "PrometheusSpecAlertingAlertmanagersTlsConfigCaConfigMap",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecAlertingAlertmanagersTlsConfigCaConfigMap#key",
            },
            "summary": "The key to select.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 23950,
          },
          "name": "key",
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecAlertingAlertmanagersTlsConfigCaConfigMap#name",
            },
            "remarks": "More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?",
            "summary": "Name of the referent.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 23957,
          },
          "name": "name",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecAlertingAlertmanagersTlsConfigCaConfigMap#optional",
            },
            "summary": "Specify whether the ConfigMap or its key must be defined.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 23964,
          },
          "name": "optional",
          "optional": true,
          "type": Object {
            "primitive": "boolean",
          },
        },
      ],
    },
    "monitoringcoreoscom.PrometheusSpecAlertingAlertmanagersTlsConfigCaSecret": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "PrometheusSpecAlertingAlertmanagersTlsConfigCaSecret",
        },
        "summary": "Secret containing data to use for the targets.",
      },
      "fqn": "monitoringcoreoscom.PrometheusSpecAlertingAlertmanagersTlsConfigCaSecret",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 23989,
      },
      "name": "PrometheusSpecAlertingAlertmanagersTlsConfigCaSecret",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecAlertingAlertmanagersTlsConfigCaSecret#key",
            },
            "remarks": "Must be a valid secret key.",
            "summary": "The key of the secret to select from.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 23995,
          },
          "name": "key",
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecAlertingAlertmanagersTlsConfigCaSecret#name",
            },
            "remarks": "More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?",
            "summary": "Name of the referent.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 24002,
          },
          "name": "name",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecAlertingAlertmanagersTlsConfigCaSecret#optional",
            },
            "summary": "Specify whether the Secret or its key must be defined.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 24009,
          },
          "name": "optional",
          "optional": true,
          "type": Object {
            "primitive": "boolean",
          },
        },
      ],
    },
    "monitoringcoreoscom.PrometheusSpecAlertingAlertmanagersTlsConfigCert": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "PrometheusSpecAlertingAlertmanagersTlsConfigCert",
        },
        "summary": "Struct containing the client cert file for the targets.",
      },
      "fqn": "monitoringcoreoscom.PrometheusSpecAlertingAlertmanagersTlsConfigCert",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 21083,
      },
      "name": "PrometheusSpecAlertingAlertmanagersTlsConfigCert",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecAlertingAlertmanagersTlsConfigCert#configMap",
            },
            "summary": "ConfigMap containing data to use for the targets.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 21089,
          },
          "name": "configMap",
          "optional": true,
          "type": Object {
            "fqn": "monitoringcoreoscom.PrometheusSpecAlertingAlertmanagersTlsConfigCertConfigMap",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecAlertingAlertmanagersTlsConfigCert#secret",
            },
            "summary": "Secret containing data to use for the targets.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 21096,
          },
          "name": "secret",
          "optional": true,
          "type": Object {
            "fqn": "monitoringcoreoscom.PrometheusSpecAlertingAlertmanagersTlsConfigCertSecret",
          },
        },
      ],
    },
    "monitoringcoreoscom.PrometheusSpecAlertingAlertmanagersTlsConfigCertConfigMap": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "PrometheusSpecAlertingAlertmanagersTlsConfigCertConfigMap",
        },
        "summary": "ConfigMap containing data to use for the targets.",
      },
      "fqn": "monitoringcoreoscom.PrometheusSpecAlertingAlertmanagersTlsConfigCertConfigMap",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 24034,
      },
      "name": "PrometheusSpecAlertingAlertmanagersTlsConfigCertConfigMap",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecAlertingAlertmanagersTlsConfigCertConfigMap#key",
            },
            "summary": "The key to select.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 24040,
          },
          "name": "key",
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecAlertingAlertmanagersTlsConfigCertConfigMap#name",
            },
            "remarks": "More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?",
            "summary": "Name of the referent.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 24047,
          },
          "name": "name",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecAlertingAlertmanagersTlsConfigCertConfigMap#optional",
            },
            "summary": "Specify whether the ConfigMap or its key must be defined.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 24054,
          },
          "name": "optional",
          "optional": true,
          "type": Object {
            "primitive": "boolean",
          },
        },
      ],
    },
    "monitoringcoreoscom.PrometheusSpecAlertingAlertmanagersTlsConfigCertSecret": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "PrometheusSpecAlertingAlertmanagersTlsConfigCertSecret",
        },
        "summary": "Secret containing data to use for the targets.",
      },
      "fqn": "monitoringcoreoscom.PrometheusSpecAlertingAlertmanagersTlsConfigCertSecret",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 24079,
      },
      "name": "PrometheusSpecAlertingAlertmanagersTlsConfigCertSecret",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecAlertingAlertmanagersTlsConfigCertSecret#key",
            },
            "remarks": "Must be a valid secret key.",
            "summary": "The key of the secret to select from.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 24085,
          },
          "name": "key",
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecAlertingAlertmanagersTlsConfigCertSecret#name",
            },
            "remarks": "More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?",
            "summary": "Name of the referent.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 24092,
          },
          "name": "name",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecAlertingAlertmanagersTlsConfigCertSecret#optional",
            },
            "summary": "Specify whether the Secret or its key must be defined.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 24099,
          },
          "name": "optional",
          "optional": true,
          "type": Object {
            "primitive": "boolean",
          },
        },
      ],
    },
    "monitoringcoreoscom.PrometheusSpecAlertingAlertmanagersTlsConfigKeySecret": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "PrometheusSpecAlertingAlertmanagersTlsConfigKeySecret",
        },
        "summary": "Secret containing the client key file for the targets.",
      },
      "fqn": "monitoringcoreoscom.PrometheusSpecAlertingAlertmanagersTlsConfigKeySecret",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 21120,
      },
      "name": "PrometheusSpecAlertingAlertmanagersTlsConfigKeySecret",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecAlertingAlertmanagersTlsConfigKeySecret#key",
            },
            "remarks": "Must be a valid secret key.",
            "summary": "The key of the secret to select from.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 21126,
          },
          "name": "key",
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecAlertingAlertmanagersTlsConfigKeySecret#name",
            },
            "remarks": "More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?",
            "summary": "Name of the referent.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 21133,
          },
          "name": "name",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecAlertingAlertmanagersTlsConfigKeySecret#optional",
            },
            "summary": "Specify whether the Secret or its key must be defined.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 21140,
          },
          "name": "optional",
          "optional": true,
          "type": Object {
            "primitive": "boolean",
          },
        },
      ],
    },
    "monitoringcoreoscom.PrometheusSpecApiserverConfig": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "PrometheusSpecApiserverConfig",
        },
        "remarks": "If left empty, Prometheus is assumed to run inside of the cluster and will discover API servers automatically and use the pod's CA certificate and bearer token file at /var/run/secrets/kubernetes.io/serviceaccount/.",
        "summary": "APIServerConfig allows specifying a host and auth methods to access apiserver.",
      },
      "fqn": "monitoringcoreoscom.PrometheusSpecApiserverConfig",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 11409,
      },
      "name": "PrometheusSpecApiserverConfig",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecApiserverConfig#host",
            },
            "remarks": "A valid string consisting of a hostname or IP followed by an optional port number",
            "summary": "Host of apiserver.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 11436,
          },
          "name": "host",
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecApiserverConfig#basicAuth",
            },
            "summary": "BasicAuth allow an endpoint to authenticate over basic authentication.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 11415,
          },
          "name": "basicAuth",
          "optional": true,
          "type": Object {
            "fqn": "monitoringcoreoscom.PrometheusSpecApiserverConfigBasicAuth",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecApiserverConfig#bearerToken",
            },
            "summary": "Bearer token for accessing apiserver.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 11422,
          },
          "name": "bearerToken",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecApiserverConfig#bearerTokenFile",
            },
            "summary": "File to read bearer token for accessing apiserver.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 11429,
          },
          "name": "bearerTokenFile",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecApiserverConfig#tlsConfig",
            },
            "summary": "TLS Config to use for accessing apiserver.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 11443,
          },
          "name": "tlsConfig",
          "optional": true,
          "type": Object {
            "fqn": "monitoringcoreoscom.PrometheusSpecApiserverConfigTlsConfig",
          },
        },
      ],
    },
    "monitoringcoreoscom.PrometheusSpecApiserverConfigBasicAuth": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "PrometheusSpecApiserverConfigBasicAuth",
        },
        "summary": "BasicAuth allow an endpoint to authenticate over basic authentication.",
      },
      "fqn": "monitoringcoreoscom.PrometheusSpecApiserverConfigBasicAuth",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 13365,
      },
      "name": "PrometheusSpecApiserverConfigBasicAuth",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecApiserverConfigBasicAuth#password",
            },
            "summary": "The secret in the service monitor namespace that contains the password for authentication.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 13371,
          },
          "name": "password",
          "optional": true,
          "type": Object {
            "fqn": "monitoringcoreoscom.PrometheusSpecApiserverConfigBasicAuthPassword",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecApiserverConfigBasicAuth#username",
            },
            "summary": "The secret in the service monitor namespace that contains the username for authentication.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 13378,
          },
          "name": "username",
          "optional": true,
          "type": Object {
            "fqn": "monitoringcoreoscom.PrometheusSpecApiserverConfigBasicAuthUsername",
          },
        },
      ],
    },
    "monitoringcoreoscom.PrometheusSpecApiserverConfigBasicAuthPassword": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "PrometheusSpecApiserverConfigBasicAuthPassword",
        },
        "summary": "The secret in the service monitor namespace that contains the password for authentication.",
      },
      "fqn": "monitoringcoreoscom.PrometheusSpecApiserverConfigBasicAuthPassword",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 17982,
      },
      "name": "PrometheusSpecApiserverConfigBasicAuthPassword",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecApiserverConfigBasicAuthPassword#key",
            },
            "remarks": "Must be a valid secret key.",
            "summary": "The key of the secret to select from.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 17988,
          },
          "name": "key",
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecApiserverConfigBasicAuthPassword#name",
            },
            "remarks": "More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?",
            "summary": "Name of the referent.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 17995,
          },
          "name": "name",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecApiserverConfigBasicAuthPassword#optional",
            },
            "summary": "Specify whether the Secret or its key must be defined.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 18002,
          },
          "name": "optional",
          "optional": true,
          "type": Object {
            "primitive": "boolean",
          },
        },
      ],
    },
    "monitoringcoreoscom.PrometheusSpecApiserverConfigBasicAuthUsername": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "PrometheusSpecApiserverConfigBasicAuthUsername",
        },
        "summary": "The secret in the service monitor namespace that contains the username for authentication.",
      },
      "fqn": "monitoringcoreoscom.PrometheusSpecApiserverConfigBasicAuthUsername",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 18027,
      },
      "name": "PrometheusSpecApiserverConfigBasicAuthUsername",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecApiserverConfigBasicAuthUsername#key",
            },
            "remarks": "Must be a valid secret key.",
            "summary": "The key of the secret to select from.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 18033,
          },
          "name": "key",
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecApiserverConfigBasicAuthUsername#name",
            },
            "remarks": "More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?",
            "summary": "Name of the referent.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 18040,
          },
          "name": "name",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecApiserverConfigBasicAuthUsername#optional",
            },
            "summary": "Specify whether the Secret or its key must be defined.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 18047,
          },
          "name": "optional",
          "optional": true,
          "type": Object {
            "primitive": "boolean",
          },
        },
      ],
    },
    "monitoringcoreoscom.PrometheusSpecApiserverConfigTlsConfig": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "PrometheusSpecApiserverConfigTlsConfig",
        },
        "summary": "TLS Config to use for accessing apiserver.",
      },
      "fqn": "monitoringcoreoscom.PrometheusSpecApiserverConfigTlsConfig",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 13402,
      },
      "name": "PrometheusSpecApiserverConfigTlsConfig",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecApiserverConfigTlsConfig#ca",
            },
            "summary": "Stuct containing the CA cert to use for the targets.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 13408,
          },
          "name": "ca",
          "optional": true,
          "type": Object {
            "fqn": "monitoringcoreoscom.PrometheusSpecApiserverConfigTlsConfigCa",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecApiserverConfigTlsConfig#caFile",
            },
            "summary": "Path to the CA cert in the Prometheus container to use for the targets.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 13415,
          },
          "name": "caFile",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecApiserverConfigTlsConfig#cert",
            },
            "summary": "Struct containing the client cert file for the targets.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 13422,
          },
          "name": "cert",
          "optional": true,
          "type": Object {
            "fqn": "monitoringcoreoscom.PrometheusSpecApiserverConfigTlsConfigCert",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecApiserverConfigTlsConfig#certFile",
            },
            "summary": "Path to the client cert file in the Prometheus container for the targets.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 13429,
          },
          "name": "certFile",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecApiserverConfigTlsConfig#insecureSkipVerify",
            },
            "summary": "Disable target certificate validation.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 13436,
          },
          "name": "insecureSkipVerify",
          "optional": true,
          "type": Object {
            "primitive": "boolean",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecApiserverConfigTlsConfig#keyFile",
            },
            "summary": "Path to the client key file in the Prometheus container for the targets.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 13443,
          },
          "name": "keyFile",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecApiserverConfigTlsConfig#keySecret",
            },
            "summary": "Secret containing the client key file for the targets.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 13450,
          },
          "name": "keySecret",
          "optional": true,
          "type": Object {
            "fqn": "monitoringcoreoscom.PrometheusSpecApiserverConfigTlsConfigKeySecret",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecApiserverConfigTlsConfig#serverName",
            },
            "summary": "Used to verify the hostname for the targets.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 13457,
          },
          "name": "serverName",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
      ],
    },
    "monitoringcoreoscom.PrometheusSpecApiserverConfigTlsConfigCa": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "PrometheusSpecApiserverConfigTlsConfigCa",
        },
        "summary": "Stuct containing the CA cert to use for the targets.",
      },
      "fqn": "monitoringcoreoscom.PrometheusSpecApiserverConfigTlsConfigCa",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 18072,
      },
      "name": "PrometheusSpecApiserverConfigTlsConfigCa",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecApiserverConfigTlsConfigCa#configMap",
            },
            "summary": "ConfigMap containing data to use for the targets.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 18078,
          },
          "name": "configMap",
          "optional": true,
          "type": Object {
            "fqn": "monitoringcoreoscom.PrometheusSpecApiserverConfigTlsConfigCaConfigMap",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecApiserverConfigTlsConfigCa#secret",
            },
            "summary": "Secret containing data to use for the targets.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 18085,
          },
          "name": "secret",
          "optional": true,
          "type": Object {
            "fqn": "monitoringcoreoscom.PrometheusSpecApiserverConfigTlsConfigCaSecret",
          },
        },
      ],
    },
    "monitoringcoreoscom.PrometheusSpecApiserverConfigTlsConfigCaConfigMap": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "PrometheusSpecApiserverConfigTlsConfigCaConfigMap",
        },
        "summary": "ConfigMap containing data to use for the targets.",
      },
      "fqn": "monitoringcoreoscom.PrometheusSpecApiserverConfigTlsConfigCaConfigMap",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 21165,
      },
      "name": "PrometheusSpecApiserverConfigTlsConfigCaConfigMap",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecApiserverConfigTlsConfigCaConfigMap#key",
            },
            "summary": "The key to select.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 21171,
          },
          "name": "key",
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecApiserverConfigTlsConfigCaConfigMap#name",
            },
            "remarks": "More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?",
            "summary": "Name of the referent.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 21178,
          },
          "name": "name",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecApiserverConfigTlsConfigCaConfigMap#optional",
            },
            "summary": "Specify whether the ConfigMap or its key must be defined.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 21185,
          },
          "name": "optional",
          "optional": true,
          "type": Object {
            "primitive": "boolean",
          },
        },
      ],
    },
    "monitoringcoreoscom.PrometheusSpecApiserverConfigTlsConfigCaSecret": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "PrometheusSpecApiserverConfigTlsConfigCaSecret",
        },
        "summary": "Secret containing data to use for the targets.",
      },
      "fqn": "monitoringcoreoscom.PrometheusSpecApiserverConfigTlsConfigCaSecret",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 21210,
      },
      "name": "PrometheusSpecApiserverConfigTlsConfigCaSecret",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecApiserverConfigTlsConfigCaSecret#key",
            },
            "remarks": "Must be a valid secret key.",
            "summary": "The key of the secret to select from.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 21216,
          },
          "name": "key",
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecApiserverConfigTlsConfigCaSecret#name",
            },
            "remarks": "More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?",
            "summary": "Name of the referent.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 21223,
          },
          "name": "name",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecApiserverConfigTlsConfigCaSecret#optional",
            },
            "summary": "Specify whether the Secret or its key must be defined.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 21230,
          },
          "name": "optional",
          "optional": true,
          "type": Object {
            "primitive": "boolean",
          },
        },
      ],
    },
    "monitoringcoreoscom.PrometheusSpecApiserverConfigTlsConfigCert": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "PrometheusSpecApiserverConfigTlsConfigCert",
        },
        "summary": "Struct containing the client cert file for the targets.",
      },
      "fqn": "monitoringcoreoscom.PrometheusSpecApiserverConfigTlsConfigCert",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 18109,
      },
      "name": "PrometheusSpecApiserverConfigTlsConfigCert",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecApiserverConfigTlsConfigCert#configMap",
            },
            "summary": "ConfigMap containing data to use for the targets.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 18115,
          },
          "name": "configMap",
          "optional": true,
          "type": Object {
            "fqn": "monitoringcoreoscom.PrometheusSpecApiserverConfigTlsConfigCertConfigMap",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecApiserverConfigTlsConfigCert#secret",
            },
            "summary": "Secret containing data to use for the targets.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 18122,
          },
          "name": "secret",
          "optional": true,
          "type": Object {
            "fqn": "monitoringcoreoscom.PrometheusSpecApiserverConfigTlsConfigCertSecret",
          },
        },
      ],
    },
    "monitoringcoreoscom.PrometheusSpecApiserverConfigTlsConfigCertConfigMap": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "PrometheusSpecApiserverConfigTlsConfigCertConfigMap",
        },
        "summary": "ConfigMap containing data to use for the targets.",
      },
      "fqn": "monitoringcoreoscom.PrometheusSpecApiserverConfigTlsConfigCertConfigMap",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 21255,
      },
      "name": "PrometheusSpecApiserverConfigTlsConfigCertConfigMap",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecApiserverConfigTlsConfigCertConfigMap#key",
            },
            "summary": "The key to select.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 21261,
          },
          "name": "key",
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecApiserverConfigTlsConfigCertConfigMap#name",
            },
            "remarks": "More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?",
            "summary": "Name of the referent.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 21268,
          },
          "name": "name",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecApiserverConfigTlsConfigCertConfigMap#optional",
            },
            "summary": "Specify whether the ConfigMap or its key must be defined.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 21275,
          },
          "name": "optional",
          "optional": true,
          "type": Object {
            "primitive": "boolean",
          },
        },
      ],
    },
    "monitoringcoreoscom.PrometheusSpecApiserverConfigTlsConfigCertSecret": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "PrometheusSpecApiserverConfigTlsConfigCertSecret",
        },
        "summary": "Secret containing data to use for the targets.",
      },
      "fqn": "monitoringcoreoscom.PrometheusSpecApiserverConfigTlsConfigCertSecret",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 21300,
      },
      "name": "PrometheusSpecApiserverConfigTlsConfigCertSecret",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecApiserverConfigTlsConfigCertSecret#key",
            },
            "remarks": "Must be a valid secret key.",
            "summary": "The key of the secret to select from.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 21306,
          },
          "name": "key",
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecApiserverConfigTlsConfigCertSecret#name",
            },
            "remarks": "More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?",
            "summary": "Name of the referent.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 21313,
          },
          "name": "name",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecApiserverConfigTlsConfigCertSecret#optional",
            },
            "summary": "Specify whether the Secret or its key must be defined.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 21320,
          },
          "name": "optional",
          "optional": true,
          "type": Object {
            "primitive": "boolean",
          },
        },
      ],
    },
    "monitoringcoreoscom.PrometheusSpecApiserverConfigTlsConfigKeySecret": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "PrometheusSpecApiserverConfigTlsConfigKeySecret",
        },
        "summary": "Secret containing the client key file for the targets.",
      },
      "fqn": "monitoringcoreoscom.PrometheusSpecApiserverConfigTlsConfigKeySecret",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 18146,
      },
      "name": "PrometheusSpecApiserverConfigTlsConfigKeySecret",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecApiserverConfigTlsConfigKeySecret#key",
            },
            "remarks": "Must be a valid secret key.",
            "summary": "The key of the secret to select from.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 18152,
          },
          "name": "key",
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecApiserverConfigTlsConfigKeySecret#name",
            },
            "remarks": "More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?",
            "summary": "Name of the referent.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 18159,
          },
          "name": "name",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecApiserverConfigTlsConfigKeySecret#optional",
            },
            "summary": "Specify whether the Secret or its key must be defined.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 18166,
          },
          "name": "optional",
          "optional": true,
          "type": Object {
            "primitive": "boolean",
          },
        },
      ],
    },
    "monitoringcoreoscom.PrometheusSpecArbitraryFsAccessThroughSMs": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "PrometheusSpecArbitraryFsAccessThroughSMs",
        },
        "summary": "ArbitraryFSAccessThroughSMs configures whether configuration based on a service monitor can access arbitrary files on the file system of the Prometheus container e.g. bearer token files.",
      },
      "fqn": "monitoringcoreoscom.PrometheusSpecArbitraryFsAccessThroughSMs",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 11470,
      },
      "name": "PrometheusSpecArbitraryFsAccessThroughSMs",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecArbitraryFsAccessThroughSMs#deny",
            },
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 11474,
          },
          "name": "deny",
          "optional": true,
          "type": Object {
            "primitive": "boolean",
          },
        },
      ],
    },
    "monitoringcoreoscom.PrometheusSpecContainers": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "PrometheusSpecContainers",
        },
        "summary": "A single application container that you want to run within a pod.",
      },
      "fqn": "monitoringcoreoscom.PrometheusSpecContainers",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 11497,
      },
      "name": "PrometheusSpecContainers",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecContainers#name",
            },
            "remarks": "Each container in a pod must have a unique name (DNS_LABEL). Cannot be updated.",
            "summary": "Name of the container specified as a DNS_LABEL.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 11560,
          },
          "name": "name",
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecContainers#args",
            },
            "remarks": "The docker image's CMD is used if this is not provided. Variable references $(VAR_NAME) are expanded using the container's environment. If a variable cannot be resolved, the reference in the input string will be unchanged. The $(VAR_NAME) syntax can be escaped with a double $$, ie: $$(VAR_NAME). Escaped references will never be expanded, regardless of whether the variable exists or not. Cannot be updated. More info: https://kubernetes.io/docs/tasks/inject-data-application/define-command-argument-container/#running-a-command-in-a-shell",
            "summary": "Arguments to the entrypoint.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 11503,
          },
          "name": "args",
          "optional": true,
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "primitive": "string",
              },
              "kind": "array",
            },
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecContainers#command",
            },
            "remarks": "Not executed within a shell. The docker image's ENTRYPOINT is used if this is not provided. Variable references $(VAR_NAME) are expanded using the container's environment. If a variable cannot be resolved, the reference in the input string will be unchanged. The $(VAR_NAME) syntax can be escaped with a double $$, ie: $$(VAR_NAME). Escaped references will never be expanded, regardless of whether the variable exists or not. Cannot be updated. More info: https://kubernetes.io/docs/tasks/inject-data-application/define-command-argument-container/#running-a-command-in-a-shell",
            "summary": "Entrypoint array.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 11510,
          },
          "name": "command",
          "optional": true,
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "primitive": "string",
              },
              "kind": "array",
            },
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecContainers#env",
            },
            "remarks": "Cannot be updated.",
            "summary": "List of environment variables to set in the container.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 11517,
          },
          "name": "env",
          "optional": true,
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "fqn": "monitoringcoreoscom.PrometheusSpecContainersEnv",
              },
              "kind": "array",
            },
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecContainers#envFrom",
            },
            "remarks": "The keys defined within a source must be a C_IDENTIFIER. All invalid keys will be reported as an event when the container is starting. When a key exists in multiple sources, the value associated with the last source will take precedence. Values defined by an Env with a duplicate key will take precedence. Cannot be updated.",
            "summary": "List of sources to populate environment variables in the container.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 11524,
          },
          "name": "envFrom",
          "optional": true,
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "fqn": "monitoringcoreoscom.PrometheusSpecContainersEnvFrom",
              },
              "kind": "array",
            },
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecContainers#image",
            },
            "remarks": "More info: https://kubernetes.io/docs/concepts/containers/images This field is optional to allow higher level config management to default or override container images in workload controllers like Deployments and StatefulSets.",
            "summary": "Docker image name.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 11531,
          },
          "name": "image",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecContainers#imagePullPolicy",
            },
            "default": "Always if :latest tag is specified, or IfNotPresent otherwise. Cannot be updated. More info: https://kubernetes.io/docs/concepts/containers/images#updating-images",
            "remarks": "One of Always, Never, IfNotPresent. Defaults to Always if :latest tag is specified, or IfNotPresent otherwise. Cannot be updated. More info: https://kubernetes.io/docs/concepts/containers/images#updating-images",
            "summary": "Image pull policy.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 11539,
          },
          "name": "imagePullPolicy",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecContainers#lifecycle",
            },
            "remarks": "Cannot be updated.",
            "summary": "Actions that the management system should take in response to container lifecycle events.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 11546,
          },
          "name": "lifecycle",
          "optional": true,
          "type": Object {
            "fqn": "monitoringcoreoscom.PrometheusSpecContainersLifecycle",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecContainers#livenessProbe",
            },
            "remarks": "Container will be restarted if the probe fails. Cannot be updated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes",
            "summary": "Periodic probe of container liveness.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 11553,
          },
          "name": "livenessProbe",
          "optional": true,
          "type": Object {
            "fqn": "monitoringcoreoscom.PrometheusSpecContainersLivenessProbe",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecContainers#ports",
            },
            "remarks": "Exposing a port here gives the system additional information about the network connections a container uses, but is primarily informational. Not specifying a port here DOES NOT prevent that port from being exposed. Any port which is listening on the default \\"0.0.0.0\\" address inside a container will be accessible from the network. Cannot be updated.",
            "summary": "List of ports to expose from the container.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 11567,
          },
          "name": "ports",
          "optional": true,
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "fqn": "monitoringcoreoscom.PrometheusSpecContainersPorts",
              },
              "kind": "array",
            },
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecContainers#readinessProbe",
            },
            "remarks": "Container will be removed from service endpoints if the probe fails. Cannot be updated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes",
            "summary": "Periodic probe of container service readiness.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 11574,
          },
          "name": "readinessProbe",
          "optional": true,
          "type": Object {
            "fqn": "monitoringcoreoscom.PrometheusSpecContainersReadinessProbe",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecContainers#resources",
            },
            "remarks": "Cannot be updated. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/",
            "summary": "Compute Resources required by this container.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 11581,
          },
          "name": "resources",
          "optional": true,
          "type": Object {
            "fqn": "monitoringcoreoscom.PrometheusSpecContainersResources",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecContainers#securityContext",
            },
            "remarks": "More info: https://kubernetes.io/docs/concepts/policy/security-context/ More info: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
            "summary": "Security options the pod should run with.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 11588,
          },
          "name": "securityContext",
          "optional": true,
          "type": Object {
            "fqn": "monitoringcoreoscom.PrometheusSpecContainersSecurityContext",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecContainers#startupProbe",
            },
            "remarks": "If specified, no other probes are executed until this completes successfully. If this probe fails, the Pod will be restarted, just as if the livenessProbe failed. This can be used to provide different probe parameters at the beginning of a Pod's lifecycle, when it might take a long time to load data or warm a cache, than during steady-state operation. This cannot be updated. This is a beta feature enabled by the StartupProbe feature flag. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes",
            "summary": "StartupProbe indicates that the Pod has successfully initialized.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 11595,
          },
          "name": "startupProbe",
          "optional": true,
          "type": Object {
            "fqn": "monitoringcoreoscom.PrometheusSpecContainersStartupProbe",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecContainers#stdin",
            },
            "default": "false.",
            "remarks": "If this is not set, reads from stdin in the container will always result in EOF. Default is false.",
            "summary": "Whether this container should allocate a buffer for stdin in the container runtime.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 11603,
          },
          "name": "stdin",
          "optional": true,
          "type": Object {
            "primitive": "boolean",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecContainers#stdinOnce",
            },
            "default": "false",
            "remarks": "When stdin is true the stdin stream will remain open across multiple attach sessions. If stdinOnce is set to true, stdin is opened on container start, is empty until the first client attaches to stdin, and then remains open and accepts data until the client disconnects, at which time stdin is closed and remains closed until the container is restarted. If this flag is false, a container processes that reads from stdin will never receive an EOF. Default is false",
            "summary": "Whether the container runtime should close the stdin channel after it has been opened by a single attach.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 11611,
          },
          "name": "stdinOnce",
          "optional": true,
          "type": Object {
            "primitive": "boolean",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecContainers#terminationMessagePath",
            },
            "default": "dev/termination-log. Cannot be updated.",
            "remarks": "Message written is intended to be brief final status, such as an assertion failure message. Will be truncated by the node if greater than 4096 bytes. The total message length across all containers will be limited to 12kb. Defaults to /dev/termination-log. Cannot be updated.",
            "summary": "Optional: Path at which the file to which the container's termination message will be written is mounted into the container's filesystem.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 11619,
          },
          "name": "terminationMessagePath",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecContainers#terminationMessagePolicy",
            },
            "default": "File. Cannot be updated.",
            "remarks": "File will use the contents of terminationMessagePath to populate the container status message on both success and failure. FallbackToLogsOnError will use the last chunk of container log output if the termination message file is empty and the container exited with an error. The log output is limited to 2048 bytes or 80 lines, whichever is smaller. Defaults to File. Cannot be updated.",
            "summary": "Indicate how the termination message should be populated.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 11627,
          },
          "name": "terminationMessagePolicy",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecContainers#tty",
            },
            "default": "false.",
            "remarks": "Default is false.",
            "summary": "Whether this container should allocate a TTY for itself, also requires 'stdin' to be true.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 11635,
          },
          "name": "tty",
          "optional": true,
          "type": Object {
            "primitive": "boolean",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecContainers#volumeDevices",
            },
            "summary": "volumeDevices is the list of block devices to be used by the container.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 11642,
          },
          "name": "volumeDevices",
          "optional": true,
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "fqn": "monitoringcoreoscom.PrometheusSpecContainersVolumeDevices",
              },
              "kind": "array",
            },
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecContainers#volumeMounts",
            },
            "remarks": "Cannot be updated.",
            "summary": "Pod volumes to mount into the container's filesystem.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 11649,
          },
          "name": "volumeMounts",
          "optional": true,
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "fqn": "monitoringcoreoscom.PrometheusSpecContainersVolumeMounts",
              },
              "kind": "array",
            },
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecContainers#workingDir",
            },
            "remarks": "If not specified, the container runtime's default will be used, which might be configured in the container image. Cannot be updated.",
            "summary": "Container's working directory.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 11656,
          },
          "name": "workingDir",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
      ],
    },
    "monitoringcoreoscom.PrometheusSpecContainersEnv": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "PrometheusSpecContainersEnv",
        },
        "summary": "EnvVar represents an environment variable present in a Container.",
      },
      "fqn": "monitoringcoreoscom.PrometheusSpecContainersEnv",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 13487,
      },
      "name": "PrometheusSpecContainersEnv",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecContainersEnv#name",
            },
            "remarks": "Must be a C_IDENTIFIER.",
            "summary": "Name of the environment variable.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 13493,
          },
          "name": "name",
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecContainersEnv#value",
            },
            "default": ".",
            "remarks": "If a variable cannot be resolved, the reference in the input string will be unchanged. The $(VAR_NAME) syntax can be escaped with a double $$, ie: $$(VAR_NAME). Escaped references will never be expanded, regardless of whether the variable exists or not. Defaults to \\"\\".",
            "summary": "Variable references $(VAR_NAME) are expanded using the previous defined environment variables in the container and any service environment variables.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 13501,
          },
          "name": "value",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecContainersEnv#valueFrom",
            },
            "remarks": "Cannot be used if value is not empty.",
            "summary": "Source for the environment variable's value.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 13508,
          },
          "name": "valueFrom",
          "optional": true,
          "type": Object {
            "fqn": "monitoringcoreoscom.PrometheusSpecContainersEnvValueFrom",
          },
        },
      ],
    },
    "monitoringcoreoscom.PrometheusSpecContainersEnvFrom": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "PrometheusSpecContainersEnvFrom",
        },
        "summary": "EnvFromSource represents the source of a set of ConfigMaps.",
      },
      "fqn": "monitoringcoreoscom.PrometheusSpecContainersEnvFrom",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 13533,
      },
      "name": "PrometheusSpecContainersEnvFrom",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecContainersEnvFrom#configMapRef",
            },
            "summary": "The ConfigMap to select from.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 13539,
          },
          "name": "configMapRef",
          "optional": true,
          "type": Object {
            "fqn": "monitoringcoreoscom.PrometheusSpecContainersEnvFromConfigMapRef",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecContainersEnvFrom#prefix",
            },
            "remarks": "Must be a C_IDENTIFIER.",
            "summary": "An optional identifier to prepend to each key in the ConfigMap.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 13546,
          },
          "name": "prefix",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecContainersEnvFrom#secretRef",
            },
            "summary": "The Secret to select from.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 13553,
          },
          "name": "secretRef",
          "optional": true,
          "type": Object {
            "fqn": "monitoringcoreoscom.PrometheusSpecContainersEnvFromSecretRef",
          },
        },
      ],
    },
    "monitoringcoreoscom.PrometheusSpecContainersEnvFromConfigMapRef": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "PrometheusSpecContainersEnvFromConfigMapRef",
        },
        "summary": "The ConfigMap to select from.",
      },
      "fqn": "monitoringcoreoscom.PrometheusSpecContainersEnvFromConfigMapRef",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 18244,
      },
      "name": "PrometheusSpecContainersEnvFromConfigMapRef",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecContainersEnvFromConfigMapRef#name",
            },
            "remarks": "More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?",
            "summary": "Name of the referent.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 18250,
          },
          "name": "name",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecContainersEnvFromConfigMapRef#optional",
            },
            "summary": "Specify whether the ConfigMap must be defined.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 18257,
          },
          "name": "optional",
          "optional": true,
          "type": Object {
            "primitive": "boolean",
          },
        },
      ],
    },
    "monitoringcoreoscom.PrometheusSpecContainersEnvFromSecretRef": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "PrometheusSpecContainersEnvFromSecretRef",
        },
        "summary": "The Secret to select from.",
      },
      "fqn": "monitoringcoreoscom.PrometheusSpecContainersEnvFromSecretRef",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 18281,
      },
      "name": "PrometheusSpecContainersEnvFromSecretRef",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecContainersEnvFromSecretRef#name",
            },
            "remarks": "More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?",
            "summary": "Name of the referent.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 18287,
          },
          "name": "name",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecContainersEnvFromSecretRef#optional",
            },
            "summary": "Specify whether the Secret must be defined.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 18294,
          },
          "name": "optional",
          "optional": true,
          "type": Object {
            "primitive": "boolean",
          },
        },
      ],
    },
    "monitoringcoreoscom.PrometheusSpecContainersEnvValueFrom": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "PrometheusSpecContainersEnvValueFrom",
        },
        "remarks": "Cannot be used if value is not empty.",
        "summary": "Source for the environment variable's value.",
      },
      "fqn": "monitoringcoreoscom.PrometheusSpecContainersEnvValueFrom",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 18191,
      },
      "name": "PrometheusSpecContainersEnvValueFrom",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecContainersEnvValueFrom#configMapKeyRef",
            },
            "summary": "Selects a key of a ConfigMap.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 18197,
          },
          "name": "configMapKeyRef",
          "optional": true,
          "type": Object {
            "fqn": "monitoringcoreoscom.PrometheusSpecContainersEnvValueFromConfigMapKeyRef",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecContainersEnvValueFrom#fieldRef",
            },
            "summary": "Selects a field of the pod: supports metadata.name, metadata.namespace, metadata.labels, metadata.annotations, spec.nodeName, spec.serviceAccountName, status.hostIP, status.podIP, status.podIPs.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 18204,
          },
          "name": "fieldRef",
          "optional": true,
          "type": Object {
            "fqn": "monitoringcoreoscom.PrometheusSpecContainersEnvValueFromFieldRef",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecContainersEnvValueFrom#resourceFieldRef",
            },
            "summary": "Selects a resource of the container: only resources limits and requests (limits.cpu, limits.memory, limits.ephemeral-storage, requests.cpu, requests.memory and requests.ephemeral-storage) are currently supported.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 18211,
          },
          "name": "resourceFieldRef",
          "optional": true,
          "type": Object {
            "fqn": "monitoringcoreoscom.PrometheusSpecContainersEnvValueFromResourceFieldRef",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecContainersEnvValueFrom#secretKeyRef",
            },
            "summary": "Selects a key of a secret in the pod's namespace.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 18218,
          },
          "name": "secretKeyRef",
          "optional": true,
          "type": Object {
            "fqn": "monitoringcoreoscom.PrometheusSpecContainersEnvValueFromSecretKeyRef",
          },
        },
      ],
    },
    "monitoringcoreoscom.PrometheusSpecContainersEnvValueFromConfigMapKeyRef": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "PrometheusSpecContainersEnvValueFromConfigMapKeyRef",
        },
        "summary": "Selects a key of a ConfigMap.",
      },
      "fqn": "monitoringcoreoscom.PrometheusSpecContainersEnvValueFromConfigMapKeyRef",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 21345,
      },
      "name": "PrometheusSpecContainersEnvValueFromConfigMapKeyRef",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecContainersEnvValueFromConfigMapKeyRef#key",
            },
            "summary": "The key to select.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 21351,
          },
          "name": "key",
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecContainersEnvValueFromConfigMapKeyRef#name",
            },
            "remarks": "More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?",
            "summary": "Name of the referent.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 21358,
          },
          "name": "name",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecContainersEnvValueFromConfigMapKeyRef#optional",
            },
            "summary": "Specify whether the ConfigMap or its key must be defined.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 21365,
          },
          "name": "optional",
          "optional": true,
          "type": Object {
            "primitive": "boolean",
          },
        },
      ],
    },
    "monitoringcoreoscom.PrometheusSpecContainersEnvValueFromFieldRef": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "PrometheusSpecContainersEnvValueFromFieldRef",
        },
        "summary": "Selects a field of the pod: supports metadata.name, metadata.namespace, metadata.labels, metadata.annotations, spec.nodeName, spec.serviceAccountName, status.hostIP, status.podIP, status.podIPs.",
      },
      "fqn": "monitoringcoreoscom.PrometheusSpecContainersEnvValueFromFieldRef",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 21390,
      },
      "name": "PrometheusSpecContainersEnvValueFromFieldRef",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecContainersEnvValueFromFieldRef#fieldPath",
            },
            "summary": "Path of the field to select in the specified API version.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 21403,
          },
          "name": "fieldPath",
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecContainersEnvValueFromFieldRef#apiVersion",
            },
            "summary": "Version of the schema the FieldPath is written in terms of, defaults to \\"v1\\".",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 21396,
          },
          "name": "apiVersion",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
      ],
    },
    "monitoringcoreoscom.PrometheusSpecContainersEnvValueFromResourceFieldRef": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "PrometheusSpecContainersEnvValueFromResourceFieldRef",
        },
        "summary": "Selects a resource of the container: only resources limits and requests (limits.cpu, limits.memory, limits.ephemeral-storage, requests.cpu, requests.memory and requests.ephemeral-storage) are currently supported.",
      },
      "fqn": "monitoringcoreoscom.PrometheusSpecContainersEnvValueFromResourceFieldRef",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 21427,
      },
      "name": "PrometheusSpecContainersEnvValueFromResourceFieldRef",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecContainersEnvValueFromResourceFieldRef#resource",
            },
            "summary": "Required: resource to select.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 21447,
          },
          "name": "resource",
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecContainersEnvValueFromResourceFieldRef#containerName",
            },
            "summary": "Container name: required for volumes, optional for env vars.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 21433,
          },
          "name": "containerName",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecContainersEnvValueFromResourceFieldRef#divisor",
            },
            "summary": "Specifies the output format of the exposed resources, defaults to \\"1\\".",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 21440,
          },
          "name": "divisor",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
      ],
    },
    "monitoringcoreoscom.PrometheusSpecContainersEnvValueFromSecretKeyRef": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "PrometheusSpecContainersEnvValueFromSecretKeyRef",
        },
        "summary": "Selects a key of a secret in the pod's namespace.",
      },
      "fqn": "monitoringcoreoscom.PrometheusSpecContainersEnvValueFromSecretKeyRef",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 21472,
      },
      "name": "PrometheusSpecContainersEnvValueFromSecretKeyRef",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecContainersEnvValueFromSecretKeyRef#key",
            },
            "remarks": "Must be a valid secret key.",
            "summary": "The key of the secret to select from.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 21478,
          },
          "name": "key",
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecContainersEnvValueFromSecretKeyRef#name",
            },
            "remarks": "More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?",
            "summary": "Name of the referent.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 21485,
          },
          "name": "name",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecContainersEnvValueFromSecretKeyRef#optional",
            },
            "summary": "Specify whether the Secret or its key must be defined.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 21492,
          },
          "name": "optional",
          "optional": true,
          "type": Object {
            "primitive": "boolean",
          },
        },
      ],
    },
    "monitoringcoreoscom.PrometheusSpecContainersLifecycle": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "PrometheusSpecContainersLifecycle",
        },
        "remarks": "Cannot be updated.",
        "summary": "Actions that the management system should take in response to container lifecycle events.",
      },
      "fqn": "monitoringcoreoscom.PrometheusSpecContainersLifecycle",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 13578,
      },
      "name": "PrometheusSpecContainersLifecycle",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecContainersLifecycle#postStart",
            },
            "remarks": "If the handler fails, the container is terminated and restarted according to its restart policy. Other management of the container blocks until the hook completes. More info: https://kubernetes.io/docs/concepts/containers/container-lifecycle-hooks/#container-hooks",
            "summary": "PostStart is called immediately after a container is created.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 13584,
          },
          "name": "postStart",
          "optional": true,
          "type": Object {
            "fqn": "monitoringcoreoscom.PrometheusSpecContainersLifecyclePostStart",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecContainersLifecycle#preStop",
            },
            "remarks": "The handler is not called if the container crashes or exits. The reason for termination is passed to the handler. The Pod's termination grace period countdown begins before the PreStop hooked is executed. Regardless of the outcome of the handler, the container will eventually terminate within the Pod's termination grace period. Other management of the container blocks until the hook completes or until the termination grace period is reached. More info: https://kubernetes.io/docs/concepts/containers/container-lifecycle-hooks/#container-hooks",
            "summary": "PreStop is called immediately before a container is terminated due to an API request or management event such as liveness/startup probe failure, preemption, resource contention, etc.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 13591,
          },
          "name": "preStop",
          "optional": true,
          "type": Object {
            "fqn": "monitoringcoreoscom.PrometheusSpecContainersLifecyclePreStop",
          },
        },
      ],
    },
    "monitoringcoreoscom.PrometheusSpecContainersLifecyclePostStart": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "PrometheusSpecContainersLifecyclePostStart",
        },
        "remarks": "If the handler fails, the container is terminated and restarted according to its restart policy. Other management of the container blocks until the hook completes. More info: https://kubernetes.io/docs/concepts/containers/container-lifecycle-hooks/#container-hooks",
        "summary": "PostStart is called immediately after a container is created.",
      },
      "fqn": "monitoringcoreoscom.PrometheusSpecContainersLifecyclePostStart",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 18318,
      },
      "name": "PrometheusSpecContainersLifecyclePostStart",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecContainersLifecyclePostStart#exec",
            },
            "remarks": "Exec specifies the action to take.",
            "summary": "One and only one of the following should be specified.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 18324,
          },
          "name": "exec",
          "optional": true,
          "type": Object {
            "fqn": "monitoringcoreoscom.PrometheusSpecContainersLifecyclePostStartExec",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecContainersLifecyclePostStart#httpGet",
            },
            "summary": "HTTPGet specifies the http request to perform.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 18331,
          },
          "name": "httpGet",
          "optional": true,
          "type": Object {
            "fqn": "monitoringcoreoscom.PrometheusSpecContainersLifecyclePostStartHttpGet",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecContainersLifecyclePostStart#tcpSocket",
            },
            "remarks": "TCP hooks not yet supported TODO: implement a realistic TCP lifecycle hook",
            "summary": "TCPSocket specifies an action involving a TCP port.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 18338,
          },
          "name": "tcpSocket",
          "optional": true,
          "type": Object {
            "fqn": "monitoringcoreoscom.PrometheusSpecContainersLifecyclePostStartTcpSocket",
          },
        },
      ],
    },
    "monitoringcoreoscom.PrometheusSpecContainersLifecyclePostStartExec": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "PrometheusSpecContainersLifecyclePostStartExec",
        },
        "remarks": "Exec specifies the action to take.",
        "summary": "One and only one of the following should be specified.",
      },
      "fqn": "monitoringcoreoscom.PrometheusSpecContainersLifecyclePostStartExec",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 21517,
      },
      "name": "PrometheusSpecContainersLifecyclePostStartExec",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecContainersLifecyclePostStartExec#command",
            },
            "remarks": "The command is simply exec'd, it is not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use a shell, you need to explicitly call out to that shell. Exit status of 0 is treated as live/healthy and non-zero is unhealthy.",
            "summary": "Command is the command line to execute inside the container, the working directory for the command  is root ('/') in the container's filesystem.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 21523,
          },
          "name": "command",
          "optional": true,
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "primitive": "string",
              },
              "kind": "array",
            },
          },
        },
      ],
    },
    "monitoringcoreoscom.PrometheusSpecContainersLifecyclePostStartHttpGet": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "PrometheusSpecContainersLifecyclePostStartHttpGet",
        },
        "summary": "HTTPGet specifies the http request to perform.",
      },
      "fqn": "monitoringcoreoscom.PrometheusSpecContainersLifecyclePostStartHttpGet",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 21546,
      },
      "name": "PrometheusSpecContainersLifecyclePostStartHttpGet",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecContainersLifecyclePostStartHttpGet#port",
            },
            "remarks": "Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.",
            "summary": "Name or number of the port to access on the container.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 21573,
          },
          "name": "port",
          "type": Object {
            "fqn": "monitoringcoreoscom.PrometheusSpecContainersLifecyclePostStartHttpGetPort",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecContainersLifecyclePostStartHttpGet#host",
            },
            "remarks": "You probably want to set \\"Host\\" in httpHeaders instead.",
            "summary": "Host name to connect to, defaults to the pod IP.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 21552,
          },
          "name": "host",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecContainersLifecyclePostStartHttpGet#httpHeaders",
            },
            "remarks": "HTTP allows repeated headers.",
            "summary": "Custom headers to set in the request.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 21559,
          },
          "name": "httpHeaders",
          "optional": true,
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "fqn": "monitoringcoreoscom.PrometheusSpecContainersLifecyclePostStartHttpGetHttpHeaders",
              },
              "kind": "array",
            },
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecContainersLifecyclePostStartHttpGet#path",
            },
            "summary": "Path to access on the HTTP server.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 21566,
          },
          "name": "path",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecContainersLifecyclePostStartHttpGet#scheme",
            },
            "default": "HTTP.",
            "remarks": "Defaults to HTTP.",
            "summary": "Scheme to use for connecting to the host.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 21581,
          },
          "name": "scheme",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
      ],
    },
    "monitoringcoreoscom.PrometheusSpecContainersLifecyclePostStartHttpGetHttpHeaders": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "PrometheusSpecContainersLifecyclePostStartHttpGetHttpHeaders",
        },
        "summary": "HTTPHeader describes a custom header to be used in HTTP probes.",
      },
      "fqn": "monitoringcoreoscom.PrometheusSpecContainersLifecyclePostStartHttpGetHttpHeaders",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 24124,
      },
      "name": "PrometheusSpecContainersLifecyclePostStartHttpGetHttpHeaders",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecContainersLifecyclePostStartHttpGetHttpHeaders#name",
            },
            "summary": "The header field name.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 24130,
          },
          "name": "name",
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecContainersLifecyclePostStartHttpGetHttpHeaders#value",
            },
            "summary": "The header field value.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 24137,
          },
          "name": "value",
          "type": Object {
            "primitive": "string",
          },
        },
      ],
    },
    "monitoringcoreoscom.PrometheusSpecContainersLifecyclePostStartHttpGetPort": Object {
      "assembly": "monitoringcoreoscom",
      "docs": Object {
        "custom": Object {
          "schema": "PrometheusSpecContainersLifecyclePostStartHttpGetPort",
        },
        "remarks": "Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.",
        "summary": "Name or number of the port to access on the container.",
      },
      "fqn": "monitoringcoreoscom.PrometheusSpecContainersLifecyclePostStartHttpGetPort",
      "kind": "class",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 24161,
      },
      "methods": Array [
        Object {
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 24162,
          },
          "name": "fromNumber",
          "parameters": Array [
            Object {
              "name": "value",
              "type": Object {
                "primitive": "number",
              },
            },
          ],
          "returns": Object {
            "type": Object {
              "fqn": "monitoringcoreoscom.PrometheusSpecContainersLifecyclePostStartHttpGetPort",
            },
          },
          "static": true,
        },
        Object {
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 24165,
          },
          "name": "fromString",
          "parameters": Array [
            Object {
              "name": "value",
              "type": Object {
                "primitive": "string",
              },
            },
          ],
          "returns": Object {
            "type": Object {
              "fqn": "monitoringcoreoscom.PrometheusSpecContainersLifecyclePostStartHttpGetPort",
            },
          },
          "static": true,
        },
      ],
      "name": "PrometheusSpecContainersLifecyclePostStartHttpGetPort",
      "properties": Array [
        Object {
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 24168,
          },
          "name": "value",
          "type": Object {
            "primitive": "any",
          },
        },
      ],
    },
    "monitoringcoreoscom.PrometheusSpecContainersLifecyclePostStartTcpSocket": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "PrometheusSpecContainersLifecyclePostStartTcpSocket",
        },
        "remarks": "TCP hooks not yet supported TODO: implement a realistic TCP lifecycle hook",
        "summary": "TCPSocket specifies an action involving a TCP port.",
      },
      "fqn": "monitoringcoreoscom.PrometheusSpecContainersLifecyclePostStartTcpSocket",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 21608,
      },
      "name": "PrometheusSpecContainersLifecyclePostStartTcpSocket",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecContainersLifecyclePostStartTcpSocket#port",
            },
            "remarks": "Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.",
            "summary": "Number or name of the port to access on the container.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 21621,
          },
          "name": "port",
          "type": Object {
            "fqn": "monitoringcoreoscom.PrometheusSpecContainersLifecyclePostStartTcpSocketPort",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecContainersLifecyclePostStartTcpSocket#host",
            },
            "summary": "Optional: Host name to connect to, defaults to the pod IP.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 21614,
          },
          "name": "host",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
      ],
    },
    "monitoringcoreoscom.PrometheusSpecContainersLifecyclePostStartTcpSocketPort": Object {
      "assembly": "monitoringcoreoscom",
      "docs": Object {
        "custom": Object {
          "schema": "PrometheusSpecContainersLifecyclePostStartTcpSocketPort",
        },
        "remarks": "Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.",
        "summary": "Number or name of the port to access on the container.",
      },
      "fqn": "monitoringcoreoscom.PrometheusSpecContainersLifecyclePostStartTcpSocketPort",
      "kind": "class",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 24178,
      },
      "methods": Array [
        Object {
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 24179,
          },
          "name": "fromNumber",
          "parameters": Array [
            Object {
              "name": "value",
              "type": Object {
                "primitive": "number",
              },
            },
          ],
          "returns": Object {
            "type": Object {
              "fqn": "monitoringcoreoscom.PrometheusSpecContainersLifecyclePostStartTcpSocketPort",
            },
          },
          "static": true,
        },
        Object {
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 24182,
          },
          "name": "fromString",
          "parameters": Array [
            Object {
              "name": "value",
              "type": Object {
                "primitive": "string",
              },
            },
          ],
          "returns": Object {
            "type": Object {
              "fqn": "monitoringcoreoscom.PrometheusSpecContainersLifecyclePostStartTcpSocketPort",
            },
          },
          "static": true,
        },
      ],
      "name": "PrometheusSpecContainersLifecyclePostStartTcpSocketPort",
      "properties": Array [
        Object {
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 24185,
          },
          "name": "value",
          "type": Object {
            "primitive": "any",
          },
        },
      ],
    },
    "monitoringcoreoscom.PrometheusSpecContainersLifecyclePreStop": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "PrometheusSpecContainersLifecyclePreStop",
        },
        "remarks": "The handler is not called if the container crashes or exits. The reason for termination is passed to the handler. The Pod's termination grace period countdown begins before the PreStop hooked is executed. Regardless of the outcome of the handler, the container will eventually terminate within the Pod's termination grace period. Other management of the container blocks until the hook completes or until the termination grace period is reached. More info: https://kubernetes.io/docs/concepts/containers/container-lifecycle-hooks/#container-hooks",
        "summary": "PreStop is called immediately before a container is terminated due to an API request or management event such as liveness/startup probe failure, preemption, resource contention, etc.",
      },
      "fqn": "monitoringcoreoscom.PrometheusSpecContainersLifecyclePreStop",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 18363,
      },
      "name": "PrometheusSpecContainersLifecyclePreStop",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecContainersLifecyclePreStop#exec",
            },
            "remarks": "Exec specifies the action to take.",
            "summary": "One and only one of the following should be specified.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 18369,
          },
          "name": "exec",
          "optional": true,
          "type": Object {
            "fqn": "monitoringcoreoscom.PrometheusSpecContainersLifecyclePreStopExec",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecContainersLifecyclePreStop#httpGet",
            },
            "summary": "HTTPGet specifies the http request to perform.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 18376,
          },
          "name": "httpGet",
          "optional": true,
          "type": Object {
            "fqn": "monitoringcoreoscom.PrometheusSpecContainersLifecyclePreStopHttpGet",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecContainersLifecyclePreStop#tcpSocket",
            },
            "remarks": "TCP hooks not yet supported TODO: implement a realistic TCP lifecycle hook",
            "summary": "TCPSocket specifies an action involving a TCP port.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 18383,
          },
          "name": "tcpSocket",
          "optional": true,
          "type": Object {
            "fqn": "monitoringcoreoscom.PrometheusSpecContainersLifecyclePreStopTcpSocket",
          },
        },
      ],
    },
    "monitoringcoreoscom.PrometheusSpecContainersLifecyclePreStopExec": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "PrometheusSpecContainersLifecyclePreStopExec",
        },
        "remarks": "Exec specifies the action to take.",
        "summary": "One and only one of the following should be specified.",
      },
      "fqn": "monitoringcoreoscom.PrometheusSpecContainersLifecyclePreStopExec",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 21645,
      },
      "name": "PrometheusSpecContainersLifecyclePreStopExec",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecContainersLifecyclePreStopExec#command",
            },
            "remarks": "The command is simply exec'd, it is not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use a shell, you need to explicitly call out to that shell. Exit status of 0 is treated as live/healthy and non-zero is unhealthy.",
            "summary": "Command is the command line to execute inside the container, the working directory for the command  is root ('/') in the container's filesystem.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 21651,
          },
          "name": "command",
          "optional": true,
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "primitive": "string",
              },
              "kind": "array",
            },
          },
        },
      ],
    },
    "monitoringcoreoscom.PrometheusSpecContainersLifecyclePreStopHttpGet": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "PrometheusSpecContainersLifecyclePreStopHttpGet",
        },
        "summary": "HTTPGet specifies the http request to perform.",
      },
      "fqn": "monitoringcoreoscom.PrometheusSpecContainersLifecyclePreStopHttpGet",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 21674,
      },
      "name": "PrometheusSpecContainersLifecyclePreStopHttpGet",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecContainersLifecyclePreStopHttpGet#port",
            },
            "remarks": "Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.",
            "summary": "Name or number of the port to access on the container.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 21701,
          },
          "name": "port",
          "type": Object {
            "fqn": "monitoringcoreoscom.PrometheusSpecContainersLifecyclePreStopHttpGetPort",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecContainersLifecyclePreStopHttpGet#host",
            },
            "remarks": "You probably want to set \\"Host\\" in httpHeaders instead.",
            "summary": "Host name to connect to, defaults to the pod IP.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 21680,
          },
          "name": "host",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecContainersLifecyclePreStopHttpGet#httpHeaders",
            },
            "remarks": "HTTP allows repeated headers.",
            "summary": "Custom headers to set in the request.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 21687,
          },
          "name": "httpHeaders",
          "optional": true,
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "fqn": "monitoringcoreoscom.PrometheusSpecContainersLifecyclePreStopHttpGetHttpHeaders",
              },
              "kind": "array",
            },
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecContainersLifecyclePreStopHttpGet#path",
            },
            "summary": "Path to access on the HTTP server.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 21694,
          },
          "name": "path",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecContainersLifecyclePreStopHttpGet#scheme",
            },
            "default": "HTTP.",
            "remarks": "Defaults to HTTP.",
            "summary": "Scheme to use for connecting to the host.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 21709,
          },
          "name": "scheme",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
      ],
    },
    "monitoringcoreoscom.PrometheusSpecContainersLifecyclePreStopHttpGetHttpHeaders": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "PrometheusSpecContainersLifecyclePreStopHttpGetHttpHeaders",
        },
        "summary": "HTTPHeader describes a custom header to be used in HTTP probes.",
      },
      "fqn": "monitoringcoreoscom.PrometheusSpecContainersLifecyclePreStopHttpGetHttpHeaders",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 24195,
      },
      "name": "PrometheusSpecContainersLifecyclePreStopHttpGetHttpHeaders",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecContainersLifecyclePreStopHttpGetHttpHeaders#name",
            },
            "summary": "The header field name.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 24201,
          },
          "name": "name",
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecContainersLifecyclePreStopHttpGetHttpHeaders#value",
            },
            "summary": "The header field value.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 24208,
          },
          "name": "value",
          "type": Object {
            "primitive": "string",
          },
        },
      ],
    },
    "monitoringcoreoscom.PrometheusSpecContainersLifecyclePreStopHttpGetPort": Object {
      "assembly": "monitoringcoreoscom",
      "docs": Object {
        "custom": Object {
          "schema": "PrometheusSpecContainersLifecyclePreStopHttpGetPort",
        },
        "remarks": "Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.",
        "summary": "Name or number of the port to access on the container.",
      },
      "fqn": "monitoringcoreoscom.PrometheusSpecContainersLifecyclePreStopHttpGetPort",
      "kind": "class",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 24232,
      },
      "methods": Array [
        Object {
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 24233,
          },
          "name": "fromNumber",
          "parameters": Array [
            Object {
              "name": "value",
              "type": Object {
                "primitive": "number",
              },
            },
          ],
          "returns": Object {
            "type": Object {
              "fqn": "monitoringcoreoscom.PrometheusSpecContainersLifecyclePreStopHttpGetPort",
            },
          },
          "static": true,
        },
        Object {
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 24236,
          },
          "name": "fromString",
          "parameters": Array [
            Object {
              "name": "value",
              "type": Object {
                "primitive": "string",
              },
            },
          ],
          "returns": Object {
            "type": Object {
              "fqn": "monitoringcoreoscom.PrometheusSpecContainersLifecyclePreStopHttpGetPort",
            },
          },
          "static": true,
        },
      ],
      "name": "PrometheusSpecContainersLifecyclePreStopHttpGetPort",
      "properties": Array [
        Object {
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 24239,
          },
          "name": "value",
          "type": Object {
            "primitive": "any",
          },
        },
      ],
    },
    "monitoringcoreoscom.PrometheusSpecContainersLifecyclePreStopTcpSocket": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "PrometheusSpecContainersLifecyclePreStopTcpSocket",
        },
        "remarks": "TCP hooks not yet supported TODO: implement a realistic TCP lifecycle hook",
        "summary": "TCPSocket specifies an action involving a TCP port.",
      },
      "fqn": "monitoringcoreoscom.PrometheusSpecContainersLifecyclePreStopTcpSocket",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 21736,
      },
      "name": "PrometheusSpecContainersLifecyclePreStopTcpSocket",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecContainersLifecyclePreStopTcpSocket#port",
            },
            "remarks": "Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.",
            "summary": "Number or name of the port to access on the container.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 21749,
          },
          "name": "port",
          "type": Object {
            "fqn": "monitoringcoreoscom.PrometheusSpecContainersLifecyclePreStopTcpSocketPort",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecContainersLifecyclePreStopTcpSocket#host",
            },
            "summary": "Optional: Host name to connect to, defaults to the pod IP.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 21742,
          },
          "name": "host",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
      ],
    },
    "monitoringcoreoscom.PrometheusSpecContainersLifecyclePreStopTcpSocketPort": Object {
      "assembly": "monitoringcoreoscom",
      "docs": Object {
        "custom": Object {
          "schema": "PrometheusSpecContainersLifecyclePreStopTcpSocketPort",
        },
        "remarks": "Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.",
        "summary": "Number or name of the port to access on the container.",
      },
      "fqn": "monitoringcoreoscom.PrometheusSpecContainersLifecyclePreStopTcpSocketPort",
      "kind": "class",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 24249,
      },
      "methods": Array [
        Object {
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 24250,
          },
          "name": "fromNumber",
          "parameters": Array [
            Object {
              "name": "value",
              "type": Object {
                "primitive": "number",
              },
            },
          ],
          "returns": Object {
            "type": Object {
              "fqn": "monitoringcoreoscom.PrometheusSpecContainersLifecyclePreStopTcpSocketPort",
            },
          },
          "static": true,
        },
        Object {
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 24253,
          },
          "name": "fromString",
          "parameters": Array [
            Object {
              "name": "value",
              "type": Object {
                "primitive": "string",
              },
            },
          ],
          "returns": Object {
            "type": Object {
              "fqn": "monitoringcoreoscom.PrometheusSpecContainersLifecyclePreStopTcpSocketPort",
            },
          },
          "static": true,
        },
      ],
      "name": "PrometheusSpecContainersLifecyclePreStopTcpSocketPort",
      "properties": Array [
        Object {
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 24256,
          },
          "name": "value",
          "type": Object {
            "primitive": "any",
          },
        },
      ],
    },
    "monitoringcoreoscom.PrometheusSpecContainersLivenessProbe": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "PrometheusSpecContainersLivenessProbe",
        },
        "remarks": "Container will be restarted if the probe fails. Cannot be updated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes",
        "summary": "Periodic probe of container liveness.",
      },
      "fqn": "monitoringcoreoscom.PrometheusSpecContainersLivenessProbe",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 13615,
      },
      "name": "PrometheusSpecContainersLivenessProbe",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecContainersLivenessProbe#exec",
            },
            "remarks": "Exec specifies the action to take.",
            "summary": "One and only one of the following should be specified.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 13621,
          },
          "name": "exec",
          "optional": true,
          "type": Object {
            "fqn": "monitoringcoreoscom.PrometheusSpecContainersLivenessProbeExec",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecContainersLivenessProbe#failureThreshold",
            },
            "default": "3. Minimum value is 1.",
            "remarks": "Defaults to 3. Minimum value is 1.",
            "summary": "Minimum consecutive failures for the probe to be considered failed after having succeeded.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 13629,
          },
          "name": "failureThreshold",
          "optional": true,
          "type": Object {
            "primitive": "number",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecContainersLivenessProbe#httpGet",
            },
            "summary": "HTTPGet specifies the http request to perform.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 13636,
          },
          "name": "httpGet",
          "optional": true,
          "type": Object {
            "fqn": "monitoringcoreoscom.PrometheusSpecContainersLivenessProbeHttpGet",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecContainersLivenessProbe#initialDelaySeconds",
            },
            "remarks": "More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes",
            "summary": "Number of seconds after the container has started before liveness probes are initiated.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 13643,
          },
          "name": "initialDelaySeconds",
          "optional": true,
          "type": Object {
            "primitive": "number",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecContainersLivenessProbe#periodSeconds",
            },
            "default": "10 seconds. Minimum value is 1.",
            "remarks": "Default to 10 seconds. Minimum value is 1.",
            "summary": "How often (in seconds) to perform the probe.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 13651,
          },
          "name": "periodSeconds",
          "optional": true,
          "type": Object {
            "primitive": "number",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecContainersLivenessProbe#successThreshold",
            },
            "default": "1. Must be 1 for liveness and startup. Minimum value is 1.",
            "remarks": "Defaults to 1. Must be 1 for liveness and startup. Minimum value is 1.",
            "summary": "Minimum consecutive successes for the probe to be considered successful after having failed.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 13659,
          },
          "name": "successThreshold",
          "optional": true,
          "type": Object {
            "primitive": "number",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecContainersLivenessProbe#tcpSocket",
            },
            "remarks": "TCP hooks not yet supported TODO: implement a realistic TCP lifecycle hook",
            "summary": "TCPSocket specifies an action involving a TCP port.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 13666,
          },
          "name": "tcpSocket",
          "optional": true,
          "type": Object {
            "fqn": "monitoringcoreoscom.PrometheusSpecContainersLivenessProbeTcpSocket",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecContainersLivenessProbe#timeoutSeconds",
            },
            "default": "1 second. Minimum value is 1. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes",
            "remarks": "Defaults to 1 second. Minimum value is 1. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes",
            "summary": "Number of seconds after which the probe times out.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 13674,
          },
          "name": "timeoutSeconds",
          "optional": true,
          "type": Object {
            "primitive": "number",
          },
        },
      ],
    },
    "monitoringcoreoscom.PrometheusSpecContainersLivenessProbeExec": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "PrometheusSpecContainersLivenessProbeExec",
        },
        "remarks": "Exec specifies the action to take.",
        "summary": "One and only one of the following should be specified.",
      },
      "fqn": "monitoringcoreoscom.PrometheusSpecContainersLivenessProbeExec",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 18408,
      },
      "name": "PrometheusSpecContainersLivenessProbeExec",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecContainersLivenessProbeExec#command",
            },
            "remarks": "The command is simply exec'd, it is not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use a shell, you need to explicitly call out to that shell. Exit status of 0 is treated as live/healthy and non-zero is unhealthy.",
            "summary": "Command is the command line to execute inside the container, the working directory for the command  is root ('/') in the container's filesystem.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 18414,
          },
          "name": "command",
          "optional": true,
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "primitive": "string",
              },
              "kind": "array",
            },
          },
        },
      ],
    },
    "monitoringcoreoscom.PrometheusSpecContainersLivenessProbeHttpGet": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "PrometheusSpecContainersLivenessProbeHttpGet",
        },
        "summary": "HTTPGet specifies the http request to perform.",
      },
      "fqn": "monitoringcoreoscom.PrometheusSpecContainersLivenessProbeHttpGet",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 18437,
      },
      "name": "PrometheusSpecContainersLivenessProbeHttpGet",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecContainersLivenessProbeHttpGet#port",
            },
            "remarks": "Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.",
            "summary": "Name or number of the port to access on the container.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 18464,
          },
          "name": "port",
          "type": Object {
            "fqn": "monitoringcoreoscom.PrometheusSpecContainersLivenessProbeHttpGetPort",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecContainersLivenessProbeHttpGet#host",
            },
            "remarks": "You probably want to set \\"Host\\" in httpHeaders instead.",
            "summary": "Host name to connect to, defaults to the pod IP.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 18443,
          },
          "name": "host",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecContainersLivenessProbeHttpGet#httpHeaders",
            },
            "remarks": "HTTP allows repeated headers.",
            "summary": "Custom headers to set in the request.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 18450,
          },
          "name": "httpHeaders",
          "optional": true,
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "fqn": "monitoringcoreoscom.PrometheusSpecContainersLivenessProbeHttpGetHttpHeaders",
              },
              "kind": "array",
            },
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecContainersLivenessProbeHttpGet#path",
            },
            "summary": "Path to access on the HTTP server.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 18457,
          },
          "name": "path",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecContainersLivenessProbeHttpGet#scheme",
            },
            "default": "HTTP.",
            "remarks": "Defaults to HTTP.",
            "summary": "Scheme to use for connecting to the host.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 18472,
          },
          "name": "scheme",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
      ],
    },
    "monitoringcoreoscom.PrometheusSpecContainersLivenessProbeHttpGetHttpHeaders": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "PrometheusSpecContainersLivenessProbeHttpGetHttpHeaders",
        },
        "summary": "HTTPHeader describes a custom header to be used in HTTP probes.",
      },
      "fqn": "monitoringcoreoscom.PrometheusSpecContainersLivenessProbeHttpGetHttpHeaders",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 21773,
      },
      "name": "PrometheusSpecContainersLivenessProbeHttpGetHttpHeaders",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecContainersLivenessProbeHttpGetHttpHeaders#name",
            },
            "summary": "The header field name.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 21779,
          },
          "name": "name",
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecContainersLivenessProbeHttpGetHttpHeaders#value",
            },
            "summary": "The header field value.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 21786,
          },
          "name": "value",
          "type": Object {
            "primitive": "string",
          },
        },
      ],
    },
    "monitoringcoreoscom.PrometheusSpecContainersLivenessProbeHttpGetPort": Object {
      "assembly": "monitoringcoreoscom",
      "docs": Object {
        "custom": Object {
          "schema": "PrometheusSpecContainersLivenessProbeHttpGetPort",
        },
        "remarks": "Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.",
        "summary": "Name or number of the port to access on the container.",
      },
      "fqn": "monitoringcoreoscom.PrometheusSpecContainersLivenessProbeHttpGetPort",
      "kind": "class",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 21810,
      },
      "methods": Array [
        Object {
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 21811,
          },
          "name": "fromNumber",
          "parameters": Array [
            Object {
              "name": "value",
              "type": Object {
                "primitive": "number",
              },
            },
          ],
          "returns": Object {
            "type": Object {
              "fqn": "monitoringcoreoscom.PrometheusSpecContainersLivenessProbeHttpGetPort",
            },
          },
          "static": true,
        },
        Object {
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 21814,
          },
          "name": "fromString",
          "parameters": Array [
            Object {
              "name": "value",
              "type": Object {
                "primitive": "string",
              },
            },
          ],
          "returns": Object {
            "type": Object {
              "fqn": "monitoringcoreoscom.PrometheusSpecContainersLivenessProbeHttpGetPort",
            },
          },
          "static": true,
        },
      ],
      "name": "PrometheusSpecContainersLivenessProbeHttpGetPort",
      "properties": Array [
        Object {
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 21817,
          },
          "name": "value",
          "type": Object {
            "primitive": "any",
          },
        },
      ],
    },
    "monitoringcoreoscom.PrometheusSpecContainersLivenessProbeTcpSocket": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "PrometheusSpecContainersLivenessProbeTcpSocket",
        },
        "remarks": "TCP hooks not yet supported TODO: implement a realistic TCP lifecycle hook",
        "summary": "TCPSocket specifies an action involving a TCP port.",
      },
      "fqn": "monitoringcoreoscom.PrometheusSpecContainersLivenessProbeTcpSocket",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 18499,
      },
      "name": "PrometheusSpecContainersLivenessProbeTcpSocket",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecContainersLivenessProbeTcpSocket#port",
            },
            "remarks": "Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.",
            "summary": "Number or name of the port to access on the container.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 18512,
          },
          "name": "port",
          "type": Object {
            "fqn": "monitoringcoreoscom.PrometheusSpecContainersLivenessProbeTcpSocketPort",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecContainersLivenessProbeTcpSocket#host",
            },
            "summary": "Optional: Host name to connect to, defaults to the pod IP.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 18505,
          },
          "name": "host",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
      ],
    },
    "monitoringcoreoscom.PrometheusSpecContainersLivenessProbeTcpSocketPort": Object {
      "assembly": "monitoringcoreoscom",
      "docs": Object {
        "custom": Object {
          "schema": "PrometheusSpecContainersLivenessProbeTcpSocketPort",
        },
        "remarks": "Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.",
        "summary": "Number or name of the port to access on the container.",
      },
      "fqn": "monitoringcoreoscom.PrometheusSpecContainersLivenessProbeTcpSocketPort",
      "kind": "class",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 21827,
      },
      "methods": Array [
        Object {
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 21828,
          },
          "name": "fromNumber",
          "parameters": Array [
            Object {
              "name": "value",
              "type": Object {
                "primitive": "number",
              },
            },
          ],
          "returns": Object {
            "type": Object {
              "fqn": "monitoringcoreoscom.PrometheusSpecContainersLivenessProbeTcpSocketPort",
            },
          },
          "static": true,
        },
        Object {
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 21831,
          },
          "name": "fromString",
          "parameters": Array [
            Object {
              "name": "value",
              "type": Object {
                "primitive": "string",
              },
            },
          ],
          "returns": Object {
            "type": Object {
              "fqn": "monitoringcoreoscom.PrometheusSpecContainersLivenessProbeTcpSocketPort",
            },
          },
          "static": true,
        },
      ],
      "name": "PrometheusSpecContainersLivenessProbeTcpSocketPort",
      "properties": Array [
        Object {
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 21834,
          },
          "name": "value",
          "type": Object {
            "primitive": "any",
          },
        },
      ],
    },
    "monitoringcoreoscom.PrometheusSpecContainersPorts": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "PrometheusSpecContainersPorts",
        },
        "summary": "ContainerPort represents a network port in a single container.",
      },
      "fqn": "monitoringcoreoscom.PrometheusSpecContainersPorts",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 13704,
      },
      "name": "PrometheusSpecContainersPorts",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecContainersPorts#containerPort",
            },
            "remarks": "This must be a valid port number, 0 < x < 65536.",
            "summary": "Number of port to expose on the pod's IP address.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 13710,
          },
          "name": "containerPort",
          "type": Object {
            "primitive": "number",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecContainersPorts#hostIP",
            },
            "summary": "What host IP to bind the external port to.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 13717,
          },
          "name": "hostIp",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecContainersPorts#hostPort",
            },
            "remarks": "If specified, this must be a valid port number, 0 < x < 65536. If HostNetwork is specified, this must match ContainerPort. Most containers do not need this.",
            "summary": "Number of port to expose on the host.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 13724,
          },
          "name": "hostPort",
          "optional": true,
          "type": Object {
            "primitive": "number",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecContainersPorts#name",
            },
            "remarks": "Each named port in a pod must have a unique name. Name for the port that can be referred to by services.",
            "summary": "If specified, this must be an IANA_SVC_NAME and unique within the pod.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 13731,
          },
          "name": "name",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecContainersPorts#protocol",
            },
            "default": "TCP\\".",
            "remarks": "Must be UDP, TCP, or SCTP. Defaults to \\"TCP\\".",
            "summary": "Protocol for port.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 13739,
          },
          "name": "protocol",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
      ],
    },
    "monitoringcoreoscom.PrometheusSpecContainersReadinessProbe": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "PrometheusSpecContainersReadinessProbe",
        },
        "remarks": "Container will be removed from service endpoints if the probe fails. Cannot be updated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes",
        "summary": "Periodic probe of container service readiness.",
      },
      "fqn": "monitoringcoreoscom.PrometheusSpecContainersReadinessProbe",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 13766,
      },
      "name": "PrometheusSpecContainersReadinessProbe",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecContainersReadinessProbe#exec",
            },
            "remarks": "Exec specifies the action to take.",
            "summary": "One and only one of the following should be specified.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 13772,
          },
          "name": "exec",
          "optional": true,
          "type": Object {
            "fqn": "monitoringcoreoscom.PrometheusSpecContainersReadinessProbeExec",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecContainersReadinessProbe#failureThreshold",
            },
            "default": "3. Minimum value is 1.",
            "remarks": "Defaults to 3. Minimum value is 1.",
            "summary": "Minimum consecutive failures for the probe to be considered failed after having succeeded.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 13780,
          },
          "name": "failureThreshold",
          "optional": true,
          "type": Object {
            "primitive": "number",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecContainersReadinessProbe#httpGet",
            },
            "summary": "HTTPGet specifies the http request to perform.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 13787,
          },
          "name": "httpGet",
          "optional": true,
          "type": Object {
            "fqn": "monitoringcoreoscom.PrometheusSpecContainersReadinessProbeHttpGet",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecContainersReadinessProbe#initialDelaySeconds",
            },
            "remarks": "More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes",
            "summary": "Number of seconds after the container has started before liveness probes are initiated.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 13794,
          },
          "name": "initialDelaySeconds",
          "optional": true,
          "type": Object {
            "primitive": "number",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecContainersReadinessProbe#periodSeconds",
            },
            "default": "10 seconds. Minimum value is 1.",
            "remarks": "Default to 10 seconds. Minimum value is 1.",
            "summary": "How often (in seconds) to perform the probe.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 13802,
          },
          "name": "periodSeconds",
          "optional": true,
          "type": Object {
            "primitive": "number",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecContainersReadinessProbe#successThreshold",
            },
            "default": "1. Must be 1 for liveness and startup. Minimum value is 1.",
            "remarks": "Defaults to 1. Must be 1 for liveness and startup. Minimum value is 1.",
            "summary": "Minimum consecutive successes for the probe to be considered successful after having failed.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 13810,
          },
          "name": "successThreshold",
          "optional": true,
          "type": Object {
            "primitive": "number",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecContainersReadinessProbe#tcpSocket",
            },
            "remarks": "TCP hooks not yet supported TODO: implement a realistic TCP lifecycle hook",
            "summary": "TCPSocket specifies an action involving a TCP port.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 13817,
          },
          "name": "tcpSocket",
          "optional": true,
          "type": Object {
            "fqn": "monitoringcoreoscom.PrometheusSpecContainersReadinessProbeTcpSocket",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecContainersReadinessProbe#timeoutSeconds",
            },
            "default": "1 second. Minimum value is 1. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes",
            "remarks": "Defaults to 1 second. Minimum value is 1. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes",
            "summary": "Number of seconds after which the probe times out.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 13825,
          },
          "name": "timeoutSeconds",
          "optional": true,
          "type": Object {
            "primitive": "number",
          },
        },
      ],
    },
    "monitoringcoreoscom.PrometheusSpecContainersReadinessProbeExec": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "PrometheusSpecContainersReadinessProbeExec",
        },
        "remarks": "Exec specifies the action to take.",
        "summary": "One and only one of the following should be specified.",
      },
      "fqn": "monitoringcoreoscom.PrometheusSpecContainersReadinessProbeExec",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 18536,
      },
      "name": "PrometheusSpecContainersReadinessProbeExec",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecContainersReadinessProbeExec#command",
            },
            "remarks": "The command is simply exec'd, it is not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use a shell, you need to explicitly call out to that shell. Exit status of 0 is treated as live/healthy and non-zero is unhealthy.",
            "summary": "Command is the command line to execute inside the container, the working directory for the command  is root ('/') in the container's filesystem.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 18542,
          },
          "name": "command",
          "optional": true,
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "primitive": "string",
              },
              "kind": "array",
            },
          },
        },
      ],
    },
    "monitoringcoreoscom.PrometheusSpecContainersReadinessProbeHttpGet": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "PrometheusSpecContainersReadinessProbeHttpGet",
        },
        "summary": "HTTPGet specifies the http request to perform.",
      },
      "fqn": "monitoringcoreoscom.PrometheusSpecContainersReadinessProbeHttpGet",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 18565,
      },
      "name": "PrometheusSpecContainersReadinessProbeHttpGet",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecContainersReadinessProbeHttpGet#port",
            },
            "remarks": "Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.",
            "summary": "Name or number of the port to access on the container.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 18592,
          },
          "name": "port",
          "type": Object {
            "fqn": "monitoringcoreoscom.PrometheusSpecContainersReadinessProbeHttpGetPort",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecContainersReadinessProbeHttpGet#host",
            },
            "remarks": "You probably want to set \\"Host\\" in httpHeaders instead.",
            "summary": "Host name to connect to, defaults to the pod IP.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 18571,
          },
          "name": "host",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecContainersReadinessProbeHttpGet#httpHeaders",
            },
            "remarks": "HTTP allows repeated headers.",
            "summary": "Custom headers to set in the request.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 18578,
          },
          "name": "httpHeaders",
          "optional": true,
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "fqn": "monitoringcoreoscom.PrometheusSpecContainersReadinessProbeHttpGetHttpHeaders",
              },
              "kind": "array",
            },
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecContainersReadinessProbeHttpGet#path",
            },
            "summary": "Path to access on the HTTP server.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 18585,
          },
          "name": "path",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecContainersReadinessProbeHttpGet#scheme",
            },
            "default": "HTTP.",
            "remarks": "Defaults to HTTP.",
            "summary": "Scheme to use for connecting to the host.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 18600,
          },
          "name": "scheme",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
      ],
    },
    "monitoringcoreoscom.PrometheusSpecContainersReadinessProbeHttpGetHttpHeaders": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "PrometheusSpecContainersReadinessProbeHttpGetHttpHeaders",
        },
        "summary": "HTTPHeader describes a custom header to be used in HTTP probes.",
      },
      "fqn": "monitoringcoreoscom.PrometheusSpecContainersReadinessProbeHttpGetHttpHeaders",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 21844,
      },
      "name": "PrometheusSpecContainersReadinessProbeHttpGetHttpHeaders",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecContainersReadinessProbeHttpGetHttpHeaders#name",
            },
            "summary": "The header field name.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 21850,
          },
          "name": "name",
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecContainersReadinessProbeHttpGetHttpHeaders#value",
            },
            "summary": "The header field value.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 21857,
          },
          "name": "value",
          "type": Object {
            "primitive": "string",
          },
        },
      ],
    },
    "monitoringcoreoscom.PrometheusSpecContainersReadinessProbeHttpGetPort": Object {
      "assembly": "monitoringcoreoscom",
      "docs": Object {
        "custom": Object {
          "schema": "PrometheusSpecContainersReadinessProbeHttpGetPort",
        },
        "remarks": "Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.",
        "summary": "Name or number of the port to access on the container.",
      },
      "fqn": "monitoringcoreoscom.PrometheusSpecContainersReadinessProbeHttpGetPort",
      "kind": "class",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 21881,
      },
      "methods": Array [
        Object {
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 21882,
          },
          "name": "fromNumber",
          "parameters": Array [
            Object {
              "name": "value",
              "type": Object {
                "primitive": "number",
              },
            },
          ],
          "returns": Object {
            "type": Object {
              "fqn": "monitoringcoreoscom.PrometheusSpecContainersReadinessProbeHttpGetPort",
            },
          },
          "static": true,
        },
        Object {
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 21885,
          },
          "name": "fromString",
          "parameters": Array [
            Object {
              "name": "value",
              "type": Object {
                "primitive": "string",
              },
            },
          ],
          "returns": Object {
            "type": Object {
              "fqn": "monitoringcoreoscom.PrometheusSpecContainersReadinessProbeHttpGetPort",
            },
          },
          "static": true,
        },
      ],
      "name": "PrometheusSpecContainersReadinessProbeHttpGetPort",
      "properties": Array [
        Object {
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 21888,
          },
          "name": "value",
          "type": Object {
            "primitive": "any",
          },
        },
      ],
    },
    "monitoringcoreoscom.PrometheusSpecContainersReadinessProbeTcpSocket": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "PrometheusSpecContainersReadinessProbeTcpSocket",
        },
        "remarks": "TCP hooks not yet supported TODO: implement a realistic TCP lifecycle hook",
        "summary": "TCPSocket specifies an action involving a TCP port.",
      },
      "fqn": "monitoringcoreoscom.PrometheusSpecContainersReadinessProbeTcpSocket",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 18627,
      },
      "name": "PrometheusSpecContainersReadinessProbeTcpSocket",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecContainersReadinessProbeTcpSocket#port",
            },
            "remarks": "Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.",
            "summary": "Number or name of the port to access on the container.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 18640,
          },
          "name": "port",
          "type": Object {
            "fqn": "monitoringcoreoscom.PrometheusSpecContainersReadinessProbeTcpSocketPort",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecContainersReadinessProbeTcpSocket#host",
            },
            "summary": "Optional: Host name to connect to, defaults to the pod IP.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 18633,
          },
          "name": "host",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
      ],
    },
    "monitoringcoreoscom.PrometheusSpecContainersReadinessProbeTcpSocketPort": Object {
      "assembly": "monitoringcoreoscom",
      "docs": Object {
        "custom": Object {
          "schema": "PrometheusSpecContainersReadinessProbeTcpSocketPort",
        },
        "remarks": "Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.",
        "summary": "Number or name of the port to access on the container.",
      },
      "fqn": "monitoringcoreoscom.PrometheusSpecContainersReadinessProbeTcpSocketPort",
      "kind": "class",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 21898,
      },
      "methods": Array [
        Object {
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 21899,
          },
          "name": "fromNumber",
          "parameters": Array [
            Object {
              "name": "value",
              "type": Object {
                "primitive": "number",
              },
            },
          ],
          "returns": Object {
            "type": Object {
              "fqn": "monitoringcoreoscom.PrometheusSpecContainersReadinessProbeTcpSocketPort",
            },
          },
          "static": true,
        },
        Object {
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 21902,
          },
          "name": "fromString",
          "parameters": Array [
            Object {
              "name": "value",
              "type": Object {
                "primitive": "string",
              },
            },
          ],
          "returns": Object {
            "type": Object {
              "fqn": "monitoringcoreoscom.PrometheusSpecContainersReadinessProbeTcpSocketPort",
            },
          },
          "static": true,
        },
      ],
      "name": "PrometheusSpecContainersReadinessProbeTcpSocketPort",
      "properties": Array [
        Object {
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 21905,
          },
          "name": "value",
          "type": Object {
            "primitive": "any",
          },
        },
      ],
    },
    "monitoringcoreoscom.PrometheusSpecContainersResources": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "PrometheusSpecContainersResources",
        },
        "remarks": "Cannot be updated. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/",
        "summary": "Compute Resources required by this container.",
      },
      "fqn": "monitoringcoreoscom.PrometheusSpecContainersResources",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 13855,
      },
      "name": "PrometheusSpecContainersResources",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecContainersResources#limits",
            },
            "remarks": "More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/",
            "summary": "Limits describes the maximum amount of compute resources allowed.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 13861,
          },
          "name": "limits",
          "optional": true,
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "primitive": "string",
              },
              "kind": "map",
            },
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecContainersResources#requests",
            },
            "remarks": "If Requests is omitted for a container, it defaults to Limits if that is explicitly specified, otherwise to an implementation-defined value. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/",
            "summary": "Requests describes the minimum amount of compute resources required.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 13868,
          },
          "name": "requests",
          "optional": true,
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "primitive": "string",
              },
              "kind": "map",
            },
          },
        },
      ],
    },
    "monitoringcoreoscom.PrometheusSpecContainersSecurityContext": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "PrometheusSpecContainersSecurityContext",
        },
        "remarks": "More info: https://kubernetes.io/docs/concepts/policy/security-context/ More info: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
        "summary": "Security options the pod should run with.",
      },
      "fqn": "monitoringcoreoscom.PrometheusSpecContainersSecurityContext",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 13892,
      },
      "name": "PrometheusSpecContainersSecurityContext",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecContainersSecurityContext#allowPrivilegeEscalation",
            },
            "remarks": "This bool directly controls if the no_new_privs flag will be set on the container process. AllowPrivilegeEscalation is true always when the container is: 1) run as Privileged 2) has CAP_SYS_ADMIN",
            "summary": "AllowPrivilegeEscalation controls whether a process can gain more privileges than its parent process.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 13898,
          },
          "name": "allowPrivilegeEscalation",
          "optional": true,
          "type": Object {
            "primitive": "boolean",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecContainersSecurityContext#capabilities",
            },
            "default": "the default set of capabilities granted by the container runtime.",
            "remarks": "Defaults to the default set of capabilities granted by the container runtime.",
            "summary": "The capabilities to add/drop when running containers.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 13906,
          },
          "name": "capabilities",
          "optional": true,
          "type": Object {
            "fqn": "monitoringcoreoscom.PrometheusSpecContainersSecurityContextCapabilities",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecContainersSecurityContext#privileged",
            },
            "default": "false.",
            "remarks": "Processes in privileged containers are essentially equivalent to root on the host. Defaults to false.",
            "summary": "Run container in privileged mode.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 13914,
          },
          "name": "privileged",
          "optional": true,
          "type": Object {
            "primitive": "boolean",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecContainersSecurityContext#procMount",
            },
            "remarks": "The default is DefaultProcMount which uses the container runtime defaults for readonly paths and masked paths. This requires the ProcMountType feature flag to be enabled.",
            "summary": "procMount denotes the type of proc mount to use for the containers.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 13921,
          },
          "name": "procMount",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecContainersSecurityContext#readOnlyRootFilesystem",
            },
            "default": "false.",
            "remarks": "Default is false.",
            "summary": "Whether this container has a read-only root filesystem.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 13929,
          },
          "name": "readOnlyRootFilesystem",
          "optional": true,
          "type": Object {
            "primitive": "boolean",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecContainersSecurityContext#runAsGroup",
            },
            "remarks": "Uses runtime default if unset. May also be set in PodSecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.",
            "summary": "The GID to run the entrypoint of the container process.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 13936,
          },
          "name": "runAsGroup",
          "optional": true,
          "type": Object {
            "primitive": "number",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecContainersSecurityContext#runAsNonRoot",
            },
            "remarks": "If true, the Kubelet will validate the image at runtime to ensure that it does not run as UID 0 (root) and fail to start the container if it does. If unset or false, no such validation will be performed. May also be set in PodSecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.",
            "summary": "Indicates that the container must run as a non-root user.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 13943,
          },
          "name": "runAsNonRoot",
          "optional": true,
          "type": Object {
            "primitive": "boolean",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecContainersSecurityContext#runAsUser",
            },
            "default": "user specified in image metadata if unspecified. May also be set in PodSecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.",
            "remarks": "Defaults to user specified in image metadata if unspecified. May also be set in PodSecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.",
            "summary": "The UID to run the entrypoint of the container process.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 13951,
          },
          "name": "runAsUser",
          "optional": true,
          "type": Object {
            "primitive": "number",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecContainersSecurityContext#seLinuxOptions",
            },
            "remarks": "If unspecified, the container runtime will allocate a random SELinux context for each container.  May also be set in PodSecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.",
            "summary": "The SELinux context to be applied to the container.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 13958,
          },
          "name": "seLinuxOptions",
          "optional": true,
          "type": Object {
            "fqn": "monitoringcoreoscom.PrometheusSpecContainersSecurityContextSeLinuxOptions",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecContainersSecurityContext#windowsOptions",
            },
            "remarks": "If unspecified, the options from the PodSecurityContext will be used. If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.",
            "summary": "The Windows specific settings applied to all containers.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 13965,
          },
          "name": "windowsOptions",
          "optional": true,
          "type": Object {
            "fqn": "monitoringcoreoscom.PrometheusSpecContainersSecurityContextWindowsOptions",
          },
        },
      ],
    },
    "monitoringcoreoscom.PrometheusSpecContainersSecurityContextCapabilities": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "PrometheusSpecContainersSecurityContextCapabilities",
        },
        "default": "the default set of capabilities granted by the container runtime.",
        "remarks": "Defaults to the default set of capabilities granted by the container runtime.",
        "summary": "The capabilities to add/drop when running containers.",
      },
      "fqn": "monitoringcoreoscom.PrometheusSpecContainersSecurityContextCapabilities",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 18665,
      },
      "name": "PrometheusSpecContainersSecurityContextCapabilities",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecContainersSecurityContextCapabilities#add",
            },
            "summary": "Added capabilities.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 18671,
          },
          "name": "add",
          "optional": true,
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "primitive": "string",
              },
              "kind": "array",
            },
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecContainersSecurityContextCapabilities#drop",
            },
            "summary": "Removed capabilities.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 18678,
          },
          "name": "drop",
          "optional": true,
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "primitive": "string",
              },
              "kind": "array",
            },
          },
        },
      ],
    },
    "monitoringcoreoscom.PrometheusSpecContainersSecurityContextSeLinuxOptions": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "PrometheusSpecContainersSecurityContextSeLinuxOptions",
        },
        "remarks": "If unspecified, the container runtime will allocate a random SELinux context for each container.  May also be set in PodSecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.",
        "summary": "The SELinux context to be applied to the container.",
      },
      "fqn": "monitoringcoreoscom.PrometheusSpecContainersSecurityContextSeLinuxOptions",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 18702,
      },
      "name": "PrometheusSpecContainersSecurityContextSeLinuxOptions",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecContainersSecurityContextSeLinuxOptions#level",
            },
            "summary": "Level is SELinux level label that applies to the container.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 18708,
          },
          "name": "level",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecContainersSecurityContextSeLinuxOptions#role",
            },
            "summary": "Role is a SELinux role label that applies to the container.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 18715,
          },
          "name": "role",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecContainersSecurityContextSeLinuxOptions#type",
            },
            "summary": "Type is a SELinux type label that applies to the container.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 18722,
          },
          "name": "type",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecContainersSecurityContextSeLinuxOptions#user",
            },
            "summary": "User is a SELinux user label that applies to the container.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 18729,
          },
          "name": "user",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
      ],
    },
    "monitoringcoreoscom.PrometheusSpecContainersSecurityContextWindowsOptions": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "PrometheusSpecContainersSecurityContextWindowsOptions",
        },
        "remarks": "If unspecified, the options from the PodSecurityContext will be used. If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.",
        "summary": "The Windows specific settings applied to all containers.",
      },
      "fqn": "monitoringcoreoscom.PrometheusSpecContainersSecurityContextWindowsOptions",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 18755,
      },
      "name": "PrometheusSpecContainersSecurityContextWindowsOptions",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecContainersSecurityContextWindowsOptions#gmsaCredentialSpec",
            },
            "summary": "GMSACredentialSpec is where the GMSA admission webhook (https://github.com/kubernetes-sigs/windows-gmsa) inlines the contents of the GMSA credential spec named by the GMSACredentialSpecName field.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 18761,
          },
          "name": "gmsaCredentialSpec",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecContainersSecurityContextWindowsOptions#gmsaCredentialSpecName",
            },
            "summary": "GMSACredentialSpecName is the name of the GMSA credential spec to use.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 18768,
          },
          "name": "gmsaCredentialSpecName",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecContainersSecurityContextWindowsOptions#runAsUserName",
            },
            "default": "the user specified in image metadata if unspecified. May also be set in PodSecurityContext. If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.",
            "remarks": "Defaults to the user specified in image metadata if unspecified. May also be set in PodSecurityContext. If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.",
            "summary": "The UserName in Windows to run the entrypoint of the container process.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 18776,
          },
          "name": "runAsUserName",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
      ],
    },
    "monitoringcoreoscom.PrometheusSpecContainersStartupProbe": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "PrometheusSpecContainersStartupProbe",
        },
        "remarks": "If specified, no other probes are executed until this completes successfully. If this probe fails, the Pod will be restarted, just as if the livenessProbe failed. This can be used to provide different probe parameters at the beginning of a Pod's lifecycle, when it might take a long time to load data or warm a cache, than during steady-state operation. This cannot be updated. This is a beta feature enabled by the StartupProbe feature flag. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes",
        "summary": "StartupProbe indicates that the Pod has successfully initialized.",
      },
      "fqn": "monitoringcoreoscom.PrometheusSpecContainersStartupProbe",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 13997,
      },
      "name": "PrometheusSpecContainersStartupProbe",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecContainersStartupProbe#exec",
            },
            "remarks": "Exec specifies the action to take.",
            "summary": "One and only one of the following should be specified.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 14003,
          },
          "name": "exec",
          "optional": true,
          "type": Object {
            "fqn": "monitoringcoreoscom.PrometheusSpecContainersStartupProbeExec",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecContainersStartupProbe#failureThreshold",
            },
            "default": "3. Minimum value is 1.",
            "remarks": "Defaults to 3. Minimum value is 1.",
            "summary": "Minimum consecutive failures for the probe to be considered failed after having succeeded.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 14011,
          },
          "name": "failureThreshold",
          "optional": true,
          "type": Object {
            "primitive": "number",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecContainersStartupProbe#httpGet",
            },
            "summary": "HTTPGet specifies the http request to perform.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 14018,
          },
          "name": "httpGet",
          "optional": true,
          "type": Object {
            "fqn": "monitoringcoreoscom.PrometheusSpecContainersStartupProbeHttpGet",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecContainersStartupProbe#initialDelaySeconds",
            },
            "remarks": "More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes",
            "summary": "Number of seconds after the container has started before liveness probes are initiated.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 14025,
          },
          "name": "initialDelaySeconds",
          "optional": true,
          "type": Object {
            "primitive": "number",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecContainersStartupProbe#periodSeconds",
            },
            "default": "10 seconds. Minimum value is 1.",
            "remarks": "Default to 10 seconds. Minimum value is 1.",
            "summary": "How often (in seconds) to perform the probe.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 14033,
          },
          "name": "periodSeconds",
          "optional": true,
          "type": Object {
            "primitive": "number",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecContainersStartupProbe#successThreshold",
            },
            "default": "1. Must be 1 for liveness and startup. Minimum value is 1.",
            "remarks": "Defaults to 1. Must be 1 for liveness and startup. Minimum value is 1.",
            "summary": "Minimum consecutive successes for the probe to be considered successful after having failed.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 14041,
          },
          "name": "successThreshold",
          "optional": true,
          "type": Object {
            "primitive": "number",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecContainersStartupProbe#tcpSocket",
            },
            "remarks": "TCP hooks not yet supported TODO: implement a realistic TCP lifecycle hook",
            "summary": "TCPSocket specifies an action involving a TCP port.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 14048,
          },
          "name": "tcpSocket",
          "optional": true,
          "type": Object {
            "fqn": "monitoringcoreoscom.PrometheusSpecContainersStartupProbeTcpSocket",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecContainersStartupProbe#timeoutSeconds",
            },
            "default": "1 second. Minimum value is 1. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes",
            "remarks": "Defaults to 1 second. Minimum value is 1. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes",
            "summary": "Number of seconds after which the probe times out.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 14056,
          },
          "name": "timeoutSeconds",
          "optional": true,
          "type": Object {
            "primitive": "number",
          },
        },
      ],
    },
    "monitoringcoreoscom.PrometheusSpecContainersStartupProbeExec": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "PrometheusSpecContainersStartupProbeExec",
        },
        "remarks": "Exec specifies the action to take.",
        "summary": "One and only one of the following should be specified.",
      },
      "fqn": "monitoringcoreoscom.PrometheusSpecContainersStartupProbeExec",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 18801,
      },
      "name": "PrometheusSpecContainersStartupProbeExec",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecContainersStartupProbeExec#command",
            },
            "remarks": "The command is simply exec'd, it is not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use a shell, you need to explicitly call out to that shell. Exit status of 0 is treated as live/healthy and non-zero is unhealthy.",
            "summary": "Command is the command line to execute inside the container, the working directory for the command  is root ('/') in the container's filesystem.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 18807,
          },
          "name": "command",
          "optional": true,
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "primitive": "string",
              },
              "kind": "array",
            },
          },
        },
      ],
    },
    "monitoringcoreoscom.PrometheusSpecContainersStartupProbeHttpGet": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "PrometheusSpecContainersStartupProbeHttpGet",
        },
        "summary": "HTTPGet specifies the http request to perform.",
      },
      "fqn": "monitoringcoreoscom.PrometheusSpecContainersStartupProbeHttpGet",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 18830,
      },
      "name": "PrometheusSpecContainersStartupProbeHttpGet",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecContainersStartupProbeHttpGet#port",
            },
            "remarks": "Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.",
            "summary": "Name or number of the port to access on the container.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 18857,
          },
          "name": "port",
          "type": Object {
            "fqn": "monitoringcoreoscom.PrometheusSpecContainersStartupProbeHttpGetPort",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecContainersStartupProbeHttpGet#host",
            },
            "remarks": "You probably want to set \\"Host\\" in httpHeaders instead.",
            "summary": "Host name to connect to, defaults to the pod IP.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 18836,
          },
          "name": "host",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecContainersStartupProbeHttpGet#httpHeaders",
            },
            "remarks": "HTTP allows repeated headers.",
            "summary": "Custom headers to set in the request.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 18843,
          },
          "name": "httpHeaders",
          "optional": true,
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "fqn": "monitoringcoreoscom.PrometheusSpecContainersStartupProbeHttpGetHttpHeaders",
              },
              "kind": "array",
            },
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecContainersStartupProbeHttpGet#path",
            },
            "summary": "Path to access on the HTTP server.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 18850,
          },
          "name": "path",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecContainersStartupProbeHttpGet#scheme",
            },
            "default": "HTTP.",
            "remarks": "Defaults to HTTP.",
            "summary": "Scheme to use for connecting to the host.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 18865,
          },
          "name": "scheme",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
      ],
    },
    "monitoringcoreoscom.PrometheusSpecContainersStartupProbeHttpGetHttpHeaders": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "PrometheusSpecContainersStartupProbeHttpGetHttpHeaders",
        },
        "summary": "HTTPHeader describes a custom header to be used in HTTP probes.",
      },
      "fqn": "monitoringcoreoscom.PrometheusSpecContainersStartupProbeHttpGetHttpHeaders",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 21915,
      },
      "name": "PrometheusSpecContainersStartupProbeHttpGetHttpHeaders",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecContainersStartupProbeHttpGetHttpHeaders#name",
            },
            "summary": "The header field name.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 21921,
          },
          "name": "name",
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecContainersStartupProbeHttpGetHttpHeaders#value",
            },
            "summary": "The header field value.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 21928,
          },
          "name": "value",
          "type": Object {
            "primitive": "string",
          },
        },
      ],
    },
    "monitoringcoreoscom.PrometheusSpecContainersStartupProbeHttpGetPort": Object {
      "assembly": "monitoringcoreoscom",
      "docs": Object {
        "custom": Object {
          "schema": "PrometheusSpecContainersStartupProbeHttpGetPort",
        },
        "remarks": "Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.",
        "summary": "Name or number of the port to access on the container.",
      },
      "fqn": "monitoringcoreoscom.PrometheusSpecContainersStartupProbeHttpGetPort",
      "kind": "class",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 21952,
      },
      "methods": Array [
        Object {
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 21953,
          },
          "name": "fromNumber",
          "parameters": Array [
            Object {
              "name": "value",
              "type": Object {
                "primitive": "number",
              },
            },
          ],
          "returns": Object {
            "type": Object {
              "fqn": "monitoringcoreoscom.PrometheusSpecContainersStartupProbeHttpGetPort",
            },
          },
          "static": true,
        },
        Object {
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 21956,
          },
          "name": "fromString",
          "parameters": Array [
            Object {
              "name": "value",
              "type": Object {
                "primitive": "string",
              },
            },
          ],
          "returns": Object {
            "type": Object {
              "fqn": "monitoringcoreoscom.PrometheusSpecContainersStartupProbeHttpGetPort",
            },
          },
          "static": true,
        },
      ],
      "name": "PrometheusSpecContainersStartupProbeHttpGetPort",
      "properties": Array [
        Object {
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 21959,
          },
          "name": "value",
          "type": Object {
            "primitive": "any",
          },
        },
      ],
    },
    "monitoringcoreoscom.PrometheusSpecContainersStartupProbeTcpSocket": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "PrometheusSpecContainersStartupProbeTcpSocket",
        },
        "remarks": "TCP hooks not yet supported TODO: implement a realistic TCP lifecycle hook",
        "summary": "TCPSocket specifies an action involving a TCP port.",
      },
      "fqn": "monitoringcoreoscom.PrometheusSpecContainersStartupProbeTcpSocket",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 18892,
      },
      "name": "PrometheusSpecContainersStartupProbeTcpSocket",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecContainersStartupProbeTcpSocket#port",
            },
            "remarks": "Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.",
            "summary": "Number or name of the port to access on the container.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 18905,
          },
          "name": "port",
          "type": Object {
            "fqn": "monitoringcoreoscom.PrometheusSpecContainersStartupProbeTcpSocketPort",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecContainersStartupProbeTcpSocket#host",
            },
            "summary": "Optional: Host name to connect to, defaults to the pod IP.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 18898,
          },
          "name": "host",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
      ],
    },
    "monitoringcoreoscom.PrometheusSpecContainersStartupProbeTcpSocketPort": Object {
      "assembly": "monitoringcoreoscom",
      "docs": Object {
        "custom": Object {
          "schema": "PrometheusSpecContainersStartupProbeTcpSocketPort",
        },
        "remarks": "Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.",
        "summary": "Number or name of the port to access on the container.",
      },
      "fqn": "monitoringcoreoscom.PrometheusSpecContainersStartupProbeTcpSocketPort",
      "kind": "class",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 21969,
      },
      "methods": Array [
        Object {
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 21970,
          },
          "name": "fromNumber",
          "parameters": Array [
            Object {
              "name": "value",
              "type": Object {
                "primitive": "number",
              },
            },
          ],
          "returns": Object {
            "type": Object {
              "fqn": "monitoringcoreoscom.PrometheusSpecContainersStartupProbeTcpSocketPort",
            },
          },
          "static": true,
        },
        Object {
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 21973,
          },
          "name": "fromString",
          "parameters": Array [
            Object {
              "name": "value",
              "type": Object {
                "primitive": "string",
              },
            },
          ],
          "returns": Object {
            "type": Object {
              "fqn": "monitoringcoreoscom.PrometheusSpecContainersStartupProbeTcpSocketPort",
            },
          },
          "static": true,
        },
      ],
      "name": "PrometheusSpecContainersStartupProbeTcpSocketPort",
      "properties": Array [
        Object {
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 21976,
          },
          "name": "value",
          "type": Object {
            "primitive": "any",
          },
        },
      ],
    },
    "monitoringcoreoscom.PrometheusSpecContainersVolumeDevices": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "PrometheusSpecContainersVolumeDevices",
        },
        "summary": "volumeDevice describes a mapping of a raw block device within a container.",
      },
      "fqn": "monitoringcoreoscom.PrometheusSpecContainersVolumeDevices",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 14086,
      },
      "name": "PrometheusSpecContainersVolumeDevices",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecContainersVolumeDevices#devicePath",
            },
            "summary": "devicePath is the path inside of the container that the device will be mapped to.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 14092,
          },
          "name": "devicePath",
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecContainersVolumeDevices#name",
            },
            "summary": "name must match the name of a persistentVolumeClaim in the pod.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 14099,
          },
          "name": "name",
          "type": Object {
            "primitive": "string",
          },
        },
      ],
    },
    "monitoringcoreoscom.PrometheusSpecContainersVolumeMounts": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "PrometheusSpecContainersVolumeMounts",
        },
        "summary": "VolumeMount describes a mounting of a Volume within a container.",
      },
      "fqn": "monitoringcoreoscom.PrometheusSpecContainersVolumeMounts",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 14123,
      },
      "name": "PrometheusSpecContainersVolumeMounts",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecContainersVolumeMounts#mountPath",
            },
            "remarks": "Must not contain ':'.",
            "summary": "Path within the container at which the volume should be mounted.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 14129,
          },
          "name": "mountPath",
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecContainersVolumeMounts#name",
            },
            "summary": "This must match the Name of a Volume.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 14143,
          },
          "name": "name",
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecContainersVolumeMounts#mountPropagation",
            },
            "remarks": "When not set, MountPropagationNone is used. This field is beta in 1.10.",
            "summary": "mountPropagation determines how mounts are propagated from the host to container and the other way around.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 14136,
          },
          "name": "mountPropagation",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecContainersVolumeMounts#readOnly",
            },
            "default": "false.",
            "remarks": "Defaults to false.",
            "summary": "Mounted read-only if true, read-write otherwise (false or unspecified).",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 14151,
          },
          "name": "readOnly",
          "optional": true,
          "type": Object {
            "primitive": "boolean",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecContainersVolumeMounts#subPath",
            },
            "default": "volume's root).",
            "remarks": "Defaults to \\"\\" (volume's root).",
            "summary": "Path within the volume from which the container's volume should be mounted.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 14159,
          },
          "name": "subPath",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecContainersVolumeMounts#subPathExpr",
            },
            "default": "volume's root). SubPathExpr and SubPath are mutually exclusive.",
            "remarks": "Behaves similarly to SubPath but environment variable references $(VAR_NAME) are expanded using the container's environment. Defaults to \\"\\" (volume's root). SubPathExpr and SubPath are mutually exclusive.",
            "summary": "Expanded path within the volume from which the container's volume should be mounted.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 14167,
          },
          "name": "subPathExpr",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
      ],
    },
    "monitoringcoreoscom.PrometheusSpecImagePullSecrets": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "PrometheusSpecImagePullSecrets",
        },
        "summary": "LocalObjectReference contains enough information to let you locate the referenced object inside the same namespace.",
      },
      "fqn": "monitoringcoreoscom.PrometheusSpecImagePullSecrets",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 11700,
      },
      "name": "PrometheusSpecImagePullSecrets",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecImagePullSecrets#name",
            },
            "remarks": "More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?",
            "summary": "Name of the referent.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 11706,
          },
          "name": "name",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
      ],
    },
    "monitoringcoreoscom.PrometheusSpecInitContainers": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "PrometheusSpecInitContainers",
        },
        "summary": "A single application container that you want to run within a pod.",
      },
      "fqn": "monitoringcoreoscom.PrometheusSpecInitContainers",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 11729,
      },
      "name": "PrometheusSpecInitContainers",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecInitContainers#name",
            },
            "remarks": "Each container in a pod must have a unique name (DNS_LABEL). Cannot be updated.",
            "summary": "Name of the container specified as a DNS_LABEL.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 11792,
          },
          "name": "name",
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecInitContainers#args",
            },
            "remarks": "The docker image's CMD is used if this is not provided. Variable references $(VAR_NAME) are expanded using the container's environment. If a variable cannot be resolved, the reference in the input string will be unchanged. The $(VAR_NAME) syntax can be escaped with a double $$, ie: $$(VAR_NAME). Escaped references will never be expanded, regardless of whether the variable exists or not. Cannot be updated. More info: https://kubernetes.io/docs/tasks/inject-data-application/define-command-argument-container/#running-a-command-in-a-shell",
            "summary": "Arguments to the entrypoint.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 11735,
          },
          "name": "args",
          "optional": true,
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "primitive": "string",
              },
              "kind": "array",
            },
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecInitContainers#command",
            },
            "remarks": "Not executed within a shell. The docker image's ENTRYPOINT is used if this is not provided. Variable references $(VAR_NAME) are expanded using the container's environment. If a variable cannot be resolved, the reference in the input string will be unchanged. The $(VAR_NAME) syntax can be escaped with a double $$, ie: $$(VAR_NAME). Escaped references will never be expanded, regardless of whether the variable exists or not. Cannot be updated. More info: https://kubernetes.io/docs/tasks/inject-data-application/define-command-argument-container/#running-a-command-in-a-shell",
            "summary": "Entrypoint array.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 11742,
          },
          "name": "command",
          "optional": true,
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "primitive": "string",
              },
              "kind": "array",
            },
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecInitContainers#env",
            },
            "remarks": "Cannot be updated.",
            "summary": "List of environment variables to set in the container.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 11749,
          },
          "name": "env",
          "optional": true,
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "fqn": "monitoringcoreoscom.PrometheusSpecInitContainersEnv",
              },
              "kind": "array",
            },
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecInitContainers#envFrom",
            },
            "remarks": "The keys defined within a source must be a C_IDENTIFIER. All invalid keys will be reported as an event when the container is starting. When a key exists in multiple sources, the value associated with the last source will take precedence. Values defined by an Env with a duplicate key will take precedence. Cannot be updated.",
            "summary": "List of sources to populate environment variables in the container.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 11756,
          },
          "name": "envFrom",
          "optional": true,
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "fqn": "monitoringcoreoscom.PrometheusSpecInitContainersEnvFrom",
              },
              "kind": "array",
            },
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecInitContainers#image",
            },
            "remarks": "More info: https://kubernetes.io/docs/concepts/containers/images This field is optional to allow higher level config management to default or override container images in workload controllers like Deployments and StatefulSets.",
            "summary": "Docker image name.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 11763,
          },
          "name": "image",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecInitContainers#imagePullPolicy",
            },
            "default": "Always if :latest tag is specified, or IfNotPresent otherwise. Cannot be updated. More info: https://kubernetes.io/docs/concepts/containers/images#updating-images",
            "remarks": "One of Always, Never, IfNotPresent. Defaults to Always if :latest tag is specified, or IfNotPresent otherwise. Cannot be updated. More info: https://kubernetes.io/docs/concepts/containers/images#updating-images",
            "summary": "Image pull policy.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 11771,
          },
          "name": "imagePullPolicy",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecInitContainers#lifecycle",
            },
            "remarks": "Cannot be updated.",
            "summary": "Actions that the management system should take in response to container lifecycle events.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 11778,
          },
          "name": "lifecycle",
          "optional": true,
          "type": Object {
            "fqn": "monitoringcoreoscom.PrometheusSpecInitContainersLifecycle",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecInitContainers#livenessProbe",
            },
            "remarks": "Container will be restarted if the probe fails. Cannot be updated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes",
            "summary": "Periodic probe of container liveness.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 11785,
          },
          "name": "livenessProbe",
          "optional": true,
          "type": Object {
            "fqn": "monitoringcoreoscom.PrometheusSpecInitContainersLivenessProbe",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecInitContainers#ports",
            },
            "remarks": "Exposing a port here gives the system additional information about the network connections a container uses, but is primarily informational. Not specifying a port here DOES NOT prevent that port from being exposed. Any port which is listening on the default \\"0.0.0.0\\" address inside a container will be accessible from the network. Cannot be updated.",
            "summary": "List of ports to expose from the container.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 11799,
          },
          "name": "ports",
          "optional": true,
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "fqn": "monitoringcoreoscom.PrometheusSpecInitContainersPorts",
              },
              "kind": "array",
            },
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecInitContainers#readinessProbe",
            },
            "remarks": "Container will be removed from service endpoints if the probe fails. Cannot be updated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes",
            "summary": "Periodic probe of container service readiness.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 11806,
          },
          "name": "readinessProbe",
          "optional": true,
          "type": Object {
            "fqn": "monitoringcoreoscom.PrometheusSpecInitContainersReadinessProbe",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecInitContainers#resources",
            },
            "remarks": "Cannot be updated. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/",
            "summary": "Compute Resources required by this container.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 11813,
          },
          "name": "resources",
          "optional": true,
          "type": Object {
            "fqn": "monitoringcoreoscom.PrometheusSpecInitContainersResources",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecInitContainers#securityContext",
            },
            "remarks": "More info: https://kubernetes.io/docs/concepts/policy/security-context/ More info: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
            "summary": "Security options the pod should run with.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 11820,
          },
          "name": "securityContext",
          "optional": true,
          "type": Object {
            "fqn": "monitoringcoreoscom.PrometheusSpecInitContainersSecurityContext",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecInitContainers#startupProbe",
            },
            "remarks": "If specified, no other probes are executed until this completes successfully. If this probe fails, the Pod will be restarted, just as if the livenessProbe failed. This can be used to provide different probe parameters at the beginning of a Pod's lifecycle, when it might take a long time to load data or warm a cache, than during steady-state operation. This cannot be updated. This is a beta feature enabled by the StartupProbe feature flag. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes",
            "summary": "StartupProbe indicates that the Pod has successfully initialized.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 11827,
          },
          "name": "startupProbe",
          "optional": true,
          "type": Object {
            "fqn": "monitoringcoreoscom.PrometheusSpecInitContainersStartupProbe",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecInitContainers#stdin",
            },
            "default": "false.",
            "remarks": "If this is not set, reads from stdin in the container will always result in EOF. Default is false.",
            "summary": "Whether this container should allocate a buffer for stdin in the container runtime.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 11835,
          },
          "name": "stdin",
          "optional": true,
          "type": Object {
            "primitive": "boolean",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecInitContainers#stdinOnce",
            },
            "default": "false",
            "remarks": "When stdin is true the stdin stream will remain open across multiple attach sessions. If stdinOnce is set to true, stdin is opened on container start, is empty until the first client attaches to stdin, and then remains open and accepts data until the client disconnects, at which time stdin is closed and remains closed until the container is restarted. If this flag is false, a container processes that reads from stdin will never receive an EOF. Default is false",
            "summary": "Whether the container runtime should close the stdin channel after it has been opened by a single attach.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 11843,
          },
          "name": "stdinOnce",
          "optional": true,
          "type": Object {
            "primitive": "boolean",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecInitContainers#terminationMessagePath",
            },
            "default": "dev/termination-log. Cannot be updated.",
            "remarks": "Message written is intended to be brief final status, such as an assertion failure message. Will be truncated by the node if greater than 4096 bytes. The total message length across all containers will be limited to 12kb. Defaults to /dev/termination-log. Cannot be updated.",
            "summary": "Optional: Path at which the file to which the container's termination message will be written is mounted into the container's filesystem.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 11851,
          },
          "name": "terminationMessagePath",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecInitContainers#terminationMessagePolicy",
            },
            "default": "File. Cannot be updated.",
            "remarks": "File will use the contents of terminationMessagePath to populate the container status message on both success and failure. FallbackToLogsOnError will use the last chunk of container log output if the termination message file is empty and the container exited with an error. The log output is limited to 2048 bytes or 80 lines, whichever is smaller. Defaults to File. Cannot be updated.",
            "summary": "Indicate how the termination message should be populated.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 11859,
          },
          "name": "terminationMessagePolicy",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecInitContainers#tty",
            },
            "default": "false.",
            "remarks": "Default is false.",
            "summary": "Whether this container should allocate a TTY for itself, also requires 'stdin' to be true.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 11867,
          },
          "name": "tty",
          "optional": true,
          "type": Object {
            "primitive": "boolean",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecInitContainers#volumeDevices",
            },
            "summary": "volumeDevices is the list of block devices to be used by the container.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 11874,
          },
          "name": "volumeDevices",
          "optional": true,
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "fqn": "monitoringcoreoscom.PrometheusSpecInitContainersVolumeDevices",
              },
              "kind": "array",
            },
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecInitContainers#volumeMounts",
            },
            "remarks": "Cannot be updated.",
            "summary": "Pod volumes to mount into the container's filesystem.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 11881,
          },
          "name": "volumeMounts",
          "optional": true,
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "fqn": "monitoringcoreoscom.PrometheusSpecInitContainersVolumeMounts",
              },
              "kind": "array",
            },
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecInitContainers#workingDir",
            },
            "remarks": "If not specified, the container runtime's default will be used, which might be configured in the container image. Cannot be updated.",
            "summary": "Container's working directory.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 11888,
          },
          "name": "workingDir",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
      ],
    },
    "monitoringcoreoscom.PrometheusSpecInitContainersEnv": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "PrometheusSpecInitContainersEnv",
        },
        "summary": "EnvVar represents an environment variable present in a Container.",
      },
      "fqn": "monitoringcoreoscom.PrometheusSpecInitContainersEnv",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 14195,
      },
      "name": "PrometheusSpecInitContainersEnv",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecInitContainersEnv#name",
            },
            "remarks": "Must be a C_IDENTIFIER.",
            "summary": "Name of the environment variable.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 14201,
          },
          "name": "name",
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecInitContainersEnv#value",
            },
            "default": ".",
            "remarks": "If a variable cannot be resolved, the reference in the input string will be unchanged. The $(VAR_NAME) syntax can be escaped with a double $$, ie: $$(VAR_NAME). Escaped references will never be expanded, regardless of whether the variable exists or not. Defaults to \\"\\".",
            "summary": "Variable references $(VAR_NAME) are expanded using the previous defined environment variables in the container and any service environment variables.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 14209,
          },
          "name": "value",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecInitContainersEnv#valueFrom",
            },
            "remarks": "Cannot be used if value is not empty.",
            "summary": "Source for the environment variable's value.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 14216,
          },
          "name": "valueFrom",
          "optional": true,
          "type": Object {
            "fqn": "monitoringcoreoscom.PrometheusSpecInitContainersEnvValueFrom",
          },
        },
      ],
    },
    "monitoringcoreoscom.PrometheusSpecInitContainersEnvFrom": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "PrometheusSpecInitContainersEnvFrom",
        },
        "summary": "EnvFromSource represents the source of a set of ConfigMaps.",
      },
      "fqn": "monitoringcoreoscom.PrometheusSpecInitContainersEnvFrom",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 14241,
      },
      "name": "PrometheusSpecInitContainersEnvFrom",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecInitContainersEnvFrom#configMapRef",
            },
            "summary": "The ConfigMap to select from.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 14247,
          },
          "name": "configMapRef",
          "optional": true,
          "type": Object {
            "fqn": "monitoringcoreoscom.PrometheusSpecInitContainersEnvFromConfigMapRef",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecInitContainersEnvFrom#prefix",
            },
            "remarks": "Must be a C_IDENTIFIER.",
            "summary": "An optional identifier to prepend to each key in the ConfigMap.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 14254,
          },
          "name": "prefix",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecInitContainersEnvFrom#secretRef",
            },
            "summary": "The Secret to select from.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 14261,
          },
          "name": "secretRef",
          "optional": true,
          "type": Object {
            "fqn": "monitoringcoreoscom.PrometheusSpecInitContainersEnvFromSecretRef",
          },
        },
      ],
    },
    "monitoringcoreoscom.PrometheusSpecInitContainersEnvFromConfigMapRef": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "PrometheusSpecInitContainersEnvFromConfigMapRef",
        },
        "summary": "The ConfigMap to select from.",
      },
      "fqn": "monitoringcoreoscom.PrometheusSpecInitContainersEnvFromConfigMapRef",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 18982,
      },
      "name": "PrometheusSpecInitContainersEnvFromConfigMapRef",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecInitContainersEnvFromConfigMapRef#name",
            },
            "remarks": "More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?",
            "summary": "Name of the referent.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 18988,
          },
          "name": "name",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecInitContainersEnvFromConfigMapRef#optional",
            },
            "summary": "Specify whether the ConfigMap must be defined.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 18995,
          },
          "name": "optional",
          "optional": true,
          "type": Object {
            "primitive": "boolean",
          },
        },
      ],
    },
    "monitoringcoreoscom.PrometheusSpecInitContainersEnvFromSecretRef": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "PrometheusSpecInitContainersEnvFromSecretRef",
        },
        "summary": "The Secret to select from.",
      },
      "fqn": "monitoringcoreoscom.PrometheusSpecInitContainersEnvFromSecretRef",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 19019,
      },
      "name": "PrometheusSpecInitContainersEnvFromSecretRef",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecInitContainersEnvFromSecretRef#name",
            },
            "remarks": "More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?",
            "summary": "Name of the referent.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 19025,
          },
          "name": "name",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecInitContainersEnvFromSecretRef#optional",
            },
            "summary": "Specify whether the Secret must be defined.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 19032,
          },
          "name": "optional",
          "optional": true,
          "type": Object {
            "primitive": "boolean",
          },
        },
      ],
    },
    "monitoringcoreoscom.PrometheusSpecInitContainersEnvValueFrom": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "PrometheusSpecInitContainersEnvValueFrom",
        },
        "remarks": "Cannot be used if value is not empty.",
        "summary": "Source for the environment variable's value.",
      },
      "fqn": "monitoringcoreoscom.PrometheusSpecInitContainersEnvValueFrom",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 18929,
      },
      "name": "PrometheusSpecInitContainersEnvValueFrom",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecInitContainersEnvValueFrom#configMapKeyRef",
            },
            "summary": "Selects a key of a ConfigMap.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 18935,
          },
          "name": "configMapKeyRef",
          "optional": true,
          "type": Object {
            "fqn": "monitoringcoreoscom.PrometheusSpecInitContainersEnvValueFromConfigMapKeyRef",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecInitContainersEnvValueFrom#fieldRef",
            },
            "summary": "Selects a field of the pod: supports metadata.name, metadata.namespace, metadata.labels, metadata.annotations, spec.nodeName, spec.serviceAccountName, status.hostIP, status.podIP, status.podIPs.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 18942,
          },
          "name": "fieldRef",
          "optional": true,
          "type": Object {
            "fqn": "monitoringcoreoscom.PrometheusSpecInitContainersEnvValueFromFieldRef",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecInitContainersEnvValueFrom#resourceFieldRef",
            },
            "summary": "Selects a resource of the container: only resources limits and requests (limits.cpu, limits.memory, limits.ephemeral-storage, requests.cpu, requests.memory and requests.ephemeral-storage) are currently supported.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 18949,
          },
          "name": "resourceFieldRef",
          "optional": true,
          "type": Object {
            "fqn": "monitoringcoreoscom.PrometheusSpecInitContainersEnvValueFromResourceFieldRef",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecInitContainersEnvValueFrom#secretKeyRef",
            },
            "summary": "Selects a key of a secret in the pod's namespace.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 18956,
          },
          "name": "secretKeyRef",
          "optional": true,
          "type": Object {
            "fqn": "monitoringcoreoscom.PrometheusSpecInitContainersEnvValueFromSecretKeyRef",
          },
        },
      ],
    },
    "monitoringcoreoscom.PrometheusSpecInitContainersEnvValueFromConfigMapKeyRef": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "PrometheusSpecInitContainersEnvValueFromConfigMapKeyRef",
        },
        "summary": "Selects a key of a ConfigMap.",
      },
      "fqn": "monitoringcoreoscom.PrometheusSpecInitContainersEnvValueFromConfigMapKeyRef",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 21986,
      },
      "name": "PrometheusSpecInitContainersEnvValueFromConfigMapKeyRef",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecInitContainersEnvValueFromConfigMapKeyRef#key",
            },
            "summary": "The key to select.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 21992,
          },
          "name": "key",
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecInitContainersEnvValueFromConfigMapKeyRef#name",
            },
            "remarks": "More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?",
            "summary": "Name of the referent.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 21999,
          },
          "name": "name",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecInitContainersEnvValueFromConfigMapKeyRef#optional",
            },
            "summary": "Specify whether the ConfigMap or its key must be defined.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 22006,
          },
          "name": "optional",
          "optional": true,
          "type": Object {
            "primitive": "boolean",
          },
        },
      ],
    },
    "monitoringcoreoscom.PrometheusSpecInitContainersEnvValueFromFieldRef": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "PrometheusSpecInitContainersEnvValueFromFieldRef",
        },
        "summary": "Selects a field of the pod: supports metadata.name, metadata.namespace, metadata.labels, metadata.annotations, spec.nodeName, spec.serviceAccountName, status.hostIP, status.podIP, status.podIPs.",
      },
      "fqn": "monitoringcoreoscom.PrometheusSpecInitContainersEnvValueFromFieldRef",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 22031,
      },
      "name": "PrometheusSpecInitContainersEnvValueFromFieldRef",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecInitContainersEnvValueFromFieldRef#fieldPath",
            },
            "summary": "Path of the field to select in the specified API version.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 22044,
          },
          "name": "fieldPath",
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecInitContainersEnvValueFromFieldRef#apiVersion",
            },
            "summary": "Version of the schema the FieldPath is written in terms of, defaults to \\"v1\\".",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 22037,
          },
          "name": "apiVersion",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
      ],
    },
    "monitoringcoreoscom.PrometheusSpecInitContainersEnvValueFromResourceFieldRef": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "PrometheusSpecInitContainersEnvValueFromResourceFieldRef",
        },
        "summary": "Selects a resource of the container: only resources limits and requests (limits.cpu, limits.memory, limits.ephemeral-storage, requests.cpu, requests.memory and requests.ephemeral-storage) are currently supported.",
      },
      "fqn": "monitoringcoreoscom.PrometheusSpecInitContainersEnvValueFromResourceFieldRef",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 22068,
      },
      "name": "PrometheusSpecInitContainersEnvValueFromResourceFieldRef",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecInitContainersEnvValueFromResourceFieldRef#resource",
            },
            "summary": "Required: resource to select.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 22088,
          },
          "name": "resource",
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecInitContainersEnvValueFromResourceFieldRef#containerName",
            },
            "summary": "Container name: required for volumes, optional for env vars.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 22074,
          },
          "name": "containerName",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecInitContainersEnvValueFromResourceFieldRef#divisor",
            },
            "summary": "Specifies the output format of the exposed resources, defaults to \\"1\\".",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 22081,
          },
          "name": "divisor",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
      ],
    },
    "monitoringcoreoscom.PrometheusSpecInitContainersEnvValueFromSecretKeyRef": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "PrometheusSpecInitContainersEnvValueFromSecretKeyRef",
        },
        "summary": "Selects a key of a secret in the pod's namespace.",
      },
      "fqn": "monitoringcoreoscom.PrometheusSpecInitContainersEnvValueFromSecretKeyRef",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 22113,
      },
      "name": "PrometheusSpecInitContainersEnvValueFromSecretKeyRef",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecInitContainersEnvValueFromSecretKeyRef#key",
            },
            "remarks": "Must be a valid secret key.",
            "summary": "The key of the secret to select from.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 22119,
          },
          "name": "key",
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecInitContainersEnvValueFromSecretKeyRef#name",
            },
            "remarks": "More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?",
            "summary": "Name of the referent.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 22126,
          },
          "name": "name",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecInitContainersEnvValueFromSecretKeyRef#optional",
            },
            "summary": "Specify whether the Secret or its key must be defined.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 22133,
          },
          "name": "optional",
          "optional": true,
          "type": Object {
            "primitive": "boolean",
          },
        },
      ],
    },
    "monitoringcoreoscom.PrometheusSpecInitContainersLifecycle": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "PrometheusSpecInitContainersLifecycle",
        },
        "remarks": "Cannot be updated.",
        "summary": "Actions that the management system should take in response to container lifecycle events.",
      },
      "fqn": "monitoringcoreoscom.PrometheusSpecInitContainersLifecycle",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 14286,
      },
      "name": "PrometheusSpecInitContainersLifecycle",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecInitContainersLifecycle#postStart",
            },
            "remarks": "If the handler fails, the container is terminated and restarted according to its restart policy. Other management of the container blocks until the hook completes. More info: https://kubernetes.io/docs/concepts/containers/container-lifecycle-hooks/#container-hooks",
            "summary": "PostStart is called immediately after a container is created.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 14292,
          },
          "name": "postStart",
          "optional": true,
          "type": Object {
            "fqn": "monitoringcoreoscom.PrometheusSpecInitContainersLifecyclePostStart",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecInitContainersLifecycle#preStop",
            },
            "remarks": "The handler is not called if the container crashes or exits. The reason for termination is passed to the handler. The Pod's termination grace period countdown begins before the PreStop hooked is executed. Regardless of the outcome of the handler, the container will eventually terminate within the Pod's termination grace period. Other management of the container blocks until the hook completes or until the termination grace period is reached. More info: https://kubernetes.io/docs/concepts/containers/container-lifecycle-hooks/#container-hooks",
            "summary": "PreStop is called immediately before a container is terminated due to an API request or management event such as liveness/startup probe failure, preemption, resource contention, etc.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 14299,
          },
          "name": "preStop",
          "optional": true,
          "type": Object {
            "fqn": "monitoringcoreoscom.PrometheusSpecInitContainersLifecyclePreStop",
          },
        },
      ],
    },
    "monitoringcoreoscom.PrometheusSpecInitContainersLifecyclePostStart": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "PrometheusSpecInitContainersLifecyclePostStart",
        },
        "remarks": "If the handler fails, the container is terminated and restarted according to its restart policy. Other management of the container blocks until the hook completes. More info: https://kubernetes.io/docs/concepts/containers/container-lifecycle-hooks/#container-hooks",
        "summary": "PostStart is called immediately after a container is created.",
      },
      "fqn": "monitoringcoreoscom.PrometheusSpecInitContainersLifecyclePostStart",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 19056,
      },
      "name": "PrometheusSpecInitContainersLifecyclePostStart",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecInitContainersLifecyclePostStart#exec",
            },
            "remarks": "Exec specifies the action to take.",
            "summary": "One and only one of the following should be specified.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 19062,
          },
          "name": "exec",
          "optional": true,
          "type": Object {
            "fqn": "monitoringcoreoscom.PrometheusSpecInitContainersLifecyclePostStartExec",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecInitContainersLifecyclePostStart#httpGet",
            },
            "summary": "HTTPGet specifies the http request to perform.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 19069,
          },
          "name": "httpGet",
          "optional": true,
          "type": Object {
            "fqn": "monitoringcoreoscom.PrometheusSpecInitContainersLifecyclePostStartHttpGet",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecInitContainersLifecyclePostStart#tcpSocket",
            },
            "remarks": "TCP hooks not yet supported TODO: implement a realistic TCP lifecycle hook",
            "summary": "TCPSocket specifies an action involving a TCP port.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 19076,
          },
          "name": "tcpSocket",
          "optional": true,
          "type": Object {
            "fqn": "monitoringcoreoscom.PrometheusSpecInitContainersLifecyclePostStartTcpSocket",
          },
        },
      ],
    },
    "monitoringcoreoscom.PrometheusSpecInitContainersLifecyclePostStartExec": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "PrometheusSpecInitContainersLifecyclePostStartExec",
        },
        "remarks": "Exec specifies the action to take.",
        "summary": "One and only one of the following should be specified.",
      },
      "fqn": "monitoringcoreoscom.PrometheusSpecInitContainersLifecyclePostStartExec",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 22158,
      },
      "name": "PrometheusSpecInitContainersLifecyclePostStartExec",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecInitContainersLifecyclePostStartExec#command",
            },
            "remarks": "The command is simply exec'd, it is not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use a shell, you need to explicitly call out to that shell. Exit status of 0 is treated as live/healthy and non-zero is unhealthy.",
            "summary": "Command is the command line to execute inside the container, the working directory for the command  is root ('/') in the container's filesystem.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 22164,
          },
          "name": "command",
          "optional": true,
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "primitive": "string",
              },
              "kind": "array",
            },
          },
        },
      ],
    },
    "monitoringcoreoscom.PrometheusSpecInitContainersLifecyclePostStartHttpGet": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "PrometheusSpecInitContainersLifecyclePostStartHttpGet",
        },
        "summary": "HTTPGet specifies the http request to perform.",
      },
      "fqn": "monitoringcoreoscom.PrometheusSpecInitContainersLifecyclePostStartHttpGet",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 22187,
      },
      "name": "PrometheusSpecInitContainersLifecyclePostStartHttpGet",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecInitContainersLifecyclePostStartHttpGet#port",
            },
            "remarks": "Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.",
            "summary": "Name or number of the port to access on the container.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 22214,
          },
          "name": "port",
          "type": Object {
            "fqn": "monitoringcoreoscom.PrometheusSpecInitContainersLifecyclePostStartHttpGetPort",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecInitContainersLifecyclePostStartHttpGet#host",
            },
            "remarks": "You probably want to set \\"Host\\" in httpHeaders instead.",
            "summary": "Host name to connect to, defaults to the pod IP.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 22193,
          },
          "name": "host",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecInitContainersLifecyclePostStartHttpGet#httpHeaders",
            },
            "remarks": "HTTP allows repeated headers.",
            "summary": "Custom headers to set in the request.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 22200,
          },
          "name": "httpHeaders",
          "optional": true,
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "fqn": "monitoringcoreoscom.PrometheusSpecInitContainersLifecyclePostStartHttpGetHttpHeaders",
              },
              "kind": "array",
            },
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecInitContainersLifecyclePostStartHttpGet#path",
            },
            "summary": "Path to access on the HTTP server.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 22207,
          },
          "name": "path",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecInitContainersLifecyclePostStartHttpGet#scheme",
            },
            "default": "HTTP.",
            "remarks": "Defaults to HTTP.",
            "summary": "Scheme to use for connecting to the host.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 22222,
          },
          "name": "scheme",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
      ],
    },
    "monitoringcoreoscom.PrometheusSpecInitContainersLifecyclePostStartHttpGetHttpHeaders": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "PrometheusSpecInitContainersLifecyclePostStartHttpGetHttpHeaders",
        },
        "summary": "HTTPHeader describes a custom header to be used in HTTP probes.",
      },
      "fqn": "monitoringcoreoscom.PrometheusSpecInitContainersLifecyclePostStartHttpGetHttpHeaders",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 24266,
      },
      "name": "PrometheusSpecInitContainersLifecyclePostStartHttpGetHttpHeaders",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecInitContainersLifecyclePostStartHttpGetHttpHeaders#name",
            },
            "summary": "The header field name.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 24272,
          },
          "name": "name",
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecInitContainersLifecyclePostStartHttpGetHttpHeaders#value",
            },
            "summary": "The header field value.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 24279,
          },
          "name": "value",
          "type": Object {
            "primitive": "string",
          },
        },
      ],
    },
    "monitoringcoreoscom.PrometheusSpecInitContainersLifecyclePostStartHttpGetPort": Object {
      "assembly": "monitoringcoreoscom",
      "docs": Object {
        "custom": Object {
          "schema": "PrometheusSpecInitContainersLifecyclePostStartHttpGetPort",
        },
        "remarks": "Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.",
        "summary": "Name or number of the port to access on the container.",
      },
      "fqn": "monitoringcoreoscom.PrometheusSpecInitContainersLifecyclePostStartHttpGetPort",
      "kind": "class",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 24303,
      },
      "methods": Array [
        Object {
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 24304,
          },
          "name": "fromNumber",
          "parameters": Array [
            Object {
              "name": "value",
              "type": Object {
                "primitive": "number",
              },
            },
          ],
          "returns": Object {
            "type": Object {
              "fqn": "monitoringcoreoscom.PrometheusSpecInitContainersLifecyclePostStartHttpGetPort",
            },
          },
          "static": true,
        },
        Object {
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 24307,
          },
          "name": "fromString",
          "parameters": Array [
            Object {
              "name": "value",
              "type": Object {
                "primitive": "string",
              },
            },
          ],
          "returns": Object {
            "type": Object {
              "fqn": "monitoringcoreoscom.PrometheusSpecInitContainersLifecyclePostStartHttpGetPort",
            },
          },
          "static": true,
        },
      ],
      "name": "PrometheusSpecInitContainersLifecyclePostStartHttpGetPort",
      "properties": Array [
        Object {
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 24310,
          },
          "name": "value",
          "type": Object {
            "primitive": "any",
          },
        },
      ],
    },
    "monitoringcoreoscom.PrometheusSpecInitContainersLifecyclePostStartTcpSocket": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "PrometheusSpecInitContainersLifecyclePostStartTcpSocket",
        },
        "remarks": "TCP hooks not yet supported TODO: implement a realistic TCP lifecycle hook",
        "summary": "TCPSocket specifies an action involving a TCP port.",
      },
      "fqn": "monitoringcoreoscom.PrometheusSpecInitContainersLifecyclePostStartTcpSocket",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 22249,
      },
      "name": "PrometheusSpecInitContainersLifecyclePostStartTcpSocket",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecInitContainersLifecyclePostStartTcpSocket#port",
            },
            "remarks": "Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.",
            "summary": "Number or name of the port to access on the container.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 22262,
          },
          "name": "port",
          "type": Object {
            "fqn": "monitoringcoreoscom.PrometheusSpecInitContainersLifecyclePostStartTcpSocketPort",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecInitContainersLifecyclePostStartTcpSocket#host",
            },
            "summary": "Optional: Host name to connect to, defaults to the pod IP.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 22255,
          },
          "name": "host",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
      ],
    },
    "monitoringcoreoscom.PrometheusSpecInitContainersLifecyclePostStartTcpSocketPort": Object {
      "assembly": "monitoringcoreoscom",
      "docs": Object {
        "custom": Object {
          "schema": "PrometheusSpecInitContainersLifecyclePostStartTcpSocketPort",
        },
        "remarks": "Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.",
        "summary": "Number or name of the port to access on the container.",
      },
      "fqn": "monitoringcoreoscom.PrometheusSpecInitContainersLifecyclePostStartTcpSocketPort",
      "kind": "class",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 24320,
      },
      "methods": Array [
        Object {
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 24321,
          },
          "name": "fromNumber",
          "parameters": Array [
            Object {
              "name": "value",
              "type": Object {
                "primitive": "number",
              },
            },
          ],
          "returns": Object {
            "type": Object {
              "fqn": "monitoringcoreoscom.PrometheusSpecInitContainersLifecyclePostStartTcpSocketPort",
            },
          },
          "static": true,
        },
        Object {
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 24324,
          },
          "name": "fromString",
          "parameters": Array [
            Object {
              "name": "value",
              "type": Object {
                "primitive": "string",
              },
            },
          ],
          "returns": Object {
            "type": Object {
              "fqn": "monitoringcoreoscom.PrometheusSpecInitContainersLifecyclePostStartTcpSocketPort",
            },
          },
          "static": true,
        },
      ],
      "name": "PrometheusSpecInitContainersLifecyclePostStartTcpSocketPort",
      "properties": Array [
        Object {
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 24327,
          },
          "name": "value",
          "type": Object {
            "primitive": "any",
          },
        },
      ],
    },
    "monitoringcoreoscom.PrometheusSpecInitContainersLifecyclePreStop": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "PrometheusSpecInitContainersLifecyclePreStop",
        },
        "remarks": "The handler is not called if the container crashes or exits. The reason for termination is passed to the handler. The Pod's termination grace period countdown begins before the PreStop hooked is executed. Regardless of the outcome of the handler, the container will eventually terminate within the Pod's termination grace period. Other management of the container blocks until the hook completes or until the termination grace period is reached. More info: https://kubernetes.io/docs/concepts/containers/container-lifecycle-hooks/#container-hooks",
        "summary": "PreStop is called immediately before a container is terminated due to an API request or management event such as liveness/startup probe failure, preemption, resource contention, etc.",
      },
      "fqn": "monitoringcoreoscom.PrometheusSpecInitContainersLifecyclePreStop",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 19101,
      },
      "name": "PrometheusSpecInitContainersLifecyclePreStop",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecInitContainersLifecyclePreStop#exec",
            },
            "remarks": "Exec specifies the action to take.",
            "summary": "One and only one of the following should be specified.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 19107,
          },
          "name": "exec",
          "optional": true,
          "type": Object {
            "fqn": "monitoringcoreoscom.PrometheusSpecInitContainersLifecyclePreStopExec",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecInitContainersLifecyclePreStop#httpGet",
            },
            "summary": "HTTPGet specifies the http request to perform.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 19114,
          },
          "name": "httpGet",
          "optional": true,
          "type": Object {
            "fqn": "monitoringcoreoscom.PrometheusSpecInitContainersLifecyclePreStopHttpGet",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecInitContainersLifecyclePreStop#tcpSocket",
            },
            "remarks": "TCP hooks not yet supported TODO: implement a realistic TCP lifecycle hook",
            "summary": "TCPSocket specifies an action involving a TCP port.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 19121,
          },
          "name": "tcpSocket",
          "optional": true,
          "type": Object {
            "fqn": "monitoringcoreoscom.PrometheusSpecInitContainersLifecyclePreStopTcpSocket",
          },
        },
      ],
    },
    "monitoringcoreoscom.PrometheusSpecInitContainersLifecyclePreStopExec": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "PrometheusSpecInitContainersLifecyclePreStopExec",
        },
        "remarks": "Exec specifies the action to take.",
        "summary": "One and only one of the following should be specified.",
      },
      "fqn": "monitoringcoreoscom.PrometheusSpecInitContainersLifecyclePreStopExec",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 22286,
      },
      "name": "PrometheusSpecInitContainersLifecyclePreStopExec",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecInitContainersLifecyclePreStopExec#command",
            },
            "remarks": "The command is simply exec'd, it is not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use a shell, you need to explicitly call out to that shell. Exit status of 0 is treated as live/healthy and non-zero is unhealthy.",
            "summary": "Command is the command line to execute inside the container, the working directory for the command  is root ('/') in the container's filesystem.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 22292,
          },
          "name": "command",
          "optional": true,
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "primitive": "string",
              },
              "kind": "array",
            },
          },
        },
      ],
    },
    "monitoringcoreoscom.PrometheusSpecInitContainersLifecyclePreStopHttpGet": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "PrometheusSpecInitContainersLifecyclePreStopHttpGet",
        },
        "summary": "HTTPGet specifies the http request to perform.",
      },
      "fqn": "monitoringcoreoscom.PrometheusSpecInitContainersLifecyclePreStopHttpGet",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 22315,
      },
      "name": "PrometheusSpecInitContainersLifecyclePreStopHttpGet",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecInitContainersLifecyclePreStopHttpGet#port",
            },
            "remarks": "Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.",
            "summary": "Name or number of the port to access on the container.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 22342,
          },
          "name": "port",
          "type": Object {
            "fqn": "monitoringcoreoscom.PrometheusSpecInitContainersLifecyclePreStopHttpGetPort",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecInitContainersLifecyclePreStopHttpGet#host",
            },
            "remarks": "You probably want to set \\"Host\\" in httpHeaders instead.",
            "summary": "Host name to connect to, defaults to the pod IP.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 22321,
          },
          "name": "host",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecInitContainersLifecyclePreStopHttpGet#httpHeaders",
            },
            "remarks": "HTTP allows repeated headers.",
            "summary": "Custom headers to set in the request.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 22328,
          },
          "name": "httpHeaders",
          "optional": true,
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "fqn": "monitoringcoreoscom.PrometheusSpecInitContainersLifecyclePreStopHttpGetHttpHeaders",
              },
              "kind": "array",
            },
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecInitContainersLifecyclePreStopHttpGet#path",
            },
            "summary": "Path to access on the HTTP server.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 22335,
          },
          "name": "path",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecInitContainersLifecyclePreStopHttpGet#scheme",
            },
            "default": "HTTP.",
            "remarks": "Defaults to HTTP.",
            "summary": "Scheme to use for connecting to the host.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 22350,
          },
          "name": "scheme",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
      ],
    },
    "monitoringcoreoscom.PrometheusSpecInitContainersLifecyclePreStopHttpGetHttpHeaders": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "PrometheusSpecInitContainersLifecyclePreStopHttpGetHttpHeaders",
        },
        "summary": "HTTPHeader describes a custom header to be used in HTTP probes.",
      },
      "fqn": "monitoringcoreoscom.PrometheusSpecInitContainersLifecyclePreStopHttpGetHttpHeaders",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 24337,
      },
      "name": "PrometheusSpecInitContainersLifecyclePreStopHttpGetHttpHeaders",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecInitContainersLifecyclePreStopHttpGetHttpHeaders#name",
            },
            "summary": "The header field name.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 24343,
          },
          "name": "name",
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecInitContainersLifecyclePreStopHttpGetHttpHeaders#value",
            },
            "summary": "The header field value.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 24350,
          },
          "name": "value",
          "type": Object {
            "primitive": "string",
          },
        },
      ],
    },
    "monitoringcoreoscom.PrometheusSpecInitContainersLifecyclePreStopHttpGetPort": Object {
      "assembly": "monitoringcoreoscom",
      "docs": Object {
        "custom": Object {
          "schema": "PrometheusSpecInitContainersLifecyclePreStopHttpGetPort",
        },
        "remarks": "Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.",
        "summary": "Name or number of the port to access on the container.",
      },
      "fqn": "monitoringcoreoscom.PrometheusSpecInitContainersLifecyclePreStopHttpGetPort",
      "kind": "class",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 24374,
      },
      "methods": Array [
        Object {
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 24375,
          },
          "name": "fromNumber",
          "parameters": Array [
            Object {
              "name": "value",
              "type": Object {
                "primitive": "number",
              },
            },
          ],
          "returns": Object {
            "type": Object {
              "fqn": "monitoringcoreoscom.PrometheusSpecInitContainersLifecyclePreStopHttpGetPort",
            },
          },
          "static": true,
        },
        Object {
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 24378,
          },
          "name": "fromString",
          "parameters": Array [
            Object {
              "name": "value",
              "type": Object {
                "primitive": "string",
              },
            },
          ],
          "returns": Object {
            "type": Object {
              "fqn": "monitoringcoreoscom.PrometheusSpecInitContainersLifecyclePreStopHttpGetPort",
            },
          },
          "static": true,
        },
      ],
      "name": "PrometheusSpecInitContainersLifecyclePreStopHttpGetPort",
      "properties": Array [
        Object {
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 24381,
          },
          "name": "value",
          "type": Object {
            "primitive": "any",
          },
        },
      ],
    },
    "monitoringcoreoscom.PrometheusSpecInitContainersLifecyclePreStopTcpSocket": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "PrometheusSpecInitContainersLifecyclePreStopTcpSocket",
        },
        "remarks": "TCP hooks not yet supported TODO: implement a realistic TCP lifecycle hook",
        "summary": "TCPSocket specifies an action involving a TCP port.",
      },
      "fqn": "monitoringcoreoscom.PrometheusSpecInitContainersLifecyclePreStopTcpSocket",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 22377,
      },
      "name": "PrometheusSpecInitContainersLifecyclePreStopTcpSocket",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecInitContainersLifecyclePreStopTcpSocket#port",
            },
            "remarks": "Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.",
            "summary": "Number or name of the port to access on the container.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 22390,
          },
          "name": "port",
          "type": Object {
            "fqn": "monitoringcoreoscom.PrometheusSpecInitContainersLifecyclePreStopTcpSocketPort",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecInitContainersLifecyclePreStopTcpSocket#host",
            },
            "summary": "Optional: Host name to connect to, defaults to the pod IP.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 22383,
          },
          "name": "host",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
      ],
    },
    "monitoringcoreoscom.PrometheusSpecInitContainersLifecyclePreStopTcpSocketPort": Object {
      "assembly": "monitoringcoreoscom",
      "docs": Object {
        "custom": Object {
          "schema": "PrometheusSpecInitContainersLifecyclePreStopTcpSocketPort",
        },
        "remarks": "Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.",
        "summary": "Number or name of the port to access on the container.",
      },
      "fqn": "monitoringcoreoscom.PrometheusSpecInitContainersLifecyclePreStopTcpSocketPort",
      "kind": "class",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 24391,
      },
      "methods": Array [
        Object {
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 24392,
          },
          "name": "fromNumber",
          "parameters": Array [
            Object {
              "name": "value",
              "type": Object {
                "primitive": "number",
              },
            },
          ],
          "returns": Object {
            "type": Object {
              "fqn": "monitoringcoreoscom.PrometheusSpecInitContainersLifecyclePreStopTcpSocketPort",
            },
          },
          "static": true,
        },
        Object {
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 24395,
          },
          "name": "fromString",
          "parameters": Array [
            Object {
              "name": "value",
              "type": Object {
                "primitive": "string",
              },
            },
          ],
          "returns": Object {
            "type": Object {
              "fqn": "monitoringcoreoscom.PrometheusSpecInitContainersLifecyclePreStopTcpSocketPort",
            },
          },
          "static": true,
        },
      ],
      "name": "PrometheusSpecInitContainersLifecyclePreStopTcpSocketPort",
      "properties": Array [
        Object {
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 24398,
          },
          "name": "value",
          "type": Object {
            "primitive": "any",
          },
        },
      ],
    },
    "monitoringcoreoscom.PrometheusSpecInitContainersLivenessProbe": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "PrometheusSpecInitContainersLivenessProbe",
        },
        "remarks": "Container will be restarted if the probe fails. Cannot be updated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes",
        "summary": "Periodic probe of container liveness.",
      },
      "fqn": "monitoringcoreoscom.PrometheusSpecInitContainersLivenessProbe",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 14323,
      },
      "name": "PrometheusSpecInitContainersLivenessProbe",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecInitContainersLivenessProbe#exec",
            },
            "remarks": "Exec specifies the action to take.",
            "summary": "One and only one of the following should be specified.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 14329,
          },
          "name": "exec",
          "optional": true,
          "type": Object {
            "fqn": "monitoringcoreoscom.PrometheusSpecInitContainersLivenessProbeExec",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecInitContainersLivenessProbe#failureThreshold",
            },
            "default": "3. Minimum value is 1.",
            "remarks": "Defaults to 3. Minimum value is 1.",
            "summary": "Minimum consecutive failures for the probe to be considered failed after having succeeded.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 14337,
          },
          "name": "failureThreshold",
          "optional": true,
          "type": Object {
            "primitive": "number",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecInitContainersLivenessProbe#httpGet",
            },
            "summary": "HTTPGet specifies the http request to perform.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 14344,
          },
          "name": "httpGet",
          "optional": true,
          "type": Object {
            "fqn": "monitoringcoreoscom.PrometheusSpecInitContainersLivenessProbeHttpGet",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecInitContainersLivenessProbe#initialDelaySeconds",
            },
            "remarks": "More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes",
            "summary": "Number of seconds after the container has started before liveness probes are initiated.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 14351,
          },
          "name": "initialDelaySeconds",
          "optional": true,
          "type": Object {
            "primitive": "number",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecInitContainersLivenessProbe#periodSeconds",
            },
            "default": "10 seconds. Minimum value is 1.",
            "remarks": "Default to 10 seconds. Minimum value is 1.",
            "summary": "How often (in seconds) to perform the probe.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 14359,
          },
          "name": "periodSeconds",
          "optional": true,
          "type": Object {
            "primitive": "number",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecInitContainersLivenessProbe#successThreshold",
            },
            "default": "1. Must be 1 for liveness and startup. Minimum value is 1.",
            "remarks": "Defaults to 1. Must be 1 for liveness and startup. Minimum value is 1.",
            "summary": "Minimum consecutive successes for the probe to be considered successful after having failed.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 14367,
          },
          "name": "successThreshold",
          "optional": true,
          "type": Object {
            "primitive": "number",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecInitContainersLivenessProbe#tcpSocket",
            },
            "remarks": "TCP hooks not yet supported TODO: implement a realistic TCP lifecycle hook",
            "summary": "TCPSocket specifies an action involving a TCP port.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 14374,
          },
          "name": "tcpSocket",
          "optional": true,
          "type": Object {
            "fqn": "monitoringcoreoscom.PrometheusSpecInitContainersLivenessProbeTcpSocket",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecInitContainersLivenessProbe#timeoutSeconds",
            },
            "default": "1 second. Minimum value is 1. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes",
            "remarks": "Defaults to 1 second. Minimum value is 1. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes",
            "summary": "Number of seconds after which the probe times out.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 14382,
          },
          "name": "timeoutSeconds",
          "optional": true,
          "type": Object {
            "primitive": "number",
          },
        },
      ],
    },
    "monitoringcoreoscom.PrometheusSpecInitContainersLivenessProbeExec": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "PrometheusSpecInitContainersLivenessProbeExec",
        },
        "remarks": "Exec specifies the action to take.",
        "summary": "One and only one of the following should be specified.",
      },
      "fqn": "monitoringcoreoscom.PrometheusSpecInitContainersLivenessProbeExec",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 19146,
      },
      "name": "PrometheusSpecInitContainersLivenessProbeExec",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecInitContainersLivenessProbeExec#command",
            },
            "remarks": "The command is simply exec'd, it is not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use a shell, you need to explicitly call out to that shell. Exit status of 0 is treated as live/healthy and non-zero is unhealthy.",
            "summary": "Command is the command line to execute inside the container, the working directory for the command  is root ('/') in the container's filesystem.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 19152,
          },
          "name": "command",
          "optional": true,
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "primitive": "string",
              },
              "kind": "array",
            },
          },
        },
      ],
    },
    "monitoringcoreoscom.PrometheusSpecInitContainersLivenessProbeHttpGet": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "PrometheusSpecInitContainersLivenessProbeHttpGet",
        },
        "summary": "HTTPGet specifies the http request to perform.",
      },
      "fqn": "monitoringcoreoscom.PrometheusSpecInitContainersLivenessProbeHttpGet",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 19175,
      },
      "name": "PrometheusSpecInitContainersLivenessProbeHttpGet",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecInitContainersLivenessProbeHttpGet#port",
            },
            "remarks": "Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.",
            "summary": "Name or number of the port to access on the container.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 19202,
          },
          "name": "port",
          "type": Object {
            "fqn": "monitoringcoreoscom.PrometheusSpecInitContainersLivenessProbeHttpGetPort",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecInitContainersLivenessProbeHttpGet#host",
            },
            "remarks": "You probably want to set \\"Host\\" in httpHeaders instead.",
            "summary": "Host name to connect to, defaults to the pod IP.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 19181,
          },
          "name": "host",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecInitContainersLivenessProbeHttpGet#httpHeaders",
            },
            "remarks": "HTTP allows repeated headers.",
            "summary": "Custom headers to set in the request.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 19188,
          },
          "name": "httpHeaders",
          "optional": true,
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "fqn": "monitoringcoreoscom.PrometheusSpecInitContainersLivenessProbeHttpGetHttpHeaders",
              },
              "kind": "array",
            },
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecInitContainersLivenessProbeHttpGet#path",
            },
            "summary": "Path to access on the HTTP server.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 19195,
          },
          "name": "path",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecInitContainersLivenessProbeHttpGet#scheme",
            },
            "default": "HTTP.",
            "remarks": "Defaults to HTTP.",
            "summary": "Scheme to use for connecting to the host.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 19210,
          },
          "name": "scheme",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
      ],
    },
    "monitoringcoreoscom.PrometheusSpecInitContainersLivenessProbeHttpGetHttpHeaders": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "PrometheusSpecInitContainersLivenessProbeHttpGetHttpHeaders",
        },
        "summary": "HTTPHeader describes a custom header to be used in HTTP probes.",
      },
      "fqn": "monitoringcoreoscom.PrometheusSpecInitContainersLivenessProbeHttpGetHttpHeaders",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 22414,
      },
      "name": "PrometheusSpecInitContainersLivenessProbeHttpGetHttpHeaders",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecInitContainersLivenessProbeHttpGetHttpHeaders#name",
            },
            "summary": "The header field name.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 22420,
          },
          "name": "name",
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecInitContainersLivenessProbeHttpGetHttpHeaders#value",
            },
            "summary": "The header field value.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 22427,
          },
          "name": "value",
          "type": Object {
            "primitive": "string",
          },
        },
      ],
    },
    "monitoringcoreoscom.PrometheusSpecInitContainersLivenessProbeHttpGetPort": Object {
      "assembly": "monitoringcoreoscom",
      "docs": Object {
        "custom": Object {
          "schema": "PrometheusSpecInitContainersLivenessProbeHttpGetPort",
        },
        "remarks": "Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.",
        "summary": "Name or number of the port to access on the container.",
      },
      "fqn": "monitoringcoreoscom.PrometheusSpecInitContainersLivenessProbeHttpGetPort",
      "kind": "class",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 22451,
      },
      "methods": Array [
        Object {
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 22452,
          },
          "name": "fromNumber",
          "parameters": Array [
            Object {
              "name": "value",
              "type": Object {
                "primitive": "number",
              },
            },
          ],
          "returns": Object {
            "type": Object {
              "fqn": "monitoringcoreoscom.PrometheusSpecInitContainersLivenessProbeHttpGetPort",
            },
          },
          "static": true,
        },
        Object {
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 22455,
          },
          "name": "fromString",
          "parameters": Array [
            Object {
              "name": "value",
              "type": Object {
                "primitive": "string",
              },
            },
          ],
          "returns": Object {
            "type": Object {
              "fqn": "monitoringcoreoscom.PrometheusSpecInitContainersLivenessProbeHttpGetPort",
            },
          },
          "static": true,
        },
      ],
      "name": "PrometheusSpecInitContainersLivenessProbeHttpGetPort",
      "properties": Array [
        Object {
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 22458,
          },
          "name": "value",
          "type": Object {
            "primitive": "any",
          },
        },
      ],
    },
    "monitoringcoreoscom.PrometheusSpecInitContainersLivenessProbeTcpSocket": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "PrometheusSpecInitContainersLivenessProbeTcpSocket",
        },
        "remarks": "TCP hooks not yet supported TODO: implement a realistic TCP lifecycle hook",
        "summary": "TCPSocket specifies an action involving a TCP port.",
      },
      "fqn": "monitoringcoreoscom.PrometheusSpecInitContainersLivenessProbeTcpSocket",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 19237,
      },
      "name": "PrometheusSpecInitContainersLivenessProbeTcpSocket",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecInitContainersLivenessProbeTcpSocket#port",
            },
            "remarks": "Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.",
            "summary": "Number or name of the port to access on the container.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 19250,
          },
          "name": "port",
          "type": Object {
            "fqn": "monitoringcoreoscom.PrometheusSpecInitContainersLivenessProbeTcpSocketPort",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecInitContainersLivenessProbeTcpSocket#host",
            },
            "summary": "Optional: Host name to connect to, defaults to the pod IP.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 19243,
          },
          "name": "host",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
      ],
    },
    "monitoringcoreoscom.PrometheusSpecInitContainersLivenessProbeTcpSocketPort": Object {
      "assembly": "monitoringcoreoscom",
      "docs": Object {
        "custom": Object {
          "schema": "PrometheusSpecInitContainersLivenessProbeTcpSocketPort",
        },
        "remarks": "Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.",
        "summary": "Number or name of the port to access on the container.",
      },
      "fqn": "monitoringcoreoscom.PrometheusSpecInitContainersLivenessProbeTcpSocketPort",
      "kind": "class",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 22468,
      },
      "methods": Array [
        Object {
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 22469,
          },
          "name": "fromNumber",
          "parameters": Array [
            Object {
              "name": "value",
              "type": Object {
                "primitive": "number",
              },
            },
          ],
          "returns": Object {
            "type": Object {
              "fqn": "monitoringcoreoscom.PrometheusSpecInitContainersLivenessProbeTcpSocketPort",
            },
          },
          "static": true,
        },
        Object {
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 22472,
          },
          "name": "fromString",
          "parameters": Array [
            Object {
              "name": "value",
              "type": Object {
                "primitive": "string",
              },
            },
          ],
          "returns": Object {
            "type": Object {
              "fqn": "monitoringcoreoscom.PrometheusSpecInitContainersLivenessProbeTcpSocketPort",
            },
          },
          "static": true,
        },
      ],
      "name": "PrometheusSpecInitContainersLivenessProbeTcpSocketPort",
      "properties": Array [
        Object {
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 22475,
          },
          "name": "value",
          "type": Object {
            "primitive": "any",
          },
        },
      ],
    },
    "monitoringcoreoscom.PrometheusSpecInitContainersPorts": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "PrometheusSpecInitContainersPorts",
        },
        "summary": "ContainerPort represents a network port in a single container.",
      },
      "fqn": "monitoringcoreoscom.PrometheusSpecInitContainersPorts",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 14412,
      },
      "name": "PrometheusSpecInitContainersPorts",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecInitContainersPorts#containerPort",
            },
            "remarks": "This must be a valid port number, 0 < x < 65536.",
            "summary": "Number of port to expose on the pod's IP address.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 14418,
          },
          "name": "containerPort",
          "type": Object {
            "primitive": "number",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecInitContainersPorts#hostIP",
            },
            "summary": "What host IP to bind the external port to.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 14425,
          },
          "name": "hostIp",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecInitContainersPorts#hostPort",
            },
            "remarks": "If specified, this must be a valid port number, 0 < x < 65536. If HostNetwork is specified, this must match ContainerPort. Most containers do not need this.",
            "summary": "Number of port to expose on the host.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 14432,
          },
          "name": "hostPort",
          "optional": true,
          "type": Object {
            "primitive": "number",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecInitContainersPorts#name",
            },
            "remarks": "Each named port in a pod must have a unique name. Name for the port that can be referred to by services.",
            "summary": "If specified, this must be an IANA_SVC_NAME and unique within the pod.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 14439,
          },
          "name": "name",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecInitContainersPorts#protocol",
            },
            "default": "TCP\\".",
            "remarks": "Must be UDP, TCP, or SCTP. Defaults to \\"TCP\\".",
            "summary": "Protocol for port.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 14447,
          },
          "name": "protocol",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
      ],
    },
    "monitoringcoreoscom.PrometheusSpecInitContainersReadinessProbe": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "PrometheusSpecInitContainersReadinessProbe",
        },
        "remarks": "Container will be removed from service endpoints if the probe fails. Cannot be updated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes",
        "summary": "Periodic probe of container service readiness.",
      },
      "fqn": "monitoringcoreoscom.PrometheusSpecInitContainersReadinessProbe",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 14474,
      },
      "name": "PrometheusSpecInitContainersReadinessProbe",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecInitContainersReadinessProbe#exec",
            },
            "remarks": "Exec specifies the action to take.",
            "summary": "One and only one of the following should be specified.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 14480,
          },
          "name": "exec",
          "optional": true,
          "type": Object {
            "fqn": "monitoringcoreoscom.PrometheusSpecInitContainersReadinessProbeExec",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecInitContainersReadinessProbe#failureThreshold",
            },
            "default": "3. Minimum value is 1.",
            "remarks": "Defaults to 3. Minimum value is 1.",
            "summary": "Minimum consecutive failures for the probe to be considered failed after having succeeded.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 14488,
          },
          "name": "failureThreshold",
          "optional": true,
          "type": Object {
            "primitive": "number",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecInitContainersReadinessProbe#httpGet",
            },
            "summary": "HTTPGet specifies the http request to perform.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 14495,
          },
          "name": "httpGet",
          "optional": true,
          "type": Object {
            "fqn": "monitoringcoreoscom.PrometheusSpecInitContainersReadinessProbeHttpGet",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecInitContainersReadinessProbe#initialDelaySeconds",
            },
            "remarks": "More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes",
            "summary": "Number of seconds after the container has started before liveness probes are initiated.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 14502,
          },
          "name": "initialDelaySeconds",
          "optional": true,
          "type": Object {
            "primitive": "number",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecInitContainersReadinessProbe#periodSeconds",
            },
            "default": "10 seconds. Minimum value is 1.",
            "remarks": "Default to 10 seconds. Minimum value is 1.",
            "summary": "How often (in seconds) to perform the probe.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 14510,
          },
          "name": "periodSeconds",
          "optional": true,
          "type": Object {
            "primitive": "number",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecInitContainersReadinessProbe#successThreshold",
            },
            "default": "1. Must be 1 for liveness and startup. Minimum value is 1.",
            "remarks": "Defaults to 1. Must be 1 for liveness and startup. Minimum value is 1.",
            "summary": "Minimum consecutive successes for the probe to be considered successful after having failed.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 14518,
          },
          "name": "successThreshold",
          "optional": true,
          "type": Object {
            "primitive": "number",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecInitContainersReadinessProbe#tcpSocket",
            },
            "remarks": "TCP hooks not yet supported TODO: implement a realistic TCP lifecycle hook",
            "summary": "TCPSocket specifies an action involving a TCP port.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 14525,
          },
          "name": "tcpSocket",
          "optional": true,
          "type": Object {
            "fqn": "monitoringcoreoscom.PrometheusSpecInitContainersReadinessProbeTcpSocket",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecInitContainersReadinessProbe#timeoutSeconds",
            },
            "default": "1 second. Minimum value is 1. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes",
            "remarks": "Defaults to 1 second. Minimum value is 1. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes",
            "summary": "Number of seconds after which the probe times out.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 14533,
          },
          "name": "timeoutSeconds",
          "optional": true,
          "type": Object {
            "primitive": "number",
          },
        },
      ],
    },
    "monitoringcoreoscom.PrometheusSpecInitContainersReadinessProbeExec": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "PrometheusSpecInitContainersReadinessProbeExec",
        },
        "remarks": "Exec specifies the action to take.",
        "summary": "One and only one of the following should be specified.",
      },
      "fqn": "monitoringcoreoscom.PrometheusSpecInitContainersReadinessProbeExec",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 19274,
      },
      "name": "PrometheusSpecInitContainersReadinessProbeExec",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecInitContainersReadinessProbeExec#command",
            },
            "remarks": "The command is simply exec'd, it is not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use a shell, you need to explicitly call out to that shell. Exit status of 0 is treated as live/healthy and non-zero is unhealthy.",
            "summary": "Command is the command line to execute inside the container, the working directory for the command  is root ('/') in the container's filesystem.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 19280,
          },
          "name": "command",
          "optional": true,
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "primitive": "string",
              },
              "kind": "array",
            },
          },
        },
      ],
    },
    "monitoringcoreoscom.PrometheusSpecInitContainersReadinessProbeHttpGet": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "PrometheusSpecInitContainersReadinessProbeHttpGet",
        },
        "summary": "HTTPGet specifies the http request to perform.",
      },
      "fqn": "monitoringcoreoscom.PrometheusSpecInitContainersReadinessProbeHttpGet",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 19303,
      },
      "name": "PrometheusSpecInitContainersReadinessProbeHttpGet",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecInitContainersReadinessProbeHttpGet#port",
            },
            "remarks": "Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.",
            "summary": "Name or number of the port to access on the container.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 19330,
          },
          "name": "port",
          "type": Object {
            "fqn": "monitoringcoreoscom.PrometheusSpecInitContainersReadinessProbeHttpGetPort",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecInitContainersReadinessProbeHttpGet#host",
            },
            "remarks": "You probably want to set \\"Host\\" in httpHeaders instead.",
            "summary": "Host name to connect to, defaults to the pod IP.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 19309,
          },
          "name": "host",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecInitContainersReadinessProbeHttpGet#httpHeaders",
            },
            "remarks": "HTTP allows repeated headers.",
            "summary": "Custom headers to set in the request.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 19316,
          },
          "name": "httpHeaders",
          "optional": true,
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "fqn": "monitoringcoreoscom.PrometheusSpecInitContainersReadinessProbeHttpGetHttpHeaders",
              },
              "kind": "array",
            },
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecInitContainersReadinessProbeHttpGet#path",
            },
            "summary": "Path to access on the HTTP server.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 19323,
          },
          "name": "path",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecInitContainersReadinessProbeHttpGet#scheme",
            },
            "default": "HTTP.",
            "remarks": "Defaults to HTTP.",
            "summary": "Scheme to use for connecting to the host.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 19338,
          },
          "name": "scheme",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
      ],
    },
    "monitoringcoreoscom.PrometheusSpecInitContainersReadinessProbeHttpGetHttpHeaders": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "PrometheusSpecInitContainersReadinessProbeHttpGetHttpHeaders",
        },
        "summary": "HTTPHeader describes a custom header to be used in HTTP probes.",
      },
      "fqn": "monitoringcoreoscom.PrometheusSpecInitContainersReadinessProbeHttpGetHttpHeaders",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 22485,
      },
      "name": "PrometheusSpecInitContainersReadinessProbeHttpGetHttpHeaders",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecInitContainersReadinessProbeHttpGetHttpHeaders#name",
            },
            "summary": "The header field name.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 22491,
          },
          "name": "name",
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecInitContainersReadinessProbeHttpGetHttpHeaders#value",
            },
            "summary": "The header field value.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 22498,
          },
          "name": "value",
          "type": Object {
            "primitive": "string",
          },
        },
      ],
    },
    "monitoringcoreoscom.PrometheusSpecInitContainersReadinessProbeHttpGetPort": Object {
      "assembly": "monitoringcoreoscom",
      "docs": Object {
        "custom": Object {
          "schema": "PrometheusSpecInitContainersReadinessProbeHttpGetPort",
        },
        "remarks": "Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.",
        "summary": "Name or number of the port to access on the container.",
      },
      "fqn": "monitoringcoreoscom.PrometheusSpecInitContainersReadinessProbeHttpGetPort",
      "kind": "class",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 22522,
      },
      "methods": Array [
        Object {
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 22523,
          },
          "name": "fromNumber",
          "parameters": Array [
            Object {
              "name": "value",
              "type": Object {
                "primitive": "number",
              },
            },
          ],
          "returns": Object {
            "type": Object {
              "fqn": "monitoringcoreoscom.PrometheusSpecInitContainersReadinessProbeHttpGetPort",
            },
          },
          "static": true,
        },
        Object {
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 22526,
          },
          "name": "fromString",
          "parameters": Array [
            Object {
              "name": "value",
              "type": Object {
                "primitive": "string",
              },
            },
          ],
          "returns": Object {
            "type": Object {
              "fqn": "monitoringcoreoscom.PrometheusSpecInitContainersReadinessProbeHttpGetPort",
            },
          },
          "static": true,
        },
      ],
      "name": "PrometheusSpecInitContainersReadinessProbeHttpGetPort",
      "properties": Array [
        Object {
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 22529,
          },
          "name": "value",
          "type": Object {
            "primitive": "any",
          },
        },
      ],
    },
    "monitoringcoreoscom.PrometheusSpecInitContainersReadinessProbeTcpSocket": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "PrometheusSpecInitContainersReadinessProbeTcpSocket",
        },
        "remarks": "TCP hooks not yet supported TODO: implement a realistic TCP lifecycle hook",
        "summary": "TCPSocket specifies an action involving a TCP port.",
      },
      "fqn": "monitoringcoreoscom.PrometheusSpecInitContainersReadinessProbeTcpSocket",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 19365,
      },
      "name": "PrometheusSpecInitContainersReadinessProbeTcpSocket",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecInitContainersReadinessProbeTcpSocket#port",
            },
            "remarks": "Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.",
            "summary": "Number or name of the port to access on the container.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 19378,
          },
          "name": "port",
          "type": Object {
            "fqn": "monitoringcoreoscom.PrometheusSpecInitContainersReadinessProbeTcpSocketPort",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecInitContainersReadinessProbeTcpSocket#host",
            },
            "summary": "Optional: Host name to connect to, defaults to the pod IP.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 19371,
          },
          "name": "host",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
      ],
    },
    "monitoringcoreoscom.PrometheusSpecInitContainersReadinessProbeTcpSocketPort": Object {
      "assembly": "monitoringcoreoscom",
      "docs": Object {
        "custom": Object {
          "schema": "PrometheusSpecInitContainersReadinessProbeTcpSocketPort",
        },
        "remarks": "Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.",
        "summary": "Number or name of the port to access on the container.",
      },
      "fqn": "monitoringcoreoscom.PrometheusSpecInitContainersReadinessProbeTcpSocketPort",
      "kind": "class",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 22539,
      },
      "methods": Array [
        Object {
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 22540,
          },
          "name": "fromNumber",
          "parameters": Array [
            Object {
              "name": "value",
              "type": Object {
                "primitive": "number",
              },
            },
          ],
          "returns": Object {
            "type": Object {
              "fqn": "monitoringcoreoscom.PrometheusSpecInitContainersReadinessProbeTcpSocketPort",
            },
          },
          "static": true,
        },
        Object {
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 22543,
          },
          "name": "fromString",
          "parameters": Array [
            Object {
              "name": "value",
              "type": Object {
                "primitive": "string",
              },
            },
          ],
          "returns": Object {
            "type": Object {
              "fqn": "monitoringcoreoscom.PrometheusSpecInitContainersReadinessProbeTcpSocketPort",
            },
          },
          "static": true,
        },
      ],
      "name": "PrometheusSpecInitContainersReadinessProbeTcpSocketPort",
      "properties": Array [
        Object {
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 22546,
          },
          "name": "value",
          "type": Object {
            "primitive": "any",
          },
        },
      ],
    },
    "monitoringcoreoscom.PrometheusSpecInitContainersResources": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "PrometheusSpecInitContainersResources",
        },
        "remarks": "Cannot be updated. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/",
        "summary": "Compute Resources required by this container.",
      },
      "fqn": "monitoringcoreoscom.PrometheusSpecInitContainersResources",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 14563,
      },
      "name": "PrometheusSpecInitContainersResources",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecInitContainersResources#limits",
            },
            "remarks": "More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/",
            "summary": "Limits describes the maximum amount of compute resources allowed.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 14569,
          },
          "name": "limits",
          "optional": true,
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "primitive": "string",
              },
              "kind": "map",
            },
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecInitContainersResources#requests",
            },
            "remarks": "If Requests is omitted for a container, it defaults to Limits if that is explicitly specified, otherwise to an implementation-defined value. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/",
            "summary": "Requests describes the minimum amount of compute resources required.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 14576,
          },
          "name": "requests",
          "optional": true,
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "primitive": "string",
              },
              "kind": "map",
            },
          },
        },
      ],
    },
    "monitoringcoreoscom.PrometheusSpecInitContainersSecurityContext": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "PrometheusSpecInitContainersSecurityContext",
        },
        "remarks": "More info: https://kubernetes.io/docs/concepts/policy/security-context/ More info: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
        "summary": "Security options the pod should run with.",
      },
      "fqn": "monitoringcoreoscom.PrometheusSpecInitContainersSecurityContext",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 14600,
      },
      "name": "PrometheusSpecInitContainersSecurityContext",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecInitContainersSecurityContext#allowPrivilegeEscalation",
            },
            "remarks": "This bool directly controls if the no_new_privs flag will be set on the container process. AllowPrivilegeEscalation is true always when the container is: 1) run as Privileged 2) has CAP_SYS_ADMIN",
            "summary": "AllowPrivilegeEscalation controls whether a process can gain more privileges than its parent process.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 14606,
          },
          "name": "allowPrivilegeEscalation",
          "optional": true,
          "type": Object {
            "primitive": "boolean",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecInitContainersSecurityContext#capabilities",
            },
            "default": "the default set of capabilities granted by the container runtime.",
            "remarks": "Defaults to the default set of capabilities granted by the container runtime.",
            "summary": "The capabilities to add/drop when running containers.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 14614,
          },
          "name": "capabilities",
          "optional": true,
          "type": Object {
            "fqn": "monitoringcoreoscom.PrometheusSpecInitContainersSecurityContextCapabilities",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecInitContainersSecurityContext#privileged",
            },
            "default": "false.",
            "remarks": "Processes in privileged containers are essentially equivalent to root on the host. Defaults to false.",
            "summary": "Run container in privileged mode.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 14622,
          },
          "name": "privileged",
          "optional": true,
          "type": Object {
            "primitive": "boolean",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecInitContainersSecurityContext#procMount",
            },
            "remarks": "The default is DefaultProcMount which uses the container runtime defaults for readonly paths and masked paths. This requires the ProcMountType feature flag to be enabled.",
            "summary": "procMount denotes the type of proc mount to use for the containers.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 14629,
          },
          "name": "procMount",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecInitContainersSecurityContext#readOnlyRootFilesystem",
            },
            "default": "false.",
            "remarks": "Default is false.",
            "summary": "Whether this container has a read-only root filesystem.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 14637,
          },
          "name": "readOnlyRootFilesystem",
          "optional": true,
          "type": Object {
            "primitive": "boolean",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecInitContainersSecurityContext#runAsGroup",
            },
            "remarks": "Uses runtime default if unset. May also be set in PodSecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.",
            "summary": "The GID to run the entrypoint of the container process.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 14644,
          },
          "name": "runAsGroup",
          "optional": true,
          "type": Object {
            "primitive": "number",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecInitContainersSecurityContext#runAsNonRoot",
            },
            "remarks": "If true, the Kubelet will validate the image at runtime to ensure that it does not run as UID 0 (root) and fail to start the container if it does. If unset or false, no such validation will be performed. May also be set in PodSecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.",
            "summary": "Indicates that the container must run as a non-root user.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 14651,
          },
          "name": "runAsNonRoot",
          "optional": true,
          "type": Object {
            "primitive": "boolean",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecInitContainersSecurityContext#runAsUser",
            },
            "default": "user specified in image metadata if unspecified. May also be set in PodSecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.",
            "remarks": "Defaults to user specified in image metadata if unspecified. May also be set in PodSecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.",
            "summary": "The UID to run the entrypoint of the container process.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 14659,
          },
          "name": "runAsUser",
          "optional": true,
          "type": Object {
            "primitive": "number",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecInitContainersSecurityContext#seLinuxOptions",
            },
            "remarks": "If unspecified, the container runtime will allocate a random SELinux context for each container.  May also be set in PodSecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.",
            "summary": "The SELinux context to be applied to the container.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 14666,
          },
          "name": "seLinuxOptions",
          "optional": true,
          "type": Object {
            "fqn": "monitoringcoreoscom.PrometheusSpecInitContainersSecurityContextSeLinuxOptions",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecInitContainersSecurityContext#windowsOptions",
            },
            "remarks": "If unspecified, the options from the PodSecurityContext will be used. If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.",
            "summary": "The Windows specific settings applied to all containers.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 14673,
          },
          "name": "windowsOptions",
          "optional": true,
          "type": Object {
            "fqn": "monitoringcoreoscom.PrometheusSpecInitContainersSecurityContextWindowsOptions",
          },
        },
      ],
    },
    "monitoringcoreoscom.PrometheusSpecInitContainersSecurityContextCapabilities": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "PrometheusSpecInitContainersSecurityContextCapabilities",
        },
        "default": "the default set of capabilities granted by the container runtime.",
        "remarks": "Defaults to the default set of capabilities granted by the container runtime.",
        "summary": "The capabilities to add/drop when running containers.",
      },
      "fqn": "monitoringcoreoscom.PrometheusSpecInitContainersSecurityContextCapabilities",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 19403,
      },
      "name": "PrometheusSpecInitContainersSecurityContextCapabilities",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecInitContainersSecurityContextCapabilities#add",
            },
            "summary": "Added capabilities.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 19409,
          },
          "name": "add",
          "optional": true,
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "primitive": "string",
              },
              "kind": "array",
            },
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecInitContainersSecurityContextCapabilities#drop",
            },
            "summary": "Removed capabilities.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 19416,
          },
          "name": "drop",
          "optional": true,
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "primitive": "string",
              },
              "kind": "array",
            },
          },
        },
      ],
    },
    "monitoringcoreoscom.PrometheusSpecInitContainersSecurityContextSeLinuxOptions": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "PrometheusSpecInitContainersSecurityContextSeLinuxOptions",
        },
        "remarks": "If unspecified, the container runtime will allocate a random SELinux context for each container.  May also be set in PodSecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.",
        "summary": "The SELinux context to be applied to the container.",
      },
      "fqn": "monitoringcoreoscom.PrometheusSpecInitContainersSecurityContextSeLinuxOptions",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 19440,
      },
      "name": "PrometheusSpecInitContainersSecurityContextSeLinuxOptions",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecInitContainersSecurityContextSeLinuxOptions#level",
            },
            "summary": "Level is SELinux level label that applies to the container.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 19446,
          },
          "name": "level",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecInitContainersSecurityContextSeLinuxOptions#role",
            },
            "summary": "Role is a SELinux role label that applies to the container.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 19453,
          },
          "name": "role",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecInitContainersSecurityContextSeLinuxOptions#type",
            },
            "summary": "Type is a SELinux type label that applies to the container.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 19460,
          },
          "name": "type",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecInitContainersSecurityContextSeLinuxOptions#user",
            },
            "summary": "User is a SELinux user label that applies to the container.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 19467,
          },
          "name": "user",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
      ],
    },
    "monitoringcoreoscom.PrometheusSpecInitContainersSecurityContextWindowsOptions": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "PrometheusSpecInitContainersSecurityContextWindowsOptions",
        },
        "remarks": "If unspecified, the options from the PodSecurityContext will be used. If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.",
        "summary": "The Windows specific settings applied to all containers.",
      },
      "fqn": "monitoringcoreoscom.PrometheusSpecInitContainersSecurityContextWindowsOptions",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 19493,
      },
      "name": "PrometheusSpecInitContainersSecurityContextWindowsOptions",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecInitContainersSecurityContextWindowsOptions#gmsaCredentialSpec",
            },
            "summary": "GMSACredentialSpec is where the GMSA admission webhook (https://github.com/kubernetes-sigs/windows-gmsa) inlines the contents of the GMSA credential spec named by the GMSACredentialSpecName field.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 19499,
          },
          "name": "gmsaCredentialSpec",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecInitContainersSecurityContextWindowsOptions#gmsaCredentialSpecName",
            },
            "summary": "GMSACredentialSpecName is the name of the GMSA credential spec to use.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 19506,
          },
          "name": "gmsaCredentialSpecName",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecInitContainersSecurityContextWindowsOptions#runAsUserName",
            },
            "default": "the user specified in image metadata if unspecified. May also be set in PodSecurityContext. If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.",
            "remarks": "Defaults to the user specified in image metadata if unspecified. May also be set in PodSecurityContext. If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.",
            "summary": "The UserName in Windows to run the entrypoint of the container process.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 19514,
          },
          "name": "runAsUserName",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
      ],
    },
    "monitoringcoreoscom.PrometheusSpecInitContainersStartupProbe": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "PrometheusSpecInitContainersStartupProbe",
        },
        "remarks": "If specified, no other probes are executed until this completes successfully. If this probe fails, the Pod will be restarted, just as if the livenessProbe failed. This can be used to provide different probe parameters at the beginning of a Pod's lifecycle, when it might take a long time to load data or warm a cache, than during steady-state operation. This cannot be updated. This is a beta feature enabled by the StartupProbe feature flag. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes",
        "summary": "StartupProbe indicates that the Pod has successfully initialized.",
      },
      "fqn": "monitoringcoreoscom.PrometheusSpecInitContainersStartupProbe",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 14705,
      },
      "name": "PrometheusSpecInitContainersStartupProbe",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecInitContainersStartupProbe#exec",
            },
            "remarks": "Exec specifies the action to take.",
            "summary": "One and only one of the following should be specified.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 14711,
          },
          "name": "exec",
          "optional": true,
          "type": Object {
            "fqn": "monitoringcoreoscom.PrometheusSpecInitContainersStartupProbeExec",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecInitContainersStartupProbe#failureThreshold",
            },
            "default": "3. Minimum value is 1.",
            "remarks": "Defaults to 3. Minimum value is 1.",
            "summary": "Minimum consecutive failures for the probe to be considered failed after having succeeded.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 14719,
          },
          "name": "failureThreshold",
          "optional": true,
          "type": Object {
            "primitive": "number",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecInitContainersStartupProbe#httpGet",
            },
            "summary": "HTTPGet specifies the http request to perform.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 14726,
          },
          "name": "httpGet",
          "optional": true,
          "type": Object {
            "fqn": "monitoringcoreoscom.PrometheusSpecInitContainersStartupProbeHttpGet",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecInitContainersStartupProbe#initialDelaySeconds",
            },
            "remarks": "More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes",
            "summary": "Number of seconds after the container has started before liveness probes are initiated.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 14733,
          },
          "name": "initialDelaySeconds",
          "optional": true,
          "type": Object {
            "primitive": "number",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecInitContainersStartupProbe#periodSeconds",
            },
            "default": "10 seconds. Minimum value is 1.",
            "remarks": "Default to 10 seconds. Minimum value is 1.",
            "summary": "How often (in seconds) to perform the probe.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 14741,
          },
          "name": "periodSeconds",
          "optional": true,
          "type": Object {
            "primitive": "number",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecInitContainersStartupProbe#successThreshold",
            },
            "default": "1. Must be 1 for liveness and startup. Minimum value is 1.",
            "remarks": "Defaults to 1. Must be 1 for liveness and startup. Minimum value is 1.",
            "summary": "Minimum consecutive successes for the probe to be considered successful after having failed.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 14749,
          },
          "name": "successThreshold",
          "optional": true,
          "type": Object {
            "primitive": "number",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecInitContainersStartupProbe#tcpSocket",
            },
            "remarks": "TCP hooks not yet supported TODO: implement a realistic TCP lifecycle hook",
            "summary": "TCPSocket specifies an action involving a TCP port.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 14756,
          },
          "name": "tcpSocket",
          "optional": true,
          "type": Object {
            "fqn": "monitoringcoreoscom.PrometheusSpecInitContainersStartupProbeTcpSocket",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecInitContainersStartupProbe#timeoutSeconds",
            },
            "default": "1 second. Minimum value is 1. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes",
            "remarks": "Defaults to 1 second. Minimum value is 1. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes",
            "summary": "Number of seconds after which the probe times out.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 14764,
          },
          "name": "timeoutSeconds",
          "optional": true,
          "type": Object {
            "primitive": "number",
          },
        },
      ],
    },
    "monitoringcoreoscom.PrometheusSpecInitContainersStartupProbeExec": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "PrometheusSpecInitContainersStartupProbeExec",
        },
        "remarks": "Exec specifies the action to take.",
        "summary": "One and only one of the following should be specified.",
      },
      "fqn": "monitoringcoreoscom.PrometheusSpecInitContainersStartupProbeExec",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 19539,
      },
      "name": "PrometheusSpecInitContainersStartupProbeExec",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecInitContainersStartupProbeExec#command",
            },
            "remarks": "The command is simply exec'd, it is not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use a shell, you need to explicitly call out to that shell. Exit status of 0 is treated as live/healthy and non-zero is unhealthy.",
            "summary": "Command is the command line to execute inside the container, the working directory for the command  is root ('/') in the container's filesystem.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 19545,
          },
          "name": "command",
          "optional": true,
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "primitive": "string",
              },
              "kind": "array",
            },
          },
        },
      ],
    },
    "monitoringcoreoscom.PrometheusSpecInitContainersStartupProbeHttpGet": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "PrometheusSpecInitContainersStartupProbeHttpGet",
        },
        "summary": "HTTPGet specifies the http request to perform.",
      },
      "fqn": "monitoringcoreoscom.PrometheusSpecInitContainersStartupProbeHttpGet",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 19568,
      },
      "name": "PrometheusSpecInitContainersStartupProbeHttpGet",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecInitContainersStartupProbeHttpGet#port",
            },
            "remarks": "Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.",
            "summary": "Name or number of the port to access on the container.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 19595,
          },
          "name": "port",
          "type": Object {
            "fqn": "monitoringcoreoscom.PrometheusSpecInitContainersStartupProbeHttpGetPort",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecInitContainersStartupProbeHttpGet#host",
            },
            "remarks": "You probably want to set \\"Host\\" in httpHeaders instead.",
            "summary": "Host name to connect to, defaults to the pod IP.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 19574,
          },
          "name": "host",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecInitContainersStartupProbeHttpGet#httpHeaders",
            },
            "remarks": "HTTP allows repeated headers.",
            "summary": "Custom headers to set in the request.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 19581,
          },
          "name": "httpHeaders",
          "optional": true,
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "fqn": "monitoringcoreoscom.PrometheusSpecInitContainersStartupProbeHttpGetHttpHeaders",
              },
              "kind": "array",
            },
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecInitContainersStartupProbeHttpGet#path",
            },
            "summary": "Path to access on the HTTP server.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 19588,
          },
          "name": "path",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecInitContainersStartupProbeHttpGet#scheme",
            },
            "default": "HTTP.",
            "remarks": "Defaults to HTTP.",
            "summary": "Scheme to use for connecting to the host.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 19603,
          },
          "name": "scheme",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
      ],
    },
    "monitoringcoreoscom.PrometheusSpecInitContainersStartupProbeHttpGetHttpHeaders": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "PrometheusSpecInitContainersStartupProbeHttpGetHttpHeaders",
        },
        "summary": "HTTPHeader describes a custom header to be used in HTTP probes.",
      },
      "fqn": "monitoringcoreoscom.PrometheusSpecInitContainersStartupProbeHttpGetHttpHeaders",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 22556,
      },
      "name": "PrometheusSpecInitContainersStartupProbeHttpGetHttpHeaders",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecInitContainersStartupProbeHttpGetHttpHeaders#name",
            },
            "summary": "The header field name.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 22562,
          },
          "name": "name",
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecInitContainersStartupProbeHttpGetHttpHeaders#value",
            },
            "summary": "The header field value.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 22569,
          },
          "name": "value",
          "type": Object {
            "primitive": "string",
          },
        },
      ],
    },
    "monitoringcoreoscom.PrometheusSpecInitContainersStartupProbeHttpGetPort": Object {
      "assembly": "monitoringcoreoscom",
      "docs": Object {
        "custom": Object {
          "schema": "PrometheusSpecInitContainersStartupProbeHttpGetPort",
        },
        "remarks": "Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.",
        "summary": "Name or number of the port to access on the container.",
      },
      "fqn": "monitoringcoreoscom.PrometheusSpecInitContainersStartupProbeHttpGetPort",
      "kind": "class",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 22593,
      },
      "methods": Array [
        Object {
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 22594,
          },
          "name": "fromNumber",
          "parameters": Array [
            Object {
              "name": "value",
              "type": Object {
                "primitive": "number",
              },
            },
          ],
          "returns": Object {
            "type": Object {
              "fqn": "monitoringcoreoscom.PrometheusSpecInitContainersStartupProbeHttpGetPort",
            },
          },
          "static": true,
        },
        Object {
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 22597,
          },
          "name": "fromString",
          "parameters": Array [
            Object {
              "name": "value",
              "type": Object {
                "primitive": "string",
              },
            },
          ],
          "returns": Object {
            "type": Object {
              "fqn": "monitoringcoreoscom.PrometheusSpecInitContainersStartupProbeHttpGetPort",
            },
          },
          "static": true,
        },
      ],
      "name": "PrometheusSpecInitContainersStartupProbeHttpGetPort",
      "properties": Array [
        Object {
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 22600,
          },
          "name": "value",
          "type": Object {
            "primitive": "any",
          },
        },
      ],
    },
    "monitoringcoreoscom.PrometheusSpecInitContainersStartupProbeTcpSocket": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "PrometheusSpecInitContainersStartupProbeTcpSocket",
        },
        "remarks": "TCP hooks not yet supported TODO: implement a realistic TCP lifecycle hook",
        "summary": "TCPSocket specifies an action involving a TCP port.",
      },
      "fqn": "monitoringcoreoscom.PrometheusSpecInitContainersStartupProbeTcpSocket",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 19630,
      },
      "name": "PrometheusSpecInitContainersStartupProbeTcpSocket",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecInitContainersStartupProbeTcpSocket#port",
            },
            "remarks": "Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.",
            "summary": "Number or name of the port to access on the container.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 19643,
          },
          "name": "port",
          "type": Object {
            "fqn": "monitoringcoreoscom.PrometheusSpecInitContainersStartupProbeTcpSocketPort",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecInitContainersStartupProbeTcpSocket#host",
            },
            "summary": "Optional: Host name to connect to, defaults to the pod IP.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 19636,
          },
          "name": "host",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
      ],
    },
    "monitoringcoreoscom.PrometheusSpecInitContainersStartupProbeTcpSocketPort": Object {
      "assembly": "monitoringcoreoscom",
      "docs": Object {
        "custom": Object {
          "schema": "PrometheusSpecInitContainersStartupProbeTcpSocketPort",
        },
        "remarks": "Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.",
        "summary": "Number or name of the port to access on the container.",
      },
      "fqn": "monitoringcoreoscom.PrometheusSpecInitContainersStartupProbeTcpSocketPort",
      "kind": "class",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 22610,
      },
      "methods": Array [
        Object {
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 22611,
          },
          "name": "fromNumber",
          "parameters": Array [
            Object {
              "name": "value",
              "type": Object {
                "primitive": "number",
              },
            },
          ],
          "returns": Object {
            "type": Object {
              "fqn": "monitoringcoreoscom.PrometheusSpecInitContainersStartupProbeTcpSocketPort",
            },
          },
          "static": true,
        },
        Object {
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 22614,
          },
          "name": "fromString",
          "parameters": Array [
            Object {
              "name": "value",
              "type": Object {
                "primitive": "string",
              },
            },
          ],
          "returns": Object {
            "type": Object {
              "fqn": "monitoringcoreoscom.PrometheusSpecInitContainersStartupProbeTcpSocketPort",
            },
          },
          "static": true,
        },
      ],
      "name": "PrometheusSpecInitContainersStartupProbeTcpSocketPort",
      "properties": Array [
        Object {
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 22617,
          },
          "name": "value",
          "type": Object {
            "primitive": "any",
          },
        },
      ],
    },
    "monitoringcoreoscom.PrometheusSpecInitContainersVolumeDevices": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "PrometheusSpecInitContainersVolumeDevices",
        },
        "summary": "volumeDevice describes a mapping of a raw block device within a container.",
      },
      "fqn": "monitoringcoreoscom.PrometheusSpecInitContainersVolumeDevices",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 14794,
      },
      "name": "PrometheusSpecInitContainersVolumeDevices",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecInitContainersVolumeDevices#devicePath",
            },
            "summary": "devicePath is the path inside of the container that the device will be mapped to.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 14800,
          },
          "name": "devicePath",
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecInitContainersVolumeDevices#name",
            },
            "summary": "name must match the name of a persistentVolumeClaim in the pod.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 14807,
          },
          "name": "name",
          "type": Object {
            "primitive": "string",
          },
        },
      ],
    },
    "monitoringcoreoscom.PrometheusSpecInitContainersVolumeMounts": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "PrometheusSpecInitContainersVolumeMounts",
        },
        "summary": "VolumeMount describes a mounting of a Volume within a container.",
      },
      "fqn": "monitoringcoreoscom.PrometheusSpecInitContainersVolumeMounts",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 14831,
      },
      "name": "PrometheusSpecInitContainersVolumeMounts",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecInitContainersVolumeMounts#mountPath",
            },
            "remarks": "Must not contain ':'.",
            "summary": "Path within the container at which the volume should be mounted.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 14837,
          },
          "name": "mountPath",
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecInitContainersVolumeMounts#name",
            },
            "summary": "This must match the Name of a Volume.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 14851,
          },
          "name": "name",
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecInitContainersVolumeMounts#mountPropagation",
            },
            "remarks": "When not set, MountPropagationNone is used. This field is beta in 1.10.",
            "summary": "mountPropagation determines how mounts are propagated from the host to container and the other way around.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 14844,
          },
          "name": "mountPropagation",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecInitContainersVolumeMounts#readOnly",
            },
            "default": "false.",
            "remarks": "Defaults to false.",
            "summary": "Mounted read-only if true, read-write otherwise (false or unspecified).",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 14859,
          },
          "name": "readOnly",
          "optional": true,
          "type": Object {
            "primitive": "boolean",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecInitContainersVolumeMounts#subPath",
            },
            "default": "volume's root).",
            "remarks": "Defaults to \\"\\" (volume's root).",
            "summary": "Path within the volume from which the container's volume should be mounted.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 14867,
          },
          "name": "subPath",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecInitContainersVolumeMounts#subPathExpr",
            },
            "default": "volume's root). SubPathExpr and SubPath are mutually exclusive.",
            "remarks": "Behaves similarly to SubPath but environment variable references $(VAR_NAME) are expanded using the container's environment. Defaults to \\"\\" (volume's root). SubPathExpr and SubPath are mutually exclusive.",
            "summary": "Expanded path within the volume from which the container's volume should be mounted.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 14875,
          },
          "name": "subPathExpr",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
      ],
    },
    "monitoringcoreoscom.PrometheusSpecPodMetadata": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "PrometheusSpecPodMetadata",
        },
        "summary": "PodMetadata configures Labels and Annotations which are propagated to the prometheus pods.",
      },
      "fqn": "monitoringcoreoscom.PrometheusSpecPodMetadata",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 11932,
      },
      "name": "PrometheusSpecPodMetadata",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecPodMetadata#annotations",
            },
            "remarks": "They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations",
            "summary": "Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 11938,
          },
          "name": "annotations",
          "optional": true,
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "primitive": "string",
              },
              "kind": "map",
            },
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecPodMetadata#labels",
            },
            "remarks": "May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels",
            "summary": "Map of string keys and values that can be used to organize and categorize (scope and select) objects.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 11945,
          },
          "name": "labels",
          "optional": true,
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "primitive": "string",
              },
              "kind": "map",
            },
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecPodMetadata#name",
            },
            "remarks": "Is required when creating resources, although some resources may allow a client to request the generation of an appropriate name automatically. Name is primarily intended for creation idempotence and configuration definition. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names",
            "summary": "Name must be unique within a namespace.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 11952,
          },
          "name": "name",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
      ],
    },
    "monitoringcoreoscom.PrometheusSpecPodMonitorNamespaceSelector": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "PrometheusSpecPodMonitorNamespaceSelector",
        },
        "remarks": "If nil, only check own namespace.",
        "summary": "Namespaces to be selected for PodMonitor discovery.",
      },
      "fqn": "monitoringcoreoscom.PrometheusSpecPodMonitorNamespaceSelector",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 11977,
      },
      "name": "PrometheusSpecPodMonitorNamespaceSelector",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecPodMonitorNamespaceSelector#matchExpressions",
            },
            "remarks": "The requirements are ANDed.",
            "summary": "matchExpressions is a list of label selector requirements.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 11983,
          },
          "name": "matchExpressions",
          "optional": true,
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "fqn": "monitoringcoreoscom.PrometheusSpecPodMonitorNamespaceSelectorMatchExpressions",
              },
              "kind": "array",
            },
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecPodMonitorNamespaceSelector#matchLabels",
            },
            "remarks": "A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is \\"key\\", the operator is \\"In\\", and the values array contains only \\"value\\". The requirements are ANDed.",
            "summary": "matchLabels is a map of {key,value} pairs.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 11990,
          },
          "name": "matchLabels",
          "optional": true,
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "primitive": "string",
              },
              "kind": "map",
            },
          },
        },
      ],
    },
    "monitoringcoreoscom.PrometheusSpecPodMonitorNamespaceSelectorMatchExpressions": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "PrometheusSpecPodMonitorNamespaceSelectorMatchExpressions",
        },
        "summary": "A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.",
      },
      "fqn": "monitoringcoreoscom.PrometheusSpecPodMonitorNamespaceSelectorMatchExpressions",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 14903,
      },
      "name": "PrometheusSpecPodMonitorNamespaceSelectorMatchExpressions",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecPodMonitorNamespaceSelectorMatchExpressions#key",
            },
            "summary": "key is the label key that the selector applies to.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 14909,
          },
          "name": "key",
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecPodMonitorNamespaceSelectorMatchExpressions#operator",
            },
            "remarks": "Valid operators are In, NotIn, Exists and DoesNotExist.",
            "summary": "operator represents a key's relationship to a set of values.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 14916,
          },
          "name": "operator",
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecPodMonitorNamespaceSelectorMatchExpressions#values",
            },
            "remarks": "If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.",
            "summary": "values is an array of string values.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 14923,
          },
          "name": "values",
          "optional": true,
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "primitive": "string",
              },
              "kind": "array",
            },
          },
        },
      ],
    },
    "monitoringcoreoscom.PrometheusSpecPodMonitorSelector": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "PrometheusSpecPodMonitorSelector",
        },
        "remarks": "*Deprecated:* if neither this nor serviceMonitorSelector are specified, configuration is unmanaged.",
        "summary": "*Experimental* PodMonitors to be selected for target discovery.",
      },
      "fqn": "monitoringcoreoscom.PrometheusSpecPodMonitorSelector",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 12014,
      },
      "name": "PrometheusSpecPodMonitorSelector",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecPodMonitorSelector#matchExpressions",
            },
            "remarks": "The requirements are ANDed.",
            "summary": "matchExpressions is a list of label selector requirements.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 12020,
          },
          "name": "matchExpressions",
          "optional": true,
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "fqn": "monitoringcoreoscom.PrometheusSpecPodMonitorSelectorMatchExpressions",
              },
              "kind": "array",
            },
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecPodMonitorSelector#matchLabels",
            },
            "remarks": "A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is \\"key\\", the operator is \\"In\\", and the values array contains only \\"value\\". The requirements are ANDed.",
            "summary": "matchLabels is a map of {key,value} pairs.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 12027,
          },
          "name": "matchLabels",
          "optional": true,
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "primitive": "string",
              },
              "kind": "map",
            },
          },
        },
      ],
    },
    "monitoringcoreoscom.PrometheusSpecPodMonitorSelectorMatchExpressions": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "PrometheusSpecPodMonitorSelectorMatchExpressions",
        },
        "summary": "A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.",
      },
      "fqn": "monitoringcoreoscom.PrometheusSpecPodMonitorSelectorMatchExpressions",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 14948,
      },
      "name": "PrometheusSpecPodMonitorSelectorMatchExpressions",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecPodMonitorSelectorMatchExpressions#key",
            },
            "summary": "key is the label key that the selector applies to.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 14954,
          },
          "name": "key",
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecPodMonitorSelectorMatchExpressions#operator",
            },
            "remarks": "Valid operators are In, NotIn, Exists and DoesNotExist.",
            "summary": "operator represents a key's relationship to a set of values.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 14961,
          },
          "name": "operator",
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecPodMonitorSelectorMatchExpressions#values",
            },
            "remarks": "If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.",
            "summary": "values is an array of string values.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 14968,
          },
          "name": "values",
          "optional": true,
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "primitive": "string",
              },
              "kind": "array",
            },
          },
        },
      ],
    },
    "monitoringcoreoscom.PrometheusSpecQuery": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "PrometheusSpecQuery",
        },
        "summary": "QuerySpec defines the query command line flags when starting Prometheus.",
      },
      "fqn": "monitoringcoreoscom.PrometheusSpecQuery",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 12051,
      },
      "name": "PrometheusSpecQuery",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecQuery#lookbackDelta",
            },
            "summary": "The delta difference allowed for retrieving metrics during expression evaluations.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 12057,
          },
          "name": "lookbackDelta",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecQuery#maxConcurrency",
            },
            "summary": "Number of concurrent queries that can be run at once.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 12064,
          },
          "name": "maxConcurrency",
          "optional": true,
          "type": Object {
            "primitive": "number",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecQuery#maxSamples",
            },
            "remarks": "Note that queries will fail if they would load more samples than this into memory, so this also limits the number of samples a query can return.",
            "summary": "Maximum number of samples a single query can load into memory.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 12071,
          },
          "name": "maxSamples",
          "optional": true,
          "type": Object {
            "primitive": "number",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecQuery#timeout",
            },
            "summary": "Maximum time a query may take before being aborted.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 12078,
          },
          "name": "timeout",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
      ],
    },
    "monitoringcoreoscom.PrometheusSpecRemoteRead": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "PrometheusSpecRemoteRead",
        },
        "summary": "RemoteReadSpec defines the remote_read configuration for prometheus.",
      },
      "fqn": "monitoringcoreoscom.PrometheusSpecRemoteRead",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 12104,
      },
      "name": "PrometheusSpecRemoteRead",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecRemoteRead#url",
            },
            "summary": "The URL of the endpoint to send samples to.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 12173,
          },
          "name": "url",
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecRemoteRead#basicAuth",
            },
            "summary": "BasicAuth for the URL.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 12110,
          },
          "name": "basicAuth",
          "optional": true,
          "type": Object {
            "fqn": "monitoringcoreoscom.PrometheusSpecRemoteReadBasicAuth",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecRemoteRead#bearerToken",
            },
            "summary": "bearer token for remote read.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 12117,
          },
          "name": "bearerToken",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecRemoteRead#bearerTokenFile",
            },
            "summary": "File to read bearer token for remote read.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 12124,
          },
          "name": "bearerTokenFile",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecRemoteRead#name",
            },
            "remarks": "The name is used in metrics and logging in order to differentiate read configurations.  Only valid in Prometheus versions 2.15.0 and newer.",
            "summary": "The name of the remote read queue, must be unique if specified.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 12131,
          },
          "name": "name",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecRemoteRead#proxyUrl",
            },
            "summary": "Optional ProxyURL.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 12138,
          },
          "name": "proxyUrl",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecRemoteRead#readRecent",
            },
            "summary": "Whether reads should be made for queries for time ranges that the local storage should have complete data for.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 12145,
          },
          "name": "readRecent",
          "optional": true,
          "type": Object {
            "primitive": "boolean",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecRemoteRead#remoteTimeout",
            },
            "summary": "Timeout for requests to the remote read endpoint.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 12152,
          },
          "name": "remoteTimeout",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecRemoteRead#requiredMatchers",
            },
            "summary": "An optional list of equality matchers which have to be present in a selector to query the remote read endpoint.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 12159,
          },
          "name": "requiredMatchers",
          "optional": true,
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "primitive": "string",
              },
              "kind": "map",
            },
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecRemoteRead#tlsConfig",
            },
            "summary": "TLS Config to use for remote read.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 12166,
          },
          "name": "tlsConfig",
          "optional": true,
          "type": Object {
            "fqn": "monitoringcoreoscom.PrometheusSpecRemoteReadTlsConfig",
          },
        },
      ],
    },
    "monitoringcoreoscom.PrometheusSpecRemoteReadBasicAuth": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "PrometheusSpecRemoteReadBasicAuth",
        },
        "summary": "BasicAuth for the URL.",
      },
      "fqn": "monitoringcoreoscom.PrometheusSpecRemoteReadBasicAuth",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 14993,
      },
      "name": "PrometheusSpecRemoteReadBasicAuth",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecRemoteReadBasicAuth#password",
            },
            "summary": "The secret in the service monitor namespace that contains the password for authentication.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 14999,
          },
          "name": "password",
          "optional": true,
          "type": Object {
            "fqn": "monitoringcoreoscom.PrometheusSpecRemoteReadBasicAuthPassword",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecRemoteReadBasicAuth#username",
            },
            "summary": "The secret in the service monitor namespace that contains the username for authentication.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 15006,
          },
          "name": "username",
          "optional": true,
          "type": Object {
            "fqn": "monitoringcoreoscom.PrometheusSpecRemoteReadBasicAuthUsername",
          },
        },
      ],
    },
    "monitoringcoreoscom.PrometheusSpecRemoteReadBasicAuthPassword": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "PrometheusSpecRemoteReadBasicAuthPassword",
        },
        "summary": "The secret in the service monitor namespace that contains the password for authentication.",
      },
      "fqn": "monitoringcoreoscom.PrometheusSpecRemoteReadBasicAuthPassword",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 19667,
      },
      "name": "PrometheusSpecRemoteReadBasicAuthPassword",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecRemoteReadBasicAuthPassword#key",
            },
            "remarks": "Must be a valid secret key.",
            "summary": "The key of the secret to select from.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 19673,
          },
          "name": "key",
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecRemoteReadBasicAuthPassword#name",
            },
            "remarks": "More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?",
            "summary": "Name of the referent.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 19680,
          },
          "name": "name",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecRemoteReadBasicAuthPassword#optional",
            },
            "summary": "Specify whether the Secret or its key must be defined.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 19687,
          },
          "name": "optional",
          "optional": true,
          "type": Object {
            "primitive": "boolean",
          },
        },
      ],
    },
    "monitoringcoreoscom.PrometheusSpecRemoteReadBasicAuthUsername": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "PrometheusSpecRemoteReadBasicAuthUsername",
        },
        "summary": "The secret in the service monitor namespace that contains the username for authentication.",
      },
      "fqn": "monitoringcoreoscom.PrometheusSpecRemoteReadBasicAuthUsername",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 19712,
      },
      "name": "PrometheusSpecRemoteReadBasicAuthUsername",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecRemoteReadBasicAuthUsername#key",
            },
            "remarks": "Must be a valid secret key.",
            "summary": "The key of the secret to select from.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 19718,
          },
          "name": "key",
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecRemoteReadBasicAuthUsername#name",
            },
            "remarks": "More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?",
            "summary": "Name of the referent.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 19725,
          },
          "name": "name",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecRemoteReadBasicAuthUsername#optional",
            },
            "summary": "Specify whether the Secret or its key must be defined.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 19732,
          },
          "name": "optional",
          "optional": true,
          "type": Object {
            "primitive": "boolean",
          },
        },
      ],
    },
    "monitoringcoreoscom.PrometheusSpecRemoteReadTlsConfig": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "PrometheusSpecRemoteReadTlsConfig",
        },
        "summary": "TLS Config to use for remote read.",
      },
      "fqn": "monitoringcoreoscom.PrometheusSpecRemoteReadTlsConfig",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 15030,
      },
      "name": "PrometheusSpecRemoteReadTlsConfig",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecRemoteReadTlsConfig#ca",
            },
            "summary": "Stuct containing the CA cert to use for the targets.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 15036,
          },
          "name": "ca",
          "optional": true,
          "type": Object {
            "fqn": "monitoringcoreoscom.PrometheusSpecRemoteReadTlsConfigCa",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecRemoteReadTlsConfig#caFile",
            },
            "summary": "Path to the CA cert in the Prometheus container to use for the targets.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 15043,
          },
          "name": "caFile",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecRemoteReadTlsConfig#cert",
            },
            "summary": "Struct containing the client cert file for the targets.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 15050,
          },
          "name": "cert",
          "optional": true,
          "type": Object {
            "fqn": "monitoringcoreoscom.PrometheusSpecRemoteReadTlsConfigCert",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecRemoteReadTlsConfig#certFile",
            },
            "summary": "Path to the client cert file in the Prometheus container for the targets.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 15057,
          },
          "name": "certFile",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecRemoteReadTlsConfig#insecureSkipVerify",
            },
            "summary": "Disable target certificate validation.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 15064,
          },
          "name": "insecureSkipVerify",
          "optional": true,
          "type": Object {
            "primitive": "boolean",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecRemoteReadTlsConfig#keyFile",
            },
            "summary": "Path to the client key file in the Prometheus container for the targets.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 15071,
          },
          "name": "keyFile",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecRemoteReadTlsConfig#keySecret",
            },
            "summary": "Secret containing the client key file for the targets.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 15078,
          },
          "name": "keySecret",
          "optional": true,
          "type": Object {
            "fqn": "monitoringcoreoscom.PrometheusSpecRemoteReadTlsConfigKeySecret",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecRemoteReadTlsConfig#serverName",
            },
            "summary": "Used to verify the hostname for the targets.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 15085,
          },
          "name": "serverName",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
      ],
    },
    "monitoringcoreoscom.PrometheusSpecRemoteReadTlsConfigCa": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "PrometheusSpecRemoteReadTlsConfigCa",
        },
        "summary": "Stuct containing the CA cert to use for the targets.",
      },
      "fqn": "monitoringcoreoscom.PrometheusSpecRemoteReadTlsConfigCa",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 19757,
      },
      "name": "PrometheusSpecRemoteReadTlsConfigCa",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecRemoteReadTlsConfigCa#configMap",
            },
            "summary": "ConfigMap containing data to use for the targets.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 19763,
          },
          "name": "configMap",
          "optional": true,
          "type": Object {
            "fqn": "monitoringcoreoscom.PrometheusSpecRemoteReadTlsConfigCaConfigMap",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecRemoteReadTlsConfigCa#secret",
            },
            "summary": "Secret containing data to use for the targets.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 19770,
          },
          "name": "secret",
          "optional": true,
          "type": Object {
            "fqn": "monitoringcoreoscom.PrometheusSpecRemoteReadTlsConfigCaSecret",
          },
        },
      ],
    },
    "monitoringcoreoscom.PrometheusSpecRemoteReadTlsConfigCaConfigMap": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "PrometheusSpecRemoteReadTlsConfigCaConfigMap",
        },
        "summary": "ConfigMap containing data to use for the targets.",
      },
      "fqn": "monitoringcoreoscom.PrometheusSpecRemoteReadTlsConfigCaConfigMap",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 22627,
      },
      "name": "PrometheusSpecRemoteReadTlsConfigCaConfigMap",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecRemoteReadTlsConfigCaConfigMap#key",
            },
            "summary": "The key to select.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 22633,
          },
          "name": "key",
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecRemoteReadTlsConfigCaConfigMap#name",
            },
            "remarks": "More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?",
            "summary": "Name of the referent.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 22640,
          },
          "name": "name",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecRemoteReadTlsConfigCaConfigMap#optional",
            },
            "summary": "Specify whether the ConfigMap or its key must be defined.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 22647,
          },
          "name": "optional",
          "optional": true,
          "type": Object {
            "primitive": "boolean",
          },
        },
      ],
    },
    "monitoringcoreoscom.PrometheusSpecRemoteReadTlsConfigCaSecret": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "PrometheusSpecRemoteReadTlsConfigCaSecret",
        },
        "summary": "Secret containing data to use for the targets.",
      },
      "fqn": "monitoringcoreoscom.PrometheusSpecRemoteReadTlsConfigCaSecret",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 22672,
      },
      "name": "PrometheusSpecRemoteReadTlsConfigCaSecret",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecRemoteReadTlsConfigCaSecret#key",
            },
            "remarks": "Must be a valid secret key.",
            "summary": "The key of the secret to select from.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 22678,
          },
          "name": "key",
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecRemoteReadTlsConfigCaSecret#name",
            },
            "remarks": "More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?",
            "summary": "Name of the referent.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 22685,
          },
          "name": "name",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecRemoteReadTlsConfigCaSecret#optional",
            },
            "summary": "Specify whether the Secret or its key must be defined.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 22692,
          },
          "name": "optional",
          "optional": true,
          "type": Object {
            "primitive": "boolean",
          },
        },
      ],
    },
    "monitoringcoreoscom.PrometheusSpecRemoteReadTlsConfigCert": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "PrometheusSpecRemoteReadTlsConfigCert",
        },
        "summary": "Struct containing the client cert file for the targets.",
      },
      "fqn": "monitoringcoreoscom.PrometheusSpecRemoteReadTlsConfigCert",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 19794,
      },
      "name": "PrometheusSpecRemoteReadTlsConfigCert",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecRemoteReadTlsConfigCert#configMap",
            },
            "summary": "ConfigMap containing data to use for the targets.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 19800,
          },
          "name": "configMap",
          "optional": true,
          "type": Object {
            "fqn": "monitoringcoreoscom.PrometheusSpecRemoteReadTlsConfigCertConfigMap",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecRemoteReadTlsConfigCert#secret",
            },
            "summary": "Secret containing data to use for the targets.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 19807,
          },
          "name": "secret",
          "optional": true,
          "type": Object {
            "fqn": "monitoringcoreoscom.PrometheusSpecRemoteReadTlsConfigCertSecret",
          },
        },
      ],
    },
    "monitoringcoreoscom.PrometheusSpecRemoteReadTlsConfigCertConfigMap": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "PrometheusSpecRemoteReadTlsConfigCertConfigMap",
        },
        "summary": "ConfigMap containing data to use for the targets.",
      },
      "fqn": "monitoringcoreoscom.PrometheusSpecRemoteReadTlsConfigCertConfigMap",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 22717,
      },
      "name": "PrometheusSpecRemoteReadTlsConfigCertConfigMap",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecRemoteReadTlsConfigCertConfigMap#key",
            },
            "summary": "The key to select.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 22723,
          },
          "name": "key",
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecRemoteReadTlsConfigCertConfigMap#name",
            },
            "remarks": "More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?",
            "summary": "Name of the referent.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 22730,
          },
          "name": "name",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecRemoteReadTlsConfigCertConfigMap#optional",
            },
            "summary": "Specify whether the ConfigMap or its key must be defined.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 22737,
          },
          "name": "optional",
          "optional": true,
          "type": Object {
            "primitive": "boolean",
          },
        },
      ],
    },
    "monitoringcoreoscom.PrometheusSpecRemoteReadTlsConfigCertSecret": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "PrometheusSpecRemoteReadTlsConfigCertSecret",
        },
        "summary": "Secret containing data to use for the targets.",
      },
      "fqn": "monitoringcoreoscom.PrometheusSpecRemoteReadTlsConfigCertSecret",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 22762,
      },
      "name": "PrometheusSpecRemoteReadTlsConfigCertSecret",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecRemoteReadTlsConfigCertSecret#key",
            },
            "remarks": "Must be a valid secret key.",
            "summary": "The key of the secret to select from.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 22768,
          },
          "name": "key",
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecRemoteReadTlsConfigCertSecret#name",
            },
            "remarks": "More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?",
            "summary": "Name of the referent.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 22775,
          },
          "name": "name",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecRemoteReadTlsConfigCertSecret#optional",
            },
            "summary": "Specify whether the Secret or its key must be defined.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 22782,
          },
          "name": "optional",
          "optional": true,
          "type": Object {
            "primitive": "boolean",
          },
        },
      ],
    },
    "monitoringcoreoscom.PrometheusSpecRemoteReadTlsConfigKeySecret": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "PrometheusSpecRemoteReadTlsConfigKeySecret",
        },
        "summary": "Secret containing the client key file for the targets.",
      },
      "fqn": "monitoringcoreoscom.PrometheusSpecRemoteReadTlsConfigKeySecret",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 19831,
      },
      "name": "PrometheusSpecRemoteReadTlsConfigKeySecret",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecRemoteReadTlsConfigKeySecret#key",
            },
            "remarks": "Must be a valid secret key.",
            "summary": "The key of the secret to select from.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 19837,
          },
          "name": "key",
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecRemoteReadTlsConfigKeySecret#name",
            },
            "remarks": "More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?",
            "summary": "Name of the referent.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 19844,
          },
          "name": "name",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecRemoteReadTlsConfigKeySecret#optional",
            },
            "summary": "Specify whether the Secret or its key must be defined.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 19851,
          },
          "name": "optional",
          "optional": true,
          "type": Object {
            "primitive": "boolean",
          },
        },
      ],
    },
    "monitoringcoreoscom.PrometheusSpecRemoteWrite": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "PrometheusSpecRemoteWrite",
        },
        "summary": "RemoteWriteSpec defines the remote_write configuration for prometheus.",
      },
      "fqn": "monitoringcoreoscom.PrometheusSpecRemoteWrite",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 12205,
      },
      "name": "PrometheusSpecRemoteWrite",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecRemoteWrite#url",
            },
            "summary": "The URL of the endpoint to send samples to.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 12267,
          },
          "name": "url",
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecRemoteWrite#basicAuth",
            },
            "summary": "BasicAuth for the URL.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 12211,
          },
          "name": "basicAuth",
          "optional": true,
          "type": Object {
            "fqn": "monitoringcoreoscom.PrometheusSpecRemoteWriteBasicAuth",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecRemoteWrite#bearerToken",
            },
            "summary": "File to read bearer token for remote write.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 12218,
          },
          "name": "bearerToken",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecRemoteWrite#bearerTokenFile",
            },
            "summary": "File to read bearer token for remote write.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 12225,
          },
          "name": "bearerTokenFile",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecRemoteWrite#name",
            },
            "remarks": "The name is used in metrics and logging in order to differentiate queues. Only valid in Prometheus versions 2.15.0 and newer.",
            "summary": "The name of the remote write queue, must be unique if specified.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 12232,
          },
          "name": "name",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecRemoteWrite#proxyUrl",
            },
            "summary": "Optional ProxyURL.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 12239,
          },
          "name": "proxyUrl",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecRemoteWrite#queueConfig",
            },
            "summary": "QueueConfig allows tuning of the remote write queue parameters.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 12246,
          },
          "name": "queueConfig",
          "optional": true,
          "type": Object {
            "fqn": "monitoringcoreoscom.PrometheusSpecRemoteWriteQueueConfig",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecRemoteWrite#remoteTimeout",
            },
            "summary": "Timeout for requests to the remote write endpoint.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 12253,
          },
          "name": "remoteTimeout",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecRemoteWrite#tlsConfig",
            },
            "summary": "TLS Config to use for remote write.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 12260,
          },
          "name": "tlsConfig",
          "optional": true,
          "type": Object {
            "fqn": "monitoringcoreoscom.PrometheusSpecRemoteWriteTlsConfig",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecRemoteWrite#writeRelabelConfigs",
            },
            "summary": "The list of remote write relabel configurations.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 12274,
          },
          "name": "writeRelabelConfigs",
          "optional": true,
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "fqn": "monitoringcoreoscom.PrometheusSpecRemoteWriteWriteRelabelConfigs",
              },
              "kind": "array",
            },
          },
        },
      ],
    },
    "monitoringcoreoscom.PrometheusSpecRemoteWriteBasicAuth": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "PrometheusSpecRemoteWriteBasicAuth",
        },
        "summary": "BasicAuth for the URL.",
      },
      "fqn": "monitoringcoreoscom.PrometheusSpecRemoteWriteBasicAuth",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 15115,
      },
      "name": "PrometheusSpecRemoteWriteBasicAuth",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecRemoteWriteBasicAuth#password",
            },
            "summary": "The secret in the service monitor namespace that contains the password for authentication.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 15121,
          },
          "name": "password",
          "optional": true,
          "type": Object {
            "fqn": "monitoringcoreoscom.PrometheusSpecRemoteWriteBasicAuthPassword",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecRemoteWriteBasicAuth#username",
            },
            "summary": "The secret in the service monitor namespace that contains the username for authentication.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 15128,
          },
          "name": "username",
          "optional": true,
          "type": Object {
            "fqn": "monitoringcoreoscom.PrometheusSpecRemoteWriteBasicAuthUsername",
          },
        },
      ],
    },
    "monitoringcoreoscom.PrometheusSpecRemoteWriteBasicAuthPassword": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "PrometheusSpecRemoteWriteBasicAuthPassword",
        },
        "summary": "The secret in the service monitor namespace that contains the password for authentication.",
      },
      "fqn": "monitoringcoreoscom.PrometheusSpecRemoteWriteBasicAuthPassword",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 19876,
      },
      "name": "PrometheusSpecRemoteWriteBasicAuthPassword",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecRemoteWriteBasicAuthPassword#key",
            },
            "remarks": "Must be a valid secret key.",
            "summary": "The key of the secret to select from.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 19882,
          },
          "name": "key",
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecRemoteWriteBasicAuthPassword#name",
            },
            "remarks": "More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?",
            "summary": "Name of the referent.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 19889,
          },
          "name": "name",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecRemoteWriteBasicAuthPassword#optional",
            },
            "summary": "Specify whether the Secret or its key must be defined.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 19896,
          },
          "name": "optional",
          "optional": true,
          "type": Object {
            "primitive": "boolean",
          },
        },
      ],
    },
    "monitoringcoreoscom.PrometheusSpecRemoteWriteBasicAuthUsername": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "PrometheusSpecRemoteWriteBasicAuthUsername",
        },
        "summary": "The secret in the service monitor namespace that contains the username for authentication.",
      },
      "fqn": "monitoringcoreoscom.PrometheusSpecRemoteWriteBasicAuthUsername",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 19921,
      },
      "name": "PrometheusSpecRemoteWriteBasicAuthUsername",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecRemoteWriteBasicAuthUsername#key",
            },
            "remarks": "Must be a valid secret key.",
            "summary": "The key of the secret to select from.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 19927,
          },
          "name": "key",
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecRemoteWriteBasicAuthUsername#name",
            },
            "remarks": "More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?",
            "summary": "Name of the referent.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 19934,
          },
          "name": "name",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecRemoteWriteBasicAuthUsername#optional",
            },
            "summary": "Specify whether the Secret or its key must be defined.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 19941,
          },
          "name": "optional",
          "optional": true,
          "type": Object {
            "primitive": "boolean",
          },
        },
      ],
    },
    "monitoringcoreoscom.PrometheusSpecRemoteWriteQueueConfig": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "PrometheusSpecRemoteWriteQueueConfig",
        },
        "summary": "QueueConfig allows tuning of the remote write queue parameters.",
      },
      "fqn": "monitoringcoreoscom.PrometheusSpecRemoteWriteQueueConfig",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 15152,
      },
      "name": "PrometheusSpecRemoteWriteQueueConfig",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecRemoteWriteQueueConfig#batchSendDeadline",
            },
            "summary": "BatchSendDeadline is the maximum time a sample will wait in buffer.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 15158,
          },
          "name": "batchSendDeadline",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecRemoteWriteQueueConfig#capacity",
            },
            "summary": "Capacity is the number of samples to buffer per shard before we start dropping them.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 15165,
          },
          "name": "capacity",
          "optional": true,
          "type": Object {
            "primitive": "number",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecRemoteWriteQueueConfig#maxBackoff",
            },
            "summary": "MaxBackoff is the maximum retry delay.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 15172,
          },
          "name": "maxBackoff",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecRemoteWriteQueueConfig#maxRetries",
            },
            "summary": "MaxRetries is the maximum number of times to retry a batch on recoverable errors.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 15179,
          },
          "name": "maxRetries",
          "optional": true,
          "type": Object {
            "primitive": "number",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecRemoteWriteQueueConfig#maxSamplesPerSend",
            },
            "summary": "MaxSamplesPerSend is the maximum number of samples per send.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 15186,
          },
          "name": "maxSamplesPerSend",
          "optional": true,
          "type": Object {
            "primitive": "number",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecRemoteWriteQueueConfig#maxShards",
            },
            "summary": "MaxShards is the maximum number of shards, i.e. amount of concurrency.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 15193,
          },
          "name": "maxShards",
          "optional": true,
          "type": Object {
            "primitive": "number",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecRemoteWriteQueueConfig#minBackoff",
            },
            "remarks": "Gets doubled for every retry.",
            "summary": "MinBackoff is the initial retry delay.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 15200,
          },
          "name": "minBackoff",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecRemoteWriteQueueConfig#minShards",
            },
            "summary": "MinShards is the minimum number of shards, i.e. amount of concurrency.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 15207,
          },
          "name": "minShards",
          "optional": true,
          "type": Object {
            "primitive": "number",
          },
        },
      ],
    },
    "monitoringcoreoscom.PrometheusSpecRemoteWriteTlsConfig": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "PrometheusSpecRemoteWriteTlsConfig",
        },
        "summary": "TLS Config to use for remote write.",
      },
      "fqn": "monitoringcoreoscom.PrometheusSpecRemoteWriteTlsConfig",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 15237,
      },
      "name": "PrometheusSpecRemoteWriteTlsConfig",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecRemoteWriteTlsConfig#ca",
            },
            "summary": "Stuct containing the CA cert to use for the targets.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 15243,
          },
          "name": "ca",
          "optional": true,
          "type": Object {
            "fqn": "monitoringcoreoscom.PrometheusSpecRemoteWriteTlsConfigCa",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecRemoteWriteTlsConfig#caFile",
            },
            "summary": "Path to the CA cert in the Prometheus container to use for the targets.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 15250,
          },
          "name": "caFile",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecRemoteWriteTlsConfig#cert",
            },
            "summary": "Struct containing the client cert file for the targets.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 15257,
          },
          "name": "cert",
          "optional": true,
          "type": Object {
            "fqn": "monitoringcoreoscom.PrometheusSpecRemoteWriteTlsConfigCert",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecRemoteWriteTlsConfig#certFile",
            },
            "summary": "Path to the client cert file in the Prometheus container for the targets.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 15264,
          },
          "name": "certFile",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecRemoteWriteTlsConfig#insecureSkipVerify",
            },
            "summary": "Disable target certificate validation.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 15271,
          },
          "name": "insecureSkipVerify",
          "optional": true,
          "type": Object {
            "primitive": "boolean",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecRemoteWriteTlsConfig#keyFile",
            },
            "summary": "Path to the client key file in the Prometheus container for the targets.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 15278,
          },
          "name": "keyFile",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecRemoteWriteTlsConfig#keySecret",
            },
            "summary": "Secret containing the client key file for the targets.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 15285,
          },
          "name": "keySecret",
          "optional": true,
          "type": Object {
            "fqn": "monitoringcoreoscom.PrometheusSpecRemoteWriteTlsConfigKeySecret",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecRemoteWriteTlsConfig#serverName",
            },
            "summary": "Used to verify the hostname for the targets.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 15292,
          },
          "name": "serverName",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
      ],
    },
    "monitoringcoreoscom.PrometheusSpecRemoteWriteTlsConfigCa": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "PrometheusSpecRemoteWriteTlsConfigCa",
        },
        "summary": "Stuct containing the CA cert to use for the targets.",
      },
      "fqn": "monitoringcoreoscom.PrometheusSpecRemoteWriteTlsConfigCa",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 19966,
      },
      "name": "PrometheusSpecRemoteWriteTlsConfigCa",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecRemoteWriteTlsConfigCa#configMap",
            },
            "summary": "ConfigMap containing data to use for the targets.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 19972,
          },
          "name": "configMap",
          "optional": true,
          "type": Object {
            "fqn": "monitoringcoreoscom.PrometheusSpecRemoteWriteTlsConfigCaConfigMap",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecRemoteWriteTlsConfigCa#secret",
            },
            "summary": "Secret containing data to use for the targets.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 19979,
          },
          "name": "secret",
          "optional": true,
          "type": Object {
            "fqn": "monitoringcoreoscom.PrometheusSpecRemoteWriteTlsConfigCaSecret",
          },
        },
      ],
    },
    "monitoringcoreoscom.PrometheusSpecRemoteWriteTlsConfigCaConfigMap": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "PrometheusSpecRemoteWriteTlsConfigCaConfigMap",
        },
        "summary": "ConfigMap containing data to use for the targets.",
      },
      "fqn": "monitoringcoreoscom.PrometheusSpecRemoteWriteTlsConfigCaConfigMap",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 22807,
      },
      "name": "PrometheusSpecRemoteWriteTlsConfigCaConfigMap",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecRemoteWriteTlsConfigCaConfigMap#key",
            },
            "summary": "The key to select.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 22813,
          },
          "name": "key",
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecRemoteWriteTlsConfigCaConfigMap#name",
            },
            "remarks": "More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?",
            "summary": "Name of the referent.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 22820,
          },
          "name": "name",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecRemoteWriteTlsConfigCaConfigMap#optional",
            },
            "summary": "Specify whether the ConfigMap or its key must be defined.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 22827,
          },
          "name": "optional",
          "optional": true,
          "type": Object {
            "primitive": "boolean",
          },
        },
      ],
    },
    "monitoringcoreoscom.PrometheusSpecRemoteWriteTlsConfigCaSecret": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "PrometheusSpecRemoteWriteTlsConfigCaSecret",
        },
        "summary": "Secret containing data to use for the targets.",
      },
      "fqn": "monitoringcoreoscom.PrometheusSpecRemoteWriteTlsConfigCaSecret",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 22852,
      },
      "name": "PrometheusSpecRemoteWriteTlsConfigCaSecret",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecRemoteWriteTlsConfigCaSecret#key",
            },
            "remarks": "Must be a valid secret key.",
            "summary": "The key of the secret to select from.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 22858,
          },
          "name": "key",
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecRemoteWriteTlsConfigCaSecret#name",
            },
            "remarks": "More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?",
            "summary": "Name of the referent.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 22865,
          },
          "name": "name",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecRemoteWriteTlsConfigCaSecret#optional",
            },
            "summary": "Specify whether the Secret or its key must be defined.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 22872,
          },
          "name": "optional",
          "optional": true,
          "type": Object {
            "primitive": "boolean",
          },
        },
      ],
    },
    "monitoringcoreoscom.PrometheusSpecRemoteWriteTlsConfigCert": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "PrometheusSpecRemoteWriteTlsConfigCert",
        },
        "summary": "Struct containing the client cert file for the targets.",
      },
      "fqn": "monitoringcoreoscom.PrometheusSpecRemoteWriteTlsConfigCert",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 20003,
      },
      "name": "PrometheusSpecRemoteWriteTlsConfigCert",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecRemoteWriteTlsConfigCert#configMap",
            },
            "summary": "ConfigMap containing data to use for the targets.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 20009,
          },
          "name": "configMap",
          "optional": true,
          "type": Object {
            "fqn": "monitoringcoreoscom.PrometheusSpecRemoteWriteTlsConfigCertConfigMap",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecRemoteWriteTlsConfigCert#secret",
            },
            "summary": "Secret containing data to use for the targets.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 20016,
          },
          "name": "secret",
          "optional": true,
          "type": Object {
            "fqn": "monitoringcoreoscom.PrometheusSpecRemoteWriteTlsConfigCertSecret",
          },
        },
      ],
    },
    "monitoringcoreoscom.PrometheusSpecRemoteWriteTlsConfigCertConfigMap": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "PrometheusSpecRemoteWriteTlsConfigCertConfigMap",
        },
        "summary": "ConfigMap containing data to use for the targets.",
      },
      "fqn": "monitoringcoreoscom.PrometheusSpecRemoteWriteTlsConfigCertConfigMap",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 22897,
      },
      "name": "PrometheusSpecRemoteWriteTlsConfigCertConfigMap",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecRemoteWriteTlsConfigCertConfigMap#key",
            },
            "summary": "The key to select.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 22903,
          },
          "name": "key",
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecRemoteWriteTlsConfigCertConfigMap#name",
            },
            "remarks": "More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?",
            "summary": "Name of the referent.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 22910,
          },
          "name": "name",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecRemoteWriteTlsConfigCertConfigMap#optional",
            },
            "summary": "Specify whether the ConfigMap or its key must be defined.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 22917,
          },
          "name": "optional",
          "optional": true,
          "type": Object {
            "primitive": "boolean",
          },
        },
      ],
    },
    "monitoringcoreoscom.PrometheusSpecRemoteWriteTlsConfigCertSecret": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "PrometheusSpecRemoteWriteTlsConfigCertSecret",
        },
        "summary": "Secret containing data to use for the targets.",
      },
      "fqn": "monitoringcoreoscom.PrometheusSpecRemoteWriteTlsConfigCertSecret",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 22942,
      },
      "name": "PrometheusSpecRemoteWriteTlsConfigCertSecret",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecRemoteWriteTlsConfigCertSecret#key",
            },
            "remarks": "Must be a valid secret key.",
            "summary": "The key of the secret to select from.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 22948,
          },
          "name": "key",
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecRemoteWriteTlsConfigCertSecret#name",
            },
            "remarks": "More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?",
            "summary": "Name of the referent.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 22955,
          },
          "name": "name",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecRemoteWriteTlsConfigCertSecret#optional",
            },
            "summary": "Specify whether the Secret or its key must be defined.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 22962,
          },
          "name": "optional",
          "optional": true,
          "type": Object {
            "primitive": "boolean",
          },
        },
      ],
    },
    "monitoringcoreoscom.PrometheusSpecRemoteWriteTlsConfigKeySecret": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "PrometheusSpecRemoteWriteTlsConfigKeySecret",
        },
        "summary": "Secret containing the client key file for the targets.",
      },
      "fqn": "monitoringcoreoscom.PrometheusSpecRemoteWriteTlsConfigKeySecret",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 20040,
      },
      "name": "PrometheusSpecRemoteWriteTlsConfigKeySecret",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecRemoteWriteTlsConfigKeySecret#key",
            },
            "remarks": "Must be a valid secret key.",
            "summary": "The key of the secret to select from.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 20046,
          },
          "name": "key",
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecRemoteWriteTlsConfigKeySecret#name",
            },
            "remarks": "More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?",
            "summary": "Name of the referent.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 20053,
          },
          "name": "name",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecRemoteWriteTlsConfigKeySecret#optional",
            },
            "summary": "Specify whether the Secret or its key must be defined.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 20060,
          },
          "name": "optional",
          "optional": true,
          "type": Object {
            "primitive": "boolean",
          },
        },
      ],
    },
    "monitoringcoreoscom.PrometheusSpecRemoteWriteWriteRelabelConfigs": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "PrometheusSpecRemoteWriteWriteRelabelConfigs",
        },
        "remarks": "It defines \`<metric_relabel_configs>\`-section of Prometheus configuration. More info: https://prometheus.io/docs/prometheus/latest/configuration/configuration/#metric_relabel_configs",
        "summary": "RelabelConfig allows dynamic rewriting of the label set, being applied to samples before ingestion.",
      },
      "fqn": "monitoringcoreoscom.PrometheusSpecRemoteWriteWriteRelabelConfigs",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 15322,
      },
      "name": "PrometheusSpecRemoteWriteWriteRelabelConfigs",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecRemoteWriteWriteRelabelConfigs#action",
            },
            "default": "replace'",
            "remarks": "Default is 'replace'",
            "summary": "Action to perform based on regex matching.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 15329,
          },
          "name": "action",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecRemoteWriteWriteRelabelConfigs#modulus",
            },
            "summary": "Modulus to take of the hash of the source label values.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 15336,
          },
          "name": "modulus",
          "optional": true,
          "type": Object {
            "primitive": "number",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecRemoteWriteWriteRelabelConfigs#regex",
            },
            "default": "'",
            "remarks": "Default is '(.*)'",
            "summary": "Regular expression against which the extracted value is matched.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 15344,
          },
          "name": "regex",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecRemoteWriteWriteRelabelConfigs#replacement",
            },
            "default": "1'",
            "remarks": "Regex capture groups are available. Default is '$1'",
            "summary": "Replacement value against which a regex replace is performed if the regular expression matches.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 15352,
          },
          "name": "replacement",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecRemoteWriteWriteRelabelConfigs#separator",
            },
            "remarks": "default is ';'.",
            "summary": "Separator placed between concatenated source label values.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 15359,
          },
          "name": "separator",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecRemoteWriteWriteRelabelConfigs#sourceLabels",
            },
            "remarks": "Their content is concatenated using the configured separator and matched against the configured regular expression for the replace, keep, and drop actions.",
            "summary": "The source labels select values from existing labels.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 15366,
          },
          "name": "sourceLabels",
          "optional": true,
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "primitive": "string",
              },
              "kind": "array",
            },
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecRemoteWriteWriteRelabelConfigs#targetLabel",
            },
            "remarks": "It is mandatory for replace actions. Regex capture groups are available.",
            "summary": "Label to which the resulting value is written in a replace action.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 15373,
          },
          "name": "targetLabel",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
      ],
    },
    "monitoringcoreoscom.PrometheusSpecResources": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "PrometheusSpecResources",
        },
        "summary": "Define resources requests and limits for single Pods.",
      },
      "fqn": "monitoringcoreoscom.PrometheusSpecResources",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 12306,
      },
      "name": "PrometheusSpecResources",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecResources#limits",
            },
            "remarks": "More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/",
            "summary": "Limits describes the maximum amount of compute resources allowed.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 12312,
          },
          "name": "limits",
          "optional": true,
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "primitive": "string",
              },
              "kind": "map",
            },
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecResources#requests",
            },
            "remarks": "If Requests is omitted for a container, it defaults to Limits if that is explicitly specified, otherwise to an implementation-defined value. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/",
            "summary": "Requests describes the minimum amount of compute resources required.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 12319,
          },
          "name": "requests",
          "optional": true,
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "primitive": "string",
              },
              "kind": "map",
            },
          },
        },
      ],
    },
    "monitoringcoreoscom.PrometheusSpecRuleNamespaceSelector": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "PrometheusSpecRuleNamespaceSelector",
        },
        "remarks": "If unspecified, only the same namespace as the Prometheus object is in is used.",
        "summary": "Namespaces to be selected for PrometheusRules discovery.",
      },
      "fqn": "monitoringcoreoscom.PrometheusSpecRuleNamespaceSelector",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 12343,
      },
      "name": "PrometheusSpecRuleNamespaceSelector",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecRuleNamespaceSelector#matchExpressions",
            },
            "remarks": "The requirements are ANDed.",
            "summary": "matchExpressions is a list of label selector requirements.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 12349,
          },
          "name": "matchExpressions",
          "optional": true,
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "fqn": "monitoringcoreoscom.PrometheusSpecRuleNamespaceSelectorMatchExpressions",
              },
              "kind": "array",
            },
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecRuleNamespaceSelector#matchLabels",
            },
            "remarks": "A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is \\"key\\", the operator is \\"In\\", and the values array contains only \\"value\\". The requirements are ANDed.",
            "summary": "matchLabels is a map of {key,value} pairs.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 12356,
          },
          "name": "matchLabels",
          "optional": true,
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "primitive": "string",
              },
              "kind": "map",
            },
          },
        },
      ],
    },
    "monitoringcoreoscom.PrometheusSpecRuleNamespaceSelectorMatchExpressions": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "PrometheusSpecRuleNamespaceSelectorMatchExpressions",
        },
        "summary": "A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.",
      },
      "fqn": "monitoringcoreoscom.PrometheusSpecRuleNamespaceSelectorMatchExpressions",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 15402,
      },
      "name": "PrometheusSpecRuleNamespaceSelectorMatchExpressions",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecRuleNamespaceSelectorMatchExpressions#key",
            },
            "summary": "key is the label key that the selector applies to.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 15408,
          },
          "name": "key",
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecRuleNamespaceSelectorMatchExpressions#operator",
            },
            "remarks": "Valid operators are In, NotIn, Exists and DoesNotExist.",
            "summary": "operator represents a key's relationship to a set of values.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 15415,
          },
          "name": "operator",
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecRuleNamespaceSelectorMatchExpressions#values",
            },
            "remarks": "If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.",
            "summary": "values is an array of string values.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 15422,
          },
          "name": "values",
          "optional": true,
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "primitive": "string",
              },
              "kind": "array",
            },
          },
        },
      ],
    },
    "monitoringcoreoscom.PrometheusSpecRuleSelector": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "PrometheusSpecRuleSelector",
        },
        "remarks": "Until (excluding) Prometheus Operator v0.24.0 Prometheus Operator will migrate any legacy rule ConfigMaps to PrometheusRule custom resources selected by RuleSelector. Make sure it does not match any config maps that you do not want to be migrated.",
        "summary": "A selector to select which PrometheusRules to mount for loading alerting/recording rules from.",
      },
      "fqn": "monitoringcoreoscom.PrometheusSpecRuleSelector",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 12380,
      },
      "name": "PrometheusSpecRuleSelector",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecRuleSelector#matchExpressions",
            },
            "remarks": "The requirements are ANDed.",
            "summary": "matchExpressions is a list of label selector requirements.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 12386,
          },
          "name": "matchExpressions",
          "optional": true,
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "fqn": "monitoringcoreoscom.PrometheusSpecRuleSelectorMatchExpressions",
              },
              "kind": "array",
            },
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecRuleSelector#matchLabels",
            },
            "remarks": "A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is \\"key\\", the operator is \\"In\\", and the values array contains only \\"value\\". The requirements are ANDed.",
            "summary": "matchLabels is a map of {key,value} pairs.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 12393,
          },
          "name": "matchLabels",
          "optional": true,
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "primitive": "string",
              },
              "kind": "map",
            },
          },
        },
      ],
    },
    "monitoringcoreoscom.PrometheusSpecRuleSelectorMatchExpressions": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "PrometheusSpecRuleSelectorMatchExpressions",
        },
        "summary": "A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.",
      },
      "fqn": "monitoringcoreoscom.PrometheusSpecRuleSelectorMatchExpressions",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 15447,
      },
      "name": "PrometheusSpecRuleSelectorMatchExpressions",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecRuleSelectorMatchExpressions#key",
            },
            "summary": "key is the label key that the selector applies to.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 15453,
          },
          "name": "key",
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecRuleSelectorMatchExpressions#operator",
            },
            "remarks": "Valid operators are In, NotIn, Exists and DoesNotExist.",
            "summary": "operator represents a key's relationship to a set of values.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 15460,
          },
          "name": "operator",
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecRuleSelectorMatchExpressions#values",
            },
            "remarks": "If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.",
            "summary": "values is an array of string values.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 15467,
          },
          "name": "values",
          "optional": true,
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "primitive": "string",
              },
              "kind": "array",
            },
          },
        },
      ],
    },
    "monitoringcoreoscom.PrometheusSpecRules": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "PrometheusSpecRules",
        },
        "summary": "/--rules._/ command-line arguments.",
      },
      "fqn": "monitoringcoreoscom.PrometheusSpecRules",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 12417,
      },
      "name": "PrometheusSpecRules",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecRules#alert",
            },
            "summary": "/--rules.alert._/ command-line arguments.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 12423,
          },
          "name": "alert",
          "optional": true,
          "type": Object {
            "fqn": "monitoringcoreoscom.PrometheusSpecRulesAlert",
          },
        },
      ],
    },
    "monitoringcoreoscom.PrometheusSpecRulesAlert": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "PrometheusSpecRulesAlert",
        },
        "summary": "/--rules.alert._/ command-line arguments.",
      },
      "fqn": "monitoringcoreoscom.PrometheusSpecRulesAlert",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 15492,
      },
      "name": "PrometheusSpecRulesAlert",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecRulesAlert#forGracePeriod",
            },
            "remarks": "This is maintained only for alerts with configured 'for' time greater than grace period.",
            "summary": "Minimum duration between alert and restored 'for' state.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 15498,
          },
          "name": "forGracePeriod",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecRulesAlert#forOutageTolerance",
            },
            "summary": "Max time to tolerate prometheus outage for restoring 'for' state of alert.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 15505,
          },
          "name": "forOutageTolerance",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecRulesAlert#resendDelay",
            },
            "summary": "Minimum amount of time to wait before resending an alert to Alertmanager.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 15512,
          },
          "name": "resendDelay",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
      ],
    },
    "monitoringcoreoscom.PrometheusSpecSecurityContext": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "PrometheusSpecSecurityContext",
        },
        "remarks": "This defaults to the default PodSecurityContext.",
        "summary": "SecurityContext holds pod-level security attributes and common container settings.",
      },
      "fqn": "monitoringcoreoscom.PrometheusSpecSecurityContext",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 12446,
      },
      "name": "PrometheusSpecSecurityContext",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecSecurityContext#fsGroup",
            },
            "remarks": "Some volume types allow the Kubelet to change the ownership of that volume to be owned by the pod:
1. The owning GID will be the FSGroup 2. The setgid bit is set (new files created in the volume will be owned by FSGroup) 3. The permission bits are OR'd with rw-rw----
If unset, the Kubelet will not modify the ownership and permissions of any volume.",
            "summary": "A special supplemental group that applies to all containers in a pod.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 12454,
          },
          "name": "fsGroup",
          "optional": true,
          "type": Object {
            "primitive": "number",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecSecurityContext#fsGroupChangePolicy",
            },
            "remarks": "This field will only apply to volume types which support fsGroup based ownership(and permissions). It will have no effect on ephemeral volume types such as: secret, configmaps and emptydir. Valid values are \\"OnRootMismatch\\" and \\"Always\\". If not specified defaults to \\"Always\\".",
            "summary": "fsGroupChangePolicy defines behavior of changing ownership and permission of the volume before being exposed inside Pod.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 12461,
          },
          "name": "fsGroupChangePolicy",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecSecurityContext#runAsGroup",
            },
            "remarks": "Uses runtime default if unset. May also be set in SecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence for that container.",
            "summary": "The GID to run the entrypoint of the container process.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 12468,
          },
          "name": "runAsGroup",
          "optional": true,
          "type": Object {
            "primitive": "number",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecSecurityContext#runAsNonRoot",
            },
            "remarks": "If true, the Kubelet will validate the image at runtime to ensure that it does not run as UID 0 (root) and fail to start the container if it does. If unset or false, no such validation will be performed. May also be set in SecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.",
            "summary": "Indicates that the container must run as a non-root user.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 12475,
          },
          "name": "runAsNonRoot",
          "optional": true,
          "type": Object {
            "primitive": "boolean",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecSecurityContext#runAsUser",
            },
            "default": "user specified in image metadata if unspecified. May also be set in SecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence for that container.",
            "remarks": "Defaults to user specified in image metadata if unspecified. May also be set in SecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence for that container.",
            "summary": "The UID to run the entrypoint of the container process.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 12483,
          },
          "name": "runAsUser",
          "optional": true,
          "type": Object {
            "primitive": "number",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecSecurityContext#seLinuxOptions",
            },
            "remarks": "If unspecified, the container runtime will allocate a random SELinux context for each container.  May also be set in SecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence for that container.",
            "summary": "The SELinux context to be applied to all containers.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 12490,
          },
          "name": "seLinuxOptions",
          "optional": true,
          "type": Object {
            "fqn": "monitoringcoreoscom.PrometheusSpecSecurityContextSeLinuxOptions",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecSecurityContext#supplementalGroups",
            },
            "remarks": "If unspecified, no groups will be added to any container.",
            "summary": "A list of groups applied to the first process run in each container, in addition to the container's primary GID.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 12497,
          },
          "name": "supplementalGroups",
          "optional": true,
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "primitive": "number",
              },
              "kind": "array",
            },
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecSecurityContext#sysctls",
            },
            "remarks": "Pods with unsupported sysctls (by the container runtime) might fail to launch.",
            "summary": "Sysctls hold a list of namespaced sysctls used for the pod.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 12504,
          },
          "name": "sysctls",
          "optional": true,
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "fqn": "monitoringcoreoscom.PrometheusSpecSecurityContextSysctls",
              },
              "kind": "array",
            },
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecSecurityContext#windowsOptions",
            },
            "remarks": "If unspecified, the options within a container's SecurityContext will be used. If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.",
            "summary": "The Windows specific settings applied to all containers.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 12511,
          },
          "name": "windowsOptions",
          "optional": true,
          "type": Object {
            "fqn": "monitoringcoreoscom.PrometheusSpecSecurityContextWindowsOptions",
          },
        },
      ],
    },
    "monitoringcoreoscom.PrometheusSpecSecurityContextSeLinuxOptions": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "PrometheusSpecSecurityContextSeLinuxOptions",
        },
        "remarks": "If unspecified, the container runtime will allocate a random SELinux context for each container.  May also be set in SecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence for that container.",
        "summary": "The SELinux context to be applied to all containers.",
      },
      "fqn": "monitoringcoreoscom.PrometheusSpecSecurityContextSeLinuxOptions",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 15537,
      },
      "name": "PrometheusSpecSecurityContextSeLinuxOptions",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecSecurityContextSeLinuxOptions#level",
            },
            "summary": "Level is SELinux level label that applies to the container.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 15543,
          },
          "name": "level",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecSecurityContextSeLinuxOptions#role",
            },
            "summary": "Role is a SELinux role label that applies to the container.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 15550,
          },
          "name": "role",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecSecurityContextSeLinuxOptions#type",
            },
            "summary": "Type is a SELinux type label that applies to the container.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 15557,
          },
          "name": "type",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecSecurityContextSeLinuxOptions#user",
            },
            "summary": "User is a SELinux user label that applies to the container.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 15564,
          },
          "name": "user",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
      ],
    },
    "monitoringcoreoscom.PrometheusSpecSecurityContextSysctls": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "PrometheusSpecSecurityContextSysctls",
        },
        "summary": "Sysctl defines a kernel parameter to be set.",
      },
      "fqn": "monitoringcoreoscom.PrometheusSpecSecurityContextSysctls",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 15590,
      },
      "name": "PrometheusSpecSecurityContextSysctls",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecSecurityContextSysctls#name",
            },
            "summary": "Name of a property to set.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 15596,
          },
          "name": "name",
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecSecurityContextSysctls#value",
            },
            "summary": "Value of a property to set.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 15603,
          },
          "name": "value",
          "type": Object {
            "primitive": "string",
          },
        },
      ],
    },
    "monitoringcoreoscom.PrometheusSpecSecurityContextWindowsOptions": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "PrometheusSpecSecurityContextWindowsOptions",
        },
        "remarks": "If unspecified, the options within a container's SecurityContext will be used. If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.",
        "summary": "The Windows specific settings applied to all containers.",
      },
      "fqn": "monitoringcoreoscom.PrometheusSpecSecurityContextWindowsOptions",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 15627,
      },
      "name": "PrometheusSpecSecurityContextWindowsOptions",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecSecurityContextWindowsOptions#gmsaCredentialSpec",
            },
            "summary": "GMSACredentialSpec is where the GMSA admission webhook (https://github.com/kubernetes-sigs/windows-gmsa) inlines the contents of the GMSA credential spec named by the GMSACredentialSpecName field.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 15633,
          },
          "name": "gmsaCredentialSpec",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecSecurityContextWindowsOptions#gmsaCredentialSpecName",
            },
            "summary": "GMSACredentialSpecName is the name of the GMSA credential spec to use.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 15640,
          },
          "name": "gmsaCredentialSpecName",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecSecurityContextWindowsOptions#runAsUserName",
            },
            "default": "the user specified in image metadata if unspecified. May also be set in PodSecurityContext. If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.",
            "remarks": "Defaults to the user specified in image metadata if unspecified. May also be set in PodSecurityContext. If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.",
            "summary": "The UserName in Windows to run the entrypoint of the container process.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 15648,
          },
          "name": "runAsUserName",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
      ],
    },
    "monitoringcoreoscom.PrometheusSpecServiceMonitorNamespaceSelector": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "PrometheusSpecServiceMonitorNamespaceSelector",
        },
        "remarks": "If nil, only check own namespace.",
        "summary": "Namespaces to be selected for ServiceMonitor discovery.",
      },
      "fqn": "monitoringcoreoscom.PrometheusSpecServiceMonitorNamespaceSelector",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 12542,
      },
      "name": "PrometheusSpecServiceMonitorNamespaceSelector",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecServiceMonitorNamespaceSelector#matchExpressions",
            },
            "remarks": "The requirements are ANDed.",
            "summary": "matchExpressions is a list of label selector requirements.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 12548,
          },
          "name": "matchExpressions",
          "optional": true,
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "fqn": "monitoringcoreoscom.PrometheusSpecServiceMonitorNamespaceSelectorMatchExpressions",
              },
              "kind": "array",
            },
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecServiceMonitorNamespaceSelector#matchLabels",
            },
            "remarks": "A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is \\"key\\", the operator is \\"In\\", and the values array contains only \\"value\\". The requirements are ANDed.",
            "summary": "matchLabels is a map of {key,value} pairs.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 12555,
          },
          "name": "matchLabels",
          "optional": true,
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "primitive": "string",
              },
              "kind": "map",
            },
          },
        },
      ],
    },
    "monitoringcoreoscom.PrometheusSpecServiceMonitorNamespaceSelectorMatchExpressions": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "PrometheusSpecServiceMonitorNamespaceSelectorMatchExpressions",
        },
        "summary": "A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.",
      },
      "fqn": "monitoringcoreoscom.PrometheusSpecServiceMonitorNamespaceSelectorMatchExpressions",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 15673,
      },
      "name": "PrometheusSpecServiceMonitorNamespaceSelectorMatchExpressions",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecServiceMonitorNamespaceSelectorMatchExpressions#key",
            },
            "summary": "key is the label key that the selector applies to.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 15679,
          },
          "name": "key",
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecServiceMonitorNamespaceSelectorMatchExpressions#operator",
            },
            "remarks": "Valid operators are In, NotIn, Exists and DoesNotExist.",
            "summary": "operator represents a key's relationship to a set of values.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 15686,
          },
          "name": "operator",
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecServiceMonitorNamespaceSelectorMatchExpressions#values",
            },
            "remarks": "If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.",
            "summary": "values is an array of string values.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 15693,
          },
          "name": "values",
          "optional": true,
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "primitive": "string",
              },
              "kind": "array",
            },
          },
        },
      ],
    },
    "monitoringcoreoscom.PrometheusSpecServiceMonitorSelector": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "PrometheusSpecServiceMonitorSelector",
        },
        "remarks": "*Deprecated:* if neither this nor podMonitorSelector are specified, configuration is unmanaged.",
        "summary": "ServiceMonitors to be selected for target discovery.",
      },
      "fqn": "monitoringcoreoscom.PrometheusSpecServiceMonitorSelector",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 12579,
      },
      "name": "PrometheusSpecServiceMonitorSelector",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecServiceMonitorSelector#matchExpressions",
            },
            "remarks": "The requirements are ANDed.",
            "summary": "matchExpressions is a list of label selector requirements.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 12585,
          },
          "name": "matchExpressions",
          "optional": true,
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "fqn": "monitoringcoreoscom.PrometheusSpecServiceMonitorSelectorMatchExpressions",
              },
              "kind": "array",
            },
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecServiceMonitorSelector#matchLabels",
            },
            "remarks": "A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is \\"key\\", the operator is \\"In\\", and the values array contains only \\"value\\". The requirements are ANDed.",
            "summary": "matchLabels is a map of {key,value} pairs.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 12592,
          },
          "name": "matchLabels",
          "optional": true,
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "primitive": "string",
              },
              "kind": "map",
            },
          },
        },
      ],
    },
    "monitoringcoreoscom.PrometheusSpecServiceMonitorSelectorMatchExpressions": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "PrometheusSpecServiceMonitorSelectorMatchExpressions",
        },
        "summary": "A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.",
      },
      "fqn": "monitoringcoreoscom.PrometheusSpecServiceMonitorSelectorMatchExpressions",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 15718,
      },
      "name": "PrometheusSpecServiceMonitorSelectorMatchExpressions",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecServiceMonitorSelectorMatchExpressions#key",
            },
            "summary": "key is the label key that the selector applies to.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 15724,
          },
          "name": "key",
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecServiceMonitorSelectorMatchExpressions#operator",
            },
            "remarks": "Valid operators are In, NotIn, Exists and DoesNotExist.",
            "summary": "operator represents a key's relationship to a set of values.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 15731,
          },
          "name": "operator",
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecServiceMonitorSelectorMatchExpressions#values",
            },
            "remarks": "If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.",
            "summary": "values is an array of string values.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 15738,
          },
          "name": "values",
          "optional": true,
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "primitive": "string",
              },
              "kind": "array",
            },
          },
        },
      ],
    },
    "monitoringcoreoscom.PrometheusSpecStorage": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "PrometheusSpecStorage",
        },
        "summary": "Storage spec to specify how storage shall be used.",
      },
      "fqn": "monitoringcoreoscom.PrometheusSpecStorage",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 12616,
      },
      "name": "PrometheusSpecStorage",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecStorage#disableMountSubPath",
            },
            "remarks": "DisableMountSubPath allows to remove any subPath usage in volume mounts.",
            "summary": "Deprecated: subPath usage will be disabled by default in a future release, this option will become unnecessary.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 12622,
          },
          "name": "disableMountSubPath",
          "optional": true,
          "type": Object {
            "primitive": "boolean",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecStorage#emptyDir",
            },
            "remarks": "If specified, used in place of any volumeClaimTemplate. More info: https://kubernetes.io/docs/concepts/storage/volumes/#emptydir",
            "summary": "EmptyDirVolumeSource to be used by the Prometheus StatefulSets.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 12629,
          },
          "name": "emptyDir",
          "optional": true,
          "type": Object {
            "fqn": "monitoringcoreoscom.PrometheusSpecStorageEmptyDir",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecStorage#volumeClaimTemplate",
            },
            "summary": "A PVC spec to be used by the Prometheus StatefulSets.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 12636,
          },
          "name": "volumeClaimTemplate",
          "optional": true,
          "type": Object {
            "fqn": "monitoringcoreoscom.PrometheusSpecStorageVolumeClaimTemplate",
          },
        },
      ],
    },
    "monitoringcoreoscom.PrometheusSpecStorageEmptyDir": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "PrometheusSpecStorageEmptyDir",
        },
        "remarks": "If specified, used in place of any volumeClaimTemplate. More info: https://kubernetes.io/docs/concepts/storage/volumes/#emptydir",
        "summary": "EmptyDirVolumeSource to be used by the Prometheus StatefulSets.",
      },
      "fqn": "monitoringcoreoscom.PrometheusSpecStorageEmptyDir",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 15763,
      },
      "name": "PrometheusSpecStorageEmptyDir",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecStorageEmptyDir#medium",
            },
            "remarks": "The default is \\"\\" which means to use the node's default medium. Must be an empty string (default) or Memory. More info: https://kubernetes.io/docs/concepts/storage/volumes#emptydir",
            "summary": "What type of storage medium should back this directory.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 15769,
          },
          "name": "medium",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecStorageEmptyDir#sizeLimit",
            },
            "remarks": "The size limit is also applicable for memory medium. The maximum usage on memory medium EmptyDir would be the minimum value between the SizeLimit specified here and the sum of memory limits of all containers in a pod. The default is nil which means that the limit is undefined. More info: http://kubernetes.io/docs/user-guide/volumes#emptydir",
            "summary": "Total amount of local storage required for this EmptyDir volume.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 15776,
          },
          "name": "sizeLimit",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
      ],
    },
    "monitoringcoreoscom.PrometheusSpecStorageVolumeClaimTemplate": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "PrometheusSpecStorageVolumeClaimTemplate",
        },
        "summary": "A PVC spec to be used by the Prometheus StatefulSets.",
      },
      "fqn": "monitoringcoreoscom.PrometheusSpecStorageVolumeClaimTemplate",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 15800,
      },
      "name": "PrometheusSpecStorageVolumeClaimTemplate",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecStorageVolumeClaimTemplate#apiVersion",
            },
            "remarks": "Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
            "summary": "APIVersion defines the versioned schema of this representation of an object.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 15806,
          },
          "name": "apiVersion",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecStorageVolumeClaimTemplate#kind",
            },
            "remarks": "Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
            "summary": "Kind is a string value representing the REST resource this object represents.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 15813,
          },
          "name": "kind",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecStorageVolumeClaimTemplate#metadata",
            },
            "summary": "EmbeddedMetadata contains metadata relevant to an EmbeddedResource.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 15820,
          },
          "name": "metadata",
          "optional": true,
          "type": Object {
            "fqn": "monitoringcoreoscom.PrometheusSpecStorageVolumeClaimTemplateMetadata",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecStorageVolumeClaimTemplate#spec",
            },
            "remarks": "More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims",
            "summary": "Spec defines the desired characteristics of a volume requested by a pod author.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 15827,
          },
          "name": "spec",
          "optional": true,
          "type": Object {
            "fqn": "monitoringcoreoscom.PrometheusSpecStorageVolumeClaimTemplateSpec",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecStorageVolumeClaimTemplate#status",
            },
            "remarks": "Read-only. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims",
            "summary": "Status represents the current information/status of a persistent volume claim.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 15834,
          },
          "name": "status",
          "optional": true,
          "type": Object {
            "fqn": "monitoringcoreoscom.PrometheusSpecStorageVolumeClaimTemplateStatus",
          },
        },
      ],
    },
    "monitoringcoreoscom.PrometheusSpecStorageVolumeClaimTemplateMetadata": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "PrometheusSpecStorageVolumeClaimTemplateMetadata",
        },
        "summary": "EmbeddedMetadata contains metadata relevant to an EmbeddedResource.",
      },
      "fqn": "monitoringcoreoscom.PrometheusSpecStorageVolumeClaimTemplateMetadata",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 20085,
      },
      "name": "PrometheusSpecStorageVolumeClaimTemplateMetadata",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecStorageVolumeClaimTemplateMetadata#annotations",
            },
            "remarks": "They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations",
            "summary": "Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 20091,
          },
          "name": "annotations",
          "optional": true,
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "primitive": "string",
              },
              "kind": "map",
            },
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecStorageVolumeClaimTemplateMetadata#labels",
            },
            "remarks": "May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels",
            "summary": "Map of string keys and values that can be used to organize and categorize (scope and select) objects.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 20098,
          },
          "name": "labels",
          "optional": true,
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "primitive": "string",
              },
              "kind": "map",
            },
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecStorageVolumeClaimTemplateMetadata#name",
            },
            "remarks": "Is required when creating resources, although some resources may allow a client to request the generation of an appropriate name automatically. Name is primarily intended for creation idempotence and configuration definition. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names",
            "summary": "Name must be unique within a namespace.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 20105,
          },
          "name": "name",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
      ],
    },
    "monitoringcoreoscom.PrometheusSpecStorageVolumeClaimTemplateSpec": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "PrometheusSpecStorageVolumeClaimTemplateSpec",
        },
        "remarks": "More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims",
        "summary": "Spec defines the desired characteristics of a volume requested by a pod author.",
      },
      "fqn": "monitoringcoreoscom.PrometheusSpecStorageVolumeClaimTemplateSpec",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 20130,
      },
      "name": "PrometheusSpecStorageVolumeClaimTemplateSpec",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecStorageVolumeClaimTemplateSpec#accessModes",
            },
            "remarks": "More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#access-modes-1",
            "summary": "AccessModes contains the desired access modes the volume should have.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 20136,
          },
          "name": "accessModes",
          "optional": true,
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "primitive": "string",
              },
              "kind": "array",
            },
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecStorageVolumeClaimTemplateSpec#dataSource",
            },
            "summary": "This field can be used to specify either: * An existing VolumeSnapshot object (snapshot.storage.k8s.io/VolumeSnapshot - Beta) * An existing PVC (PersistentVolumeClaim) * An existing custom resource/object that implements data population (Alpha) In order to use VolumeSnapshot object types, the appropriate feature gate must be enabled (VolumeSnapshotDataSource or AnyVolumeDataSource) If the provisioner or an external controller can support the specified data source, it will create a new volume based on the contents of the specified data source. If the specified data source is not supported, the volume will not be created and the failure will be reported as an event. In the future, we plan to support more data source types and the behavior of the provisioner may change.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 20143,
          },
          "name": "dataSource",
          "optional": true,
          "type": Object {
            "fqn": "monitoringcoreoscom.PrometheusSpecStorageVolumeClaimTemplateSpecDataSource",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecStorageVolumeClaimTemplateSpec#resources",
            },
            "remarks": "More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#resources",
            "summary": "Resources represents the minimum resources the volume should have.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 20150,
          },
          "name": "resources",
          "optional": true,
          "type": Object {
            "fqn": "monitoringcoreoscom.PrometheusSpecStorageVolumeClaimTemplateSpecResources",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecStorageVolumeClaimTemplateSpec#selector",
            },
            "summary": "A label query over volumes to consider for binding.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 20157,
          },
          "name": "selector",
          "optional": true,
          "type": Object {
            "fqn": "monitoringcoreoscom.PrometheusSpecStorageVolumeClaimTemplateSpecSelector",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecStorageVolumeClaimTemplateSpec#storageClassName",
            },
            "remarks": "More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#class-1",
            "summary": "Name of the StorageClass required by the claim.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 20164,
          },
          "name": "storageClassName",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecStorageVolumeClaimTemplateSpec#volumeMode",
            },
            "remarks": "Value of Filesystem is implied when not included in claim spec.",
            "summary": "volumeMode defines what type of volume is required by the claim.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 20171,
          },
          "name": "volumeMode",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecStorageVolumeClaimTemplateSpec#volumeName",
            },
            "summary": "VolumeName is the binding reference to the PersistentVolume backing this claim.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 20178,
          },
          "name": "volumeName",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
      ],
    },
    "monitoringcoreoscom.PrometheusSpecStorageVolumeClaimTemplateSpecDataSource": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "PrometheusSpecStorageVolumeClaimTemplateSpecDataSource",
        },
        "summary": "This field can be used to specify either: * An existing VolumeSnapshot object (snapshot.storage.k8s.io/VolumeSnapshot - Beta) * An existing PVC (PersistentVolumeClaim) * An existing custom resource/object that implements data population (Alpha) In order to use VolumeSnapshot object types, the appropriate feature gate must be enabled (VolumeSnapshotDataSource or AnyVolumeDataSource) If the provisioner or an external controller can support the specified data source, it will create a new volume based on the contents of the specified data source. If the specified data source is not supported, the volume will not be created and the failure will be reported as an event. In the future, we plan to support more data source types and the behavior of the provisioner may change.",
      },
      "fqn": "monitoringcoreoscom.PrometheusSpecStorageVolumeClaimTemplateSpecDataSource",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 22987,
      },
      "name": "PrometheusSpecStorageVolumeClaimTemplateSpecDataSource",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecStorageVolumeClaimTemplateSpecDataSource#kind",
            },
            "summary": "Kind is the type of resource being referenced.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 23000,
          },
          "name": "kind",
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecStorageVolumeClaimTemplateSpecDataSource#name",
            },
            "summary": "Name is the name of resource being referenced.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 23007,
          },
          "name": "name",
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecStorageVolumeClaimTemplateSpecDataSource#apiGroup",
            },
            "remarks": "If APIGroup is not specified, the specified Kind must be in the core API group. For any other third-party types, APIGroup is required.",
            "summary": "APIGroup is the group for the resource being referenced.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 22993,
          },
          "name": "apiGroup",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
      ],
    },
    "monitoringcoreoscom.PrometheusSpecStorageVolumeClaimTemplateSpecResources": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "PrometheusSpecStorageVolumeClaimTemplateSpecResources",
        },
        "remarks": "More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#resources",
        "summary": "Resources represents the minimum resources the volume should have.",
      },
      "fqn": "monitoringcoreoscom.PrometheusSpecStorageVolumeClaimTemplateSpecResources",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 23032,
      },
      "name": "PrometheusSpecStorageVolumeClaimTemplateSpecResources",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecStorageVolumeClaimTemplateSpecResources#limits",
            },
            "remarks": "More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/",
            "summary": "Limits describes the maximum amount of compute resources allowed.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 23038,
          },
          "name": "limits",
          "optional": true,
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "primitive": "string",
              },
              "kind": "map",
            },
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecStorageVolumeClaimTemplateSpecResources#requests",
            },
            "remarks": "If Requests is omitted for a container, it defaults to Limits if that is explicitly specified, otherwise to an implementation-defined value. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/",
            "summary": "Requests describes the minimum amount of compute resources required.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 23045,
          },
          "name": "requests",
          "optional": true,
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "primitive": "string",
              },
              "kind": "map",
            },
          },
        },
      ],
    },
    "monitoringcoreoscom.PrometheusSpecStorageVolumeClaimTemplateSpecSelector": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "PrometheusSpecStorageVolumeClaimTemplateSpecSelector",
        },
        "summary": "A label query over volumes to consider for binding.",
      },
      "fqn": "monitoringcoreoscom.PrometheusSpecStorageVolumeClaimTemplateSpecSelector",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 23069,
      },
      "name": "PrometheusSpecStorageVolumeClaimTemplateSpecSelector",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecStorageVolumeClaimTemplateSpecSelector#matchExpressions",
            },
            "remarks": "The requirements are ANDed.",
            "summary": "matchExpressions is a list of label selector requirements.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 23075,
          },
          "name": "matchExpressions",
          "optional": true,
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "fqn": "monitoringcoreoscom.PrometheusSpecStorageVolumeClaimTemplateSpecSelectorMatchExpressions",
              },
              "kind": "array",
            },
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecStorageVolumeClaimTemplateSpecSelector#matchLabels",
            },
            "remarks": "A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is \\"key\\", the operator is \\"In\\", and the values array contains only \\"value\\". The requirements are ANDed.",
            "summary": "matchLabels is a map of {key,value} pairs.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 23082,
          },
          "name": "matchLabels",
          "optional": true,
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "primitive": "string",
              },
              "kind": "map",
            },
          },
        },
      ],
    },
    "monitoringcoreoscom.PrometheusSpecStorageVolumeClaimTemplateSpecSelectorMatchExpressions": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "PrometheusSpecStorageVolumeClaimTemplateSpecSelectorMatchExpressions",
        },
        "summary": "A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.",
      },
      "fqn": "monitoringcoreoscom.PrometheusSpecStorageVolumeClaimTemplateSpecSelectorMatchExpressions",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 24408,
      },
      "name": "PrometheusSpecStorageVolumeClaimTemplateSpecSelectorMatchExpressions",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecStorageVolumeClaimTemplateSpecSelectorMatchExpressions#key",
            },
            "summary": "key is the label key that the selector applies to.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 24414,
          },
          "name": "key",
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecStorageVolumeClaimTemplateSpecSelectorMatchExpressions#operator",
            },
            "remarks": "Valid operators are In, NotIn, Exists and DoesNotExist.",
            "summary": "operator represents a key's relationship to a set of values.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 24421,
          },
          "name": "operator",
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecStorageVolumeClaimTemplateSpecSelectorMatchExpressions#values",
            },
            "remarks": "If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.",
            "summary": "values is an array of string values.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 24428,
          },
          "name": "values",
          "optional": true,
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "primitive": "string",
              },
              "kind": "array",
            },
          },
        },
      ],
    },
    "monitoringcoreoscom.PrometheusSpecStorageVolumeClaimTemplateStatus": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "PrometheusSpecStorageVolumeClaimTemplateStatus",
        },
        "remarks": "Read-only. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims",
        "summary": "Status represents the current information/status of a persistent volume claim.",
      },
      "fqn": "monitoringcoreoscom.PrometheusSpecStorageVolumeClaimTemplateStatus",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 20207,
      },
      "name": "PrometheusSpecStorageVolumeClaimTemplateStatus",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecStorageVolumeClaimTemplateStatus#accessModes",
            },
            "remarks": "More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#access-modes-1",
            "summary": "AccessModes contains the actual access modes the volume backing the PVC has.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 20213,
          },
          "name": "accessModes",
          "optional": true,
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "primitive": "string",
              },
              "kind": "array",
            },
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecStorageVolumeClaimTemplateStatus#capacity",
            },
            "summary": "Represents the actual resources of the underlying volume.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 20220,
          },
          "name": "capacity",
          "optional": true,
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "primitive": "string",
              },
              "kind": "map",
            },
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecStorageVolumeClaimTemplateStatus#conditions",
            },
            "remarks": "If underlying persistent volume is being resized then the Condition will be set to 'ResizeStarted'.",
            "summary": "Current Condition of persistent volume claim.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 20227,
          },
          "name": "conditions",
          "optional": true,
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "fqn": "monitoringcoreoscom.PrometheusSpecStorageVolumeClaimTemplateStatusConditions",
              },
              "kind": "array",
            },
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecStorageVolumeClaimTemplateStatus#phase",
            },
            "summary": "Phase represents the current phase of PersistentVolumeClaim.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 20234,
          },
          "name": "phase",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
      ],
    },
    "monitoringcoreoscom.PrometheusSpecStorageVolumeClaimTemplateStatusConditions": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "PrometheusSpecStorageVolumeClaimTemplateStatusConditions",
        },
        "summary": "PersistentVolumeClaimCondition contails details about state of pvc.",
      },
      "fqn": "monitoringcoreoscom.PrometheusSpecStorageVolumeClaimTemplateStatusConditions",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 23106,
      },
      "name": "PrometheusSpecStorageVolumeClaimTemplateStatusConditions",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecStorageVolumeClaimTemplateStatusConditions#status",
            },
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 23138,
          },
          "name": "status",
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecStorageVolumeClaimTemplateStatusConditions#type",
            },
            "summary": "PersistentVolumeClaimConditionType is a valid value of PersistentVolumeClaimCondition.Type.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 23145,
          },
          "name": "type",
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecStorageVolumeClaimTemplateStatusConditions#lastProbeTime",
            },
            "summary": "Last time we probed the condition.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 23112,
          },
          "name": "lastProbeTime",
          "optional": true,
          "type": Object {
            "primitive": "date",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecStorageVolumeClaimTemplateStatusConditions#lastTransitionTime",
            },
            "summary": "Last time the condition transitioned from one status to another.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 23119,
          },
          "name": "lastTransitionTime",
          "optional": true,
          "type": Object {
            "primitive": "date",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecStorageVolumeClaimTemplateStatusConditions#message",
            },
            "summary": "Human-readable message indicating details about last transition.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 23126,
          },
          "name": "message",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecStorageVolumeClaimTemplateStatusConditions#reason",
            },
            "remarks": "If it reports \\"ResizeStarted\\" that means the underlying persistent volume is being resized.",
            "summary": "Unique, this should be a short, machine understandable string that gives the reason for condition's last transition.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 23133,
          },
          "name": "reason",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
      ],
    },
    "monitoringcoreoscom.PrometheusSpecThanos": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "PrometheusSpecThanos",
        },
        "remarks": "This section is experimental, it may change significantly without deprecation notice in any release.
This is experimental and may change significantly without backward compatibility in any release.",
        "summary": "Thanos configuration allows configuring various aspects of a Prometheus server in a Thanos environment.",
      },
      "fqn": "monitoringcoreoscom.PrometheusSpecThanos",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 12663,
      },
      "name": "PrometheusSpecThanos",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecThanos#baseImage",
            },
            "summary": "Thanos base image if other than default.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 12669,
          },
          "name": "baseImage",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecThanos#grpcServerTlsConfig",
            },
            "remarks": "Note: Currently only the CAFile, CertFile, and KeyFile fields are supported. Maps to the '--grpc-server-tls-*' CLI args.",
            "summary": "GRPCServerTLSConfig configures the gRPC server from which Thanos Querier reads recorded rule data.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 12676,
          },
          "name": "grpcServerTlsConfig",
          "optional": true,
          "type": Object {
            "fqn": "monitoringcoreoscom.PrometheusSpecThanosGrpcServerTlsConfig",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecThanos#image",
            },
            "remarks": "Specifying the version is still necessary to ensure the Prometheus Operator knows what version of Thanos is being configured.",
            "summary": "Image if specified has precedence over baseImage, tag and sha combinations.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 12683,
          },
          "name": "image",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecThanos#listenLocal",
            },
            "summary": "ListenLocal makes the Thanos sidecar listen on loopback, so that it does not bind against the Pod IP.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 12690,
          },
          "name": "listenLocal",
          "optional": true,
          "type": Object {
            "primitive": "boolean",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecThanos#logFormat",
            },
            "summary": "LogFormat for Thanos sidecar to be configured with.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 12697,
          },
          "name": "logFormat",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecThanos#logLevel",
            },
            "summary": "LogLevel for Thanos sidecar to be configured with.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 12704,
          },
          "name": "logLevel",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecThanos#objectStorageConfig",
            },
            "summary": "ObjectStorageConfig configures object storage in Thanos.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 12711,
          },
          "name": "objectStorageConfig",
          "optional": true,
          "type": Object {
            "fqn": "monitoringcoreoscom.PrometheusSpecThanosObjectStorageConfig",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecThanos#resources",
            },
            "remarks": "If not provided, no requests/limits will be set",
            "summary": "Resources defines the resource requirements for the Thanos sidecar.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 12718,
          },
          "name": "resources",
          "optional": true,
          "type": Object {
            "fqn": "monitoringcoreoscom.PrometheusSpecThanosResources",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecThanos#sha",
            },
            "default": "the value of \`version\`. Similar to a tag, but the SHA explicitly deploys an immutable container image. Version and Tag are ignored if SHA is set.",
            "remarks": "Defaults to the value of \`version\`. Similar to a tag, but the SHA explicitly deploys an immutable container image. Version and Tag are ignored if SHA is set.",
            "summary": "SHA of Thanos container image to be deployed.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 12726,
          },
          "name": "sha",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecThanos#tag",
            },
            "default": "the value of \`version\`. Version is ignored if Tag is set.",
            "remarks": "Defaults to the value of \`version\`. Version is ignored if Tag is set.",
            "summary": "Tag of Thanos sidecar container image to be deployed.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 12734,
          },
          "name": "tag",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecThanos#tracingConfig",
            },
            "remarks": "This is an experimental feature, it may change in any upcoming release in a breaking way.",
            "summary": "TracingConfig configures tracing in Thanos.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 12741,
          },
          "name": "tracingConfig",
          "optional": true,
          "type": Object {
            "fqn": "monitoringcoreoscom.PrometheusSpecThanosTracingConfig",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecThanos#version",
            },
            "summary": "Version describes the version of Thanos to use.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 12748,
          },
          "name": "version",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
      ],
    },
    "monitoringcoreoscom.PrometheusSpecThanosGrpcServerTlsConfig": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "PrometheusSpecThanosGrpcServerTlsConfig",
        },
        "remarks": "Note: Currently only the CAFile, CertFile, and KeyFile fields are supported. Maps to the '--grpc-server-tls-*' CLI args.",
        "summary": "GRPCServerTLSConfig configures the gRPC server from which Thanos Querier reads recorded rule data.",
      },
      "fqn": "monitoringcoreoscom.PrometheusSpecThanosGrpcServerTlsConfig",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 15861,
      },
      "name": "PrometheusSpecThanosGrpcServerTlsConfig",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecThanosGrpcServerTlsConfig#ca",
            },
            "summary": "Stuct containing the CA cert to use for the targets.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 15867,
          },
          "name": "ca",
          "optional": true,
          "type": Object {
            "fqn": "monitoringcoreoscom.PrometheusSpecThanosGrpcServerTlsConfigCa",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecThanosGrpcServerTlsConfig#caFile",
            },
            "summary": "Path to the CA cert in the Prometheus container to use for the targets.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 15874,
          },
          "name": "caFile",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecThanosGrpcServerTlsConfig#cert",
            },
            "summary": "Struct containing the client cert file for the targets.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 15881,
          },
          "name": "cert",
          "optional": true,
          "type": Object {
            "fqn": "monitoringcoreoscom.PrometheusSpecThanosGrpcServerTlsConfigCert",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecThanosGrpcServerTlsConfig#certFile",
            },
            "summary": "Path to the client cert file in the Prometheus container for the targets.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 15888,
          },
          "name": "certFile",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecThanosGrpcServerTlsConfig#insecureSkipVerify",
            },
            "summary": "Disable target certificate validation.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 15895,
          },
          "name": "insecureSkipVerify",
          "optional": true,
          "type": Object {
            "primitive": "boolean",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecThanosGrpcServerTlsConfig#keyFile",
            },
            "summary": "Path to the client key file in the Prometheus container for the targets.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 15902,
          },
          "name": "keyFile",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecThanosGrpcServerTlsConfig#keySecret",
            },
            "summary": "Secret containing the client key file for the targets.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 15909,
          },
          "name": "keySecret",
          "optional": true,
          "type": Object {
            "fqn": "monitoringcoreoscom.PrometheusSpecThanosGrpcServerTlsConfigKeySecret",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecThanosGrpcServerTlsConfig#serverName",
            },
            "summary": "Used to verify the hostname for the targets.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 15916,
          },
          "name": "serverName",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
      ],
    },
    "monitoringcoreoscom.PrometheusSpecThanosGrpcServerTlsConfigCa": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "PrometheusSpecThanosGrpcServerTlsConfigCa",
        },
        "summary": "Stuct containing the CA cert to use for the targets.",
      },
      "fqn": "monitoringcoreoscom.PrometheusSpecThanosGrpcServerTlsConfigCa",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 20260,
      },
      "name": "PrometheusSpecThanosGrpcServerTlsConfigCa",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecThanosGrpcServerTlsConfigCa#configMap",
            },
            "summary": "ConfigMap containing data to use for the targets.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 20266,
          },
          "name": "configMap",
          "optional": true,
          "type": Object {
            "fqn": "monitoringcoreoscom.PrometheusSpecThanosGrpcServerTlsConfigCaConfigMap",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecThanosGrpcServerTlsConfigCa#secret",
            },
            "summary": "Secret containing data to use for the targets.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 20273,
          },
          "name": "secret",
          "optional": true,
          "type": Object {
            "fqn": "monitoringcoreoscom.PrometheusSpecThanosGrpcServerTlsConfigCaSecret",
          },
        },
      ],
    },
    "monitoringcoreoscom.PrometheusSpecThanosGrpcServerTlsConfigCaConfigMap": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "PrometheusSpecThanosGrpcServerTlsConfigCaConfigMap",
        },
        "summary": "ConfigMap containing data to use for the targets.",
      },
      "fqn": "monitoringcoreoscom.PrometheusSpecThanosGrpcServerTlsConfigCaConfigMap",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 23173,
      },
      "name": "PrometheusSpecThanosGrpcServerTlsConfigCaConfigMap",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecThanosGrpcServerTlsConfigCaConfigMap#key",
            },
            "summary": "The key to select.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 23179,
          },
          "name": "key",
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecThanosGrpcServerTlsConfigCaConfigMap#name",
            },
            "remarks": "More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?",
            "summary": "Name of the referent.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 23186,
          },
          "name": "name",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecThanosGrpcServerTlsConfigCaConfigMap#optional",
            },
            "summary": "Specify whether the ConfigMap or its key must be defined.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 23193,
          },
          "name": "optional",
          "optional": true,
          "type": Object {
            "primitive": "boolean",
          },
        },
      ],
    },
    "monitoringcoreoscom.PrometheusSpecThanosGrpcServerTlsConfigCaSecret": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "PrometheusSpecThanosGrpcServerTlsConfigCaSecret",
        },
        "summary": "Secret containing data to use for the targets.",
      },
      "fqn": "monitoringcoreoscom.PrometheusSpecThanosGrpcServerTlsConfigCaSecret",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 23218,
      },
      "name": "PrometheusSpecThanosGrpcServerTlsConfigCaSecret",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecThanosGrpcServerTlsConfigCaSecret#key",
            },
            "remarks": "Must be a valid secret key.",
            "summary": "The key of the secret to select from.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 23224,
          },
          "name": "key",
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecThanosGrpcServerTlsConfigCaSecret#name",
            },
            "remarks": "More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?",
            "summary": "Name of the referent.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 23231,
          },
          "name": "name",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecThanosGrpcServerTlsConfigCaSecret#optional",
            },
            "summary": "Specify whether the Secret or its key must be defined.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 23238,
          },
          "name": "optional",
          "optional": true,
          "type": Object {
            "primitive": "boolean",
          },
        },
      ],
    },
    "monitoringcoreoscom.PrometheusSpecThanosGrpcServerTlsConfigCert": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "PrometheusSpecThanosGrpcServerTlsConfigCert",
        },
        "summary": "Struct containing the client cert file for the targets.",
      },
      "fqn": "monitoringcoreoscom.PrometheusSpecThanosGrpcServerTlsConfigCert",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 20297,
      },
      "name": "PrometheusSpecThanosGrpcServerTlsConfigCert",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecThanosGrpcServerTlsConfigCert#configMap",
            },
            "summary": "ConfigMap containing data to use for the targets.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 20303,
          },
          "name": "configMap",
          "optional": true,
          "type": Object {
            "fqn": "monitoringcoreoscom.PrometheusSpecThanosGrpcServerTlsConfigCertConfigMap",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecThanosGrpcServerTlsConfigCert#secret",
            },
            "summary": "Secret containing data to use for the targets.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 20310,
          },
          "name": "secret",
          "optional": true,
          "type": Object {
            "fqn": "monitoringcoreoscom.PrometheusSpecThanosGrpcServerTlsConfigCertSecret",
          },
        },
      ],
    },
    "monitoringcoreoscom.PrometheusSpecThanosGrpcServerTlsConfigCertConfigMap": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "PrometheusSpecThanosGrpcServerTlsConfigCertConfigMap",
        },
        "summary": "ConfigMap containing data to use for the targets.",
      },
      "fqn": "monitoringcoreoscom.PrometheusSpecThanosGrpcServerTlsConfigCertConfigMap",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 23263,
      },
      "name": "PrometheusSpecThanosGrpcServerTlsConfigCertConfigMap",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecThanosGrpcServerTlsConfigCertConfigMap#key",
            },
            "summary": "The key to select.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 23269,
          },
          "name": "key",
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecThanosGrpcServerTlsConfigCertConfigMap#name",
            },
            "remarks": "More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?",
            "summary": "Name of the referent.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 23276,
          },
          "name": "name",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecThanosGrpcServerTlsConfigCertConfigMap#optional",
            },
            "summary": "Specify whether the ConfigMap or its key must be defined.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 23283,
          },
          "name": "optional",
          "optional": true,
          "type": Object {
            "primitive": "boolean",
          },
        },
      ],
    },
    "monitoringcoreoscom.PrometheusSpecThanosGrpcServerTlsConfigCertSecret": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "PrometheusSpecThanosGrpcServerTlsConfigCertSecret",
        },
        "summary": "Secret containing data to use for the targets.",
      },
      "fqn": "monitoringcoreoscom.PrometheusSpecThanosGrpcServerTlsConfigCertSecret",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 23308,
      },
      "name": "PrometheusSpecThanosGrpcServerTlsConfigCertSecret",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecThanosGrpcServerTlsConfigCertSecret#key",
            },
            "remarks": "Must be a valid secret key.",
            "summary": "The key of the secret to select from.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 23314,
          },
          "name": "key",
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecThanosGrpcServerTlsConfigCertSecret#name",
            },
            "remarks": "More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?",
            "summary": "Name of the referent.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 23321,
          },
          "name": "name",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecThanosGrpcServerTlsConfigCertSecret#optional",
            },
            "summary": "Specify whether the Secret or its key must be defined.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 23328,
          },
          "name": "optional",
          "optional": true,
          "type": Object {
            "primitive": "boolean",
          },
        },
      ],
    },
    "monitoringcoreoscom.PrometheusSpecThanosGrpcServerTlsConfigKeySecret": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "PrometheusSpecThanosGrpcServerTlsConfigKeySecret",
        },
        "summary": "Secret containing the client key file for the targets.",
      },
      "fqn": "monitoringcoreoscom.PrometheusSpecThanosGrpcServerTlsConfigKeySecret",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 20334,
      },
      "name": "PrometheusSpecThanosGrpcServerTlsConfigKeySecret",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecThanosGrpcServerTlsConfigKeySecret#key",
            },
            "remarks": "Must be a valid secret key.",
            "summary": "The key of the secret to select from.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 20340,
          },
          "name": "key",
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecThanosGrpcServerTlsConfigKeySecret#name",
            },
            "remarks": "More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?",
            "summary": "Name of the referent.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 20347,
          },
          "name": "name",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecThanosGrpcServerTlsConfigKeySecret#optional",
            },
            "summary": "Specify whether the Secret or its key must be defined.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 20354,
          },
          "name": "optional",
          "optional": true,
          "type": Object {
            "primitive": "boolean",
          },
        },
      ],
    },
    "monitoringcoreoscom.PrometheusSpecThanosObjectStorageConfig": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "PrometheusSpecThanosObjectStorageConfig",
        },
        "summary": "ObjectStorageConfig configures object storage in Thanos.",
      },
      "fqn": "monitoringcoreoscom.PrometheusSpecThanosObjectStorageConfig",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 15946,
      },
      "name": "PrometheusSpecThanosObjectStorageConfig",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecThanosObjectStorageConfig#key",
            },
            "remarks": "Must be a valid secret key.",
            "summary": "The key of the secret to select from.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 15952,
          },
          "name": "key",
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecThanosObjectStorageConfig#name",
            },
            "remarks": "More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?",
            "summary": "Name of the referent.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 15959,
          },
          "name": "name",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecThanosObjectStorageConfig#optional",
            },
            "summary": "Specify whether the Secret or its key must be defined.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 15966,
          },
          "name": "optional",
          "optional": true,
          "type": Object {
            "primitive": "boolean",
          },
        },
      ],
    },
    "monitoringcoreoscom.PrometheusSpecThanosResources": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "PrometheusSpecThanosResources",
        },
        "remarks": "If not provided, no requests/limits will be set",
        "summary": "Resources defines the resource requirements for the Thanos sidecar.",
      },
      "fqn": "monitoringcoreoscom.PrometheusSpecThanosResources",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 15991,
      },
      "name": "PrometheusSpecThanosResources",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecThanosResources#limits",
            },
            "remarks": "More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/",
            "summary": "Limits describes the maximum amount of compute resources allowed.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 15997,
          },
          "name": "limits",
          "optional": true,
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "primitive": "string",
              },
              "kind": "map",
            },
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecThanosResources#requests",
            },
            "remarks": "If Requests is omitted for a container, it defaults to Limits if that is explicitly specified, otherwise to an implementation-defined value. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/",
            "summary": "Requests describes the minimum amount of compute resources required.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 16004,
          },
          "name": "requests",
          "optional": true,
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "primitive": "string",
              },
              "kind": "map",
            },
          },
        },
      ],
    },
    "monitoringcoreoscom.PrometheusSpecThanosTracingConfig": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "PrometheusSpecThanosTracingConfig",
        },
        "remarks": "This is an experimental feature, it may change in any upcoming release in a breaking way.",
        "summary": "TracingConfig configures tracing in Thanos.",
      },
      "fqn": "monitoringcoreoscom.PrometheusSpecThanosTracingConfig",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 16028,
      },
      "name": "PrometheusSpecThanosTracingConfig",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecThanosTracingConfig#key",
            },
            "remarks": "Must be a valid secret key.",
            "summary": "The key of the secret to select from.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 16034,
          },
          "name": "key",
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecThanosTracingConfig#name",
            },
            "remarks": "More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?",
            "summary": "Name of the referent.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 16041,
          },
          "name": "name",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecThanosTracingConfig#optional",
            },
            "summary": "Specify whether the Secret or its key must be defined.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 16048,
          },
          "name": "optional",
          "optional": true,
          "type": Object {
            "primitive": "boolean",
          },
        },
      ],
    },
    "monitoringcoreoscom.PrometheusSpecTolerations": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "PrometheusSpecTolerations",
        },
        "summary": "The pod this Toleration is attached to tolerates any taint that matches the triple <key,value,effect> using the matching operator <operator>.",
      },
      "fqn": "monitoringcoreoscom.PrometheusSpecTolerations",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 12782,
      },
      "name": "PrometheusSpecTolerations",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecTolerations#effect",
            },
            "remarks": "Empty means match all taint effects. When specified, allowed values are NoSchedule, PreferNoSchedule and NoExecute.",
            "summary": "Effect indicates the taint effect to match.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 12788,
          },
          "name": "effect",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecTolerations#key",
            },
            "remarks": "Empty means match all taint keys. If the key is empty, operator must be Exists; this combination means to match all values and all keys.",
            "summary": "Key is the taint key that the toleration applies to.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 12795,
          },
          "name": "key",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecTolerations#operator",
            },
            "default": "Equal. Exists is equivalent to wildcard for value, so that a pod can tolerate all taints of a particular category.",
            "remarks": "Valid operators are Exists and Equal. Defaults to Equal. Exists is equivalent to wildcard for value, so that a pod can tolerate all taints of a particular category.",
            "summary": "Operator represents a key's relationship to the value.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 12803,
          },
          "name": "operator",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecTolerations#tolerationSeconds",
            },
            "remarks": "By default, it is not set, which means tolerate the taint forever (do not evict). Zero and negative values will be treated as 0 (evict immediately) by the system.",
            "summary": "TolerationSeconds represents the period of time the toleration (which must be of effect NoExecute, otherwise this field is ignored) tolerates the taint.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 12810,
          },
          "name": "tolerationSeconds",
          "optional": true,
          "type": Object {
            "primitive": "number",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecTolerations#value",
            },
            "remarks": "If the operator is Exists, the value should be empty, otherwise just a regular string.",
            "summary": "Value is the taint value the toleration matches to.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 12817,
          },
          "name": "value",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
      ],
    },
    "monitoringcoreoscom.PrometheusSpecVolumeMounts": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "PrometheusSpecVolumeMounts",
        },
        "summary": "VolumeMount describes a mounting of a Volume within a container.",
      },
      "fqn": "monitoringcoreoscom.PrometheusSpecVolumeMounts",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 12844,
      },
      "name": "PrometheusSpecVolumeMounts",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecVolumeMounts#mountPath",
            },
            "remarks": "Must not contain ':'.",
            "summary": "Path within the container at which the volume should be mounted.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 12850,
          },
          "name": "mountPath",
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecVolumeMounts#name",
            },
            "summary": "This must match the Name of a Volume.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 12864,
          },
          "name": "name",
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecVolumeMounts#mountPropagation",
            },
            "remarks": "When not set, MountPropagationNone is used. This field is beta in 1.10.",
            "summary": "mountPropagation determines how mounts are propagated from the host to container and the other way around.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 12857,
          },
          "name": "mountPropagation",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecVolumeMounts#readOnly",
            },
            "default": "false.",
            "remarks": "Defaults to false.",
            "summary": "Mounted read-only if true, read-write otherwise (false or unspecified).",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 12872,
          },
          "name": "readOnly",
          "optional": true,
          "type": Object {
            "primitive": "boolean",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecVolumeMounts#subPath",
            },
            "default": "volume's root).",
            "remarks": "Defaults to \\"\\" (volume's root).",
            "summary": "Path within the volume from which the container's volume should be mounted.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 12880,
          },
          "name": "subPath",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecVolumeMounts#subPathExpr",
            },
            "default": "volume's root). SubPathExpr and SubPath are mutually exclusive.",
            "remarks": "Behaves similarly to SubPath but environment variable references $(VAR_NAME) are expanded using the container's environment. Defaults to \\"\\" (volume's root). SubPathExpr and SubPath are mutually exclusive.",
            "summary": "Expanded path within the volume from which the container's volume should be mounted.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 12888,
          },
          "name": "subPathExpr",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
      ],
    },
    "monitoringcoreoscom.PrometheusSpecVolumes": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "PrometheusSpecVolumes",
        },
        "summary": "Volume represents a named volume in a pod that may be accessed by any container in the pod.",
      },
      "fqn": "monitoringcoreoscom.PrometheusSpecVolumes",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 12916,
      },
      "name": "PrometheusSpecVolumes",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecVolumes#name",
            },
            "remarks": "Must be a DNS_LABEL and unique within the pod. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
            "summary": "Volume's name.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 13041,
          },
          "name": "name",
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecVolumes#awsElasticBlockStore",
            },
            "remarks": "More info: https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore",
            "summary": "AWSElasticBlockStore represents an AWS Disk resource that is attached to a kubelet's host machine and then exposed to the pod.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 12922,
          },
          "name": "awsElasticBlockStore",
          "optional": true,
          "type": Object {
            "fqn": "monitoringcoreoscom.PrometheusSpecVolumesAwsElasticBlockStore",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecVolumes#azureDisk",
            },
            "summary": "AzureDisk represents an Azure Data Disk mount on the host and bind mount to the pod.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 12929,
          },
          "name": "azureDisk",
          "optional": true,
          "type": Object {
            "fqn": "monitoringcoreoscom.PrometheusSpecVolumesAzureDisk",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecVolumes#azureFile",
            },
            "summary": "AzureFile represents an Azure File Service mount on the host and bind mount to the pod.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 12936,
          },
          "name": "azureFile",
          "optional": true,
          "type": Object {
            "fqn": "monitoringcoreoscom.PrometheusSpecVolumesAzureFile",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecVolumes#cephfs",
            },
            "summary": "CephFS represents a Ceph FS mount on the host that shares a pod's lifetime.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 12943,
          },
          "name": "cephfs",
          "optional": true,
          "type": Object {
            "fqn": "monitoringcoreoscom.PrometheusSpecVolumesCephfs",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecVolumes#cinder",
            },
            "remarks": "More info: https://examples.k8s.io/mysql-cinder-pd/README.md",
            "summary": "Cinder represents a cinder volume attached and mounted on kubelets host machine.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 12950,
          },
          "name": "cinder",
          "optional": true,
          "type": Object {
            "fqn": "monitoringcoreoscom.PrometheusSpecVolumesCinder",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecVolumes#configMap",
            },
            "summary": "ConfigMap represents a configMap that should populate this volume.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 12957,
          },
          "name": "configMap",
          "optional": true,
          "type": Object {
            "fqn": "monitoringcoreoscom.PrometheusSpecVolumesConfigMap",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecVolumes#csi",
            },
            "summary": "CSI (Container Storage Interface) represents storage that is handled by an external CSI driver (Alpha feature).",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 12964,
          },
          "name": "csi",
          "optional": true,
          "type": Object {
            "fqn": "monitoringcoreoscom.PrometheusSpecVolumesCsi",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecVolumes#downwardAPI",
            },
            "summary": "DownwardAPI represents downward API about the pod that should populate this volume.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 12971,
          },
          "name": "downwardApi",
          "optional": true,
          "type": Object {
            "fqn": "monitoringcoreoscom.PrometheusSpecVolumesDownwardApi",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecVolumes#emptyDir",
            },
            "remarks": "More info: https://kubernetes.io/docs/concepts/storage/volumes#emptydir",
            "summary": "EmptyDir represents a temporary directory that shares a pod's lifetime.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 12978,
          },
          "name": "emptyDir",
          "optional": true,
          "type": Object {
            "fqn": "monitoringcoreoscom.PrometheusSpecVolumesEmptyDir",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecVolumes#fc",
            },
            "summary": "FC represents a Fibre Channel resource that is attached to a kubelet's host machine and then exposed to the pod.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 12985,
          },
          "name": "fc",
          "optional": true,
          "type": Object {
            "fqn": "monitoringcoreoscom.PrometheusSpecVolumesFc",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecVolumes#flexVolume",
            },
            "summary": "FlexVolume represents a generic volume resource that is provisioned/attached using an exec based plugin.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 12992,
          },
          "name": "flexVolume",
          "optional": true,
          "type": Object {
            "fqn": "monitoringcoreoscom.PrometheusSpecVolumesFlexVolume",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecVolumes#flocker",
            },
            "remarks": "This depends on the Flocker control service being running",
            "summary": "Flocker represents a Flocker volume attached to a kubelet's host machine.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 12999,
          },
          "name": "flocker",
          "optional": true,
          "type": Object {
            "fqn": "monitoringcoreoscom.PrometheusSpecVolumesFlocker",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecVolumes#gcePersistentDisk",
            },
            "remarks": "More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk",
            "summary": "GCEPersistentDisk represents a GCE Disk resource that is attached to a kubelet's host machine and then exposed to the pod.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 13006,
          },
          "name": "gcePersistentDisk",
          "optional": true,
          "type": Object {
            "fqn": "monitoringcoreoscom.PrometheusSpecVolumesGcePersistentDisk",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecVolumes#gitRepo",
            },
            "remarks": "DEPRECATED: GitRepo is deprecated. To provision a container with a git repo, mount an EmptyDir into an InitContainer that clones the repo using git, then mount the EmptyDir into the Pod's container.",
            "summary": "GitRepo represents a git repository at a particular revision.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 13013,
          },
          "name": "gitRepo",
          "optional": true,
          "type": Object {
            "fqn": "monitoringcoreoscom.PrometheusSpecVolumesGitRepo",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecVolumes#glusterfs",
            },
            "remarks": "More info: https://examples.k8s.io/volumes/glusterfs/README.md",
            "summary": "Glusterfs represents a Glusterfs mount on the host that shares a pod's lifetime.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 13020,
          },
          "name": "glusterfs",
          "optional": true,
          "type": Object {
            "fqn": "monitoringcoreoscom.PrometheusSpecVolumesGlusterfs",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecVolumes#hostPath",
            },
            "remarks": "This is generally used for system agents or other privileged things that are allowed to see the host machine. Most containers will NOT need this. More info: https://kubernetes.io/docs/concepts/storage/volumes#hostpath --- TODO(jonesdl) We need to restrict who can use host directory mounts and who can/can not mount host directories as read/write.",
            "summary": "HostPath represents a pre-existing file or directory on the host machine that is directly exposed to the container.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 13027,
          },
          "name": "hostPath",
          "optional": true,
          "type": Object {
            "fqn": "monitoringcoreoscom.PrometheusSpecVolumesHostPath",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecVolumes#iscsi",
            },
            "remarks": "More info: https://examples.k8s.io/volumes/iscsi/README.md",
            "summary": "ISCSI represents an ISCSI Disk resource that is attached to a kubelet's host machine and then exposed to the pod.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 13034,
          },
          "name": "iscsi",
          "optional": true,
          "type": Object {
            "fqn": "monitoringcoreoscom.PrometheusSpecVolumesIscsi",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecVolumes#nfs",
            },
            "summary": "NFS represents an NFS mount on the host that shares a pod's lifetime More info: https://kubernetes.io/docs/concepts/storage/volumes#nfs.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 13048,
          },
          "name": "nfs",
          "optional": true,
          "type": Object {
            "fqn": "monitoringcoreoscom.PrometheusSpecVolumesNfs",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecVolumes#persistentVolumeClaim",
            },
            "remarks": "More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims",
            "summary": "PersistentVolumeClaimVolumeSource represents a reference to a PersistentVolumeClaim in the same namespace.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 13055,
          },
          "name": "persistentVolumeClaim",
          "optional": true,
          "type": Object {
            "fqn": "monitoringcoreoscom.PrometheusSpecVolumesPersistentVolumeClaim",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecVolumes#photonPersistentDisk",
            },
            "summary": "PhotonPersistentDisk represents a PhotonController persistent disk attached and mounted on kubelets host machine.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 13062,
          },
          "name": "photonPersistentDisk",
          "optional": true,
          "type": Object {
            "fqn": "monitoringcoreoscom.PrometheusSpecVolumesPhotonPersistentDisk",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecVolumes#portworxVolume",
            },
            "summary": "PortworxVolume represents a portworx volume attached and mounted on kubelets host machine.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 13069,
          },
          "name": "portworxVolume",
          "optional": true,
          "type": Object {
            "fqn": "monitoringcoreoscom.PrometheusSpecVolumesPortworxVolume",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecVolumes#projected",
            },
            "summary": "Items for all in one resources secrets, configmaps, and downward API.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 13076,
          },
          "name": "projected",
          "optional": true,
          "type": Object {
            "fqn": "monitoringcoreoscom.PrometheusSpecVolumesProjected",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecVolumes#quobyte",
            },
            "summary": "Quobyte represents a Quobyte mount on the host that shares a pod's lifetime.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 13083,
          },
          "name": "quobyte",
          "optional": true,
          "type": Object {
            "fqn": "monitoringcoreoscom.PrometheusSpecVolumesQuobyte",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecVolumes#rbd",
            },
            "remarks": "More info: https://examples.k8s.io/volumes/rbd/README.md",
            "summary": "RBD represents a Rados Block Device mount on the host that shares a pod's lifetime.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 13090,
          },
          "name": "rbd",
          "optional": true,
          "type": Object {
            "fqn": "monitoringcoreoscom.PrometheusSpecVolumesRbd",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecVolumes#scaleIO",
            },
            "summary": "ScaleIO represents a ScaleIO persistent volume attached and mounted on Kubernetes nodes.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 13097,
          },
          "name": "scaleIo",
          "optional": true,
          "type": Object {
            "fqn": "monitoringcoreoscom.PrometheusSpecVolumesScaleIo",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecVolumes#secret",
            },
            "remarks": "More info: https://kubernetes.io/docs/concepts/storage/volumes#secret",
            "summary": "Secret represents a secret that should populate this volume.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 13104,
          },
          "name": "secret",
          "optional": true,
          "type": Object {
            "fqn": "monitoringcoreoscom.PrometheusSpecVolumesSecret",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecVolumes#storageos",
            },
            "summary": "StorageOS represents a StorageOS volume attached and mounted on Kubernetes nodes.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 13111,
          },
          "name": "storageos",
          "optional": true,
          "type": Object {
            "fqn": "monitoringcoreoscom.PrometheusSpecVolumesStorageos",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecVolumes#vsphereVolume",
            },
            "summary": "VsphereVolume represents a vSphere volume attached and mounted on kubelets host machine.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 13118,
          },
          "name": "vsphereVolume",
          "optional": true,
          "type": Object {
            "fqn": "monitoringcoreoscom.PrometheusSpecVolumesVsphereVolume",
          },
        },
      ],
    },
    "monitoringcoreoscom.PrometheusSpecVolumesAwsElasticBlockStore": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "PrometheusSpecVolumesAwsElasticBlockStore",
        },
        "remarks": "More info: https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore",
        "summary": "AWSElasticBlockStore represents an AWS Disk resource that is attached to a kubelet's host machine and then exposed to the pod.",
      },
      "fqn": "monitoringcoreoscom.PrometheusSpecVolumesAwsElasticBlockStore",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 16073,
      },
      "name": "PrometheusSpecVolumesAwsElasticBlockStore",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecVolumesAwsElasticBlockStore#volumeID",
            },
            "remarks": "More info: https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore",
            "summary": "Unique ID of the persistent disk resource in AWS (Amazon EBS volume).",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 16100,
          },
          "name": "volumeId",
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecVolumesAwsElasticBlockStore#fsType",
            },
            "remarks": "Tip: Ensure that the filesystem type is supported by the host operating system. Examples: \\"ext4\\", \\"xfs\\", \\"ntfs\\". Implicitly inferred to be \\"ext4\\" if unspecified. More info: https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore TODO: how do we prevent errors in the filesystem from compromising the machine",
            "summary": "Filesystem type of the volume that you want to mount.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 16079,
          },
          "name": "fsType",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecVolumesAwsElasticBlockStore#partition",
            },
            "remarks": "If omitted, the default is to mount by volume name. Examples: For volume /dev/sda1, you specify the partition as \\"1\\". Similarly, the volume partition for /dev/sda is \\"0\\" (or you can leave the property empty).",
            "summary": "The partition in the volume that you want to mount.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 16086,
          },
          "name": "partition",
          "optional": true,
          "type": Object {
            "primitive": "number",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecVolumesAwsElasticBlockStore#readOnly",
            },
            "remarks": "If omitted, the default is \\"false\\". More info: https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore",
            "summary": "Specify \\"true\\" to force and set the ReadOnly property in VolumeMounts to \\"true\\".",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 16093,
          },
          "name": "readOnly",
          "optional": true,
          "type": Object {
            "primitive": "boolean",
          },
        },
      ],
    },
    "monitoringcoreoscom.PrometheusSpecVolumesAzureDisk": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "PrometheusSpecVolumesAzureDisk",
        },
        "summary": "AzureDisk represents an Azure Data Disk mount on the host and bind mount to the pod.",
      },
      "fqn": "monitoringcoreoscom.PrometheusSpecVolumesAzureDisk",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 16126,
      },
      "name": "PrometheusSpecVolumesAzureDisk",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecVolumesAzureDisk#diskName",
            },
            "summary": "The Name of the data disk in the blob storage.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 16139,
          },
          "name": "diskName",
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecVolumesAzureDisk#diskURI",
            },
            "summary": "The URI the data disk in the blob storage.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 16146,
          },
          "name": "diskUri",
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecVolumesAzureDisk#cachingMode",
            },
            "summary": "Host Caching mode: None, Read Only, Read Write.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 16132,
          },
          "name": "cachingMode",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecVolumesAzureDisk#fsType",
            },
            "remarks": "Must be a filesystem type supported by the host operating system. Ex. \\"ext4\\", \\"xfs\\", \\"ntfs\\". Implicitly inferred to be \\"ext4\\" if unspecified.",
            "summary": "Filesystem type to mount.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 16153,
          },
          "name": "fsType",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecVolumesAzureDisk#kind",
            },
            "remarks": "defaults to shared",
            "summary": "Expected values Shared: multiple blob disks per storage account  Dedicated: single blob disk per storage account  Managed: azure managed data disk (only in managed availability set).",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 16160,
          },
          "name": "kind",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecVolumesAzureDisk#readOnly",
            },
            "default": "false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts.",
            "remarks": "ReadOnly here will force the ReadOnly setting in VolumeMounts.",
            "summary": "Defaults to false (read/write).",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 16168,
          },
          "name": "readOnly",
          "optional": true,
          "type": Object {
            "primitive": "boolean",
          },
        },
      ],
    },
    "monitoringcoreoscom.PrometheusSpecVolumesAzureFile": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "PrometheusSpecVolumesAzureFile",
        },
        "summary": "AzureFile represents an Azure File Service mount on the host and bind mount to the pod.",
      },
      "fqn": "monitoringcoreoscom.PrometheusSpecVolumesAzureFile",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 16196,
      },
      "name": "PrometheusSpecVolumesAzureFile",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecVolumesAzureFile#secretName",
            },
            "summary": "the name of secret that contains Azure Storage Account Name and Key.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 16210,
          },
          "name": "secretName",
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecVolumesAzureFile#shareName",
            },
            "summary": "Share Name.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 16217,
          },
          "name": "shareName",
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecVolumesAzureFile#readOnly",
            },
            "default": "false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts.",
            "remarks": "ReadOnly here will force the ReadOnly setting in VolumeMounts.",
            "summary": "Defaults to false (read/write).",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 16203,
          },
          "name": "readOnly",
          "optional": true,
          "type": Object {
            "primitive": "boolean",
          },
        },
      ],
    },
    "monitoringcoreoscom.PrometheusSpecVolumesCephfs": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "PrometheusSpecVolumesCephfs",
        },
        "summary": "CephFS represents a Ceph FS mount on the host that shares a pod's lifetime.",
      },
      "fqn": "monitoringcoreoscom.PrometheusSpecVolumesCephfs",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 16242,
      },
      "name": "PrometheusSpecVolumesCephfs",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecVolumesCephfs#monitors",
            },
            "summary": "Required: Monitors is a collection of Ceph monitors More info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 16248,
          },
          "name": "monitors",
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "primitive": "string",
              },
              "kind": "array",
            },
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecVolumesCephfs#path",
            },
            "summary": "Optional: Used as the mounted root, rather than the full Ceph tree, default is /.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 16255,
          },
          "name": "path",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecVolumesCephfs#readOnly",
            },
            "default": "false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts. More info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it",
            "remarks": "ReadOnly here will force the ReadOnly setting in VolumeMounts. More info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it",
            "summary": "Optional: Defaults to false (read/write).",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 16263,
          },
          "name": "readOnly",
          "optional": true,
          "type": Object {
            "primitive": "boolean",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecVolumesCephfs#secretFile",
            },
            "summary": "Optional: SecretFile is the path to key ring for User, default is /etc/ceph/user.secret More info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 16270,
          },
          "name": "secretFile",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecVolumesCephfs#secretRef",
            },
            "remarks": "More info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it",
            "summary": "Optional: SecretRef is reference to the authentication secret for User, default is empty.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 16277,
          },
          "name": "secretRef",
          "optional": true,
          "type": Object {
            "fqn": "monitoringcoreoscom.PrometheusSpecVolumesCephfsSecretRef",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecVolumesCephfs#user",
            },
            "summary": "Optional: User is the rados user name, default is admin More info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 16284,
          },
          "name": "user",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
      ],
    },
    "monitoringcoreoscom.PrometheusSpecVolumesCephfsSecretRef": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "PrometheusSpecVolumesCephfsSecretRef",
        },
        "remarks": "More info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it",
        "summary": "Optional: SecretRef is reference to the authentication secret for User, default is empty.",
      },
      "fqn": "monitoringcoreoscom.PrometheusSpecVolumesCephfsSecretRef",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 20379,
      },
      "name": "PrometheusSpecVolumesCephfsSecretRef",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecVolumesCephfsSecretRef#name",
            },
            "remarks": "More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?",
            "summary": "Name of the referent.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 20385,
          },
          "name": "name",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
      ],
    },
    "monitoringcoreoscom.PrometheusSpecVolumesCinder": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "PrometheusSpecVolumesCinder",
        },
        "remarks": "More info: https://examples.k8s.io/mysql-cinder-pd/README.md",
        "summary": "Cinder represents a cinder volume attached and mounted on kubelets host machine.",
      },
      "fqn": "monitoringcoreoscom.PrometheusSpecVolumesCinder",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 16312,
      },
      "name": "PrometheusSpecVolumesCinder",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecVolumesCinder#volumeID",
            },
            "remarks": "More info: https://examples.k8s.io/mysql-cinder-pd/README.md",
            "summary": "volume id used to identify the volume in cinder.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 16340,
          },
          "name": "volumeId",
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecVolumesCinder#fsType",
            },
            "remarks": "Must be a filesystem type supported by the host operating system. Examples: \\"ext4\\", \\"xfs\\", \\"ntfs\\". Implicitly inferred to be \\"ext4\\" if unspecified. More info: https://examples.k8s.io/mysql-cinder-pd/README.md",
            "summary": "Filesystem type to mount.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 16318,
          },
          "name": "fsType",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecVolumesCinder#readOnly",
            },
            "default": "false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts. More info: https://examples.k8s.io/mysql-cinder-pd/README.md",
            "remarks": "ReadOnly here will force the ReadOnly setting in VolumeMounts. More info: https://examples.k8s.io/mysql-cinder-pd/README.md",
            "summary": "Optional: Defaults to false (read/write).",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 16326,
          },
          "name": "readOnly",
          "optional": true,
          "type": Object {
            "primitive": "boolean",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecVolumesCinder#secretRef",
            },
            "summary": "Optional: points to a secret object containing parameters used to connect to OpenStack.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 16333,
          },
          "name": "secretRef",
          "optional": true,
          "type": Object {
            "fqn": "monitoringcoreoscom.PrometheusSpecVolumesCinderSecretRef",
          },
        },
      ],
    },
    "monitoringcoreoscom.PrometheusSpecVolumesCinderSecretRef": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "PrometheusSpecVolumesCinderSecretRef",
        },
        "summary": "Optional: points to a secret object containing parameters used to connect to OpenStack.",
      },
      "fqn": "monitoringcoreoscom.PrometheusSpecVolumesCinderSecretRef",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 20408,
      },
      "name": "PrometheusSpecVolumesCinderSecretRef",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecVolumesCinderSecretRef#name",
            },
            "remarks": "More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?",
            "summary": "Name of the referent.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 20414,
          },
          "name": "name",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
      ],
    },
    "monitoringcoreoscom.PrometheusSpecVolumesConfigMap": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "PrometheusSpecVolumesConfigMap",
        },
        "summary": "ConfigMap represents a configMap that should populate this volume.",
      },
      "fqn": "monitoringcoreoscom.PrometheusSpecVolumesConfigMap",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 16366,
      },
      "name": "PrometheusSpecVolumesConfigMap",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecVolumesConfigMap#defaultMode",
            },
            "default": "0644. Directories within the path are not affected by this setting. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.",
            "remarks": "Must be a value between 0 and 0777. Defaults to 0644. Directories within the path are not affected by this setting. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.",
            "summary": "Optional: mode bits to use on created files by default.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 16373,
          },
          "name": "defaultMode",
          "optional": true,
          "type": Object {
            "primitive": "number",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecVolumesConfigMap#items",
            },
            "remarks": "If specified, the listed keys will be projected into the specified paths, and unlisted keys will not be present. If a key is specified which is not present in the ConfigMap, the volume setup will error unless it is marked optional. Paths must be relative and may not contain the '..' path or start with '..'.",
            "summary": "If unspecified, each key-value pair in the Data field of the referenced ConfigMap will be projected into the volume as a file whose name is the key and content is the value.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 16380,
          },
          "name": "items",
          "optional": true,
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "fqn": "monitoringcoreoscom.PrometheusSpecVolumesConfigMapItems",
              },
              "kind": "array",
            },
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecVolumesConfigMap#name",
            },
            "remarks": "More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?",
            "summary": "Name of the referent.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 16387,
          },
          "name": "name",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecVolumesConfigMap#optional",
            },
            "summary": "Specify whether the ConfigMap or its keys must be defined.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 16394,
          },
          "name": "optional",
          "optional": true,
          "type": Object {
            "primitive": "boolean",
          },
        },
      ],
    },
    "monitoringcoreoscom.PrometheusSpecVolumesConfigMapItems": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "PrometheusSpecVolumesConfigMapItems",
        },
        "summary": "Maps a string key to a path within a volume.",
      },
      "fqn": "monitoringcoreoscom.PrometheusSpecVolumesConfigMapItems",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 20437,
      },
      "name": "PrometheusSpecVolumesConfigMapItems",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecVolumesConfigMapItems#key",
            },
            "summary": "The key to project.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 20443,
          },
          "name": "key",
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecVolumesConfigMapItems#path",
            },
            "remarks": "May not be an absolute path. May not contain the path element '..'. May not start with the string '..'.",
            "summary": "The relative path of the file to map the key to.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 20457,
          },
          "name": "path",
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecVolumesConfigMapItems#mode",
            },
            "remarks": "If not specified, the volume defaultMode will be used. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.",
            "summary": "Optional: mode bits to use on this file, must be a value between 0 and 0777.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 20450,
          },
          "name": "mode",
          "optional": true,
          "type": Object {
            "primitive": "number",
          },
        },
      ],
    },
    "monitoringcoreoscom.PrometheusSpecVolumesCsi": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "PrometheusSpecVolumesCsi",
        },
        "summary": "CSI (Container Storage Interface) represents storage that is handled by an external CSI driver (Alpha feature).",
      },
      "fqn": "monitoringcoreoscom.PrometheusSpecVolumesCsi",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 16420,
      },
      "name": "PrometheusSpecVolumesCsi",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecVolumesCsi#driver",
            },
            "remarks": "Consult with your admin for the correct name as registered in the cluster.",
            "summary": "Driver is the name of the CSI driver that handles this volume.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 16426,
          },
          "name": "driver",
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecVolumesCsi#fsType",
            },
            "remarks": "Ex. \\"ext4\\", \\"xfs\\", \\"ntfs\\". If not provided, the empty value is passed to the associated CSI driver which will determine the default filesystem to apply.",
            "summary": "Filesystem type to mount.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 16433,
          },
          "name": "fsType",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecVolumesCsi#nodePublishSecretRef",
            },
            "remarks": "This field is optional, and  may be empty if no secret is required. If the secret object contains more than one secret, all secret references are passed.",
            "summary": "NodePublishSecretRef is a reference to the secret object containing sensitive information to pass to the CSI driver to complete the CSI NodePublishVolume and NodeUnpublishVolume calls.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 16440,
          },
          "name": "nodePublishSecretRef",
          "optional": true,
          "type": Object {
            "fqn": "monitoringcoreoscom.PrometheusSpecVolumesCsiNodePublishSecretRef",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecVolumesCsi#readOnly",
            },
            "default": "false (read/write).",
            "remarks": "Defaults to false (read/write).",
            "summary": "Specifies a read-only configuration for the volume.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 16448,
          },
          "name": "readOnly",
          "optional": true,
          "type": Object {
            "primitive": "boolean",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecVolumesCsi#volumeAttributes",
            },
            "remarks": "Consult your driver's documentation for supported values.",
            "summary": "VolumeAttributes stores driver-specific properties that are passed to the CSI driver.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 16455,
          },
          "name": "volumeAttributes",
          "optional": true,
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "primitive": "string",
              },
              "kind": "map",
            },
          },
        },
      ],
    },
    "monitoringcoreoscom.PrometheusSpecVolumesCsiNodePublishSecretRef": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "PrometheusSpecVolumesCsiNodePublishSecretRef",
        },
        "remarks": "This field is optional, and  may be empty if no secret is required. If the secret object contains more than one secret, all secret references are passed.",
        "summary": "NodePublishSecretRef is a reference to the secret object containing sensitive information to pass to the CSI driver to complete the CSI NodePublishVolume and NodeUnpublishVolume calls.",
      },
      "fqn": "monitoringcoreoscom.PrometheusSpecVolumesCsiNodePublishSecretRef",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 20482,
      },
      "name": "PrometheusSpecVolumesCsiNodePublishSecretRef",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecVolumesCsiNodePublishSecretRef#name",
            },
            "remarks": "More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?",
            "summary": "Name of the referent.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 20488,
          },
          "name": "name",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
      ],
    },
    "monitoringcoreoscom.PrometheusSpecVolumesDownwardApi": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "PrometheusSpecVolumesDownwardApi",
        },
        "summary": "DownwardAPI represents downward API about the pod that should populate this volume.",
      },
      "fqn": "monitoringcoreoscom.PrometheusSpecVolumesDownwardApi",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 16482,
      },
      "name": "PrometheusSpecVolumesDownwardApi",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecVolumesDownwardApi#defaultMode",
            },
            "default": "0644. Directories within the path are not affected by this setting. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.",
            "remarks": "Must be a value between 0 and 0777. Defaults to 0644. Directories within the path are not affected by this setting. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.",
            "summary": "Optional: mode bits to use on created files by default.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 16489,
          },
          "name": "defaultMode",
          "optional": true,
          "type": Object {
            "primitive": "number",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecVolumesDownwardApi#items",
            },
            "summary": "Items is a list of downward API volume file.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 16496,
          },
          "name": "items",
          "optional": true,
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "fqn": "monitoringcoreoscom.PrometheusSpecVolumesDownwardApiItems",
              },
              "kind": "array",
            },
          },
        },
      ],
    },
    "monitoringcoreoscom.PrometheusSpecVolumesDownwardApiItems": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "PrometheusSpecVolumesDownwardApiItems",
        },
        "summary": "DownwardAPIVolumeFile represents information to create the file containing the pod field.",
      },
      "fqn": "monitoringcoreoscom.PrometheusSpecVolumesDownwardApiItems",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 20511,
      },
      "name": "PrometheusSpecVolumesDownwardApiItems",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecVolumesDownwardApiItems#path",
            },
            "remarks": "Must not be absolute or contain the '..' path. Must be utf-8 encoded. The first item of the relative path must not start with '..'",
            "summary": "Required: Path is  the relative path name of the file to be created.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 20531,
          },
          "name": "path",
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecVolumesDownwardApiItems#fieldRef",
            },
            "summary": "Required: Selects a field of the pod: only annotations, labels, name and namespace are supported.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 20517,
          },
          "name": "fieldRef",
          "optional": true,
          "type": Object {
            "fqn": "monitoringcoreoscom.PrometheusSpecVolumesDownwardApiItemsFieldRef",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecVolumesDownwardApiItems#mode",
            },
            "remarks": "If not specified, the volume defaultMode will be used. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.",
            "summary": "Optional: mode bits to use on this file, must be a value between 0 and 0777.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 20524,
          },
          "name": "mode",
          "optional": true,
          "type": Object {
            "primitive": "number",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecVolumesDownwardApiItems#resourceFieldRef",
            },
            "summary": "Selects a resource of the container: only resources limits and requests (limits.cpu, limits.memory, requests.cpu and requests.memory) are currently supported.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 20538,
          },
          "name": "resourceFieldRef",
          "optional": true,
          "type": Object {
            "fqn": "monitoringcoreoscom.PrometheusSpecVolumesDownwardApiItemsResourceFieldRef",
          },
        },
      ],
    },
    "monitoringcoreoscom.PrometheusSpecVolumesDownwardApiItemsFieldRef": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "PrometheusSpecVolumesDownwardApiItemsFieldRef",
        },
        "summary": "Required: Selects a field of the pod: only annotations, labels, name and namespace are supported.",
      },
      "fqn": "monitoringcoreoscom.PrometheusSpecVolumesDownwardApiItemsFieldRef",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 23353,
      },
      "name": "PrometheusSpecVolumesDownwardApiItemsFieldRef",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecVolumesDownwardApiItemsFieldRef#fieldPath",
            },
            "summary": "Path of the field to select in the specified API version.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 23366,
          },
          "name": "fieldPath",
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecVolumesDownwardApiItemsFieldRef#apiVersion",
            },
            "summary": "Version of the schema the FieldPath is written in terms of, defaults to \\"v1\\".",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 23359,
          },
          "name": "apiVersion",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
      ],
    },
    "monitoringcoreoscom.PrometheusSpecVolumesDownwardApiItemsResourceFieldRef": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "PrometheusSpecVolumesDownwardApiItemsResourceFieldRef",
        },
        "summary": "Selects a resource of the container: only resources limits and requests (limits.cpu, limits.memory, requests.cpu and requests.memory) are currently supported.",
      },
      "fqn": "monitoringcoreoscom.PrometheusSpecVolumesDownwardApiItemsResourceFieldRef",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 23390,
      },
      "name": "PrometheusSpecVolumesDownwardApiItemsResourceFieldRef",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecVolumesDownwardApiItemsResourceFieldRef#resource",
            },
            "summary": "Required: resource to select.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 23410,
          },
          "name": "resource",
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecVolumesDownwardApiItemsResourceFieldRef#containerName",
            },
            "summary": "Container name: required for volumes, optional for env vars.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 23396,
          },
          "name": "containerName",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecVolumesDownwardApiItemsResourceFieldRef#divisor",
            },
            "summary": "Specifies the output format of the exposed resources, defaults to \\"1\\".",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 23403,
          },
          "name": "divisor",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
      ],
    },
    "monitoringcoreoscom.PrometheusSpecVolumesEmptyDir": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "PrometheusSpecVolumesEmptyDir",
        },
        "remarks": "More info: https://kubernetes.io/docs/concepts/storage/volumes#emptydir",
        "summary": "EmptyDir represents a temporary directory that shares a pod's lifetime.",
      },
      "fqn": "monitoringcoreoscom.PrometheusSpecVolumesEmptyDir",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 16520,
      },
      "name": "PrometheusSpecVolumesEmptyDir",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecVolumesEmptyDir#medium",
            },
            "remarks": "The default is \\"\\" which means to use the node's default medium. Must be an empty string (default) or Memory. More info: https://kubernetes.io/docs/concepts/storage/volumes#emptydir",
            "summary": "What type of storage medium should back this directory.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 16526,
          },
          "name": "medium",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecVolumesEmptyDir#sizeLimit",
            },
            "remarks": "The size limit is also applicable for memory medium. The maximum usage on memory medium EmptyDir would be the minimum value between the SizeLimit specified here and the sum of memory limits of all containers in a pod. The default is nil which means that the limit is undefined. More info: http://kubernetes.io/docs/user-guide/volumes#emptydir",
            "summary": "Total amount of local storage required for this EmptyDir volume.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 16533,
          },
          "name": "sizeLimit",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
      ],
    },
    "monitoringcoreoscom.PrometheusSpecVolumesFc": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "PrometheusSpecVolumesFc",
        },
        "summary": "FC represents a Fibre Channel resource that is attached to a kubelet's host machine and then exposed to the pod.",
      },
      "fqn": "monitoringcoreoscom.PrometheusSpecVolumesFc",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 16557,
      },
      "name": "PrometheusSpecVolumesFc",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecVolumesFc#fsType",
            },
            "remarks": "Must be a filesystem type supported by the host operating system. Ex. \\"ext4\\", \\"xfs\\", \\"ntfs\\". Implicitly inferred to be \\"ext4\\" if unspecified. TODO: how do we prevent errors in the filesystem from compromising the machine",
            "summary": "Filesystem type to mount.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 16563,
          },
          "name": "fsType",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecVolumesFc#lun",
            },
            "summary": "Optional: FC target lun number.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 16570,
          },
          "name": "lun",
          "optional": true,
          "type": Object {
            "primitive": "number",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecVolumesFc#readOnly",
            },
            "default": "false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts.",
            "remarks": "ReadOnly here will force the ReadOnly setting in VolumeMounts.",
            "summary": "Optional: Defaults to false (read/write).",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 16578,
          },
          "name": "readOnly",
          "optional": true,
          "type": Object {
            "primitive": "boolean",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecVolumesFc#targetWWNs",
            },
            "summary": "Optional: FC target worldwide names (WWNs).",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 16585,
          },
          "name": "targetWwNs",
          "optional": true,
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "primitive": "string",
              },
              "kind": "array",
            },
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecVolumesFc#wwids",
            },
            "summary": "Optional: FC volume world wide identifiers (wwids) Either wwids or combination of targetWWNs and lun must be set, but not both simultaneously.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 16592,
          },
          "name": "wwids",
          "optional": true,
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "primitive": "string",
              },
              "kind": "array",
            },
          },
        },
      ],
    },
    "monitoringcoreoscom.PrometheusSpecVolumesFlexVolume": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "PrometheusSpecVolumesFlexVolume",
        },
        "summary": "FlexVolume represents a generic volume resource that is provisioned/attached using an exec based plugin.",
      },
      "fqn": "monitoringcoreoscom.PrometheusSpecVolumesFlexVolume",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 16619,
      },
      "name": "PrometheusSpecVolumesFlexVolume",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecVolumesFlexVolume#driver",
            },
            "summary": "Driver is the name of the driver to use for this volume.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 16625,
          },
          "name": "driver",
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecVolumesFlexVolume#fsType",
            },
            "remarks": "Must be a filesystem type supported by the host operating system. Ex. \\"ext4\\", \\"xfs\\", \\"ntfs\\". The default filesystem depends on FlexVolume script.",
            "summary": "Filesystem type to mount.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 16632,
          },
          "name": "fsType",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecVolumesFlexVolume#options",
            },
            "summary": "Optional: Extra command options if any.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 16639,
          },
          "name": "options",
          "optional": true,
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "primitive": "string",
              },
              "kind": "map",
            },
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecVolumesFlexVolume#readOnly",
            },
            "default": "false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts.",
            "remarks": "ReadOnly here will force the ReadOnly setting in VolumeMounts.",
            "summary": "Optional: Defaults to false (read/write).",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 16647,
          },
          "name": "readOnly",
          "optional": true,
          "type": Object {
            "primitive": "boolean",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecVolumesFlexVolume#secretRef",
            },
            "remarks": "This may be empty if no secret object is specified. If the secret object contains more than one secret, all secrets are passed to the plugin scripts.",
            "summary": "Optional: SecretRef is reference to the secret object containing sensitive information to pass to the plugin scripts.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 16654,
          },
          "name": "secretRef",
          "optional": true,
          "type": Object {
            "fqn": "monitoringcoreoscom.PrometheusSpecVolumesFlexVolumeSecretRef",
          },
        },
      ],
    },
    "monitoringcoreoscom.PrometheusSpecVolumesFlexVolumeSecretRef": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "PrometheusSpecVolumesFlexVolumeSecretRef",
        },
        "remarks": "This may be empty if no secret object is specified. If the secret object contains more than one secret, all secrets are passed to the plugin scripts.",
        "summary": "Optional: SecretRef is reference to the secret object containing sensitive information to pass to the plugin scripts.",
      },
      "fqn": "monitoringcoreoscom.PrometheusSpecVolumesFlexVolumeSecretRef",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 20564,
      },
      "name": "PrometheusSpecVolumesFlexVolumeSecretRef",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecVolumesFlexVolumeSecretRef#name",
            },
            "remarks": "More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?",
            "summary": "Name of the referent.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 20570,
          },
          "name": "name",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
      ],
    },
    "monitoringcoreoscom.PrometheusSpecVolumesFlocker": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "PrometheusSpecVolumesFlocker",
        },
        "remarks": "This depends on the Flocker control service being running",
        "summary": "Flocker represents a Flocker volume attached to a kubelet's host machine.",
      },
      "fqn": "monitoringcoreoscom.PrometheusSpecVolumesFlocker",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 16681,
      },
      "name": "PrometheusSpecVolumesFlocker",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecVolumesFlocker#datasetName",
            },
            "summary": "Name of the dataset stored as metadata -> name on the dataset for Flocker should be considered as deprecated.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 16687,
          },
          "name": "datasetName",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecVolumesFlocker#datasetUUID",
            },
            "remarks": "This is unique identifier of a Flocker dataset",
            "summary": "UUID of the dataset.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 16694,
          },
          "name": "datasetUuid",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
      ],
    },
    "monitoringcoreoscom.PrometheusSpecVolumesGcePersistentDisk": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "PrometheusSpecVolumesGcePersistentDisk",
        },
        "remarks": "More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk",
        "summary": "GCEPersistentDisk represents a GCE Disk resource that is attached to a kubelet's host machine and then exposed to the pod.",
      },
      "fqn": "monitoringcoreoscom.PrometheusSpecVolumesGcePersistentDisk",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 16718,
      },
      "name": "PrometheusSpecVolumesGcePersistentDisk",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecVolumesGcePersistentDisk#pdName",
            },
            "remarks": "Used to identify the disk in GCE. More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk",
            "summary": "Unique name of the PD resource in GCE.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 16738,
          },
          "name": "pdName",
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecVolumesGcePersistentDisk#fsType",
            },
            "remarks": "Tip: Ensure that the filesystem type is supported by the host operating system. Examples: \\"ext4\\", \\"xfs\\", \\"ntfs\\". Implicitly inferred to be \\"ext4\\" if unspecified. More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk TODO: how do we prevent errors in the filesystem from compromising the machine",
            "summary": "Filesystem type of the volume that you want to mount.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 16724,
          },
          "name": "fsType",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecVolumesGcePersistentDisk#partition",
            },
            "remarks": "If omitted, the default is to mount by volume name. Examples: For volume /dev/sda1, you specify the partition as \\"1\\". Similarly, the volume partition for /dev/sda is \\"0\\" (or you can leave the property empty). More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk",
            "summary": "The partition in the volume that you want to mount.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 16731,
          },
          "name": "partition",
          "optional": true,
          "type": Object {
            "primitive": "number",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecVolumesGcePersistentDisk#readOnly",
            },
            "default": "false. More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk",
            "remarks": "Defaults to false. More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk",
            "summary": "ReadOnly here will force the ReadOnly setting in VolumeMounts.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 16746,
          },
          "name": "readOnly",
          "optional": true,
          "type": Object {
            "primitive": "boolean",
          },
        },
      ],
    },
    "monitoringcoreoscom.PrometheusSpecVolumesGitRepo": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "PrometheusSpecVolumesGitRepo",
        },
        "remarks": "DEPRECATED: GitRepo is deprecated. To provision a container with a git repo, mount an EmptyDir into an InitContainer that clones the repo using git, then mount the EmptyDir into the Pod's container.",
        "summary": "GitRepo represents a git repository at a particular revision.",
      },
      "fqn": "monitoringcoreoscom.PrometheusSpecVolumesGitRepo",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 16772,
      },
      "name": "PrometheusSpecVolumesGitRepo",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecVolumesGitRepo#repository",
            },
            "summary": "Repository URL.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 16785,
          },
          "name": "repository",
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecVolumesGitRepo#directory",
            },
            "remarks": "Must not contain or start with '..'.  If '.' is supplied, the volume directory will be the git repository.  Otherwise, if specified, the volume will contain the git repository in the subdirectory with the given name.",
            "summary": "Target directory name.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 16778,
          },
          "name": "directory",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecVolumesGitRepo#revision",
            },
            "summary": "Commit hash for the specified revision.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 16792,
          },
          "name": "revision",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
      ],
    },
    "monitoringcoreoscom.PrometheusSpecVolumesGlusterfs": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "PrometheusSpecVolumesGlusterfs",
        },
        "remarks": "More info: https://examples.k8s.io/volumes/glusterfs/README.md",
        "summary": "Glusterfs represents a Glusterfs mount on the host that shares a pod's lifetime.",
      },
      "fqn": "monitoringcoreoscom.PrometheusSpecVolumesGlusterfs",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 16817,
      },
      "name": "PrometheusSpecVolumesGlusterfs",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecVolumesGlusterfs#endpoints",
            },
            "remarks": "More info: https://examples.k8s.io/volumes/glusterfs/README.md#create-a-pod",
            "summary": "EndpointsName is the endpoint name that details Glusterfs topology.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 16823,
          },
          "name": "endpoints",
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecVolumesGlusterfs#path",
            },
            "remarks": "More info: https://examples.k8s.io/volumes/glusterfs/README.md#create-a-pod",
            "summary": "Path is the Glusterfs volume path.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 16830,
          },
          "name": "path",
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecVolumesGlusterfs#readOnly",
            },
            "default": "false. More info: https://examples.k8s.io/volumes/glusterfs/README.md#create-a-pod",
            "remarks": "Defaults to false. More info: https://examples.k8s.io/volumes/glusterfs/README.md#create-a-pod",
            "summary": "ReadOnly here will force the Glusterfs volume to be mounted with read-only permissions.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 16838,
          },
          "name": "readOnly",
          "optional": true,
          "type": Object {
            "primitive": "boolean",
          },
        },
      ],
    },
    "monitoringcoreoscom.PrometheusSpecVolumesHostPath": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "PrometheusSpecVolumesHostPath",
        },
        "remarks": "This is generally used for system agents or other privileged things that are allowed to see the host machine. Most containers will NOT need this. More info: https://kubernetes.io/docs/concepts/storage/volumes#hostpath --- TODO(jonesdl) We need to restrict who can use host directory mounts and who can/can not mount host directories as read/write.",
        "summary": "HostPath represents a pre-existing file or directory on the host machine that is directly exposed to the container.",
      },
      "fqn": "monitoringcoreoscom.PrometheusSpecVolumesHostPath",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 16863,
      },
      "name": "PrometheusSpecVolumesHostPath",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecVolumesHostPath#path",
            },
            "remarks": "If the path is a symlink, it will follow the link to the real path. More info: https://kubernetes.io/docs/concepts/storage/volumes#hostpath",
            "summary": "Path of the directory on the host.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 16869,
          },
          "name": "path",
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecVolumesHostPath#type",
            },
            "default": "More info: https://kubernetes.io/docs/concepts/storage/volumes#hostpath",
            "summary": "Type for HostPath Volume Defaults to \\"\\" More info: https://kubernetes.io/docs/concepts/storage/volumes#hostpath.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 16877,
          },
          "name": "type",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
      ],
    },
    "monitoringcoreoscom.PrometheusSpecVolumesIscsi": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "PrometheusSpecVolumesIscsi",
        },
        "remarks": "More info: https://examples.k8s.io/volumes/iscsi/README.md",
        "summary": "ISCSI represents an ISCSI Disk resource that is attached to a kubelet's host machine and then exposed to the pod.",
      },
      "fqn": "monitoringcoreoscom.PrometheusSpecVolumesIscsi",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 16901,
      },
      "name": "PrometheusSpecVolumesIscsi",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecVolumesIscsi#iqn",
            },
            "summary": "Target iSCSI Qualified Name.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 16935,
          },
          "name": "iqn",
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecVolumesIscsi#lun",
            },
            "summary": "iSCSI Target Lun number.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 16950,
          },
          "name": "lun",
          "type": Object {
            "primitive": "number",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecVolumesIscsi#targetPortal",
            },
            "remarks": "The Portal is either an IP or ip_addr:port if the port is other than default (typically TCP ports 860 and 3260).",
            "summary": "iSCSI Target Portal.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 16979,
          },
          "name": "targetPortal",
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecVolumesIscsi#chapAuthDiscovery",
            },
            "summary": "whether support iSCSI Discovery CHAP authentication.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 16907,
          },
          "name": "chapAuthDiscovery",
          "optional": true,
          "type": Object {
            "primitive": "boolean",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecVolumesIscsi#chapAuthSession",
            },
            "summary": "whether support iSCSI Session CHAP authentication.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 16914,
          },
          "name": "chapAuthSession",
          "optional": true,
          "type": Object {
            "primitive": "boolean",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecVolumesIscsi#fsType",
            },
            "remarks": "Tip: Ensure that the filesystem type is supported by the host operating system. Examples: \\"ext4\\", \\"xfs\\", \\"ntfs\\". Implicitly inferred to be \\"ext4\\" if unspecified. More info: https://kubernetes.io/docs/concepts/storage/volumes#iscsi TODO: how do we prevent errors in the filesystem from compromising the machine",
            "summary": "Filesystem type of the volume that you want to mount.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 16921,
          },
          "name": "fsType",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecVolumesIscsi#initiatorName",
            },
            "remarks": "If initiatorName is specified with iscsiInterface simultaneously, new iSCSI interface <target portal>:<volume name> will be created for the connection.",
            "summary": "Custom iSCSI Initiator Name.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 16928,
          },
          "name": "initiatorName",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecVolumesIscsi#iscsiInterface",
            },
            "default": "default' (tcp).",
            "remarks": "Defaults to 'default' (tcp).",
            "summary": "iSCSI Interface Name that uses an iSCSI transport.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 16943,
          },
          "name": "iscsiInterface",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecVolumesIscsi#portals",
            },
            "remarks": "The portal is either an IP or ip_addr:port if the port is other than default (typically TCP ports 860 and 3260).",
            "summary": "iSCSI Target Portal List.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 16957,
          },
          "name": "portals",
          "optional": true,
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "primitive": "string",
              },
              "kind": "array",
            },
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecVolumesIscsi#readOnly",
            },
            "default": "false.",
            "remarks": "Defaults to false.",
            "summary": "ReadOnly here will force the ReadOnly setting in VolumeMounts.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 16965,
          },
          "name": "readOnly",
          "optional": true,
          "type": Object {
            "primitive": "boolean",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecVolumesIscsi#secretRef",
            },
            "summary": "CHAP Secret for iSCSI target and initiator authentication.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 16972,
          },
          "name": "secretRef",
          "optional": true,
          "type": Object {
            "fqn": "monitoringcoreoscom.PrometheusSpecVolumesIscsiSecretRef",
          },
        },
      ],
    },
    "monitoringcoreoscom.PrometheusSpecVolumesIscsiSecretRef": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "PrometheusSpecVolumesIscsiSecretRef",
        },
        "summary": "CHAP Secret for iSCSI target and initiator authentication.",
      },
      "fqn": "monitoringcoreoscom.PrometheusSpecVolumesIscsiSecretRef",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 20593,
      },
      "name": "PrometheusSpecVolumesIscsiSecretRef",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecVolumesIscsiSecretRef#name",
            },
            "remarks": "More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?",
            "summary": "Name of the referent.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 20599,
          },
          "name": "name",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
      ],
    },
    "monitoringcoreoscom.PrometheusSpecVolumesNfs": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "PrometheusSpecVolumesNfs",
        },
        "summary": "NFS represents an NFS mount on the host that shares a pod's lifetime More info: https://kubernetes.io/docs/concepts/storage/volumes#nfs.",
      },
      "fqn": "monitoringcoreoscom.PrometheusSpecVolumesNfs",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 17012,
      },
      "name": "PrometheusSpecVolumesNfs",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecVolumesNfs#path",
            },
            "remarks": "More info: https://kubernetes.io/docs/concepts/storage/volumes#nfs",
            "summary": "Path that is exported by the NFS server.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 17018,
          },
          "name": "path",
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecVolumesNfs#server",
            },
            "remarks": "More info: https://kubernetes.io/docs/concepts/storage/volumes#nfs",
            "summary": "Server is the hostname or IP address of the NFS server.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 17033,
          },
          "name": "server",
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecVolumesNfs#readOnly",
            },
            "default": "false. More info: https://kubernetes.io/docs/concepts/storage/volumes#nfs",
            "remarks": "Defaults to false. More info: https://kubernetes.io/docs/concepts/storage/volumes#nfs",
            "summary": "ReadOnly here will force the NFS export to be mounted with read-only permissions.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 17026,
          },
          "name": "readOnly",
          "optional": true,
          "type": Object {
            "primitive": "boolean",
          },
        },
      ],
    },
    "monitoringcoreoscom.PrometheusSpecVolumesPersistentVolumeClaim": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "PrometheusSpecVolumesPersistentVolumeClaim",
        },
        "remarks": "More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims",
        "summary": "PersistentVolumeClaimVolumeSource represents a reference to a PersistentVolumeClaim in the same namespace.",
      },
      "fqn": "monitoringcoreoscom.PrometheusSpecVolumesPersistentVolumeClaim",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 17058,
      },
      "name": "PrometheusSpecVolumesPersistentVolumeClaim",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecVolumesPersistentVolumeClaim#claimName",
            },
            "remarks": "More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims",
            "summary": "ClaimName is the name of a PersistentVolumeClaim in the same namespace as the pod using this volume.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 17064,
          },
          "name": "claimName",
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecVolumesPersistentVolumeClaim#readOnly",
            },
            "remarks": "Default false.",
            "summary": "Will force the ReadOnly setting in VolumeMounts.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 17071,
          },
          "name": "readOnly",
          "optional": true,
          "type": Object {
            "primitive": "boolean",
          },
        },
      ],
    },
    "monitoringcoreoscom.PrometheusSpecVolumesPhotonPersistentDisk": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "PrometheusSpecVolumesPhotonPersistentDisk",
        },
        "summary": "PhotonPersistentDisk represents a PhotonController persistent disk attached and mounted on kubelets host machine.",
      },
      "fqn": "monitoringcoreoscom.PrometheusSpecVolumesPhotonPersistentDisk",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 17095,
      },
      "name": "PrometheusSpecVolumesPhotonPersistentDisk",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecVolumesPhotonPersistentDisk#pdID",
            },
            "summary": "ID that identifies Photon Controller persistent disk.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 17108,
          },
          "name": "pdId",
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecVolumesPhotonPersistentDisk#fsType",
            },
            "remarks": "Must be a filesystem type supported by the host operating system. Ex. \\"ext4\\", \\"xfs\\", \\"ntfs\\". Implicitly inferred to be \\"ext4\\" if unspecified.",
            "summary": "Filesystem type to mount.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 17101,
          },
          "name": "fsType",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
      ],
    },
    "monitoringcoreoscom.PrometheusSpecVolumesPortworxVolume": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "PrometheusSpecVolumesPortworxVolume",
        },
        "summary": "PortworxVolume represents a portworx volume attached and mounted on kubelets host machine.",
      },
      "fqn": "monitoringcoreoscom.PrometheusSpecVolumesPortworxVolume",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 17132,
      },
      "name": "PrometheusSpecVolumesPortworxVolume",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecVolumesPortworxVolume#volumeID",
            },
            "summary": "VolumeID uniquely identifies a Portworx volume.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 17153,
          },
          "name": "volumeId",
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecVolumesPortworxVolume#fsType",
            },
            "remarks": "Ex. \\"ext4\\", \\"xfs\\". Implicitly inferred to be \\"ext4\\" if unspecified.",
            "summary": "FSType represents the filesystem type to mount Must be a filesystem type supported by the host operating system.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 17138,
          },
          "name": "fsType",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecVolumesPortworxVolume#readOnly",
            },
            "default": "false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts.",
            "remarks": "ReadOnly here will force the ReadOnly setting in VolumeMounts.",
            "summary": "Defaults to false (read/write).",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 17146,
          },
          "name": "readOnly",
          "optional": true,
          "type": Object {
            "primitive": "boolean",
          },
        },
      ],
    },
    "monitoringcoreoscom.PrometheusSpecVolumesProjected": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "PrometheusSpecVolumesProjected",
        },
        "summary": "Items for all in one resources secrets, configmaps, and downward API.",
      },
      "fqn": "monitoringcoreoscom.PrometheusSpecVolumesProjected",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 17178,
      },
      "name": "PrometheusSpecVolumesProjected",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecVolumesProjected#sources",
            },
            "summary": "list of volume projections.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 17191,
          },
          "name": "sources",
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "fqn": "monitoringcoreoscom.PrometheusSpecVolumesProjectedSources",
              },
              "kind": "array",
            },
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecVolumesProjected#defaultMode",
            },
            "remarks": "Must be a value between 0 and 0777. Directories within the path are not affected by this setting. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.",
            "summary": "Mode bits to use on created files by default.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 17184,
          },
          "name": "defaultMode",
          "optional": true,
          "type": Object {
            "primitive": "number",
          },
        },
      ],
    },
    "monitoringcoreoscom.PrometheusSpecVolumesProjectedSources": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "PrometheusSpecVolumesProjectedSources",
        },
        "summary": "Projection that may be projected along with other supported volume types.",
      },
      "fqn": "monitoringcoreoscom.PrometheusSpecVolumesProjectedSources",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 20622,
      },
      "name": "PrometheusSpecVolumesProjectedSources",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecVolumesProjectedSources#configMap",
            },
            "summary": "information about the configMap data to project.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 20628,
          },
          "name": "configMap",
          "optional": true,
          "type": Object {
            "fqn": "monitoringcoreoscom.PrometheusSpecVolumesProjectedSourcesConfigMap",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecVolumesProjectedSources#downwardAPI",
            },
            "summary": "information about the downwardAPI data to project.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 20635,
          },
          "name": "downwardApi",
          "optional": true,
          "type": Object {
            "fqn": "monitoringcoreoscom.PrometheusSpecVolumesProjectedSourcesDownwardApi",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecVolumesProjectedSources#secret",
            },
            "summary": "information about the secret data to project.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 20642,
          },
          "name": "secret",
          "optional": true,
          "type": Object {
            "fqn": "monitoringcoreoscom.PrometheusSpecVolumesProjectedSourcesSecret",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecVolumesProjectedSources#serviceAccountToken",
            },
            "summary": "information about the serviceAccountToken data to project.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 20649,
          },
          "name": "serviceAccountToken",
          "optional": true,
          "type": Object {
            "fqn": "monitoringcoreoscom.PrometheusSpecVolumesProjectedSourcesServiceAccountToken",
          },
        },
      ],
    },
    "monitoringcoreoscom.PrometheusSpecVolumesProjectedSourcesConfigMap": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "PrometheusSpecVolumesProjectedSourcesConfigMap",
        },
        "summary": "information about the configMap data to project.",
      },
      "fqn": "monitoringcoreoscom.PrometheusSpecVolumesProjectedSourcesConfigMap",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 23435,
      },
      "name": "PrometheusSpecVolumesProjectedSourcesConfigMap",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecVolumesProjectedSourcesConfigMap#items",
            },
            "remarks": "If specified, the listed keys will be projected into the specified paths, and unlisted keys will not be present. If a key is specified which is not present in the ConfigMap, the volume setup will error unless it is marked optional. Paths must be relative and may not contain the '..' path or start with '..'.",
            "summary": "If unspecified, each key-value pair in the Data field of the referenced ConfigMap will be projected into the volume as a file whose name is the key and content is the value.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 23441,
          },
          "name": "items",
          "optional": true,
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "fqn": "monitoringcoreoscom.PrometheusSpecVolumesProjectedSourcesConfigMapItems",
              },
              "kind": "array",
            },
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecVolumesProjectedSourcesConfigMap#name",
            },
            "remarks": "More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?",
            "summary": "Name of the referent.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 23448,
          },
          "name": "name",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecVolumesProjectedSourcesConfigMap#optional",
            },
            "summary": "Specify whether the ConfigMap or its keys must be defined.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 23455,
          },
          "name": "optional",
          "optional": true,
          "type": Object {
            "primitive": "boolean",
          },
        },
      ],
    },
    "monitoringcoreoscom.PrometheusSpecVolumesProjectedSourcesConfigMapItems": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "PrometheusSpecVolumesProjectedSourcesConfigMapItems",
        },
        "summary": "Maps a string key to a path within a volume.",
      },
      "fqn": "monitoringcoreoscom.PrometheusSpecVolumesProjectedSourcesConfigMapItems",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 24453,
      },
      "name": "PrometheusSpecVolumesProjectedSourcesConfigMapItems",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecVolumesProjectedSourcesConfigMapItems#key",
            },
            "summary": "The key to project.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 24459,
          },
          "name": "key",
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecVolumesProjectedSourcesConfigMapItems#path",
            },
            "remarks": "May not be an absolute path. May not contain the path element '..'. May not start with the string '..'.",
            "summary": "The relative path of the file to map the key to.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 24473,
          },
          "name": "path",
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecVolumesProjectedSourcesConfigMapItems#mode",
            },
            "remarks": "If not specified, the volume defaultMode will be used. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.",
            "summary": "Optional: mode bits to use on this file, must be a value between 0 and 0777.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 24466,
          },
          "name": "mode",
          "optional": true,
          "type": Object {
            "primitive": "number",
          },
        },
      ],
    },
    "monitoringcoreoscom.PrometheusSpecVolumesProjectedSourcesDownwardApi": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "PrometheusSpecVolumesProjectedSourcesDownwardApi",
        },
        "summary": "information about the downwardAPI data to project.",
      },
      "fqn": "monitoringcoreoscom.PrometheusSpecVolumesProjectedSourcesDownwardApi",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 23480,
      },
      "name": "PrometheusSpecVolumesProjectedSourcesDownwardApi",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecVolumesProjectedSourcesDownwardApi#items",
            },
            "summary": "Items is a list of DownwardAPIVolume file.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 23486,
          },
          "name": "items",
          "optional": true,
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "fqn": "monitoringcoreoscom.PrometheusSpecVolumesProjectedSourcesDownwardApiItems",
              },
              "kind": "array",
            },
          },
        },
      ],
    },
    "monitoringcoreoscom.PrometheusSpecVolumesProjectedSourcesDownwardApiItems": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "PrometheusSpecVolumesProjectedSourcesDownwardApiItems",
        },
        "summary": "DownwardAPIVolumeFile represents information to create the file containing the pod field.",
      },
      "fqn": "monitoringcoreoscom.PrometheusSpecVolumesProjectedSourcesDownwardApiItems",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 24498,
      },
      "name": "PrometheusSpecVolumesProjectedSourcesDownwardApiItems",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecVolumesProjectedSourcesDownwardApiItems#path",
            },
            "remarks": "Must not be absolute or contain the '..' path. Must be utf-8 encoded. The first item of the relative path must not start with '..'",
            "summary": "Required: Path is  the relative path name of the file to be created.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 24518,
          },
          "name": "path",
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecVolumesProjectedSourcesDownwardApiItems#fieldRef",
            },
            "summary": "Required: Selects a field of the pod: only annotations, labels, name and namespace are supported.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 24504,
          },
          "name": "fieldRef",
          "optional": true,
          "type": Object {
            "fqn": "monitoringcoreoscom.PrometheusSpecVolumesProjectedSourcesDownwardApiItemsFieldRef",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecVolumesProjectedSourcesDownwardApiItems#mode",
            },
            "remarks": "If not specified, the volume defaultMode will be used. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.",
            "summary": "Optional: mode bits to use on this file, must be a value between 0 and 0777.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 24511,
          },
          "name": "mode",
          "optional": true,
          "type": Object {
            "primitive": "number",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecVolumesProjectedSourcesDownwardApiItems#resourceFieldRef",
            },
            "summary": "Selects a resource of the container: only resources limits and requests (limits.cpu, limits.memory, requests.cpu and requests.memory) are currently supported.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 24525,
          },
          "name": "resourceFieldRef",
          "optional": true,
          "type": Object {
            "fqn": "monitoringcoreoscom.PrometheusSpecVolumesProjectedSourcesDownwardApiItemsResourceFieldRef",
          },
        },
      ],
    },
    "monitoringcoreoscom.PrometheusSpecVolumesProjectedSourcesDownwardApiItemsFieldRef": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "PrometheusSpecVolumesProjectedSourcesDownwardApiItemsFieldRef",
        },
        "summary": "Required: Selects a field of the pod: only annotations, labels, name and namespace are supported.",
      },
      "fqn": "monitoringcoreoscom.PrometheusSpecVolumesProjectedSourcesDownwardApiItemsFieldRef",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 24686,
      },
      "name": "PrometheusSpecVolumesProjectedSourcesDownwardApiItemsFieldRef",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecVolumesProjectedSourcesDownwardApiItemsFieldRef#fieldPath",
            },
            "summary": "Path of the field to select in the specified API version.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 24699,
          },
          "name": "fieldPath",
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecVolumesProjectedSourcesDownwardApiItemsFieldRef#apiVersion",
            },
            "summary": "Version of the schema the FieldPath is written in terms of, defaults to \\"v1\\".",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 24692,
          },
          "name": "apiVersion",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
      ],
    },
    "monitoringcoreoscom.PrometheusSpecVolumesProjectedSourcesDownwardApiItemsResourceFieldRef": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "PrometheusSpecVolumesProjectedSourcesDownwardApiItemsResourceFieldRef",
        },
        "summary": "Selects a resource of the container: only resources limits and requests (limits.cpu, limits.memory, requests.cpu and requests.memory) are currently supported.",
      },
      "fqn": "monitoringcoreoscom.PrometheusSpecVolumesProjectedSourcesDownwardApiItemsResourceFieldRef",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 24723,
      },
      "name": "PrometheusSpecVolumesProjectedSourcesDownwardApiItemsResourceFieldRef",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecVolumesProjectedSourcesDownwardApiItemsResourceFieldRef#resource",
            },
            "summary": "Required: resource to select.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 24743,
          },
          "name": "resource",
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecVolumesProjectedSourcesDownwardApiItemsResourceFieldRef#containerName",
            },
            "summary": "Container name: required for volumes, optional for env vars.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 24729,
          },
          "name": "containerName",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecVolumesProjectedSourcesDownwardApiItemsResourceFieldRef#divisor",
            },
            "summary": "Specifies the output format of the exposed resources, defaults to \\"1\\".",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 24736,
          },
          "name": "divisor",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
      ],
    },
    "monitoringcoreoscom.PrometheusSpecVolumesProjectedSourcesSecret": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "PrometheusSpecVolumesProjectedSourcesSecret",
        },
        "summary": "information about the secret data to project.",
      },
      "fqn": "monitoringcoreoscom.PrometheusSpecVolumesProjectedSourcesSecret",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 23509,
      },
      "name": "PrometheusSpecVolumesProjectedSourcesSecret",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecVolumesProjectedSourcesSecret#items",
            },
            "remarks": "If specified, the listed keys will be projected into the specified paths, and unlisted keys will not be present. If a key is specified which is not present in the Secret, the volume setup will error unless it is marked optional. Paths must be relative and may not contain the '..' path or start with '..'.",
            "summary": "If unspecified, each key-value pair in the Data field of the referenced Secret will be projected into the volume as a file whose name is the key and content is the value.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 23515,
          },
          "name": "items",
          "optional": true,
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "fqn": "monitoringcoreoscom.PrometheusSpecVolumesProjectedSourcesSecretItems",
              },
              "kind": "array",
            },
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecVolumesProjectedSourcesSecret#name",
            },
            "remarks": "More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?",
            "summary": "Name of the referent.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 23522,
          },
          "name": "name",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecVolumesProjectedSourcesSecret#optional",
            },
            "summary": "Specify whether the Secret or its key must be defined.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 23529,
          },
          "name": "optional",
          "optional": true,
          "type": Object {
            "primitive": "boolean",
          },
        },
      ],
    },
    "monitoringcoreoscom.PrometheusSpecVolumesProjectedSourcesSecretItems": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "PrometheusSpecVolumesProjectedSourcesSecretItems",
        },
        "summary": "Maps a string key to a path within a volume.",
      },
      "fqn": "monitoringcoreoscom.PrometheusSpecVolumesProjectedSourcesSecretItems",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 24551,
      },
      "name": "PrometheusSpecVolumesProjectedSourcesSecretItems",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecVolumesProjectedSourcesSecretItems#key",
            },
            "summary": "The key to project.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 24557,
          },
          "name": "key",
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecVolumesProjectedSourcesSecretItems#path",
            },
            "remarks": "May not be an absolute path. May not contain the path element '..'. May not start with the string '..'.",
            "summary": "The relative path of the file to map the key to.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 24571,
          },
          "name": "path",
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecVolumesProjectedSourcesSecretItems#mode",
            },
            "remarks": "If not specified, the volume defaultMode will be used. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.",
            "summary": "Optional: mode bits to use on this file, must be a value between 0 and 0777.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 24564,
          },
          "name": "mode",
          "optional": true,
          "type": Object {
            "primitive": "number",
          },
        },
      ],
    },
    "monitoringcoreoscom.PrometheusSpecVolumesProjectedSourcesServiceAccountToken": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "PrometheusSpecVolumesProjectedSourcesServiceAccountToken",
        },
        "summary": "information about the serviceAccountToken data to project.",
      },
      "fqn": "monitoringcoreoscom.PrometheusSpecVolumesProjectedSourcesServiceAccountToken",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 23554,
      },
      "name": "PrometheusSpecVolumesProjectedSourcesServiceAccountToken",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecVolumesProjectedSourcesServiceAccountToken#path",
            },
            "summary": "Path is the path relative to the mount point of the file to project the token into.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 23575,
          },
          "name": "path",
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecVolumesProjectedSourcesServiceAccountToken#audience",
            },
            "remarks": "A recipient of a token must identify itself with an identifier specified in the audience of the token, and otherwise should reject the token. The audience defaults to the identifier of the apiserver.",
            "summary": "Audience is the intended audience of the token.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 23560,
          },
          "name": "audience",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecVolumesProjectedSourcesServiceAccountToken#expirationSeconds",
            },
            "default": "1 hour and must be at least 10 minutes.",
            "remarks": "As the token approaches expiration, the kubelet volume plugin will proactively rotate the service account token. The kubelet will start trying to rotate the token if the token is older than 80 percent of its time to live or if the token is older than 24 hours.Defaults to 1 hour and must be at least 10 minutes.",
            "summary": "ExpirationSeconds is the requested duration of validity of the service account token.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 23568,
          },
          "name": "expirationSeconds",
          "optional": true,
          "type": Object {
            "primitive": "number",
          },
        },
      ],
    },
    "monitoringcoreoscom.PrometheusSpecVolumesQuobyte": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "PrometheusSpecVolumesQuobyte",
        },
        "summary": "Quobyte represents a Quobyte mount on the host that shares a pod's lifetime.",
      },
      "fqn": "monitoringcoreoscom.PrometheusSpecVolumesQuobyte",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 17215,
      },
      "name": "PrometheusSpecVolumesQuobyte",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecVolumesQuobyte#registry",
            },
            "summary": "Registry represents a single or multiple Quobyte Registry services specified as a string as host:port pair (multiple entries are separated with commas) which acts as the central registry for volumes.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 17237,
          },
          "name": "registry",
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecVolumesQuobyte#volume",
            },
            "summary": "Volume is a string that references an already created Quobyte volume by name.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 17259,
          },
          "name": "volume",
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecVolumesQuobyte#group",
            },
            "default": "no group",
            "summary": "Group to map volume access to Default is no group.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 17222,
          },
          "name": "group",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecVolumesQuobyte#readOnly",
            },
            "default": "false.",
            "remarks": "Defaults to false.",
            "summary": "ReadOnly here will force the Quobyte volume to be mounted with read-only permissions.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 17230,
          },
          "name": "readOnly",
          "optional": true,
          "type": Object {
            "primitive": "boolean",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecVolumesQuobyte#tenant",
            },
            "summary": "Tenant owning the given Quobyte volume in the Backend Used with dynamically provisioned Quobyte volumes, value is set by the plugin.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 17244,
          },
          "name": "tenant",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecVolumesQuobyte#user",
            },
            "default": "serivceaccount user",
            "summary": "User to map volume access to Defaults to serivceaccount user.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 17252,
          },
          "name": "user",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
      ],
    },
    "monitoringcoreoscom.PrometheusSpecVolumesRbd": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "PrometheusSpecVolumesRbd",
        },
        "remarks": "More info: https://examples.k8s.io/volumes/rbd/README.md",
        "summary": "RBD represents a Rados Block Device mount on the host that shares a pod's lifetime.",
      },
      "fqn": "monitoringcoreoscom.PrometheusSpecVolumesRbd",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 17287,
      },
      "name": "PrometheusSpecVolumesRbd",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecVolumesRbd#image",
            },
            "remarks": "More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it",
            "summary": "The rados image name.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 17300,
          },
          "name": "image",
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecVolumesRbd#monitors",
            },
            "remarks": "More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it",
            "summary": "A collection of Ceph monitors.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 17315,
          },
          "name": "monitors",
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "primitive": "string",
              },
              "kind": "array",
            },
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecVolumesRbd#fsType",
            },
            "remarks": "Tip: Ensure that the filesystem type is supported by the host operating system. Examples: \\"ext4\\", \\"xfs\\", \\"ntfs\\". Implicitly inferred to be \\"ext4\\" if unspecified. More info: https://kubernetes.io/docs/concepts/storage/volumes#rbd TODO: how do we prevent errors in the filesystem from compromising the machine",
            "summary": "Filesystem type of the volume that you want to mount.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 17293,
          },
          "name": "fsType",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecVolumesRbd#keyring",
            },
            "default": "etc/ceph/keyring. More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it",
            "remarks": "Default is /etc/ceph/keyring. More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it",
            "summary": "Keyring is the path to key ring for RBDUser.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 17308,
          },
          "name": "keyring",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecVolumesRbd#pool",
            },
            "default": "rbd. More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it",
            "remarks": "Default is rbd. More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it",
            "summary": "The rados pool name.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 17323,
          },
          "name": "pool",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecVolumesRbd#readOnly",
            },
            "default": "false. More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it",
            "remarks": "Defaults to false. More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it",
            "summary": "ReadOnly here will force the ReadOnly setting in VolumeMounts.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 17331,
          },
          "name": "readOnly",
          "optional": true,
          "type": Object {
            "primitive": "boolean",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecVolumesRbd#secretRef",
            },
            "default": "nil. More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it",
            "remarks": "If provided overrides keyring. Default is nil. More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it",
            "summary": "SecretRef is name of the authentication secret for RBDUser.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 17339,
          },
          "name": "secretRef",
          "optional": true,
          "type": Object {
            "fqn": "monitoringcoreoscom.PrometheusSpecVolumesRbdSecretRef",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecVolumesRbd#user",
            },
            "default": "admin. More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it",
            "remarks": "Default is admin. More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it",
            "summary": "The rados user name.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 17347,
          },
          "name": "user",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
      ],
    },
    "monitoringcoreoscom.PrometheusSpecVolumesRbdSecretRef": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "PrometheusSpecVolumesRbdSecretRef",
        },
        "default": "nil. More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it",
        "remarks": "If provided overrides keyring. Default is nil. More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it",
        "summary": "SecretRef is name of the authentication secret for RBDUser.",
      },
      "fqn": "monitoringcoreoscom.PrometheusSpecVolumesRbdSecretRef",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 20676,
      },
      "name": "PrometheusSpecVolumesRbdSecretRef",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecVolumesRbdSecretRef#name",
            },
            "remarks": "More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?",
            "summary": "Name of the referent.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 20682,
          },
          "name": "name",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
      ],
    },
    "monitoringcoreoscom.PrometheusSpecVolumesScaleIo": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "PrometheusSpecVolumesScaleIo",
        },
        "summary": "ScaleIO represents a ScaleIO persistent volume attached and mounted on Kubernetes nodes.",
      },
      "fqn": "monitoringcoreoscom.PrometheusSpecVolumesScaleIo",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 17377,
      },
      "name": "PrometheusSpecVolumesScaleIo",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecVolumesScaleIo#gateway",
            },
            "summary": "The host address of the ScaleIO API Gateway.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 17391,
          },
          "name": "gateway",
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecVolumesScaleIo#secretRef",
            },
            "remarks": "If this is not provided, Login operation will fail.",
            "summary": "SecretRef references to the secret for ScaleIO user and other sensitive information.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 17413,
          },
          "name": "secretRef",
          "type": Object {
            "fqn": "monitoringcoreoscom.PrometheusSpecVolumesScaleIoSecretRef",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecVolumesScaleIo#system",
            },
            "summary": "The name of the storage system as configured in ScaleIO.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 17442,
          },
          "name": "system",
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecVolumesScaleIo#fsType",
            },
            "default": "xfs\\".",
            "remarks": "Must be a filesystem type supported by the host operating system. Ex. \\"ext4\\", \\"xfs\\", \\"ntfs\\". Default is \\"xfs\\".",
            "summary": "Filesystem type to mount.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 17384,
          },
          "name": "fsType",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecVolumesScaleIo#protectionDomain",
            },
            "summary": "The name of the ScaleIO Protection Domain for the configured storage.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 17398,
          },
          "name": "protectionDomain",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecVolumesScaleIo#readOnly",
            },
            "default": "false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts.",
            "remarks": "ReadOnly here will force the ReadOnly setting in VolumeMounts.",
            "summary": "Defaults to false (read/write).",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 17406,
          },
          "name": "readOnly",
          "optional": true,
          "type": Object {
            "primitive": "boolean",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecVolumesScaleIo#sslEnabled",
            },
            "summary": "Flag to enable/disable SSL communication with Gateway, default false.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 17420,
          },
          "name": "sslEnabled",
          "optional": true,
          "type": Object {
            "primitive": "boolean",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecVolumesScaleIo#storageMode",
            },
            "default": "ThinProvisioned.",
            "remarks": "Default is ThinProvisioned.",
            "summary": "Indicates whether the storage for a volume should be ThickProvisioned or ThinProvisioned.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 17428,
          },
          "name": "storageMode",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecVolumesScaleIo#storagePool",
            },
            "summary": "The ScaleIO Storage Pool associated with the protection domain.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 17435,
          },
          "name": "storagePool",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecVolumesScaleIo#volumeName",
            },
            "summary": "The name of a volume already created in the ScaleIO system that is associated with this volume source.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 17449,
          },
          "name": "volumeName",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
      ],
    },
    "monitoringcoreoscom.PrometheusSpecVolumesScaleIoSecretRef": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "PrometheusSpecVolumesScaleIoSecretRef",
        },
        "remarks": "If this is not provided, Login operation will fail.",
        "summary": "SecretRef references to the secret for ScaleIO user and other sensitive information.",
      },
      "fqn": "monitoringcoreoscom.PrometheusSpecVolumesScaleIoSecretRef",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 20705,
      },
      "name": "PrometheusSpecVolumesScaleIoSecretRef",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecVolumesScaleIoSecretRef#name",
            },
            "remarks": "More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?",
            "summary": "Name of the referent.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 20711,
          },
          "name": "name",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
      ],
    },
    "monitoringcoreoscom.PrometheusSpecVolumesSecret": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "PrometheusSpecVolumesSecret",
        },
        "remarks": "More info: https://kubernetes.io/docs/concepts/storage/volumes#secret",
        "summary": "Secret represents a secret that should populate this volume.",
      },
      "fqn": "monitoringcoreoscom.PrometheusSpecVolumesSecret",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 17481,
      },
      "name": "PrometheusSpecVolumesSecret",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecVolumesSecret#defaultMode",
            },
            "default": "0644. Directories within the path are not affected by this setting. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.",
            "remarks": "Must be a value between 0 and 0777. Defaults to 0644. Directories within the path are not affected by this setting. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.",
            "summary": "Optional: mode bits to use on created files by default.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 17488,
          },
          "name": "defaultMode",
          "optional": true,
          "type": Object {
            "primitive": "number",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecVolumesSecret#items",
            },
            "remarks": "If specified, the listed keys will be projected into the specified paths, and unlisted keys will not be present. If a key is specified which is not present in the Secret, the volume setup will error unless it is marked optional. Paths must be relative and may not contain the '..' path or start with '..'.",
            "summary": "If unspecified, each key-value pair in the Data field of the referenced Secret will be projected into the volume as a file whose name is the key and content is the value.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 17495,
          },
          "name": "items",
          "optional": true,
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "fqn": "monitoringcoreoscom.PrometheusSpecVolumesSecretItems",
              },
              "kind": "array",
            },
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecVolumesSecret#optional",
            },
            "summary": "Specify whether the Secret or its keys must be defined.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 17502,
          },
          "name": "optional",
          "optional": true,
          "type": Object {
            "primitive": "boolean",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecVolumesSecret#secretName",
            },
            "remarks": "More info: https://kubernetes.io/docs/concepts/storage/volumes#secret",
            "summary": "Name of the secret in the pod's namespace to use.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 17509,
          },
          "name": "secretName",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
      ],
    },
    "monitoringcoreoscom.PrometheusSpecVolumesSecretItems": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "PrometheusSpecVolumesSecretItems",
        },
        "summary": "Maps a string key to a path within a volume.",
      },
      "fqn": "monitoringcoreoscom.PrometheusSpecVolumesSecretItems",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 20734,
      },
      "name": "PrometheusSpecVolumesSecretItems",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecVolumesSecretItems#key",
            },
            "summary": "The key to project.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 20740,
          },
          "name": "key",
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecVolumesSecretItems#path",
            },
            "remarks": "May not be an absolute path. May not contain the path element '..'. May not start with the string '..'.",
            "summary": "The relative path of the file to map the key to.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 20754,
          },
          "name": "path",
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecVolumesSecretItems#mode",
            },
            "remarks": "If not specified, the volume defaultMode will be used. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.",
            "summary": "Optional: mode bits to use on this file, must be a value between 0 and 0777.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 20747,
          },
          "name": "mode",
          "optional": true,
          "type": Object {
            "primitive": "number",
          },
        },
      ],
    },
    "monitoringcoreoscom.PrometheusSpecVolumesStorageos": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "PrometheusSpecVolumesStorageos",
        },
        "summary": "StorageOS represents a StorageOS volume attached and mounted on Kubernetes nodes.",
      },
      "fqn": "monitoringcoreoscom.PrometheusSpecVolumesStorageos",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 17535,
      },
      "name": "PrometheusSpecVolumesStorageos",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecVolumesStorageos#fsType",
            },
            "remarks": "Must be a filesystem type supported by the host operating system. Ex. \\"ext4\\", \\"xfs\\", \\"ntfs\\". Implicitly inferred to be \\"ext4\\" if unspecified.",
            "summary": "Filesystem type to mount.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 17541,
          },
          "name": "fsType",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecVolumesStorageos#readOnly",
            },
            "default": "false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts.",
            "remarks": "ReadOnly here will force the ReadOnly setting in VolumeMounts.",
            "summary": "Defaults to false (read/write).",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 17549,
          },
          "name": "readOnly",
          "optional": true,
          "type": Object {
            "primitive": "boolean",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecVolumesStorageos#secretRef",
            },
            "remarks": "If not specified, default values will be attempted.",
            "summary": "SecretRef specifies the secret to use for obtaining the StorageOS API credentials.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 17556,
          },
          "name": "secretRef",
          "optional": true,
          "type": Object {
            "fqn": "monitoringcoreoscom.PrometheusSpecVolumesStorageosSecretRef",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecVolumesStorageos#volumeName",
            },
            "remarks": "Volume names are only unique within a namespace.",
            "summary": "VolumeName is the human-readable name of the StorageOS volume.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 17563,
          },
          "name": "volumeName",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecVolumesStorageos#volumeNamespace",
            },
            "remarks": "If no namespace is specified then the Pod's namespace will be used.  This allows the Kubernetes name scoping to be mirrored within StorageOS for tighter integration. Set VolumeName to any name to override the default behaviour. Set to \\"default\\" if you are not using namespaces within StorageOS. Namespaces that do not pre-exist within StorageOS will be created.",
            "summary": "VolumeNamespace specifies the scope of the volume within StorageOS.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 17570,
          },
          "name": "volumeNamespace",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
      ],
    },
    "monitoringcoreoscom.PrometheusSpecVolumesStorageosSecretRef": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "PrometheusSpecVolumesStorageosSecretRef",
        },
        "remarks": "If not specified, default values will be attempted.",
        "summary": "SecretRef specifies the secret to use for obtaining the StorageOS API credentials.",
      },
      "fqn": "monitoringcoreoscom.PrometheusSpecVolumesStorageosSecretRef",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 20779,
      },
      "name": "PrometheusSpecVolumesStorageosSecretRef",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecVolumesStorageosSecretRef#name",
            },
            "remarks": "More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?",
            "summary": "Name of the referent.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 20785,
          },
          "name": "name",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
      ],
    },
    "monitoringcoreoscom.PrometheusSpecVolumesVsphereVolume": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "PrometheusSpecVolumesVsphereVolume",
        },
        "summary": "VsphereVolume represents a vSphere volume attached and mounted on kubelets host machine.",
      },
      "fqn": "monitoringcoreoscom.PrometheusSpecVolumesVsphereVolume",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 17597,
      },
      "name": "PrometheusSpecVolumesVsphereVolume",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecVolumesVsphereVolume#volumePath",
            },
            "summary": "Path that identifies vSphere volume vmdk.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 17624,
          },
          "name": "volumePath",
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecVolumesVsphereVolume#fsType",
            },
            "remarks": "Must be a filesystem type supported by the host operating system. Ex. \\"ext4\\", \\"xfs\\", \\"ntfs\\". Implicitly inferred to be \\"ext4\\" if unspecified.",
            "summary": "Filesystem type to mount.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 17603,
          },
          "name": "fsType",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecVolumesVsphereVolume#storagePolicyID",
            },
            "summary": "Storage Policy Based Management (SPBM) profile ID associated with the StoragePolicyName.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 17610,
          },
          "name": "storagePolicyId",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "PrometheusSpecVolumesVsphereVolume#storagePolicyName",
            },
            "summary": "Storage Policy Based Management (SPBM) profile name.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 17617,
          },
          "name": "storagePolicyName",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
      ],
    },
    "monitoringcoreoscom.ServiceMonitor": Object {
      "assembly": "monitoringcoreoscom",
      "base": "cdk8s.ApiObject",
      "docs": Object {
        "custom": Object {
          "schema": "ServiceMonitor",
        },
        "summary": "ServiceMonitor defines monitoring for a set of services.",
      },
      "fqn": "monitoringcoreoscom.ServiceMonitor",
      "initializer": Object {
        "docs": Object {
          "summary": "Defines a \\"ServiceMonitor\\" API object.",
        },
        "locationInModule": Object {
          "filename": "monitoring.coreos.com.ts",
          "line": 25017,
        },
        "parameters": Array [
          Object {
            "docs": Object {
              "summary": "the scope in which to define this object.",
            },
            "name": "scope",
            "type": Object {
              "fqn": "constructs.Construct",
            },
          },
          Object {
            "docs": Object {
              "summary": "a scope-local name for the object.",
            },
            "name": "id",
            "type": Object {
              "primitive": "string",
            },
          },
          Object {
            "docs": Object {
              "summary": "initialization props.",
            },
            "name": "props",
            "type": Object {
              "fqn": "monitoringcoreoscom.ServiceMonitorProps",
            },
          },
        ],
      },
      "kind": "class",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 24988,
      },
      "methods": Array [
        Object {
          "docs": Object {
            "remarks": "This can be used to inline resource manifests inside other objects (e.g. as templates).",
            "summary": "Renders a Kubernetes manifest for \\"ServiceMonitor\\".",
          },
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 25004,
          },
          "name": "manifest",
          "parameters": Array [
            Object {
              "docs": Object {
                "summary": "initialization props.",
              },
              "name": "props",
              "type": Object {
                "fqn": "monitoringcoreoscom.ServiceMonitorProps",
              },
            },
          ],
          "returns": Object {
            "type": Object {
              "primitive": "any",
            },
          },
          "static": true,
        },
      ],
      "name": "ServiceMonitor",
      "properties": Array [
        Object {
          "const": true,
          "docs": Object {
            "summary": "Returns the apiVersion and kind for \\"ServiceMonitor\\".",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 24992,
          },
          "name": "GVK",
          "static": true,
          "type": Object {
            "fqn": "cdk8s.GroupVersionKind",
          },
        },
      ],
    },
    "monitoringcoreoscom.ServiceMonitorProps": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "ServiceMonitor",
        },
        "summary": "ServiceMonitor defines monitoring for a set of services.",
      },
      "fqn": "monitoringcoreoscom.ServiceMonitorProps",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 25027,
      },
      "name": "ServiceMonitorProps",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ServiceMonitor#spec",
            },
            "summary": "Specification of desired Service selection for target discovery by Prometheus.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 25038,
          },
          "name": "spec",
          "type": Object {
            "fqn": "monitoringcoreoscom.ServiceMonitorSpec",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ServiceMonitor#metadata",
            },
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 25031,
          },
          "name": "metadata",
          "optional": true,
          "type": Object {
            "primitive": "any",
          },
        },
      ],
    },
    "monitoringcoreoscom.ServiceMonitorSpec": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "ServiceMonitorSpec",
        },
        "summary": "Specification of desired Service selection for target discovery by Prometheus.",
      },
      "fqn": "monitoringcoreoscom.ServiceMonitorSpec",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 25062,
      },
      "name": "ServiceMonitorSpec",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ServiceMonitorSpec#endpoints",
            },
            "summary": "A list of endpoints allowed as part of this ServiceMonitor.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 25068,
          },
          "name": "endpoints",
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "fqn": "monitoringcoreoscom.ServiceMonitorSpecEndpoints",
              },
              "kind": "array",
            },
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ServiceMonitorSpec#selector",
            },
            "summary": "Selector to select Endpoints objects.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 25103,
          },
          "name": "selector",
          "type": Object {
            "fqn": "monitoringcoreoscom.ServiceMonitorSpecSelector",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ServiceMonitorSpec#jobLabel",
            },
            "summary": "The label to use to retrieve the job name from.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 25075,
          },
          "name": "jobLabel",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ServiceMonitorSpec#namespaceSelector",
            },
            "summary": "Selector to select which namespaces the Endpoints objects are discovered from.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 25082,
          },
          "name": "namespaceSelector",
          "optional": true,
          "type": Object {
            "fqn": "monitoringcoreoscom.ServiceMonitorSpecNamespaceSelector",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ServiceMonitorSpec#podTargetLabels",
            },
            "summary": "PodTargetLabels transfers labels on the Kubernetes Pod onto the target.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 25089,
          },
          "name": "podTargetLabels",
          "optional": true,
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "primitive": "string",
              },
              "kind": "array",
            },
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ServiceMonitorSpec#sampleLimit",
            },
            "summary": "SampleLimit defines per-scrape limit on number of scraped samples that will be accepted.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 25096,
          },
          "name": "sampleLimit",
          "optional": true,
          "type": Object {
            "primitive": "number",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ServiceMonitorSpec#targetLabels",
            },
            "summary": "TargetLabels transfers labels on the Kubernetes Service onto the target.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 25110,
          },
          "name": "targetLabels",
          "optional": true,
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "primitive": "string",
              },
              "kind": "array",
            },
          },
        },
      ],
    },
    "monitoringcoreoscom.ServiceMonitorSpecEndpoints": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "ServiceMonitorSpecEndpoints",
        },
        "summary": "Endpoint defines a scrapeable endpoint serving Prometheus metrics.",
      },
      "fqn": "monitoringcoreoscom.ServiceMonitorSpecEndpoints",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 25139,
      },
      "name": "ServiceMonitorSpecEndpoints",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ServiceMonitorSpecEndpoints#basicAuth",
            },
            "summary": "BasicAuth allow an endpoint to authenticate over basic authentication More info: https://prometheus.io/docs/operating/configuration/#endpoints.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 25145,
          },
          "name": "basicAuth",
          "optional": true,
          "type": Object {
            "fqn": "monitoringcoreoscom.ServiceMonitorSpecEndpointsBasicAuth",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ServiceMonitorSpecEndpoints#bearerTokenFile",
            },
            "summary": "File to read bearer token for scraping targets.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 25152,
          },
          "name": "bearerTokenFile",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ServiceMonitorSpecEndpoints#bearerTokenSecret",
            },
            "remarks": "The secret needs to be in the same namespace as the service monitor and accessible by the Prometheus Operator.",
            "summary": "Secret to mount to read bearer token for scraping targets.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 25159,
          },
          "name": "bearerTokenSecret",
          "optional": true,
          "type": Object {
            "fqn": "monitoringcoreoscom.ServiceMonitorSpecEndpointsBearerTokenSecret",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ServiceMonitorSpecEndpoints#honorLabels",
            },
            "summary": "HonorLabels chooses the metric's labels on collisions with target labels.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 25166,
          },
          "name": "honorLabels",
          "optional": true,
          "type": Object {
            "primitive": "boolean",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ServiceMonitorSpecEndpoints#honorTimestamps",
            },
            "summary": "HonorTimestamps controls whether Prometheus respects the timestamps present in scraped data.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 25173,
          },
          "name": "honorTimestamps",
          "optional": true,
          "type": Object {
            "primitive": "boolean",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ServiceMonitorSpecEndpoints#interval",
            },
            "summary": "Interval at which metrics should be scraped.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 25180,
          },
          "name": "interval",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ServiceMonitorSpecEndpoints#metricRelabelings",
            },
            "summary": "MetricRelabelConfigs to apply to samples before ingestion.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 25187,
          },
          "name": "metricRelabelings",
          "optional": true,
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "fqn": "monitoringcoreoscom.ServiceMonitorSpecEndpointsMetricRelabelings",
              },
              "kind": "array",
            },
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ServiceMonitorSpecEndpoints#params",
            },
            "summary": "Optional HTTP URL parameters.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 25194,
          },
          "name": "params",
          "optional": true,
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "collection": Object {
                  "elementtype": Object {
                    "primitive": "string",
                  },
                  "kind": "array",
                },
              },
              "kind": "map",
            },
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ServiceMonitorSpecEndpoints#path",
            },
            "summary": "HTTP path to scrape for metrics.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 25201,
          },
          "name": "path",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ServiceMonitorSpecEndpoints#port",
            },
            "remarks": "Mutually exclusive with targetPort.",
            "summary": "Name of the service port this endpoint refers to.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 25208,
          },
          "name": "port",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ServiceMonitorSpecEndpoints#proxyUrl",
            },
            "summary": "ProxyURL eg http://proxyserver:2195 Directs scrapes to proxy through this endpoint.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 25215,
          },
          "name": "proxyUrl",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ServiceMonitorSpecEndpoints#relabelings",
            },
            "remarks": "More info: https://prometheus.io/docs/prometheus/latest/configuration/configuration/#relabel_config",
            "summary": "RelabelConfigs to apply to samples before scraping.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 25222,
          },
          "name": "relabelings",
          "optional": true,
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "fqn": "monitoringcoreoscom.ServiceMonitorSpecEndpointsRelabelings",
              },
              "kind": "array",
            },
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ServiceMonitorSpecEndpoints#scheme",
            },
            "summary": "HTTP scheme to use for scraping.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 25229,
          },
          "name": "scheme",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ServiceMonitorSpecEndpoints#scrapeTimeout",
            },
            "summary": "Timeout after which the scrape is ended.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 25236,
          },
          "name": "scrapeTimeout",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ServiceMonitorSpecEndpoints#targetPort",
            },
            "remarks": "Mutually exclusive with port.",
            "summary": "Name or number of the pod port this endpoint refers to.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 25243,
          },
          "name": "targetPort",
          "optional": true,
          "type": Object {
            "fqn": "monitoringcoreoscom.ServiceMonitorSpecEndpointsTargetPort",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ServiceMonitorSpecEndpoints#tlsConfig",
            },
            "summary": "TLS configuration to use when scraping the endpoint.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 25250,
          },
          "name": "tlsConfig",
          "optional": true,
          "type": Object {
            "fqn": "monitoringcoreoscom.ServiceMonitorSpecEndpointsTlsConfig",
          },
        },
      ],
    },
    "monitoringcoreoscom.ServiceMonitorSpecEndpointsBasicAuth": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "ServiceMonitorSpecEndpointsBasicAuth",
        },
        "summary": "BasicAuth allow an endpoint to authenticate over basic authentication More info: https://prometheus.io/docs/operating/configuration/#endpoints.",
      },
      "fqn": "monitoringcoreoscom.ServiceMonitorSpecEndpointsBasicAuth",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 25362,
      },
      "name": "ServiceMonitorSpecEndpointsBasicAuth",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ServiceMonitorSpecEndpointsBasicAuth#password",
            },
            "summary": "The secret in the service monitor namespace that contains the password for authentication.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 25368,
          },
          "name": "password",
          "optional": true,
          "type": Object {
            "fqn": "monitoringcoreoscom.ServiceMonitorSpecEndpointsBasicAuthPassword",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ServiceMonitorSpecEndpointsBasicAuth#username",
            },
            "summary": "The secret in the service monitor namespace that contains the username for authentication.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 25375,
          },
          "name": "username",
          "optional": true,
          "type": Object {
            "fqn": "monitoringcoreoscom.ServiceMonitorSpecEndpointsBasicAuthUsername",
          },
        },
      ],
    },
    "monitoringcoreoscom.ServiceMonitorSpecEndpointsBasicAuthPassword": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "ServiceMonitorSpecEndpointsBasicAuthPassword",
        },
        "summary": "The secret in the service monitor namespace that contains the password for authentication.",
      },
      "fqn": "monitoringcoreoscom.ServiceMonitorSpecEndpointsBasicAuthPassword",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 25751,
      },
      "name": "ServiceMonitorSpecEndpointsBasicAuthPassword",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ServiceMonitorSpecEndpointsBasicAuthPassword#key",
            },
            "remarks": "Must be a valid secret key.",
            "summary": "The key of the secret to select from.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 25757,
          },
          "name": "key",
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ServiceMonitorSpecEndpointsBasicAuthPassword#name",
            },
            "remarks": "More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?",
            "summary": "Name of the referent.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 25764,
          },
          "name": "name",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ServiceMonitorSpecEndpointsBasicAuthPassword#optional",
            },
            "summary": "Specify whether the Secret or its key must be defined.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 25771,
          },
          "name": "optional",
          "optional": true,
          "type": Object {
            "primitive": "boolean",
          },
        },
      ],
    },
    "monitoringcoreoscom.ServiceMonitorSpecEndpointsBasicAuthUsername": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "ServiceMonitorSpecEndpointsBasicAuthUsername",
        },
        "summary": "The secret in the service monitor namespace that contains the username for authentication.",
      },
      "fqn": "monitoringcoreoscom.ServiceMonitorSpecEndpointsBasicAuthUsername",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 25796,
      },
      "name": "ServiceMonitorSpecEndpointsBasicAuthUsername",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ServiceMonitorSpecEndpointsBasicAuthUsername#key",
            },
            "remarks": "Must be a valid secret key.",
            "summary": "The key of the secret to select from.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 25802,
          },
          "name": "key",
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ServiceMonitorSpecEndpointsBasicAuthUsername#name",
            },
            "remarks": "More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?",
            "summary": "Name of the referent.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 25809,
          },
          "name": "name",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ServiceMonitorSpecEndpointsBasicAuthUsername#optional",
            },
            "summary": "Specify whether the Secret or its key must be defined.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 25816,
          },
          "name": "optional",
          "optional": true,
          "type": Object {
            "primitive": "boolean",
          },
        },
      ],
    },
    "monitoringcoreoscom.ServiceMonitorSpecEndpointsBearerTokenSecret": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "ServiceMonitorSpecEndpointsBearerTokenSecret",
        },
        "remarks": "The secret needs to be in the same namespace as the service monitor and accessible by the Prometheus Operator.",
        "summary": "Secret to mount to read bearer token for scraping targets.",
      },
      "fqn": "monitoringcoreoscom.ServiceMonitorSpecEndpointsBearerTokenSecret",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 25399,
      },
      "name": "ServiceMonitorSpecEndpointsBearerTokenSecret",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ServiceMonitorSpecEndpointsBearerTokenSecret#key",
            },
            "remarks": "Must be a valid secret key.",
            "summary": "The key of the secret to select from.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 25405,
          },
          "name": "key",
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ServiceMonitorSpecEndpointsBearerTokenSecret#name",
            },
            "remarks": "More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?",
            "summary": "Name of the referent.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 25412,
          },
          "name": "name",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ServiceMonitorSpecEndpointsBearerTokenSecret#optional",
            },
            "summary": "Specify whether the Secret or its key must be defined.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 25419,
          },
          "name": "optional",
          "optional": true,
          "type": Object {
            "primitive": "boolean",
          },
        },
      ],
    },
    "monitoringcoreoscom.ServiceMonitorSpecEndpointsMetricRelabelings": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "ServiceMonitorSpecEndpointsMetricRelabelings",
        },
        "remarks": "It defines \`<metric_relabel_configs>\`-section of Prometheus configuration. More info: https://prometheus.io/docs/prometheus/latest/configuration/configuration/#metric_relabel_configs",
        "summary": "RelabelConfig allows dynamic rewriting of the label set, being applied to samples before ingestion.",
      },
      "fqn": "monitoringcoreoscom.ServiceMonitorSpecEndpointsMetricRelabelings",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 25444,
      },
      "name": "ServiceMonitorSpecEndpointsMetricRelabelings",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ServiceMonitorSpecEndpointsMetricRelabelings#action",
            },
            "default": "replace'",
            "remarks": "Default is 'replace'",
            "summary": "Action to perform based on regex matching.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 25451,
          },
          "name": "action",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ServiceMonitorSpecEndpointsMetricRelabelings#modulus",
            },
            "summary": "Modulus to take of the hash of the source label values.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 25458,
          },
          "name": "modulus",
          "optional": true,
          "type": Object {
            "primitive": "number",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ServiceMonitorSpecEndpointsMetricRelabelings#regex",
            },
            "default": "'",
            "remarks": "Default is '(.*)'",
            "summary": "Regular expression against which the extracted value is matched.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 25466,
          },
          "name": "regex",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ServiceMonitorSpecEndpointsMetricRelabelings#replacement",
            },
            "default": "1'",
            "remarks": "Regex capture groups are available. Default is '$1'",
            "summary": "Replacement value against which a regex replace is performed if the regular expression matches.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 25474,
          },
          "name": "replacement",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ServiceMonitorSpecEndpointsMetricRelabelings#separator",
            },
            "remarks": "default is ';'.",
            "summary": "Separator placed between concatenated source label values.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 25481,
          },
          "name": "separator",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ServiceMonitorSpecEndpointsMetricRelabelings#sourceLabels",
            },
            "remarks": "Their content is concatenated using the configured separator and matched against the configured regular expression for the replace, keep, and drop actions.",
            "summary": "The source labels select values from existing labels.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 25488,
          },
          "name": "sourceLabels",
          "optional": true,
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "primitive": "string",
              },
              "kind": "array",
            },
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ServiceMonitorSpecEndpointsMetricRelabelings#targetLabel",
            },
            "remarks": "It is mandatory for replace actions. Regex capture groups are available.",
            "summary": "Label to which the resulting value is written in a replace action.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 25495,
          },
          "name": "targetLabel",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
      ],
    },
    "monitoringcoreoscom.ServiceMonitorSpecEndpointsRelabelings": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "ServiceMonitorSpecEndpointsRelabelings",
        },
        "remarks": "It defines \`<metric_relabel_configs>\`-section of Prometheus configuration. More info: https://prometheus.io/docs/prometheus/latest/configuration/configuration/#metric_relabel_configs",
        "summary": "RelabelConfig allows dynamic rewriting of the label set, being applied to samples before ingestion.",
      },
      "fqn": "monitoringcoreoscom.ServiceMonitorSpecEndpointsRelabelings",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 25524,
      },
      "name": "ServiceMonitorSpecEndpointsRelabelings",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ServiceMonitorSpecEndpointsRelabelings#action",
            },
            "default": "replace'",
            "remarks": "Default is 'replace'",
            "summary": "Action to perform based on regex matching.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 25531,
          },
          "name": "action",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ServiceMonitorSpecEndpointsRelabelings#modulus",
            },
            "summary": "Modulus to take of the hash of the source label values.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 25538,
          },
          "name": "modulus",
          "optional": true,
          "type": Object {
            "primitive": "number",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ServiceMonitorSpecEndpointsRelabelings#regex",
            },
            "default": "'",
            "remarks": "Default is '(.*)'",
            "summary": "Regular expression against which the extracted value is matched.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 25546,
          },
          "name": "regex",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ServiceMonitorSpecEndpointsRelabelings#replacement",
            },
            "default": "1'",
            "remarks": "Regex capture groups are available. Default is '$1'",
            "summary": "Replacement value against which a regex replace is performed if the regular expression matches.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 25554,
          },
          "name": "replacement",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ServiceMonitorSpecEndpointsRelabelings#separator",
            },
            "remarks": "default is ';'.",
            "summary": "Separator placed between concatenated source label values.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 25561,
          },
          "name": "separator",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ServiceMonitorSpecEndpointsRelabelings#sourceLabels",
            },
            "remarks": "Their content is concatenated using the configured separator and matched against the configured regular expression for the replace, keep, and drop actions.",
            "summary": "The source labels select values from existing labels.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 25568,
          },
          "name": "sourceLabels",
          "optional": true,
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "primitive": "string",
              },
              "kind": "array",
            },
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ServiceMonitorSpecEndpointsRelabelings#targetLabel",
            },
            "remarks": "It is mandatory for replace actions. Regex capture groups are available.",
            "summary": "Label to which the resulting value is written in a replace action.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 25575,
          },
          "name": "targetLabel",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
      ],
    },
    "monitoringcoreoscom.ServiceMonitorSpecEndpointsTargetPort": Object {
      "assembly": "monitoringcoreoscom",
      "docs": Object {
        "custom": Object {
          "schema": "ServiceMonitorSpecEndpointsTargetPort",
        },
        "remarks": "Mutually exclusive with port.",
        "summary": "Name or number of the pod port this endpoint refers to.",
      },
      "fqn": "monitoringcoreoscom.ServiceMonitorSpecEndpointsTargetPort",
      "kind": "class",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 25604,
      },
      "methods": Array [
        Object {
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 25605,
          },
          "name": "fromNumber",
          "parameters": Array [
            Object {
              "name": "value",
              "type": Object {
                "primitive": "number",
              },
            },
          ],
          "returns": Object {
            "type": Object {
              "fqn": "monitoringcoreoscom.ServiceMonitorSpecEndpointsTargetPort",
            },
          },
          "static": true,
        },
        Object {
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 25608,
          },
          "name": "fromString",
          "parameters": Array [
            Object {
              "name": "value",
              "type": Object {
                "primitive": "string",
              },
            },
          ],
          "returns": Object {
            "type": Object {
              "fqn": "monitoringcoreoscom.ServiceMonitorSpecEndpointsTargetPort",
            },
          },
          "static": true,
        },
      ],
      "name": "ServiceMonitorSpecEndpointsTargetPort",
      "properties": Array [
        Object {
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 25611,
          },
          "name": "value",
          "type": Object {
            "primitive": "any",
          },
        },
      ],
    },
    "monitoringcoreoscom.ServiceMonitorSpecEndpointsTlsConfig": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "ServiceMonitorSpecEndpointsTlsConfig",
        },
        "summary": "TLS configuration to use when scraping the endpoint.",
      },
      "fqn": "monitoringcoreoscom.ServiceMonitorSpecEndpointsTlsConfig",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 25621,
      },
      "name": "ServiceMonitorSpecEndpointsTlsConfig",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ServiceMonitorSpecEndpointsTlsConfig#ca",
            },
            "summary": "Stuct containing the CA cert to use for the targets.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 25627,
          },
          "name": "ca",
          "optional": true,
          "type": Object {
            "fqn": "monitoringcoreoscom.ServiceMonitorSpecEndpointsTlsConfigCa",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ServiceMonitorSpecEndpointsTlsConfig#caFile",
            },
            "summary": "Path to the CA cert in the Prometheus container to use for the targets.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 25634,
          },
          "name": "caFile",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ServiceMonitorSpecEndpointsTlsConfig#cert",
            },
            "summary": "Struct containing the client cert file for the targets.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 25641,
          },
          "name": "cert",
          "optional": true,
          "type": Object {
            "fqn": "monitoringcoreoscom.ServiceMonitorSpecEndpointsTlsConfigCert",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ServiceMonitorSpecEndpointsTlsConfig#certFile",
            },
            "summary": "Path to the client cert file in the Prometheus container for the targets.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 25648,
          },
          "name": "certFile",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ServiceMonitorSpecEndpointsTlsConfig#insecureSkipVerify",
            },
            "summary": "Disable target certificate validation.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 25655,
          },
          "name": "insecureSkipVerify",
          "optional": true,
          "type": Object {
            "primitive": "boolean",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ServiceMonitorSpecEndpointsTlsConfig#keyFile",
            },
            "summary": "Path to the client key file in the Prometheus container for the targets.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 25662,
          },
          "name": "keyFile",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ServiceMonitorSpecEndpointsTlsConfig#keySecret",
            },
            "summary": "Secret containing the client key file for the targets.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 25669,
          },
          "name": "keySecret",
          "optional": true,
          "type": Object {
            "fqn": "monitoringcoreoscom.ServiceMonitorSpecEndpointsTlsConfigKeySecret",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ServiceMonitorSpecEndpointsTlsConfig#serverName",
            },
            "summary": "Used to verify the hostname for the targets.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 25676,
          },
          "name": "serverName",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
      ],
    },
    "monitoringcoreoscom.ServiceMonitorSpecEndpointsTlsConfigCa": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "ServiceMonitorSpecEndpointsTlsConfigCa",
        },
        "summary": "Stuct containing the CA cert to use for the targets.",
      },
      "fqn": "monitoringcoreoscom.ServiceMonitorSpecEndpointsTlsConfigCa",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 25841,
      },
      "name": "ServiceMonitorSpecEndpointsTlsConfigCa",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ServiceMonitorSpecEndpointsTlsConfigCa#configMap",
            },
            "summary": "ConfigMap containing data to use for the targets.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 25847,
          },
          "name": "configMap",
          "optional": true,
          "type": Object {
            "fqn": "monitoringcoreoscom.ServiceMonitorSpecEndpointsTlsConfigCaConfigMap",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ServiceMonitorSpecEndpointsTlsConfigCa#secret",
            },
            "summary": "Secret containing data to use for the targets.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 25854,
          },
          "name": "secret",
          "optional": true,
          "type": Object {
            "fqn": "monitoringcoreoscom.ServiceMonitorSpecEndpointsTlsConfigCaSecret",
          },
        },
      ],
    },
    "monitoringcoreoscom.ServiceMonitorSpecEndpointsTlsConfigCaConfigMap": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "ServiceMonitorSpecEndpointsTlsConfigCaConfigMap",
        },
        "summary": "ConfigMap containing data to use for the targets.",
      },
      "fqn": "monitoringcoreoscom.ServiceMonitorSpecEndpointsTlsConfigCaConfigMap",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 25960,
      },
      "name": "ServiceMonitorSpecEndpointsTlsConfigCaConfigMap",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ServiceMonitorSpecEndpointsTlsConfigCaConfigMap#key",
            },
            "summary": "The key to select.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 25966,
          },
          "name": "key",
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ServiceMonitorSpecEndpointsTlsConfigCaConfigMap#name",
            },
            "remarks": "More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?",
            "summary": "Name of the referent.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 25973,
          },
          "name": "name",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ServiceMonitorSpecEndpointsTlsConfigCaConfigMap#optional",
            },
            "summary": "Specify whether the ConfigMap or its key must be defined.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 25980,
          },
          "name": "optional",
          "optional": true,
          "type": Object {
            "primitive": "boolean",
          },
        },
      ],
    },
    "monitoringcoreoscom.ServiceMonitorSpecEndpointsTlsConfigCaSecret": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "ServiceMonitorSpecEndpointsTlsConfigCaSecret",
        },
        "summary": "Secret containing data to use for the targets.",
      },
      "fqn": "monitoringcoreoscom.ServiceMonitorSpecEndpointsTlsConfigCaSecret",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 26005,
      },
      "name": "ServiceMonitorSpecEndpointsTlsConfigCaSecret",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ServiceMonitorSpecEndpointsTlsConfigCaSecret#key",
            },
            "remarks": "Must be a valid secret key.",
            "summary": "The key of the secret to select from.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 26011,
          },
          "name": "key",
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ServiceMonitorSpecEndpointsTlsConfigCaSecret#name",
            },
            "remarks": "More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?",
            "summary": "Name of the referent.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 26018,
          },
          "name": "name",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ServiceMonitorSpecEndpointsTlsConfigCaSecret#optional",
            },
            "summary": "Specify whether the Secret or its key must be defined.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 26025,
          },
          "name": "optional",
          "optional": true,
          "type": Object {
            "primitive": "boolean",
          },
        },
      ],
    },
    "monitoringcoreoscom.ServiceMonitorSpecEndpointsTlsConfigCert": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "ServiceMonitorSpecEndpointsTlsConfigCert",
        },
        "summary": "Struct containing the client cert file for the targets.",
      },
      "fqn": "monitoringcoreoscom.ServiceMonitorSpecEndpointsTlsConfigCert",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 25878,
      },
      "name": "ServiceMonitorSpecEndpointsTlsConfigCert",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ServiceMonitorSpecEndpointsTlsConfigCert#configMap",
            },
            "summary": "ConfigMap containing data to use for the targets.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 25884,
          },
          "name": "configMap",
          "optional": true,
          "type": Object {
            "fqn": "monitoringcoreoscom.ServiceMonitorSpecEndpointsTlsConfigCertConfigMap",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ServiceMonitorSpecEndpointsTlsConfigCert#secret",
            },
            "summary": "Secret containing data to use for the targets.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 25891,
          },
          "name": "secret",
          "optional": true,
          "type": Object {
            "fqn": "monitoringcoreoscom.ServiceMonitorSpecEndpointsTlsConfigCertSecret",
          },
        },
      ],
    },
    "monitoringcoreoscom.ServiceMonitorSpecEndpointsTlsConfigCertConfigMap": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "ServiceMonitorSpecEndpointsTlsConfigCertConfigMap",
        },
        "summary": "ConfigMap containing data to use for the targets.",
      },
      "fqn": "monitoringcoreoscom.ServiceMonitorSpecEndpointsTlsConfigCertConfigMap",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 26050,
      },
      "name": "ServiceMonitorSpecEndpointsTlsConfigCertConfigMap",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ServiceMonitorSpecEndpointsTlsConfigCertConfigMap#key",
            },
            "summary": "The key to select.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 26056,
          },
          "name": "key",
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ServiceMonitorSpecEndpointsTlsConfigCertConfigMap#name",
            },
            "remarks": "More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?",
            "summary": "Name of the referent.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 26063,
          },
          "name": "name",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ServiceMonitorSpecEndpointsTlsConfigCertConfigMap#optional",
            },
            "summary": "Specify whether the ConfigMap or its key must be defined.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 26070,
          },
          "name": "optional",
          "optional": true,
          "type": Object {
            "primitive": "boolean",
          },
        },
      ],
    },
    "monitoringcoreoscom.ServiceMonitorSpecEndpointsTlsConfigCertSecret": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "ServiceMonitorSpecEndpointsTlsConfigCertSecret",
        },
        "summary": "Secret containing data to use for the targets.",
      },
      "fqn": "monitoringcoreoscom.ServiceMonitorSpecEndpointsTlsConfigCertSecret",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 26095,
      },
      "name": "ServiceMonitorSpecEndpointsTlsConfigCertSecret",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ServiceMonitorSpecEndpointsTlsConfigCertSecret#key",
            },
            "remarks": "Must be a valid secret key.",
            "summary": "The key of the secret to select from.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 26101,
          },
          "name": "key",
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ServiceMonitorSpecEndpointsTlsConfigCertSecret#name",
            },
            "remarks": "More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?",
            "summary": "Name of the referent.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 26108,
          },
          "name": "name",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ServiceMonitorSpecEndpointsTlsConfigCertSecret#optional",
            },
            "summary": "Specify whether the Secret or its key must be defined.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 26115,
          },
          "name": "optional",
          "optional": true,
          "type": Object {
            "primitive": "boolean",
          },
        },
      ],
    },
    "monitoringcoreoscom.ServiceMonitorSpecEndpointsTlsConfigKeySecret": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "ServiceMonitorSpecEndpointsTlsConfigKeySecret",
        },
        "summary": "Secret containing the client key file for the targets.",
      },
      "fqn": "monitoringcoreoscom.ServiceMonitorSpecEndpointsTlsConfigKeySecret",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 25915,
      },
      "name": "ServiceMonitorSpecEndpointsTlsConfigKeySecret",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ServiceMonitorSpecEndpointsTlsConfigKeySecret#key",
            },
            "remarks": "Must be a valid secret key.",
            "summary": "The key of the secret to select from.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 25921,
          },
          "name": "key",
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ServiceMonitorSpecEndpointsTlsConfigKeySecret#name",
            },
            "remarks": "More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?",
            "summary": "Name of the referent.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 25928,
          },
          "name": "name",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ServiceMonitorSpecEndpointsTlsConfigKeySecret#optional",
            },
            "summary": "Specify whether the Secret or its key must be defined.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 25935,
          },
          "name": "optional",
          "optional": true,
          "type": Object {
            "primitive": "boolean",
          },
        },
      ],
    },
    "monitoringcoreoscom.ServiceMonitorSpecNamespaceSelector": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "ServiceMonitorSpecNamespaceSelector",
        },
        "summary": "Selector to select which namespaces the Endpoints objects are discovered from.",
      },
      "fqn": "monitoringcoreoscom.ServiceMonitorSpecNamespaceSelector",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 25288,
      },
      "name": "ServiceMonitorSpecNamespaceSelector",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ServiceMonitorSpecNamespaceSelector#any",
            },
            "summary": "Boolean describing whether all namespaces are selected in contrast to a list restricting them.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 25294,
          },
          "name": "any",
          "optional": true,
          "type": Object {
            "primitive": "boolean",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ServiceMonitorSpecNamespaceSelector#matchNames",
            },
            "summary": "List of namespace names.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 25301,
          },
          "name": "matchNames",
          "optional": true,
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "primitive": "string",
              },
              "kind": "array",
            },
          },
        },
      ],
    },
    "monitoringcoreoscom.ServiceMonitorSpecSelector": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "ServiceMonitorSpecSelector",
        },
        "summary": "Selector to select Endpoints objects.",
      },
      "fqn": "monitoringcoreoscom.ServiceMonitorSpecSelector",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 25325,
      },
      "name": "ServiceMonitorSpecSelector",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ServiceMonitorSpecSelector#matchExpressions",
            },
            "remarks": "The requirements are ANDed.",
            "summary": "matchExpressions is a list of label selector requirements.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 25331,
          },
          "name": "matchExpressions",
          "optional": true,
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "fqn": "monitoringcoreoscom.ServiceMonitorSpecSelectorMatchExpressions",
              },
              "kind": "array",
            },
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ServiceMonitorSpecSelector#matchLabels",
            },
            "remarks": "A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is \\"key\\", the operator is \\"In\\", and the values array contains only \\"value\\". The requirements are ANDed.",
            "summary": "matchLabels is a map of {key,value} pairs.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 25338,
          },
          "name": "matchLabels",
          "optional": true,
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "primitive": "string",
              },
              "kind": "map",
            },
          },
        },
      ],
    },
    "monitoringcoreoscom.ServiceMonitorSpecSelectorMatchExpressions": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "ServiceMonitorSpecSelectorMatchExpressions",
        },
        "summary": "A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.",
      },
      "fqn": "monitoringcoreoscom.ServiceMonitorSpecSelectorMatchExpressions",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 25706,
      },
      "name": "ServiceMonitorSpecSelectorMatchExpressions",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ServiceMonitorSpecSelectorMatchExpressions#key",
            },
            "summary": "key is the label key that the selector applies to.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 25712,
          },
          "name": "key",
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ServiceMonitorSpecSelectorMatchExpressions#operator",
            },
            "remarks": "Valid operators are In, NotIn, Exists and DoesNotExist.",
            "summary": "operator represents a key's relationship to a set of values.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 25719,
          },
          "name": "operator",
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ServiceMonitorSpecSelectorMatchExpressions#values",
            },
            "remarks": "If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.",
            "summary": "values is an array of string values.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 25726,
          },
          "name": "values",
          "optional": true,
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "primitive": "string",
              },
              "kind": "array",
            },
          },
        },
      ],
    },
    "monitoringcoreoscom.ThanosRuler": Object {
      "assembly": "monitoringcoreoscom",
      "base": "cdk8s.ApiObject",
      "docs": Object {
        "custom": Object {
          "schema": "ThanosRuler",
        },
        "summary": "ThanosRuler defines a ThanosRuler deployment.",
      },
      "fqn": "monitoringcoreoscom.ThanosRuler",
      "initializer": Object {
        "docs": Object {
          "summary": "Defines a \\"ThanosRuler\\" API object.",
        },
        "locationInModule": Object {
          "filename": "monitoring.coreos.com.ts",
          "line": 26169,
        },
        "parameters": Array [
          Object {
            "docs": Object {
              "summary": "the scope in which to define this object.",
            },
            "name": "scope",
            "type": Object {
              "fqn": "constructs.Construct",
            },
          },
          Object {
            "docs": Object {
              "summary": "a scope-local name for the object.",
            },
            "name": "id",
            "type": Object {
              "primitive": "string",
            },
          },
          Object {
            "docs": Object {
              "summary": "initialization props.",
            },
            "name": "props",
            "type": Object {
              "fqn": "monitoringcoreoscom.ThanosRulerProps",
            },
          },
        ],
      },
      "kind": "class",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 26140,
      },
      "methods": Array [
        Object {
          "docs": Object {
            "remarks": "This can be used to inline resource manifests inside other objects (e.g. as templates).",
            "summary": "Renders a Kubernetes manifest for \\"ThanosRuler\\".",
          },
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 26156,
          },
          "name": "manifest",
          "parameters": Array [
            Object {
              "docs": Object {
                "summary": "initialization props.",
              },
              "name": "props",
              "type": Object {
                "fqn": "monitoringcoreoscom.ThanosRulerProps",
              },
            },
          ],
          "returns": Object {
            "type": Object {
              "primitive": "any",
            },
          },
          "static": true,
        },
      ],
      "name": "ThanosRuler",
      "properties": Array [
        Object {
          "const": true,
          "docs": Object {
            "summary": "Returns the apiVersion and kind for \\"ThanosRuler\\".",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 26144,
          },
          "name": "GVK",
          "static": true,
          "type": Object {
            "fqn": "cdk8s.GroupVersionKind",
          },
        },
      ],
    },
    "monitoringcoreoscom.ThanosRulerProps": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "ThanosRuler",
        },
        "summary": "ThanosRuler defines a ThanosRuler deployment.",
      },
      "fqn": "monitoringcoreoscom.ThanosRulerProps",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 26179,
      },
      "name": "ThanosRulerProps",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRuler#spec",
            },
            "remarks": "More info: https://github.com/kubernetes/community/blob/master/contributors/devel/sig-architecture/api-conventions.md#spec-and-status",
            "summary": "Specification of the desired behavior of the ThanosRuler cluster.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 26190,
          },
          "name": "spec",
          "type": Object {
            "fqn": "monitoringcoreoscom.ThanosRulerSpec",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRuler#metadata",
            },
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 26183,
          },
          "name": "metadata",
          "optional": true,
          "type": Object {
            "primitive": "any",
          },
        },
      ],
    },
    "monitoringcoreoscom.ThanosRulerSpec": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "ThanosRulerSpec",
        },
        "remarks": "More info: https://github.com/kubernetes/community/blob/master/contributors/devel/sig-architecture/api-conventions.md#spec-and-status",
        "summary": "Specification of the desired behavior of the ThanosRuler cluster.",
      },
      "fqn": "monitoringcoreoscom.ThanosRulerSpec",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 26214,
      },
      "name": "ThanosRulerSpec",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpec#affinity",
            },
            "summary": "If specified, the pod's scheduling constraints.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 26220,
          },
          "name": "affinity",
          "optional": true,
          "type": Object {
            "fqn": "monitoringcoreoscom.ThanosRulerSpecAffinity",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpec#alertDropLabels",
            },
            "remarks": "If \`labels\` field is not provided, \`thanos_ruler_replica\` will be dropped in alerts by default.",
            "summary": "AlertDropLabels configure the label names which should be dropped in ThanosRuler alerts.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 26227,
          },
          "name": "alertDropLabels",
          "optional": true,
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "primitive": "string",
              },
              "kind": "array",
            },
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpec#alertmanagersConfig",
            },
            "remarks": "Only available with thanos v0.10.0 and higher.  Maps to the \`alertmanagers.config\` arg.",
            "summary": "Define configuration for connecting to alertmanager.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 26241,
          },
          "name": "alertmanagersConfig",
          "optional": true,
          "type": Object {
            "fqn": "monitoringcoreoscom.ThanosRulerSpecAlertmanagersConfig",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpec#alertmanagersUrl",
            },
            "remarks": "For Thanos v0.10.0 and higher, AlertManagersConfig should be used instead.  Note: this field will be ignored if AlertManagersConfig is specified. Maps to the \`alertmanagers.url\` arg.",
            "summary": "Define URLs to send alerts to Alertmanager.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 26248,
          },
          "name": "alertmanagersUrl",
          "optional": true,
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "primitive": "string",
              },
              "kind": "array",
            },
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpec#alertQueryUrl",
            },
            "remarks": "Maps to the '--alert.query-url' CLI arg.",
            "summary": "The external Query URL the Thanos Ruler will set in the 'Source' field of all alerts.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 26234,
          },
          "name": "alertQueryUrl",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpec#containers",
            },
            "remarks": "This can be used to allow adding an authentication proxy to a ThanosRuler pod or to change the behavior of an operator generated container. Containers described here modify an operator generated container if they share the same name and modifications are done via a strategic merge patch. The current container names are: \`thanos-ruler\` and \`rules-configmap-reloader\`. Overriding containers is entirely outside the scope of what the maintainers will support and by doing so, you accept that this behaviour may break at any time without notice.",
            "summary": "Containers allows injecting additional containers or modifying operator generated containers.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 26255,
          },
          "name": "containers",
          "optional": true,
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "fqn": "monitoringcoreoscom.ThanosRulerSpecContainers",
              },
              "kind": "array",
            },
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpec#enforcedNamespaceLabel",
            },
            "remarks": "The label value will always be the namespace of the object that is being created.",
            "summary": "EnforcedNamespaceLabel enforces adding a namespace label of origin for each alert and metric that is user created.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 26262,
          },
          "name": "enforcedNamespaceLabel",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpec#evaluationInterval",
            },
            "summary": "Interval between consecutive evaluations.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 26269,
          },
          "name": "evaluationInterval",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpec#externalPrefix",
            },
            "remarks": "This is necessary to generate correct URLs. This is necessary if Thanos Ruler is not served from root of a DNS name.",
            "summary": "The external URL the Thanos Ruler instances will be available under.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 26276,
          },
          "name": "externalPrefix",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpec#grpcServerTlsConfig",
            },
            "remarks": "Note: Currently only the CAFile, CertFile, and KeyFile fields are supported. Maps to the '--grpc-server-tls-*' CLI args.",
            "summary": "GRPCServerTLSConfig configures the gRPC server from which Thanos Querier reads recorded rule data.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 26283,
          },
          "name": "grpcServerTlsConfig",
          "optional": true,
          "type": Object {
            "fqn": "monitoringcoreoscom.ThanosRulerSpecGrpcServerTlsConfig",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpec#image",
            },
            "summary": "Thanos container image URL.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 26290,
          },
          "name": "image",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpec#imagePullSecrets",
            },
            "summary": "An optional list of references to secrets in the same namespace to use for pulling thanos images from registries see http://kubernetes.io/docs/user-guide/images#specifying-imagepullsecrets-on-a-pod.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 26297,
          },
          "name": "imagePullSecrets",
          "optional": true,
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "fqn": "monitoringcoreoscom.ThanosRulerSpecImagePullSecrets",
              },
              "kind": "array",
            },
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpec#initContainers",
            },
            "remarks": "Those can be used to e.g. fetch secrets for injection into the ThanosRuler configuration from external sources. Any errors during the execution of an initContainer will lead to a restart of the Pod. More info: https://kubernetes.io/docs/concepts/workloads/pods/init-containers/ Using initContainers for any use case other then secret fetching is entirely outside the scope of what the maintainers will support and by doing so, you accept that this behaviour may break at any time without notice.",
            "summary": "InitContainers allows adding initContainers to the pod definition.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 26304,
          },
          "name": "initContainers",
          "optional": true,
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "fqn": "monitoringcoreoscom.ThanosRulerSpecInitContainers",
              },
              "kind": "array",
            },
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpec#labels",
            },
            "remarks": "If not provided, default replica label \`thanos_ruler_replica\` will be added as a label and be dropped in alerts.",
            "summary": "Labels configure the external label pairs to ThanosRuler.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 26311,
          },
          "name": "labels",
          "optional": true,
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "primitive": "string",
              },
              "kind": "map",
            },
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpec#listenLocal",
            },
            "summary": "ListenLocal makes the Thanos ruler listen on loopback, so that it does not bind against the Pod IP.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 26318,
          },
          "name": "listenLocal",
          "optional": true,
          "type": Object {
            "primitive": "boolean",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpec#logFormat",
            },
            "summary": "Log format for ThanosRuler to be configured with.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 26325,
          },
          "name": "logFormat",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpec#logLevel",
            },
            "summary": "Log level for ThanosRuler to be configured with.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 26332,
          },
          "name": "logLevel",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpec#nodeSelector",
            },
            "summary": "Define which Nodes the Pods are scheduled on.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 26339,
          },
          "name": "nodeSelector",
          "optional": true,
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "primitive": "string",
              },
              "kind": "map",
            },
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpec#objectStorageConfig",
            },
            "summary": "ObjectStorageConfig configures object storage in Thanos.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 26346,
          },
          "name": "objectStorageConfig",
          "optional": true,
          "type": Object {
            "fqn": "monitoringcoreoscom.ThanosRulerSpecObjectStorageConfig",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpec#paused",
            },
            "summary": "When a ThanosRuler deployment is paused, no actions except for deletion will be performed on the underlying objects.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 26353,
          },
          "name": "paused",
          "optional": true,
          "type": Object {
            "primitive": "boolean",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpec#podMetadata",
            },
            "summary": "PodMetadata contains Labels and Annotations gets propagated to the thanos ruler pods.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 26360,
          },
          "name": "podMetadata",
          "optional": true,
          "type": Object {
            "fqn": "monitoringcoreoscom.ThanosRulerSpecPodMetadata",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpec#portName",
            },
            "remarks": "This defaults to web",
            "summary": "Port name used for the pods and governing service.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 26367,
          },
          "name": "portName",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpec#priorityClassName",
            },
            "summary": "Priority class assigned to the Pods.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 26374,
          },
          "name": "priorityClassName",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpec#queryConfig",
            },
            "remarks": "If this is defined, the QueryEndpoints field will be ignored. Maps to the \`query.config\` CLI argument. Only available with thanos v0.11.0 and higher.",
            "summary": "Define configuration for connecting to thanos query instances.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 26381,
          },
          "name": "queryConfig",
          "optional": true,
          "type": Object {
            "fqn": "monitoringcoreoscom.ThanosRulerSpecQueryConfig",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpec#queryEndpoints",
            },
            "remarks": "Maps to the --query flag of thanos ruler.",
            "summary": "QueryEndpoints defines Thanos querier endpoints from which to query metrics.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 26388,
          },
          "name": "queryEndpoints",
          "optional": true,
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "primitive": "string",
              },
              "kind": "array",
            },
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpec#replicas",
            },
            "summary": "Number of thanos ruler instances to deploy.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 26395,
          },
          "name": "replicas",
          "optional": true,
          "type": Object {
            "primitive": "number",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpec#resources",
            },
            "remarks": "If not provided, no requests/limits will be set",
            "summary": "Resources defines the resource requirements for single Pods.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 26402,
          },
          "name": "resources",
          "optional": true,
          "type": Object {
            "fqn": "monitoringcoreoscom.ThanosRulerSpecResources",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpec#retention",
            },
            "default": "24h', and must match the regular expression \`[0-9]+(ms|s|m|h|d|w|y)\` (milliseconds seconds minutes hours days weeks years).",
            "remarks": "Default is '24h', and must match the regular expression \`[0-9]+(ms|s|m|h|d|w|y)\` (milliseconds seconds minutes hours days weeks years).",
            "summary": "Time duration ThanosRuler shall retain data for.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 26410,
          },
          "name": "retention",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpec#routePrefix",
            },
            "remarks": "This allows thanos UI to be served on a sub-path.",
            "summary": "The route prefix ThanosRuler registers HTTP handlers for.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 26417,
          },
          "name": "routePrefix",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpec#ruleNamespaceSelector",
            },
            "remarks": "If unspecified, only the same namespace as the ThanosRuler object is in is used.",
            "summary": "Namespaces to be selected for Rules discovery.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 26424,
          },
          "name": "ruleNamespaceSelector",
          "optional": true,
          "type": Object {
            "fqn": "monitoringcoreoscom.ThanosRulerSpecRuleNamespaceSelector",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpec#ruleSelector",
            },
            "summary": "A label selector to select which PrometheusRules to mount for alerting and recording.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 26431,
          },
          "name": "ruleSelector",
          "optional": true,
          "type": Object {
            "fqn": "monitoringcoreoscom.ThanosRulerSpecRuleSelector",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpec#securityContext",
            },
            "remarks": "This defaults to the default PodSecurityContext.",
            "summary": "SecurityContext holds pod-level security attributes and common container settings.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 26438,
          },
          "name": "securityContext",
          "optional": true,
          "type": Object {
            "fqn": "monitoringcoreoscom.ThanosRulerSpecSecurityContext",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpec#serviceAccountName",
            },
            "summary": "ServiceAccountName is the name of the ServiceAccount to use to run the Thanos Ruler Pods.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 26445,
          },
          "name": "serviceAccountName",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpec#storage",
            },
            "summary": "Storage spec to specify how storage shall be used.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 26452,
          },
          "name": "storage",
          "optional": true,
          "type": Object {
            "fqn": "monitoringcoreoscom.ThanosRulerSpecStorage",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpec#tolerations",
            },
            "summary": "If specified, the pod's tolerations.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 26459,
          },
          "name": "tolerations",
          "optional": true,
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "fqn": "monitoringcoreoscom.ThanosRulerSpecTolerations",
              },
              "kind": "array",
            },
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpec#tracingConfig",
            },
            "remarks": "This is an experimental feature, it may change in any upcoming release in a breaking way.",
            "summary": "TracingConfig configures tracing in Thanos.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 26466,
          },
          "name": "tracingConfig",
          "optional": true,
          "type": Object {
            "fqn": "monitoringcoreoscom.ThanosRulerSpecTracingConfig",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpec#volumes",
            },
            "remarks": "Volumes specified will be appended to other volumes that are generated as a result of StorageSpec objects.",
            "summary": "Volumes allows configuration of additional volumes on the output StatefulSet definition.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 26473,
          },
          "name": "volumes",
          "optional": true,
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "fqn": "monitoringcoreoscom.ThanosRulerSpecVolumes",
              },
              "kind": "array",
            },
          },
        },
      ],
    },
    "monitoringcoreoscom.ThanosRulerSpecAffinity": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "ThanosRulerSpecAffinity",
        },
        "summary": "If specified, the pod's scheduling constraints.",
      },
      "fqn": "monitoringcoreoscom.ThanosRulerSpecAffinity",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 26532,
      },
      "name": "ThanosRulerSpecAffinity",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecAffinity#nodeAffinity",
            },
            "summary": "Describes node affinity scheduling rules for the pod.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 26538,
          },
          "name": "nodeAffinity",
          "optional": true,
          "type": Object {
            "fqn": "monitoringcoreoscom.ThanosRulerSpecAffinityNodeAffinity",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecAffinity#podAffinity",
            },
            "summary": "Describes pod affinity scheduling rules (e.g. co-locate this pod in the same node, zone, etc. as some other pod(s)).",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 26545,
          },
          "name": "podAffinity",
          "optional": true,
          "type": Object {
            "fqn": "monitoringcoreoscom.ThanosRulerSpecAffinityPodAffinity",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecAffinity#podAntiAffinity",
            },
            "summary": "Describes pod anti-affinity scheduling rules (e.g. avoid putting this pod in the same node, zone, etc. as some other pod(s)).",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 26552,
          },
          "name": "podAntiAffinity",
          "optional": true,
          "type": Object {
            "fqn": "monitoringcoreoscom.ThanosRulerSpecAffinityPodAntiAffinity",
          },
        },
      ],
    },
    "monitoringcoreoscom.ThanosRulerSpecAffinityNodeAffinity": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "ThanosRulerSpecAffinityNodeAffinity",
        },
        "summary": "Describes node affinity scheduling rules for the pod.",
      },
      "fqn": "monitoringcoreoscom.ThanosRulerSpecAffinityNodeAffinity",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 27889,
      },
      "name": "ThanosRulerSpecAffinityNodeAffinity",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecAffinityNodeAffinity#preferredDuringSchedulingIgnoredDuringExecution",
            },
            "remarks": "The node that is most preferred is the one with the greatest sum of weights, i.e. for each node that meets all of the scheduling requirements (resource request, requiredDuringScheduling affinity expressions, etc.), compute a sum by iterating through the elements of this field and adding \\"weight\\" to the sum if the node matches the corresponding matchExpressions; the node(s) with the highest sum are the most preferred.",
            "summary": "The scheduler will prefer to schedule pods to nodes that satisfy the affinity expressions specified by this field, but it may choose a node that violates one or more of the expressions.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 27895,
          },
          "name": "preferredDuringSchedulingIgnoredDuringExecution",
          "optional": true,
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "fqn": "monitoringcoreoscom.ThanosRulerSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecution",
              },
              "kind": "array",
            },
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecAffinityNodeAffinity#requiredDuringSchedulingIgnoredDuringExecution",
            },
            "remarks": "If the affinity requirements specified by this field cease to be met at some point during pod execution (e.g. due to an update), the system may or may not try to eventually evict the pod from its node.",
            "summary": "If the affinity requirements specified by this field are not met at scheduling time, the pod will not be scheduled onto the node.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 27902,
          },
          "name": "requiredDuringSchedulingIgnoredDuringExecution",
          "optional": true,
          "type": Object {
            "fqn": "monitoringcoreoscom.ThanosRulerSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecution",
          },
        },
      ],
    },
    "monitoringcoreoscom.ThanosRulerSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecution": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "ThanosRulerSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecution",
        },
        "summary": "An empty preferred scheduling term matches all objects with implicit weight 0 (i.e. it's a no-op). A null preferred scheduling term matches no objects (i.e. is also a no-op).",
      },
      "fqn": "monitoringcoreoscom.ThanosRulerSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecution",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 31436,
      },
      "name": "ThanosRulerSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecution",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecution#preference",
            },
            "summary": "A node selector term, associated with the corresponding weight.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 31442,
          },
          "name": "preference",
          "type": Object {
            "fqn": "monitoringcoreoscom.ThanosRulerSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreference",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecution#weight",
            },
            "summary": "Weight associated with matching the corresponding nodeSelectorTerm, in the range 1-100.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 31449,
          },
          "name": "weight",
          "type": Object {
            "primitive": "number",
          },
        },
      ],
    },
    "monitoringcoreoscom.ThanosRulerSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreference": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "ThanosRulerSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreference",
        },
        "summary": "A node selector term, associated with the corresponding weight.",
      },
      "fqn": "monitoringcoreoscom.ThanosRulerSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreference",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 33926,
      },
      "name": "ThanosRulerSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreference",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreference#matchExpressions",
            },
            "summary": "A list of node selector requirements by node's labels.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 33932,
          },
          "name": "matchExpressions",
          "optional": true,
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "fqn": "monitoringcoreoscom.ThanosRulerSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressions",
              },
              "kind": "array",
            },
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreference#matchFields",
            },
            "summary": "A list of node selector requirements by node's fields.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 33939,
          },
          "name": "matchFields",
          "optional": true,
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "fqn": "monitoringcoreoscom.ThanosRulerSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFields",
              },
              "kind": "array",
            },
          },
        },
      ],
    },
    "monitoringcoreoscom.ThanosRulerSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressions": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "ThanosRulerSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressions",
        },
        "summary": "A node selector requirement is a selector that contains values, a key, and an operator that relates the key and values.",
      },
      "fqn": "monitoringcoreoscom.ThanosRulerSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressions",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 35879,
      },
      "name": "ThanosRulerSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressions",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressions#key",
            },
            "summary": "The label key that the selector applies to.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 35885,
          },
          "name": "key",
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressions#operator",
            },
            "remarks": "Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.",
            "summary": "Represents a key's relationship to a set of values.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 35892,
          },
          "name": "operator",
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressions#values",
            },
            "remarks": "If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. If the operator is Gt or Lt, the values array must have a single element, which will be interpreted as an integer. This array is replaced during a strategic merge patch.",
            "summary": "An array of string values.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 35899,
          },
          "name": "values",
          "optional": true,
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "primitive": "string",
              },
              "kind": "array",
            },
          },
        },
      ],
    },
    "monitoringcoreoscom.ThanosRulerSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFields": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "ThanosRulerSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFields",
        },
        "summary": "A node selector requirement is a selector that contains values, a key, and an operator that relates the key and values.",
      },
      "fqn": "monitoringcoreoscom.ThanosRulerSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFields",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 35924,
      },
      "name": "ThanosRulerSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFields",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFields#key",
            },
            "summary": "The label key that the selector applies to.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 35930,
          },
          "name": "key",
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFields#operator",
            },
            "remarks": "Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.",
            "summary": "Represents a key's relationship to a set of values.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 35937,
          },
          "name": "operator",
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFields#values",
            },
            "remarks": "If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. If the operator is Gt or Lt, the values array must have a single element, which will be interpreted as an integer. This array is replaced during a strategic merge patch.",
            "summary": "An array of string values.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 35944,
          },
          "name": "values",
          "optional": true,
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "primitive": "string",
              },
              "kind": "array",
            },
          },
        },
      ],
    },
    "monitoringcoreoscom.ThanosRulerSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecution": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "ThanosRulerSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecution",
        },
        "remarks": "If the affinity requirements specified by this field cease to be met at some point during pod execution (e.g. due to an update), the system may or may not try to eventually evict the pod from its node.",
        "summary": "If the affinity requirements specified by this field are not met at scheduling time, the pod will not be scheduled onto the node.",
      },
      "fqn": "monitoringcoreoscom.ThanosRulerSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecution",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 31473,
      },
      "name": "ThanosRulerSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecution",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecution#nodeSelectorTerms",
            },
            "remarks": "A list of node selector terms. The terms are ORed.",
            "summary": "Required.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 31479,
          },
          "name": "nodeSelectorTerms",
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "fqn": "monitoringcoreoscom.ThanosRulerSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTerms",
              },
              "kind": "array",
            },
          },
        },
      ],
    },
    "monitoringcoreoscom.ThanosRulerSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTerms": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "ThanosRulerSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTerms",
        },
        "remarks": "The requirements of them are ANDed. The TopologySelectorTerm type implements a subset of the NodeSelectorTerm.",
        "summary": "A null or empty node selector term matches no objects.",
      },
      "fqn": "monitoringcoreoscom.ThanosRulerSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTerms",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 33963,
      },
      "name": "ThanosRulerSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTerms",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTerms#matchExpressions",
            },
            "summary": "A list of node selector requirements by node's labels.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 33969,
          },
          "name": "matchExpressions",
          "optional": true,
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "fqn": "monitoringcoreoscom.ThanosRulerSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressions",
              },
              "kind": "array",
            },
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTerms#matchFields",
            },
            "summary": "A list of node selector requirements by node's fields.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 33976,
          },
          "name": "matchFields",
          "optional": true,
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "fqn": "monitoringcoreoscom.ThanosRulerSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFields",
              },
              "kind": "array",
            },
          },
        },
      ],
    },
    "monitoringcoreoscom.ThanosRulerSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressions": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "ThanosRulerSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressions",
        },
        "summary": "A node selector requirement is a selector that contains values, a key, and an operator that relates the key and values.",
      },
      "fqn": "monitoringcoreoscom.ThanosRulerSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressions",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 35969,
      },
      "name": "ThanosRulerSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressions",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressions#key",
            },
            "summary": "The label key that the selector applies to.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 35975,
          },
          "name": "key",
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressions#operator",
            },
            "remarks": "Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.",
            "summary": "Represents a key's relationship to a set of values.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 35982,
          },
          "name": "operator",
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressions#values",
            },
            "remarks": "If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. If the operator is Gt or Lt, the values array must have a single element, which will be interpreted as an integer. This array is replaced during a strategic merge patch.",
            "summary": "An array of string values.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 35989,
          },
          "name": "values",
          "optional": true,
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "primitive": "string",
              },
              "kind": "array",
            },
          },
        },
      ],
    },
    "monitoringcoreoscom.ThanosRulerSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFields": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "ThanosRulerSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFields",
        },
        "summary": "A node selector requirement is a selector that contains values, a key, and an operator that relates the key and values.",
      },
      "fqn": "monitoringcoreoscom.ThanosRulerSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFields",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 36014,
      },
      "name": "ThanosRulerSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFields",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFields#key",
            },
            "summary": "The label key that the selector applies to.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 36020,
          },
          "name": "key",
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFields#operator",
            },
            "remarks": "Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.",
            "summary": "Represents a key's relationship to a set of values.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 36027,
          },
          "name": "operator",
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFields#values",
            },
            "remarks": "If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. If the operator is Gt or Lt, the values array must have a single element, which will be interpreted as an integer. This array is replaced during a strategic merge patch.",
            "summary": "An array of string values.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 36034,
          },
          "name": "values",
          "optional": true,
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "primitive": "string",
              },
              "kind": "array",
            },
          },
        },
      ],
    },
    "monitoringcoreoscom.ThanosRulerSpecAffinityPodAffinity": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "ThanosRulerSpecAffinityPodAffinity",
        },
        "summary": "Describes pod affinity scheduling rules (e.g. co-locate this pod in the same node, zone, etc. as some other pod(s)).",
      },
      "fqn": "monitoringcoreoscom.ThanosRulerSpecAffinityPodAffinity",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 27926,
      },
      "name": "ThanosRulerSpecAffinityPodAffinity",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecAffinityPodAffinity#preferredDuringSchedulingIgnoredDuringExecution",
            },
            "remarks": "The node that is most preferred is the one with the greatest sum of weights, i.e. for each node that meets all of the scheduling requirements (resource request, requiredDuringScheduling affinity expressions, etc.), compute a sum by iterating through the elements of this field and adding \\"weight\\" to the sum if the node has pods which matches the corresponding podAffinityTerm; the node(s) with the highest sum are the most preferred.",
            "summary": "The scheduler will prefer to schedule pods to nodes that satisfy the affinity expressions specified by this field, but it may choose a node that violates one or more of the expressions.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 27932,
          },
          "name": "preferredDuringSchedulingIgnoredDuringExecution",
          "optional": true,
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "fqn": "monitoringcoreoscom.ThanosRulerSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecution",
              },
              "kind": "array",
            },
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecAffinityPodAffinity#requiredDuringSchedulingIgnoredDuringExecution",
            },
            "remarks": "If the affinity requirements specified by this field cease to be met at some point during pod execution (e.g. due to a pod label update), the system may or may not try to eventually evict the pod from its node. When there are multiple elements, the lists of nodes corresponding to each podAffinityTerm are intersected, i.e. all terms must be satisfied.",
            "summary": "If the affinity requirements specified by this field are not met at scheduling time, the pod will not be scheduled onto the node.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 27939,
          },
          "name": "requiredDuringSchedulingIgnoredDuringExecution",
          "optional": true,
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "fqn": "monitoringcoreoscom.ThanosRulerSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecution",
              },
              "kind": "array",
            },
          },
        },
      ],
    },
    "monitoringcoreoscom.ThanosRulerSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecution": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "ThanosRulerSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecution",
        },
        "summary": "The weights of all of the matched WeightedPodAffinityTerm fields are added per-node to find the most preferred node(s).",
      },
      "fqn": "monitoringcoreoscom.ThanosRulerSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecution",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 31502,
      },
      "name": "ThanosRulerSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecution",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecution#podAffinityTerm",
            },
            "remarks": "A pod affinity term, associated with the corresponding weight.",
            "summary": "Required.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 31508,
          },
          "name": "podAffinityTerm",
          "type": Object {
            "fqn": "monitoringcoreoscom.ThanosRulerSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecution#weight",
            },
            "summary": "weight associated with matching the corresponding podAffinityTerm, in the range 1-100.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 31515,
          },
          "name": "weight",
          "type": Object {
            "primitive": "number",
          },
        },
      ],
    },
    "monitoringcoreoscom.ThanosRulerSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "ThanosRulerSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm",
        },
        "remarks": "A pod affinity term, associated with the corresponding weight.",
        "summary": "Required.",
      },
      "fqn": "monitoringcoreoscom.ThanosRulerSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 34000,
      },
      "name": "ThanosRulerSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm#topologyKey",
            },
            "remarks": "Empty topologyKey is not allowed.",
            "summary": "This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching the labelSelector in the specified namespaces, where co-located is defined as running on a node whose value of the label with key topologyKey matches that of any node on which any of the selected pods is running.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 34020,
          },
          "name": "topologyKey",
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm#labelSelector",
            },
            "summary": "A label query over a set of resources, in this case pods.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 34006,
          },
          "name": "labelSelector",
          "optional": true,
          "type": Object {
            "fqn": "monitoringcoreoscom.ThanosRulerSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm#namespaces",
            },
            "remarks": "null or empty list means \\"this pod's namespace\\"",
            "summary": "namespaces specifies which namespaces the labelSelector applies to (matches against);",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 34013,
          },
          "name": "namespaces",
          "optional": true,
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "primitive": "string",
              },
              "kind": "array",
            },
          },
        },
      ],
    },
    "monitoringcoreoscom.ThanosRulerSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "ThanosRulerSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector",
        },
        "summary": "A label query over a set of resources, in this case pods.",
      },
      "fqn": "monitoringcoreoscom.ThanosRulerSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 36059,
      },
      "name": "ThanosRulerSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector#matchExpressions",
            },
            "remarks": "The requirements are ANDed.",
            "summary": "matchExpressions is a list of label selector requirements.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 36065,
          },
          "name": "matchExpressions",
          "optional": true,
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "fqn": "monitoringcoreoscom.ThanosRulerSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions",
              },
              "kind": "array",
            },
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector#matchLabels",
            },
            "remarks": "A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is \\"key\\", the operator is \\"In\\", and the values array contains only \\"value\\". The requirements are ANDed.",
            "summary": "matchLabels is a map of {key,value} pairs.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 36072,
          },
          "name": "matchLabels",
          "optional": true,
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "primitive": "string",
              },
              "kind": "map",
            },
          },
        },
      ],
    },
    "monitoringcoreoscom.ThanosRulerSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "ThanosRulerSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions",
        },
        "summary": "A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.",
      },
      "fqn": "monitoringcoreoscom.ThanosRulerSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 36695,
      },
      "name": "ThanosRulerSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions#key",
            },
            "summary": "key is the label key that the selector applies to.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 36701,
          },
          "name": "key",
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions#operator",
            },
            "remarks": "Valid operators are In, NotIn, Exists and DoesNotExist.",
            "summary": "operator represents a key's relationship to a set of values.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 36708,
          },
          "name": "operator",
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions#values",
            },
            "remarks": "If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.",
            "summary": "values is an array of string values.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 36715,
          },
          "name": "values",
          "optional": true,
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "primitive": "string",
              },
              "kind": "array",
            },
          },
        },
      ],
    },
    "monitoringcoreoscom.ThanosRulerSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecution": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "ThanosRulerSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecution",
        },
        "summary": "Defines a set of pods (namely those matching the labelSelector relative to the given namespace(s)) that this pod should be co-located (affinity) or not co-located (anti-affinity) with, where co-located is defined as running on a node whose value of the label with key <topologyKey> matches that of any node on which a pod of the set of pods is running.",
      },
      "fqn": "monitoringcoreoscom.ThanosRulerSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecution",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 31539,
      },
      "name": "ThanosRulerSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecution",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecution#topologyKey",
            },
            "remarks": "Empty topologyKey is not allowed.",
            "summary": "This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching the labelSelector in the specified namespaces, where co-located is defined as running on a node whose value of the label with key topologyKey matches that of any node on which any of the selected pods is running.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 31559,
          },
          "name": "topologyKey",
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecution#labelSelector",
            },
            "summary": "A label query over a set of resources, in this case pods.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 31545,
          },
          "name": "labelSelector",
          "optional": true,
          "type": Object {
            "fqn": "monitoringcoreoscom.ThanosRulerSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecution#namespaces",
            },
            "remarks": "null or empty list means \\"this pod's namespace\\"",
            "summary": "namespaces specifies which namespaces the labelSelector applies to (matches against);",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 31552,
          },
          "name": "namespaces",
          "optional": true,
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "primitive": "string",
              },
              "kind": "array",
            },
          },
        },
      ],
    },
    "monitoringcoreoscom.ThanosRulerSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "ThanosRulerSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector",
        },
        "summary": "A label query over a set of resources, in this case pods.",
      },
      "fqn": "monitoringcoreoscom.ThanosRulerSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 34045,
      },
      "name": "ThanosRulerSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector#matchExpressions",
            },
            "remarks": "The requirements are ANDed.",
            "summary": "matchExpressions is a list of label selector requirements.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 34051,
          },
          "name": "matchExpressions",
          "optional": true,
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "fqn": "monitoringcoreoscom.ThanosRulerSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions",
              },
              "kind": "array",
            },
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector#matchLabels",
            },
            "remarks": "A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is \\"key\\", the operator is \\"In\\", and the values array contains only \\"value\\". The requirements are ANDed.",
            "summary": "matchLabels is a map of {key,value} pairs.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 34058,
          },
          "name": "matchLabels",
          "optional": true,
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "primitive": "string",
              },
              "kind": "map",
            },
          },
        },
      ],
    },
    "monitoringcoreoscom.ThanosRulerSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "ThanosRulerSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions",
        },
        "summary": "A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.",
      },
      "fqn": "monitoringcoreoscom.ThanosRulerSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 36096,
      },
      "name": "ThanosRulerSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions#key",
            },
            "summary": "key is the label key that the selector applies to.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 36102,
          },
          "name": "key",
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions#operator",
            },
            "remarks": "Valid operators are In, NotIn, Exists and DoesNotExist.",
            "summary": "operator represents a key's relationship to a set of values.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 36109,
          },
          "name": "operator",
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions#values",
            },
            "remarks": "If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.",
            "summary": "values is an array of string values.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 36116,
          },
          "name": "values",
          "optional": true,
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "primitive": "string",
              },
              "kind": "array",
            },
          },
        },
      ],
    },
    "monitoringcoreoscom.ThanosRulerSpecAffinityPodAntiAffinity": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "ThanosRulerSpecAffinityPodAntiAffinity",
        },
        "summary": "Describes pod anti-affinity scheduling rules (e.g. avoid putting this pod in the same node, zone, etc. as some other pod(s)).",
      },
      "fqn": "monitoringcoreoscom.ThanosRulerSpecAffinityPodAntiAffinity",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 27963,
      },
      "name": "ThanosRulerSpecAffinityPodAntiAffinity",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecAffinityPodAntiAffinity#preferredDuringSchedulingIgnoredDuringExecution",
            },
            "remarks": "The node that is most preferred is the one with the greatest sum of weights, i.e. for each node that meets all of the scheduling requirements (resource request, requiredDuringScheduling anti-affinity expressions, etc.), compute a sum by iterating through the elements of this field and adding \\"weight\\" to the sum if the node has pods which matches the corresponding podAffinityTerm; the node(s) with the highest sum are the most preferred.",
            "summary": "The scheduler will prefer to schedule pods to nodes that satisfy the anti-affinity expressions specified by this field, but it may choose a node that violates one or more of the expressions.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 27969,
          },
          "name": "preferredDuringSchedulingIgnoredDuringExecution",
          "optional": true,
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "fqn": "monitoringcoreoscom.ThanosRulerSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecution",
              },
              "kind": "array",
            },
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecAffinityPodAntiAffinity#requiredDuringSchedulingIgnoredDuringExecution",
            },
            "remarks": "If the anti-affinity requirements specified by this field cease to be met at some point during pod execution (e.g. due to a pod label update), the system may or may not try to eventually evict the pod from its node. When there are multiple elements, the lists of nodes corresponding to each podAffinityTerm are intersected, i.e. all terms must be satisfied.",
            "summary": "If the anti-affinity requirements specified by this field are not met at scheduling time, the pod will not be scheduled onto the node.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 27976,
          },
          "name": "requiredDuringSchedulingIgnoredDuringExecution",
          "optional": true,
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "fqn": "monitoringcoreoscom.ThanosRulerSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecution",
              },
              "kind": "array",
            },
          },
        },
      ],
    },
    "monitoringcoreoscom.ThanosRulerSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecution": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "ThanosRulerSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecution",
        },
        "summary": "The weights of all of the matched WeightedPodAffinityTerm fields are added per-node to find the most preferred node(s).",
      },
      "fqn": "monitoringcoreoscom.ThanosRulerSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecution",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 31584,
      },
      "name": "ThanosRulerSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecution",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecution#podAffinityTerm",
            },
            "remarks": "A pod affinity term, associated with the corresponding weight.",
            "summary": "Required.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 31590,
          },
          "name": "podAffinityTerm",
          "type": Object {
            "fqn": "monitoringcoreoscom.ThanosRulerSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecution#weight",
            },
            "summary": "weight associated with matching the corresponding podAffinityTerm, in the range 1-100.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 31597,
          },
          "name": "weight",
          "type": Object {
            "primitive": "number",
          },
        },
      ],
    },
    "monitoringcoreoscom.ThanosRulerSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "ThanosRulerSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm",
        },
        "remarks": "A pod affinity term, associated with the corresponding weight.",
        "summary": "Required.",
      },
      "fqn": "monitoringcoreoscom.ThanosRulerSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 34082,
      },
      "name": "ThanosRulerSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm#topologyKey",
            },
            "remarks": "Empty topologyKey is not allowed.",
            "summary": "This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching the labelSelector in the specified namespaces, where co-located is defined as running on a node whose value of the label with key topologyKey matches that of any node on which any of the selected pods is running.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 34102,
          },
          "name": "topologyKey",
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm#labelSelector",
            },
            "summary": "A label query over a set of resources, in this case pods.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 34088,
          },
          "name": "labelSelector",
          "optional": true,
          "type": Object {
            "fqn": "monitoringcoreoscom.ThanosRulerSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm#namespaces",
            },
            "remarks": "null or empty list means \\"this pod's namespace\\"",
            "summary": "namespaces specifies which namespaces the labelSelector applies to (matches against);",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 34095,
          },
          "name": "namespaces",
          "optional": true,
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "primitive": "string",
              },
              "kind": "array",
            },
          },
        },
      ],
    },
    "monitoringcoreoscom.ThanosRulerSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "ThanosRulerSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector",
        },
        "summary": "A label query over a set of resources, in this case pods.",
      },
      "fqn": "monitoringcoreoscom.ThanosRulerSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 36141,
      },
      "name": "ThanosRulerSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector#matchExpressions",
            },
            "remarks": "The requirements are ANDed.",
            "summary": "matchExpressions is a list of label selector requirements.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 36147,
          },
          "name": "matchExpressions",
          "optional": true,
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "fqn": "monitoringcoreoscom.ThanosRulerSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions",
              },
              "kind": "array",
            },
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector#matchLabels",
            },
            "remarks": "A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is \\"key\\", the operator is \\"In\\", and the values array contains only \\"value\\". The requirements are ANDed.",
            "summary": "matchLabels is a map of {key,value} pairs.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 36154,
          },
          "name": "matchLabels",
          "optional": true,
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "primitive": "string",
              },
              "kind": "map",
            },
          },
        },
      ],
    },
    "monitoringcoreoscom.ThanosRulerSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "ThanosRulerSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions",
        },
        "summary": "A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.",
      },
      "fqn": "monitoringcoreoscom.ThanosRulerSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 36740,
      },
      "name": "ThanosRulerSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions#key",
            },
            "summary": "key is the label key that the selector applies to.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 36746,
          },
          "name": "key",
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions#operator",
            },
            "remarks": "Valid operators are In, NotIn, Exists and DoesNotExist.",
            "summary": "operator represents a key's relationship to a set of values.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 36753,
          },
          "name": "operator",
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions#values",
            },
            "remarks": "If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.",
            "summary": "values is an array of string values.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 36760,
          },
          "name": "values",
          "optional": true,
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "primitive": "string",
              },
              "kind": "array",
            },
          },
        },
      ],
    },
    "monitoringcoreoscom.ThanosRulerSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecution": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "ThanosRulerSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecution",
        },
        "summary": "Defines a set of pods (namely those matching the labelSelector relative to the given namespace(s)) that this pod should be co-located (affinity) or not co-located (anti-affinity) with, where co-located is defined as running on a node whose value of the label with key <topologyKey> matches that of any node on which a pod of the set of pods is running.",
      },
      "fqn": "monitoringcoreoscom.ThanosRulerSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecution",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 31621,
      },
      "name": "ThanosRulerSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecution",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecution#topologyKey",
            },
            "remarks": "Empty topologyKey is not allowed.",
            "summary": "This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching the labelSelector in the specified namespaces, where co-located is defined as running on a node whose value of the label with key topologyKey matches that of any node on which any of the selected pods is running.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 31641,
          },
          "name": "topologyKey",
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecution#labelSelector",
            },
            "summary": "A label query over a set of resources, in this case pods.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 31627,
          },
          "name": "labelSelector",
          "optional": true,
          "type": Object {
            "fqn": "monitoringcoreoscom.ThanosRulerSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecution#namespaces",
            },
            "remarks": "null or empty list means \\"this pod's namespace\\"",
            "summary": "namespaces specifies which namespaces the labelSelector applies to (matches against);",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 31634,
          },
          "name": "namespaces",
          "optional": true,
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "primitive": "string",
              },
              "kind": "array",
            },
          },
        },
      ],
    },
    "monitoringcoreoscom.ThanosRulerSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "ThanosRulerSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector",
        },
        "summary": "A label query over a set of resources, in this case pods.",
      },
      "fqn": "monitoringcoreoscom.ThanosRulerSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 34127,
      },
      "name": "ThanosRulerSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector#matchExpressions",
            },
            "remarks": "The requirements are ANDed.",
            "summary": "matchExpressions is a list of label selector requirements.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 34133,
          },
          "name": "matchExpressions",
          "optional": true,
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "fqn": "monitoringcoreoscom.ThanosRulerSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions",
              },
              "kind": "array",
            },
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector#matchLabels",
            },
            "remarks": "A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is \\"key\\", the operator is \\"In\\", and the values array contains only \\"value\\". The requirements are ANDed.",
            "summary": "matchLabels is a map of {key,value} pairs.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 34140,
          },
          "name": "matchLabels",
          "optional": true,
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "primitive": "string",
              },
              "kind": "map",
            },
          },
        },
      ],
    },
    "monitoringcoreoscom.ThanosRulerSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "ThanosRulerSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions",
        },
        "summary": "A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.",
      },
      "fqn": "monitoringcoreoscom.ThanosRulerSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 36178,
      },
      "name": "ThanosRulerSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions#key",
            },
            "summary": "key is the label key that the selector applies to.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 36184,
          },
          "name": "key",
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions#operator",
            },
            "remarks": "Valid operators are In, NotIn, Exists and DoesNotExist.",
            "summary": "operator represents a key's relationship to a set of values.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 36191,
          },
          "name": "operator",
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions#values",
            },
            "remarks": "If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.",
            "summary": "values is an array of string values.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 36198,
          },
          "name": "values",
          "optional": true,
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "primitive": "string",
              },
              "kind": "array",
            },
          },
        },
      ],
    },
    "monitoringcoreoscom.ThanosRulerSpecAlertmanagersConfig": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "ThanosRulerSpecAlertmanagersConfig",
        },
        "remarks": "Only available with thanos v0.10.0 and higher.  Maps to the \`alertmanagers.config\` arg.",
        "summary": "Define configuration for connecting to alertmanager.",
      },
      "fqn": "monitoringcoreoscom.ThanosRulerSpecAlertmanagersConfig",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 26577,
      },
      "name": "ThanosRulerSpecAlertmanagersConfig",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecAlertmanagersConfig#key",
            },
            "remarks": "Must be a valid secret key.",
            "summary": "The key of the secret to select from.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 26583,
          },
          "name": "key",
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecAlertmanagersConfig#name",
            },
            "remarks": "More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?",
            "summary": "Name of the referent.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 26590,
          },
          "name": "name",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecAlertmanagersConfig#optional",
            },
            "summary": "Specify whether the Secret or its key must be defined.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 26597,
          },
          "name": "optional",
          "optional": true,
          "type": Object {
            "primitive": "boolean",
          },
        },
      ],
    },
    "monitoringcoreoscom.ThanosRulerSpecContainers": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "ThanosRulerSpecContainers",
        },
        "summary": "A single application container that you want to run within a pod.",
      },
      "fqn": "monitoringcoreoscom.ThanosRulerSpecContainers",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 26622,
      },
      "name": "ThanosRulerSpecContainers",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecContainers#name",
            },
            "remarks": "Each container in a pod must have a unique name (DNS_LABEL). Cannot be updated.",
            "summary": "Name of the container specified as a DNS_LABEL.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 26685,
          },
          "name": "name",
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecContainers#args",
            },
            "remarks": "The docker image's CMD is used if this is not provided. Variable references $(VAR_NAME) are expanded using the container's environment. If a variable cannot be resolved, the reference in the input string will be unchanged. The $(VAR_NAME) syntax can be escaped with a double $$, ie: $$(VAR_NAME). Escaped references will never be expanded, regardless of whether the variable exists or not. Cannot be updated. More info: https://kubernetes.io/docs/tasks/inject-data-application/define-command-argument-container/#running-a-command-in-a-shell",
            "summary": "Arguments to the entrypoint.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 26628,
          },
          "name": "args",
          "optional": true,
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "primitive": "string",
              },
              "kind": "array",
            },
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecContainers#command",
            },
            "remarks": "Not executed within a shell. The docker image's ENTRYPOINT is used if this is not provided. Variable references $(VAR_NAME) are expanded using the container's environment. If a variable cannot be resolved, the reference in the input string will be unchanged. The $(VAR_NAME) syntax can be escaped with a double $$, ie: $$(VAR_NAME). Escaped references will never be expanded, regardless of whether the variable exists or not. Cannot be updated. More info: https://kubernetes.io/docs/tasks/inject-data-application/define-command-argument-container/#running-a-command-in-a-shell",
            "summary": "Entrypoint array.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 26635,
          },
          "name": "command",
          "optional": true,
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "primitive": "string",
              },
              "kind": "array",
            },
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecContainers#env",
            },
            "remarks": "Cannot be updated.",
            "summary": "List of environment variables to set in the container.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 26642,
          },
          "name": "env",
          "optional": true,
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "fqn": "monitoringcoreoscom.ThanosRulerSpecContainersEnv",
              },
              "kind": "array",
            },
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecContainers#envFrom",
            },
            "remarks": "The keys defined within a source must be a C_IDENTIFIER. All invalid keys will be reported as an event when the container is starting. When a key exists in multiple sources, the value associated with the last source will take precedence. Values defined by an Env with a duplicate key will take precedence. Cannot be updated.",
            "summary": "List of sources to populate environment variables in the container.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 26649,
          },
          "name": "envFrom",
          "optional": true,
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "fqn": "monitoringcoreoscom.ThanosRulerSpecContainersEnvFrom",
              },
              "kind": "array",
            },
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecContainers#image",
            },
            "remarks": "More info: https://kubernetes.io/docs/concepts/containers/images This field is optional to allow higher level config management to default or override container images in workload controllers like Deployments and StatefulSets.",
            "summary": "Docker image name.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 26656,
          },
          "name": "image",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecContainers#imagePullPolicy",
            },
            "default": "Always if :latest tag is specified, or IfNotPresent otherwise. Cannot be updated. More info: https://kubernetes.io/docs/concepts/containers/images#updating-images",
            "remarks": "One of Always, Never, IfNotPresent. Defaults to Always if :latest tag is specified, or IfNotPresent otherwise. Cannot be updated. More info: https://kubernetes.io/docs/concepts/containers/images#updating-images",
            "summary": "Image pull policy.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 26664,
          },
          "name": "imagePullPolicy",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecContainers#lifecycle",
            },
            "remarks": "Cannot be updated.",
            "summary": "Actions that the management system should take in response to container lifecycle events.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 26671,
          },
          "name": "lifecycle",
          "optional": true,
          "type": Object {
            "fqn": "monitoringcoreoscom.ThanosRulerSpecContainersLifecycle",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecContainers#livenessProbe",
            },
            "remarks": "Container will be restarted if the probe fails. Cannot be updated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes",
            "summary": "Periodic probe of container liveness.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 26678,
          },
          "name": "livenessProbe",
          "optional": true,
          "type": Object {
            "fqn": "monitoringcoreoscom.ThanosRulerSpecContainersLivenessProbe",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecContainers#ports",
            },
            "remarks": "Exposing a port here gives the system additional information about the network connections a container uses, but is primarily informational. Not specifying a port here DOES NOT prevent that port from being exposed. Any port which is listening on the default \\"0.0.0.0\\" address inside a container will be accessible from the network. Cannot be updated.",
            "summary": "List of ports to expose from the container.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 26692,
          },
          "name": "ports",
          "optional": true,
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "fqn": "monitoringcoreoscom.ThanosRulerSpecContainersPorts",
              },
              "kind": "array",
            },
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecContainers#readinessProbe",
            },
            "remarks": "Container will be removed from service endpoints if the probe fails. Cannot be updated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes",
            "summary": "Periodic probe of container service readiness.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 26699,
          },
          "name": "readinessProbe",
          "optional": true,
          "type": Object {
            "fqn": "monitoringcoreoscom.ThanosRulerSpecContainersReadinessProbe",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecContainers#resources",
            },
            "remarks": "Cannot be updated. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/",
            "summary": "Compute Resources required by this container.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 26706,
          },
          "name": "resources",
          "optional": true,
          "type": Object {
            "fqn": "monitoringcoreoscom.ThanosRulerSpecContainersResources",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecContainers#securityContext",
            },
            "remarks": "More info: https://kubernetes.io/docs/concepts/policy/security-context/ More info: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
            "summary": "Security options the pod should run with.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 26713,
          },
          "name": "securityContext",
          "optional": true,
          "type": Object {
            "fqn": "monitoringcoreoscom.ThanosRulerSpecContainersSecurityContext",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecContainers#startupProbe",
            },
            "remarks": "If specified, no other probes are executed until this completes successfully. If this probe fails, the Pod will be restarted, just as if the livenessProbe failed. This can be used to provide different probe parameters at the beginning of a Pod's lifecycle, when it might take a long time to load data or warm a cache, than during steady-state operation. This cannot be updated. This is a beta feature enabled by the StartupProbe feature flag. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes",
            "summary": "StartupProbe indicates that the Pod has successfully initialized.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 26720,
          },
          "name": "startupProbe",
          "optional": true,
          "type": Object {
            "fqn": "monitoringcoreoscom.ThanosRulerSpecContainersStartupProbe",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecContainers#stdin",
            },
            "default": "false.",
            "remarks": "If this is not set, reads from stdin in the container will always result in EOF. Default is false.",
            "summary": "Whether this container should allocate a buffer for stdin in the container runtime.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 26728,
          },
          "name": "stdin",
          "optional": true,
          "type": Object {
            "primitive": "boolean",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecContainers#stdinOnce",
            },
            "default": "false",
            "remarks": "When stdin is true the stdin stream will remain open across multiple attach sessions. If stdinOnce is set to true, stdin is opened on container start, is empty until the first client attaches to stdin, and then remains open and accepts data until the client disconnects, at which time stdin is closed and remains closed until the container is restarted. If this flag is false, a container processes that reads from stdin will never receive an EOF. Default is false",
            "summary": "Whether the container runtime should close the stdin channel after it has been opened by a single attach.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 26736,
          },
          "name": "stdinOnce",
          "optional": true,
          "type": Object {
            "primitive": "boolean",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecContainers#terminationMessagePath",
            },
            "default": "dev/termination-log. Cannot be updated.",
            "remarks": "Message written is intended to be brief final status, such as an assertion failure message. Will be truncated by the node if greater than 4096 bytes. The total message length across all containers will be limited to 12kb. Defaults to /dev/termination-log. Cannot be updated.",
            "summary": "Optional: Path at which the file to which the container's termination message will be written is mounted into the container's filesystem.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 26744,
          },
          "name": "terminationMessagePath",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecContainers#terminationMessagePolicy",
            },
            "default": "File. Cannot be updated.",
            "remarks": "File will use the contents of terminationMessagePath to populate the container status message on both success and failure. FallbackToLogsOnError will use the last chunk of container log output if the termination message file is empty and the container exited with an error. The log output is limited to 2048 bytes or 80 lines, whichever is smaller. Defaults to File. Cannot be updated.",
            "summary": "Indicate how the termination message should be populated.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 26752,
          },
          "name": "terminationMessagePolicy",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecContainers#tty",
            },
            "default": "false.",
            "remarks": "Default is false.",
            "summary": "Whether this container should allocate a TTY for itself, also requires 'stdin' to be true.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 26760,
          },
          "name": "tty",
          "optional": true,
          "type": Object {
            "primitive": "boolean",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecContainers#volumeDevices",
            },
            "summary": "volumeDevices is the list of block devices to be used by the container.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 26767,
          },
          "name": "volumeDevices",
          "optional": true,
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "fqn": "monitoringcoreoscom.ThanosRulerSpecContainersVolumeDevices",
              },
              "kind": "array",
            },
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecContainers#volumeMounts",
            },
            "remarks": "Cannot be updated.",
            "summary": "Pod volumes to mount into the container's filesystem.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 26774,
          },
          "name": "volumeMounts",
          "optional": true,
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "fqn": "monitoringcoreoscom.ThanosRulerSpecContainersVolumeMounts",
              },
              "kind": "array",
            },
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecContainers#workingDir",
            },
            "remarks": "If not specified, the container runtime's default will be used, which might be configured in the container image. Cannot be updated.",
            "summary": "Container's working directory.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 26781,
          },
          "name": "workingDir",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
      ],
    },
    "monitoringcoreoscom.ThanosRulerSpecContainersEnv": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "ThanosRulerSpecContainersEnv",
        },
        "summary": "EnvVar represents an environment variable present in a Container.",
      },
      "fqn": "monitoringcoreoscom.ThanosRulerSpecContainersEnv",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 28000,
      },
      "name": "ThanosRulerSpecContainersEnv",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecContainersEnv#name",
            },
            "remarks": "Must be a C_IDENTIFIER.",
            "summary": "Name of the environment variable.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 28006,
          },
          "name": "name",
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecContainersEnv#value",
            },
            "default": ".",
            "remarks": "If a variable cannot be resolved, the reference in the input string will be unchanged. The $(VAR_NAME) syntax can be escaped with a double $$, ie: $$(VAR_NAME). Escaped references will never be expanded, regardless of whether the variable exists or not. Defaults to \\"\\".",
            "summary": "Variable references $(VAR_NAME) are expanded using the previous defined environment variables in the container and any service environment variables.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 28014,
          },
          "name": "value",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecContainersEnv#valueFrom",
            },
            "remarks": "Cannot be used if value is not empty.",
            "summary": "Source for the environment variable's value.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 28021,
          },
          "name": "valueFrom",
          "optional": true,
          "type": Object {
            "fqn": "monitoringcoreoscom.ThanosRulerSpecContainersEnvValueFrom",
          },
        },
      ],
    },
    "monitoringcoreoscom.ThanosRulerSpecContainersEnvFrom": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "ThanosRulerSpecContainersEnvFrom",
        },
        "summary": "EnvFromSource represents the source of a set of ConfigMaps.",
      },
      "fqn": "monitoringcoreoscom.ThanosRulerSpecContainersEnvFrom",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 28046,
      },
      "name": "ThanosRulerSpecContainersEnvFrom",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecContainersEnvFrom#configMapRef",
            },
            "summary": "The ConfigMap to select from.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 28052,
          },
          "name": "configMapRef",
          "optional": true,
          "type": Object {
            "fqn": "monitoringcoreoscom.ThanosRulerSpecContainersEnvFromConfigMapRef",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecContainersEnvFrom#prefix",
            },
            "remarks": "Must be a C_IDENTIFIER.",
            "summary": "An optional identifier to prepend to each key in the ConfigMap.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 28059,
          },
          "name": "prefix",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecContainersEnvFrom#secretRef",
            },
            "summary": "The Secret to select from.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 28066,
          },
          "name": "secretRef",
          "optional": true,
          "type": Object {
            "fqn": "monitoringcoreoscom.ThanosRulerSpecContainersEnvFromSecretRef",
          },
        },
      ],
    },
    "monitoringcoreoscom.ThanosRulerSpecContainersEnvFromConfigMapRef": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "ThanosRulerSpecContainersEnvFromConfigMapRef",
        },
        "summary": "The ConfigMap to select from.",
      },
      "fqn": "monitoringcoreoscom.ThanosRulerSpecContainersEnvFromConfigMapRef",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 31719,
      },
      "name": "ThanosRulerSpecContainersEnvFromConfigMapRef",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecContainersEnvFromConfigMapRef#name",
            },
            "remarks": "More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?",
            "summary": "Name of the referent.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 31725,
          },
          "name": "name",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecContainersEnvFromConfigMapRef#optional",
            },
            "summary": "Specify whether the ConfigMap must be defined.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 31732,
          },
          "name": "optional",
          "optional": true,
          "type": Object {
            "primitive": "boolean",
          },
        },
      ],
    },
    "monitoringcoreoscom.ThanosRulerSpecContainersEnvFromSecretRef": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "ThanosRulerSpecContainersEnvFromSecretRef",
        },
        "summary": "The Secret to select from.",
      },
      "fqn": "monitoringcoreoscom.ThanosRulerSpecContainersEnvFromSecretRef",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 31756,
      },
      "name": "ThanosRulerSpecContainersEnvFromSecretRef",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecContainersEnvFromSecretRef#name",
            },
            "remarks": "More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?",
            "summary": "Name of the referent.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 31762,
          },
          "name": "name",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecContainersEnvFromSecretRef#optional",
            },
            "summary": "Specify whether the Secret must be defined.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 31769,
          },
          "name": "optional",
          "optional": true,
          "type": Object {
            "primitive": "boolean",
          },
        },
      ],
    },
    "monitoringcoreoscom.ThanosRulerSpecContainersEnvValueFrom": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "ThanosRulerSpecContainersEnvValueFrom",
        },
        "remarks": "Cannot be used if value is not empty.",
        "summary": "Source for the environment variable's value.",
      },
      "fqn": "monitoringcoreoscom.ThanosRulerSpecContainersEnvValueFrom",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 31666,
      },
      "name": "ThanosRulerSpecContainersEnvValueFrom",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecContainersEnvValueFrom#configMapKeyRef",
            },
            "summary": "Selects a key of a ConfigMap.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 31672,
          },
          "name": "configMapKeyRef",
          "optional": true,
          "type": Object {
            "fqn": "monitoringcoreoscom.ThanosRulerSpecContainersEnvValueFromConfigMapKeyRef",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecContainersEnvValueFrom#fieldRef",
            },
            "summary": "Selects a field of the pod: supports metadata.name, metadata.namespace, metadata.labels, metadata.annotations, spec.nodeName, spec.serviceAccountName, status.hostIP, status.podIP, status.podIPs.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 31679,
          },
          "name": "fieldRef",
          "optional": true,
          "type": Object {
            "fqn": "monitoringcoreoscom.ThanosRulerSpecContainersEnvValueFromFieldRef",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecContainersEnvValueFrom#resourceFieldRef",
            },
            "summary": "Selects a resource of the container: only resources limits and requests (limits.cpu, limits.memory, limits.ephemeral-storage, requests.cpu, requests.memory and requests.ephemeral-storage) are currently supported.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 31686,
          },
          "name": "resourceFieldRef",
          "optional": true,
          "type": Object {
            "fqn": "monitoringcoreoscom.ThanosRulerSpecContainersEnvValueFromResourceFieldRef",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecContainersEnvValueFrom#secretKeyRef",
            },
            "summary": "Selects a key of a secret in the pod's namespace.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 31693,
          },
          "name": "secretKeyRef",
          "optional": true,
          "type": Object {
            "fqn": "monitoringcoreoscom.ThanosRulerSpecContainersEnvValueFromSecretKeyRef",
          },
        },
      ],
    },
    "monitoringcoreoscom.ThanosRulerSpecContainersEnvValueFromConfigMapKeyRef": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "ThanosRulerSpecContainersEnvValueFromConfigMapKeyRef",
        },
        "summary": "Selects a key of a ConfigMap.",
      },
      "fqn": "monitoringcoreoscom.ThanosRulerSpecContainersEnvValueFromConfigMapKeyRef",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 34164,
      },
      "name": "ThanosRulerSpecContainersEnvValueFromConfigMapKeyRef",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecContainersEnvValueFromConfigMapKeyRef#key",
            },
            "summary": "The key to select.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 34170,
          },
          "name": "key",
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecContainersEnvValueFromConfigMapKeyRef#name",
            },
            "remarks": "More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?",
            "summary": "Name of the referent.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 34177,
          },
          "name": "name",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecContainersEnvValueFromConfigMapKeyRef#optional",
            },
            "summary": "Specify whether the ConfigMap or its key must be defined.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 34184,
          },
          "name": "optional",
          "optional": true,
          "type": Object {
            "primitive": "boolean",
          },
        },
      ],
    },
    "monitoringcoreoscom.ThanosRulerSpecContainersEnvValueFromFieldRef": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "ThanosRulerSpecContainersEnvValueFromFieldRef",
        },
        "summary": "Selects a field of the pod: supports metadata.name, metadata.namespace, metadata.labels, metadata.annotations, spec.nodeName, spec.serviceAccountName, status.hostIP, status.podIP, status.podIPs.",
      },
      "fqn": "monitoringcoreoscom.ThanosRulerSpecContainersEnvValueFromFieldRef",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 34209,
      },
      "name": "ThanosRulerSpecContainersEnvValueFromFieldRef",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecContainersEnvValueFromFieldRef#fieldPath",
            },
            "summary": "Path of the field to select in the specified API version.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 34222,
          },
          "name": "fieldPath",
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecContainersEnvValueFromFieldRef#apiVersion",
            },
            "summary": "Version of the schema the FieldPath is written in terms of, defaults to \\"v1\\".",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 34215,
          },
          "name": "apiVersion",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
      ],
    },
    "monitoringcoreoscom.ThanosRulerSpecContainersEnvValueFromResourceFieldRef": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "ThanosRulerSpecContainersEnvValueFromResourceFieldRef",
        },
        "summary": "Selects a resource of the container: only resources limits and requests (limits.cpu, limits.memory, limits.ephemeral-storage, requests.cpu, requests.memory and requests.ephemeral-storage) are currently supported.",
      },
      "fqn": "monitoringcoreoscom.ThanosRulerSpecContainersEnvValueFromResourceFieldRef",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 34246,
      },
      "name": "ThanosRulerSpecContainersEnvValueFromResourceFieldRef",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecContainersEnvValueFromResourceFieldRef#resource",
            },
            "summary": "Required: resource to select.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 34266,
          },
          "name": "resource",
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecContainersEnvValueFromResourceFieldRef#containerName",
            },
            "summary": "Container name: required for volumes, optional for env vars.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 34252,
          },
          "name": "containerName",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecContainersEnvValueFromResourceFieldRef#divisor",
            },
            "summary": "Specifies the output format of the exposed resources, defaults to \\"1\\".",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 34259,
          },
          "name": "divisor",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
      ],
    },
    "monitoringcoreoscom.ThanosRulerSpecContainersEnvValueFromSecretKeyRef": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "ThanosRulerSpecContainersEnvValueFromSecretKeyRef",
        },
        "summary": "Selects a key of a secret in the pod's namespace.",
      },
      "fqn": "monitoringcoreoscom.ThanosRulerSpecContainersEnvValueFromSecretKeyRef",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 34291,
      },
      "name": "ThanosRulerSpecContainersEnvValueFromSecretKeyRef",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecContainersEnvValueFromSecretKeyRef#key",
            },
            "remarks": "Must be a valid secret key.",
            "summary": "The key of the secret to select from.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 34297,
          },
          "name": "key",
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecContainersEnvValueFromSecretKeyRef#name",
            },
            "remarks": "More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?",
            "summary": "Name of the referent.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 34304,
          },
          "name": "name",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecContainersEnvValueFromSecretKeyRef#optional",
            },
            "summary": "Specify whether the Secret or its key must be defined.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 34311,
          },
          "name": "optional",
          "optional": true,
          "type": Object {
            "primitive": "boolean",
          },
        },
      ],
    },
    "monitoringcoreoscom.ThanosRulerSpecContainersLifecycle": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "ThanosRulerSpecContainersLifecycle",
        },
        "remarks": "Cannot be updated.",
        "summary": "Actions that the management system should take in response to container lifecycle events.",
      },
      "fqn": "monitoringcoreoscom.ThanosRulerSpecContainersLifecycle",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 28091,
      },
      "name": "ThanosRulerSpecContainersLifecycle",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecContainersLifecycle#postStart",
            },
            "remarks": "If the handler fails, the container is terminated and restarted according to its restart policy. Other management of the container blocks until the hook completes. More info: https://kubernetes.io/docs/concepts/containers/container-lifecycle-hooks/#container-hooks",
            "summary": "PostStart is called immediately after a container is created.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 28097,
          },
          "name": "postStart",
          "optional": true,
          "type": Object {
            "fqn": "monitoringcoreoscom.ThanosRulerSpecContainersLifecyclePostStart",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecContainersLifecycle#preStop",
            },
            "remarks": "The handler is not called if the container crashes or exits. The reason for termination is passed to the handler. The Pod's termination grace period countdown begins before the PreStop hooked is executed. Regardless of the outcome of the handler, the container will eventually terminate within the Pod's termination grace period. Other management of the container blocks until the hook completes or until the termination grace period is reached. More info: https://kubernetes.io/docs/concepts/containers/container-lifecycle-hooks/#container-hooks",
            "summary": "PreStop is called immediately before a container is terminated due to an API request or management event such as liveness/startup probe failure, preemption, resource contention, etc.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 28104,
          },
          "name": "preStop",
          "optional": true,
          "type": Object {
            "fqn": "monitoringcoreoscom.ThanosRulerSpecContainersLifecyclePreStop",
          },
        },
      ],
    },
    "monitoringcoreoscom.ThanosRulerSpecContainersLifecyclePostStart": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "ThanosRulerSpecContainersLifecyclePostStart",
        },
        "remarks": "If the handler fails, the container is terminated and restarted according to its restart policy. Other management of the container blocks until the hook completes. More info: https://kubernetes.io/docs/concepts/containers/container-lifecycle-hooks/#container-hooks",
        "summary": "PostStart is called immediately after a container is created.",
      },
      "fqn": "monitoringcoreoscom.ThanosRulerSpecContainersLifecyclePostStart",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 31793,
      },
      "name": "ThanosRulerSpecContainersLifecyclePostStart",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecContainersLifecyclePostStart#exec",
            },
            "remarks": "Exec specifies the action to take.",
            "summary": "One and only one of the following should be specified.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 31799,
          },
          "name": "exec",
          "optional": true,
          "type": Object {
            "fqn": "monitoringcoreoscom.ThanosRulerSpecContainersLifecyclePostStartExec",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecContainersLifecyclePostStart#httpGet",
            },
            "summary": "HTTPGet specifies the http request to perform.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 31806,
          },
          "name": "httpGet",
          "optional": true,
          "type": Object {
            "fqn": "monitoringcoreoscom.ThanosRulerSpecContainersLifecyclePostStartHttpGet",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecContainersLifecyclePostStart#tcpSocket",
            },
            "remarks": "TCP hooks not yet supported TODO: implement a realistic TCP lifecycle hook",
            "summary": "TCPSocket specifies an action involving a TCP port.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 31813,
          },
          "name": "tcpSocket",
          "optional": true,
          "type": Object {
            "fqn": "monitoringcoreoscom.ThanosRulerSpecContainersLifecyclePostStartTcpSocket",
          },
        },
      ],
    },
    "monitoringcoreoscom.ThanosRulerSpecContainersLifecyclePostStartExec": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "ThanosRulerSpecContainersLifecyclePostStartExec",
        },
        "remarks": "Exec specifies the action to take.",
        "summary": "One and only one of the following should be specified.",
      },
      "fqn": "monitoringcoreoscom.ThanosRulerSpecContainersLifecyclePostStartExec",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 34336,
      },
      "name": "ThanosRulerSpecContainersLifecyclePostStartExec",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecContainersLifecyclePostStartExec#command",
            },
            "remarks": "The command is simply exec'd, it is not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use a shell, you need to explicitly call out to that shell. Exit status of 0 is treated as live/healthy and non-zero is unhealthy.",
            "summary": "Command is the command line to execute inside the container, the working directory for the command  is root ('/') in the container's filesystem.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 34342,
          },
          "name": "command",
          "optional": true,
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "primitive": "string",
              },
              "kind": "array",
            },
          },
        },
      ],
    },
    "monitoringcoreoscom.ThanosRulerSpecContainersLifecyclePostStartHttpGet": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "ThanosRulerSpecContainersLifecyclePostStartHttpGet",
        },
        "summary": "HTTPGet specifies the http request to perform.",
      },
      "fqn": "monitoringcoreoscom.ThanosRulerSpecContainersLifecyclePostStartHttpGet",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 34365,
      },
      "name": "ThanosRulerSpecContainersLifecyclePostStartHttpGet",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecContainersLifecyclePostStartHttpGet#port",
            },
            "remarks": "Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.",
            "summary": "Name or number of the port to access on the container.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 34392,
          },
          "name": "port",
          "type": Object {
            "fqn": "monitoringcoreoscom.ThanosRulerSpecContainersLifecyclePostStartHttpGetPort",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecContainersLifecyclePostStartHttpGet#host",
            },
            "remarks": "You probably want to set \\"Host\\" in httpHeaders instead.",
            "summary": "Host name to connect to, defaults to the pod IP.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 34371,
          },
          "name": "host",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecContainersLifecyclePostStartHttpGet#httpHeaders",
            },
            "remarks": "HTTP allows repeated headers.",
            "summary": "Custom headers to set in the request.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 34378,
          },
          "name": "httpHeaders",
          "optional": true,
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "fqn": "monitoringcoreoscom.ThanosRulerSpecContainersLifecyclePostStartHttpGetHttpHeaders",
              },
              "kind": "array",
            },
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecContainersLifecyclePostStartHttpGet#path",
            },
            "summary": "Path to access on the HTTP server.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 34385,
          },
          "name": "path",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecContainersLifecyclePostStartHttpGet#scheme",
            },
            "default": "HTTP.",
            "remarks": "Defaults to HTTP.",
            "summary": "Scheme to use for connecting to the host.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 34400,
          },
          "name": "scheme",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
      ],
    },
    "monitoringcoreoscom.ThanosRulerSpecContainersLifecyclePostStartHttpGetHttpHeaders": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "ThanosRulerSpecContainersLifecyclePostStartHttpGetHttpHeaders",
        },
        "summary": "HTTPHeader describes a custom header to be used in HTTP probes.",
      },
      "fqn": "monitoringcoreoscom.ThanosRulerSpecContainersLifecyclePostStartHttpGetHttpHeaders",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 36223,
      },
      "name": "ThanosRulerSpecContainersLifecyclePostStartHttpGetHttpHeaders",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecContainersLifecyclePostStartHttpGetHttpHeaders#name",
            },
            "summary": "The header field name.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 36229,
          },
          "name": "name",
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecContainersLifecyclePostStartHttpGetHttpHeaders#value",
            },
            "summary": "The header field value.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 36236,
          },
          "name": "value",
          "type": Object {
            "primitive": "string",
          },
        },
      ],
    },
    "monitoringcoreoscom.ThanosRulerSpecContainersLifecyclePostStartHttpGetPort": Object {
      "assembly": "monitoringcoreoscom",
      "docs": Object {
        "custom": Object {
          "schema": "ThanosRulerSpecContainersLifecyclePostStartHttpGetPort",
        },
        "remarks": "Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.",
        "summary": "Name or number of the port to access on the container.",
      },
      "fqn": "monitoringcoreoscom.ThanosRulerSpecContainersLifecyclePostStartHttpGetPort",
      "kind": "class",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 36260,
      },
      "methods": Array [
        Object {
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 36261,
          },
          "name": "fromNumber",
          "parameters": Array [
            Object {
              "name": "value",
              "type": Object {
                "primitive": "number",
              },
            },
          ],
          "returns": Object {
            "type": Object {
              "fqn": "monitoringcoreoscom.ThanosRulerSpecContainersLifecyclePostStartHttpGetPort",
            },
          },
          "static": true,
        },
        Object {
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 36264,
          },
          "name": "fromString",
          "parameters": Array [
            Object {
              "name": "value",
              "type": Object {
                "primitive": "string",
              },
            },
          ],
          "returns": Object {
            "type": Object {
              "fqn": "monitoringcoreoscom.ThanosRulerSpecContainersLifecyclePostStartHttpGetPort",
            },
          },
          "static": true,
        },
      ],
      "name": "ThanosRulerSpecContainersLifecyclePostStartHttpGetPort",
      "properties": Array [
        Object {
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 36267,
          },
          "name": "value",
          "type": Object {
            "primitive": "any",
          },
        },
      ],
    },
    "monitoringcoreoscom.ThanosRulerSpecContainersLifecyclePostStartTcpSocket": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "ThanosRulerSpecContainersLifecyclePostStartTcpSocket",
        },
        "remarks": "TCP hooks not yet supported TODO: implement a realistic TCP lifecycle hook",
        "summary": "TCPSocket specifies an action involving a TCP port.",
      },
      "fqn": "monitoringcoreoscom.ThanosRulerSpecContainersLifecyclePostStartTcpSocket",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 34427,
      },
      "name": "ThanosRulerSpecContainersLifecyclePostStartTcpSocket",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecContainersLifecyclePostStartTcpSocket#port",
            },
            "remarks": "Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.",
            "summary": "Number or name of the port to access on the container.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 34440,
          },
          "name": "port",
          "type": Object {
            "fqn": "monitoringcoreoscom.ThanosRulerSpecContainersLifecyclePostStartTcpSocketPort",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecContainersLifecyclePostStartTcpSocket#host",
            },
            "summary": "Optional: Host name to connect to, defaults to the pod IP.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 34433,
          },
          "name": "host",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
      ],
    },
    "monitoringcoreoscom.ThanosRulerSpecContainersLifecyclePostStartTcpSocketPort": Object {
      "assembly": "monitoringcoreoscom",
      "docs": Object {
        "custom": Object {
          "schema": "ThanosRulerSpecContainersLifecyclePostStartTcpSocketPort",
        },
        "remarks": "Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.",
        "summary": "Number or name of the port to access on the container.",
      },
      "fqn": "monitoringcoreoscom.ThanosRulerSpecContainersLifecyclePostStartTcpSocketPort",
      "kind": "class",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 36277,
      },
      "methods": Array [
        Object {
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 36278,
          },
          "name": "fromNumber",
          "parameters": Array [
            Object {
              "name": "value",
              "type": Object {
                "primitive": "number",
              },
            },
          ],
          "returns": Object {
            "type": Object {
              "fqn": "monitoringcoreoscom.ThanosRulerSpecContainersLifecyclePostStartTcpSocketPort",
            },
          },
          "static": true,
        },
        Object {
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 36281,
          },
          "name": "fromString",
          "parameters": Array [
            Object {
              "name": "value",
              "type": Object {
                "primitive": "string",
              },
            },
          ],
          "returns": Object {
            "type": Object {
              "fqn": "monitoringcoreoscom.ThanosRulerSpecContainersLifecyclePostStartTcpSocketPort",
            },
          },
          "static": true,
        },
      ],
      "name": "ThanosRulerSpecContainersLifecyclePostStartTcpSocketPort",
      "properties": Array [
        Object {
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 36284,
          },
          "name": "value",
          "type": Object {
            "primitive": "any",
          },
        },
      ],
    },
    "monitoringcoreoscom.ThanosRulerSpecContainersLifecyclePreStop": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "ThanosRulerSpecContainersLifecyclePreStop",
        },
        "remarks": "The handler is not called if the container crashes or exits. The reason for termination is passed to the handler. The Pod's termination grace period countdown begins before the PreStop hooked is executed. Regardless of the outcome of the handler, the container will eventually terminate within the Pod's termination grace period. Other management of the container blocks until the hook completes or until the termination grace period is reached. More info: https://kubernetes.io/docs/concepts/containers/container-lifecycle-hooks/#container-hooks",
        "summary": "PreStop is called immediately before a container is terminated due to an API request or management event such as liveness/startup probe failure, preemption, resource contention, etc.",
      },
      "fqn": "monitoringcoreoscom.ThanosRulerSpecContainersLifecyclePreStop",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 31838,
      },
      "name": "ThanosRulerSpecContainersLifecyclePreStop",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecContainersLifecyclePreStop#exec",
            },
            "remarks": "Exec specifies the action to take.",
            "summary": "One and only one of the following should be specified.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 31844,
          },
          "name": "exec",
          "optional": true,
          "type": Object {
            "fqn": "monitoringcoreoscom.ThanosRulerSpecContainersLifecyclePreStopExec",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecContainersLifecyclePreStop#httpGet",
            },
            "summary": "HTTPGet specifies the http request to perform.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 31851,
          },
          "name": "httpGet",
          "optional": true,
          "type": Object {
            "fqn": "monitoringcoreoscom.ThanosRulerSpecContainersLifecyclePreStopHttpGet",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecContainersLifecyclePreStop#tcpSocket",
            },
            "remarks": "TCP hooks not yet supported TODO: implement a realistic TCP lifecycle hook",
            "summary": "TCPSocket specifies an action involving a TCP port.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 31858,
          },
          "name": "tcpSocket",
          "optional": true,
          "type": Object {
            "fqn": "monitoringcoreoscom.ThanosRulerSpecContainersLifecyclePreStopTcpSocket",
          },
        },
      ],
    },
    "monitoringcoreoscom.ThanosRulerSpecContainersLifecyclePreStopExec": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "ThanosRulerSpecContainersLifecyclePreStopExec",
        },
        "remarks": "Exec specifies the action to take.",
        "summary": "One and only one of the following should be specified.",
      },
      "fqn": "monitoringcoreoscom.ThanosRulerSpecContainersLifecyclePreStopExec",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 34464,
      },
      "name": "ThanosRulerSpecContainersLifecyclePreStopExec",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecContainersLifecyclePreStopExec#command",
            },
            "remarks": "The command is simply exec'd, it is not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use a shell, you need to explicitly call out to that shell. Exit status of 0 is treated as live/healthy and non-zero is unhealthy.",
            "summary": "Command is the command line to execute inside the container, the working directory for the command  is root ('/') in the container's filesystem.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 34470,
          },
          "name": "command",
          "optional": true,
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "primitive": "string",
              },
              "kind": "array",
            },
          },
        },
      ],
    },
    "monitoringcoreoscom.ThanosRulerSpecContainersLifecyclePreStopHttpGet": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "ThanosRulerSpecContainersLifecyclePreStopHttpGet",
        },
        "summary": "HTTPGet specifies the http request to perform.",
      },
      "fqn": "monitoringcoreoscom.ThanosRulerSpecContainersLifecyclePreStopHttpGet",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 34493,
      },
      "name": "ThanosRulerSpecContainersLifecyclePreStopHttpGet",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecContainersLifecyclePreStopHttpGet#port",
            },
            "remarks": "Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.",
            "summary": "Name or number of the port to access on the container.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 34520,
          },
          "name": "port",
          "type": Object {
            "fqn": "monitoringcoreoscom.ThanosRulerSpecContainersLifecyclePreStopHttpGetPort",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecContainersLifecyclePreStopHttpGet#host",
            },
            "remarks": "You probably want to set \\"Host\\" in httpHeaders instead.",
            "summary": "Host name to connect to, defaults to the pod IP.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 34499,
          },
          "name": "host",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecContainersLifecyclePreStopHttpGet#httpHeaders",
            },
            "remarks": "HTTP allows repeated headers.",
            "summary": "Custom headers to set in the request.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 34506,
          },
          "name": "httpHeaders",
          "optional": true,
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "fqn": "monitoringcoreoscom.ThanosRulerSpecContainersLifecyclePreStopHttpGetHttpHeaders",
              },
              "kind": "array",
            },
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecContainersLifecyclePreStopHttpGet#path",
            },
            "summary": "Path to access on the HTTP server.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 34513,
          },
          "name": "path",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecContainersLifecyclePreStopHttpGet#scheme",
            },
            "default": "HTTP.",
            "remarks": "Defaults to HTTP.",
            "summary": "Scheme to use for connecting to the host.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 34528,
          },
          "name": "scheme",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
      ],
    },
    "monitoringcoreoscom.ThanosRulerSpecContainersLifecyclePreStopHttpGetHttpHeaders": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "ThanosRulerSpecContainersLifecyclePreStopHttpGetHttpHeaders",
        },
        "summary": "HTTPHeader describes a custom header to be used in HTTP probes.",
      },
      "fqn": "monitoringcoreoscom.ThanosRulerSpecContainersLifecyclePreStopHttpGetHttpHeaders",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 36294,
      },
      "name": "ThanosRulerSpecContainersLifecyclePreStopHttpGetHttpHeaders",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecContainersLifecyclePreStopHttpGetHttpHeaders#name",
            },
            "summary": "The header field name.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 36300,
          },
          "name": "name",
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecContainersLifecyclePreStopHttpGetHttpHeaders#value",
            },
            "summary": "The header field value.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 36307,
          },
          "name": "value",
          "type": Object {
            "primitive": "string",
          },
        },
      ],
    },
    "monitoringcoreoscom.ThanosRulerSpecContainersLifecyclePreStopHttpGetPort": Object {
      "assembly": "monitoringcoreoscom",
      "docs": Object {
        "custom": Object {
          "schema": "ThanosRulerSpecContainersLifecyclePreStopHttpGetPort",
        },
        "remarks": "Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.",
        "summary": "Name or number of the port to access on the container.",
      },
      "fqn": "monitoringcoreoscom.ThanosRulerSpecContainersLifecyclePreStopHttpGetPort",
      "kind": "class",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 36331,
      },
      "methods": Array [
        Object {
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 36332,
          },
          "name": "fromNumber",
          "parameters": Array [
            Object {
              "name": "value",
              "type": Object {
                "primitive": "number",
              },
            },
          ],
          "returns": Object {
            "type": Object {
              "fqn": "monitoringcoreoscom.ThanosRulerSpecContainersLifecyclePreStopHttpGetPort",
            },
          },
          "static": true,
        },
        Object {
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 36335,
          },
          "name": "fromString",
          "parameters": Array [
            Object {
              "name": "value",
              "type": Object {
                "primitive": "string",
              },
            },
          ],
          "returns": Object {
            "type": Object {
              "fqn": "monitoringcoreoscom.ThanosRulerSpecContainersLifecyclePreStopHttpGetPort",
            },
          },
          "static": true,
        },
      ],
      "name": "ThanosRulerSpecContainersLifecyclePreStopHttpGetPort",
      "properties": Array [
        Object {
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 36338,
          },
          "name": "value",
          "type": Object {
            "primitive": "any",
          },
        },
      ],
    },
    "monitoringcoreoscom.ThanosRulerSpecContainersLifecyclePreStopTcpSocket": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "ThanosRulerSpecContainersLifecyclePreStopTcpSocket",
        },
        "remarks": "TCP hooks not yet supported TODO: implement a realistic TCP lifecycle hook",
        "summary": "TCPSocket specifies an action involving a TCP port.",
      },
      "fqn": "monitoringcoreoscom.ThanosRulerSpecContainersLifecyclePreStopTcpSocket",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 34555,
      },
      "name": "ThanosRulerSpecContainersLifecyclePreStopTcpSocket",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecContainersLifecyclePreStopTcpSocket#port",
            },
            "remarks": "Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.",
            "summary": "Number or name of the port to access on the container.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 34568,
          },
          "name": "port",
          "type": Object {
            "fqn": "monitoringcoreoscom.ThanosRulerSpecContainersLifecyclePreStopTcpSocketPort",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecContainersLifecyclePreStopTcpSocket#host",
            },
            "summary": "Optional: Host name to connect to, defaults to the pod IP.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 34561,
          },
          "name": "host",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
      ],
    },
    "monitoringcoreoscom.ThanosRulerSpecContainersLifecyclePreStopTcpSocketPort": Object {
      "assembly": "monitoringcoreoscom",
      "docs": Object {
        "custom": Object {
          "schema": "ThanosRulerSpecContainersLifecyclePreStopTcpSocketPort",
        },
        "remarks": "Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.",
        "summary": "Number or name of the port to access on the container.",
      },
      "fqn": "monitoringcoreoscom.ThanosRulerSpecContainersLifecyclePreStopTcpSocketPort",
      "kind": "class",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 36348,
      },
      "methods": Array [
        Object {
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 36349,
          },
          "name": "fromNumber",
          "parameters": Array [
            Object {
              "name": "value",
              "type": Object {
                "primitive": "number",
              },
            },
          ],
          "returns": Object {
            "type": Object {
              "fqn": "monitoringcoreoscom.ThanosRulerSpecContainersLifecyclePreStopTcpSocketPort",
            },
          },
          "static": true,
        },
        Object {
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 36352,
          },
          "name": "fromString",
          "parameters": Array [
            Object {
              "name": "value",
              "type": Object {
                "primitive": "string",
              },
            },
          ],
          "returns": Object {
            "type": Object {
              "fqn": "monitoringcoreoscom.ThanosRulerSpecContainersLifecyclePreStopTcpSocketPort",
            },
          },
          "static": true,
        },
      ],
      "name": "ThanosRulerSpecContainersLifecyclePreStopTcpSocketPort",
      "properties": Array [
        Object {
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 36355,
          },
          "name": "value",
          "type": Object {
            "primitive": "any",
          },
        },
      ],
    },
    "monitoringcoreoscom.ThanosRulerSpecContainersLivenessProbe": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "ThanosRulerSpecContainersLivenessProbe",
        },
        "remarks": "Container will be restarted if the probe fails. Cannot be updated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes",
        "summary": "Periodic probe of container liveness.",
      },
      "fqn": "monitoringcoreoscom.ThanosRulerSpecContainersLivenessProbe",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 28128,
      },
      "name": "ThanosRulerSpecContainersLivenessProbe",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecContainersLivenessProbe#exec",
            },
            "remarks": "Exec specifies the action to take.",
            "summary": "One and only one of the following should be specified.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 28134,
          },
          "name": "exec",
          "optional": true,
          "type": Object {
            "fqn": "monitoringcoreoscom.ThanosRulerSpecContainersLivenessProbeExec",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecContainersLivenessProbe#failureThreshold",
            },
            "default": "3. Minimum value is 1.",
            "remarks": "Defaults to 3. Minimum value is 1.",
            "summary": "Minimum consecutive failures for the probe to be considered failed after having succeeded.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 28142,
          },
          "name": "failureThreshold",
          "optional": true,
          "type": Object {
            "primitive": "number",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecContainersLivenessProbe#httpGet",
            },
            "summary": "HTTPGet specifies the http request to perform.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 28149,
          },
          "name": "httpGet",
          "optional": true,
          "type": Object {
            "fqn": "monitoringcoreoscom.ThanosRulerSpecContainersLivenessProbeHttpGet",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecContainersLivenessProbe#initialDelaySeconds",
            },
            "remarks": "More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes",
            "summary": "Number of seconds after the container has started before liveness probes are initiated.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 28156,
          },
          "name": "initialDelaySeconds",
          "optional": true,
          "type": Object {
            "primitive": "number",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecContainersLivenessProbe#periodSeconds",
            },
            "default": "10 seconds. Minimum value is 1.",
            "remarks": "Default to 10 seconds. Minimum value is 1.",
            "summary": "How often (in seconds) to perform the probe.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 28164,
          },
          "name": "periodSeconds",
          "optional": true,
          "type": Object {
            "primitive": "number",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecContainersLivenessProbe#successThreshold",
            },
            "default": "1. Must be 1 for liveness and startup. Minimum value is 1.",
            "remarks": "Defaults to 1. Must be 1 for liveness and startup. Minimum value is 1.",
            "summary": "Minimum consecutive successes for the probe to be considered successful after having failed.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 28172,
          },
          "name": "successThreshold",
          "optional": true,
          "type": Object {
            "primitive": "number",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecContainersLivenessProbe#tcpSocket",
            },
            "remarks": "TCP hooks not yet supported TODO: implement a realistic TCP lifecycle hook",
            "summary": "TCPSocket specifies an action involving a TCP port.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 28179,
          },
          "name": "tcpSocket",
          "optional": true,
          "type": Object {
            "fqn": "monitoringcoreoscom.ThanosRulerSpecContainersLivenessProbeTcpSocket",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecContainersLivenessProbe#timeoutSeconds",
            },
            "default": "1 second. Minimum value is 1. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes",
            "remarks": "Defaults to 1 second. Minimum value is 1. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes",
            "summary": "Number of seconds after which the probe times out.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 28187,
          },
          "name": "timeoutSeconds",
          "optional": true,
          "type": Object {
            "primitive": "number",
          },
        },
      ],
    },
    "monitoringcoreoscom.ThanosRulerSpecContainersLivenessProbeExec": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "ThanosRulerSpecContainersLivenessProbeExec",
        },
        "remarks": "Exec specifies the action to take.",
        "summary": "One and only one of the following should be specified.",
      },
      "fqn": "monitoringcoreoscom.ThanosRulerSpecContainersLivenessProbeExec",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 31883,
      },
      "name": "ThanosRulerSpecContainersLivenessProbeExec",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecContainersLivenessProbeExec#command",
            },
            "remarks": "The command is simply exec'd, it is not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use a shell, you need to explicitly call out to that shell. Exit status of 0 is treated as live/healthy and non-zero is unhealthy.",
            "summary": "Command is the command line to execute inside the container, the working directory for the command  is root ('/') in the container's filesystem.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 31889,
          },
          "name": "command",
          "optional": true,
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "primitive": "string",
              },
              "kind": "array",
            },
          },
        },
      ],
    },
    "monitoringcoreoscom.ThanosRulerSpecContainersLivenessProbeHttpGet": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "ThanosRulerSpecContainersLivenessProbeHttpGet",
        },
        "summary": "HTTPGet specifies the http request to perform.",
      },
      "fqn": "monitoringcoreoscom.ThanosRulerSpecContainersLivenessProbeHttpGet",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 31912,
      },
      "name": "ThanosRulerSpecContainersLivenessProbeHttpGet",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecContainersLivenessProbeHttpGet#port",
            },
            "remarks": "Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.",
            "summary": "Name or number of the port to access on the container.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 31939,
          },
          "name": "port",
          "type": Object {
            "fqn": "monitoringcoreoscom.ThanosRulerSpecContainersLivenessProbeHttpGetPort",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecContainersLivenessProbeHttpGet#host",
            },
            "remarks": "You probably want to set \\"Host\\" in httpHeaders instead.",
            "summary": "Host name to connect to, defaults to the pod IP.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 31918,
          },
          "name": "host",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecContainersLivenessProbeHttpGet#httpHeaders",
            },
            "remarks": "HTTP allows repeated headers.",
            "summary": "Custom headers to set in the request.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 31925,
          },
          "name": "httpHeaders",
          "optional": true,
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "fqn": "monitoringcoreoscom.ThanosRulerSpecContainersLivenessProbeHttpGetHttpHeaders",
              },
              "kind": "array",
            },
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecContainersLivenessProbeHttpGet#path",
            },
            "summary": "Path to access on the HTTP server.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 31932,
          },
          "name": "path",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecContainersLivenessProbeHttpGet#scheme",
            },
            "default": "HTTP.",
            "remarks": "Defaults to HTTP.",
            "summary": "Scheme to use for connecting to the host.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 31947,
          },
          "name": "scheme",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
      ],
    },
    "monitoringcoreoscom.ThanosRulerSpecContainersLivenessProbeHttpGetHttpHeaders": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "ThanosRulerSpecContainersLivenessProbeHttpGetHttpHeaders",
        },
        "summary": "HTTPHeader describes a custom header to be used in HTTP probes.",
      },
      "fqn": "monitoringcoreoscom.ThanosRulerSpecContainersLivenessProbeHttpGetHttpHeaders",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 34592,
      },
      "name": "ThanosRulerSpecContainersLivenessProbeHttpGetHttpHeaders",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecContainersLivenessProbeHttpGetHttpHeaders#name",
            },
            "summary": "The header field name.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 34598,
          },
          "name": "name",
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecContainersLivenessProbeHttpGetHttpHeaders#value",
            },
            "summary": "The header field value.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 34605,
          },
          "name": "value",
          "type": Object {
            "primitive": "string",
          },
        },
      ],
    },
    "monitoringcoreoscom.ThanosRulerSpecContainersLivenessProbeHttpGetPort": Object {
      "assembly": "monitoringcoreoscom",
      "docs": Object {
        "custom": Object {
          "schema": "ThanosRulerSpecContainersLivenessProbeHttpGetPort",
        },
        "remarks": "Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.",
        "summary": "Name or number of the port to access on the container.",
      },
      "fqn": "monitoringcoreoscom.ThanosRulerSpecContainersLivenessProbeHttpGetPort",
      "kind": "class",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 34629,
      },
      "methods": Array [
        Object {
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 34630,
          },
          "name": "fromNumber",
          "parameters": Array [
            Object {
              "name": "value",
              "type": Object {
                "primitive": "number",
              },
            },
          ],
          "returns": Object {
            "type": Object {
              "fqn": "monitoringcoreoscom.ThanosRulerSpecContainersLivenessProbeHttpGetPort",
            },
          },
          "static": true,
        },
        Object {
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 34633,
          },
          "name": "fromString",
          "parameters": Array [
            Object {
              "name": "value",
              "type": Object {
                "primitive": "string",
              },
            },
          ],
          "returns": Object {
            "type": Object {
              "fqn": "monitoringcoreoscom.ThanosRulerSpecContainersLivenessProbeHttpGetPort",
            },
          },
          "static": true,
        },
      ],
      "name": "ThanosRulerSpecContainersLivenessProbeHttpGetPort",
      "properties": Array [
        Object {
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 34636,
          },
          "name": "value",
          "type": Object {
            "primitive": "any",
          },
        },
      ],
    },
    "monitoringcoreoscom.ThanosRulerSpecContainersLivenessProbeTcpSocket": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "ThanosRulerSpecContainersLivenessProbeTcpSocket",
        },
        "remarks": "TCP hooks not yet supported TODO: implement a realistic TCP lifecycle hook",
        "summary": "TCPSocket specifies an action involving a TCP port.",
      },
      "fqn": "monitoringcoreoscom.ThanosRulerSpecContainersLivenessProbeTcpSocket",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 31974,
      },
      "name": "ThanosRulerSpecContainersLivenessProbeTcpSocket",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecContainersLivenessProbeTcpSocket#port",
            },
            "remarks": "Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.",
            "summary": "Number or name of the port to access on the container.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 31987,
          },
          "name": "port",
          "type": Object {
            "fqn": "monitoringcoreoscom.ThanosRulerSpecContainersLivenessProbeTcpSocketPort",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecContainersLivenessProbeTcpSocket#host",
            },
            "summary": "Optional: Host name to connect to, defaults to the pod IP.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 31980,
          },
          "name": "host",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
      ],
    },
    "monitoringcoreoscom.ThanosRulerSpecContainersLivenessProbeTcpSocketPort": Object {
      "assembly": "monitoringcoreoscom",
      "docs": Object {
        "custom": Object {
          "schema": "ThanosRulerSpecContainersLivenessProbeTcpSocketPort",
        },
        "remarks": "Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.",
        "summary": "Number or name of the port to access on the container.",
      },
      "fqn": "monitoringcoreoscom.ThanosRulerSpecContainersLivenessProbeTcpSocketPort",
      "kind": "class",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 34646,
      },
      "methods": Array [
        Object {
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 34647,
          },
          "name": "fromNumber",
          "parameters": Array [
            Object {
              "name": "value",
              "type": Object {
                "primitive": "number",
              },
            },
          ],
          "returns": Object {
            "type": Object {
              "fqn": "monitoringcoreoscom.ThanosRulerSpecContainersLivenessProbeTcpSocketPort",
            },
          },
          "static": true,
        },
        Object {
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 34650,
          },
          "name": "fromString",
          "parameters": Array [
            Object {
              "name": "value",
              "type": Object {
                "primitive": "string",
              },
            },
          ],
          "returns": Object {
            "type": Object {
              "fqn": "monitoringcoreoscom.ThanosRulerSpecContainersLivenessProbeTcpSocketPort",
            },
          },
          "static": true,
        },
      ],
      "name": "ThanosRulerSpecContainersLivenessProbeTcpSocketPort",
      "properties": Array [
        Object {
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 34653,
          },
          "name": "value",
          "type": Object {
            "primitive": "any",
          },
        },
      ],
    },
    "monitoringcoreoscom.ThanosRulerSpecContainersPorts": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "ThanosRulerSpecContainersPorts",
        },
        "summary": "ContainerPort represents a network port in a single container.",
      },
      "fqn": "monitoringcoreoscom.ThanosRulerSpecContainersPorts",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 28217,
      },
      "name": "ThanosRulerSpecContainersPorts",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecContainersPorts#containerPort",
            },
            "remarks": "This must be a valid port number, 0 < x < 65536.",
            "summary": "Number of port to expose on the pod's IP address.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 28223,
          },
          "name": "containerPort",
          "type": Object {
            "primitive": "number",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecContainersPorts#hostIP",
            },
            "summary": "What host IP to bind the external port to.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 28230,
          },
          "name": "hostIp",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecContainersPorts#hostPort",
            },
            "remarks": "If specified, this must be a valid port number, 0 < x < 65536. If HostNetwork is specified, this must match ContainerPort. Most containers do not need this.",
            "summary": "Number of port to expose on the host.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 28237,
          },
          "name": "hostPort",
          "optional": true,
          "type": Object {
            "primitive": "number",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecContainersPorts#name",
            },
            "remarks": "Each named port in a pod must have a unique name. Name for the port that can be referred to by services.",
            "summary": "If specified, this must be an IANA_SVC_NAME and unique within the pod.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 28244,
          },
          "name": "name",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecContainersPorts#protocol",
            },
            "default": "TCP\\".",
            "remarks": "Must be UDP, TCP, or SCTP. Defaults to \\"TCP\\".",
            "summary": "Protocol for port.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 28252,
          },
          "name": "protocol",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
      ],
    },
    "monitoringcoreoscom.ThanosRulerSpecContainersReadinessProbe": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "ThanosRulerSpecContainersReadinessProbe",
        },
        "remarks": "Container will be removed from service endpoints if the probe fails. Cannot be updated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes",
        "summary": "Periodic probe of container service readiness.",
      },
      "fqn": "monitoringcoreoscom.ThanosRulerSpecContainersReadinessProbe",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 28279,
      },
      "name": "ThanosRulerSpecContainersReadinessProbe",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecContainersReadinessProbe#exec",
            },
            "remarks": "Exec specifies the action to take.",
            "summary": "One and only one of the following should be specified.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 28285,
          },
          "name": "exec",
          "optional": true,
          "type": Object {
            "fqn": "monitoringcoreoscom.ThanosRulerSpecContainersReadinessProbeExec",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecContainersReadinessProbe#failureThreshold",
            },
            "default": "3. Minimum value is 1.",
            "remarks": "Defaults to 3. Minimum value is 1.",
            "summary": "Minimum consecutive failures for the probe to be considered failed after having succeeded.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 28293,
          },
          "name": "failureThreshold",
          "optional": true,
          "type": Object {
            "primitive": "number",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecContainersReadinessProbe#httpGet",
            },
            "summary": "HTTPGet specifies the http request to perform.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 28300,
          },
          "name": "httpGet",
          "optional": true,
          "type": Object {
            "fqn": "monitoringcoreoscom.ThanosRulerSpecContainersReadinessProbeHttpGet",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecContainersReadinessProbe#initialDelaySeconds",
            },
            "remarks": "More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes",
            "summary": "Number of seconds after the container has started before liveness probes are initiated.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 28307,
          },
          "name": "initialDelaySeconds",
          "optional": true,
          "type": Object {
            "primitive": "number",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecContainersReadinessProbe#periodSeconds",
            },
            "default": "10 seconds. Minimum value is 1.",
            "remarks": "Default to 10 seconds. Minimum value is 1.",
            "summary": "How often (in seconds) to perform the probe.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 28315,
          },
          "name": "periodSeconds",
          "optional": true,
          "type": Object {
            "primitive": "number",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecContainersReadinessProbe#successThreshold",
            },
            "default": "1. Must be 1 for liveness and startup. Minimum value is 1.",
            "remarks": "Defaults to 1. Must be 1 for liveness and startup. Minimum value is 1.",
            "summary": "Minimum consecutive successes for the probe to be considered successful after having failed.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 28323,
          },
          "name": "successThreshold",
          "optional": true,
          "type": Object {
            "primitive": "number",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecContainersReadinessProbe#tcpSocket",
            },
            "remarks": "TCP hooks not yet supported TODO: implement a realistic TCP lifecycle hook",
            "summary": "TCPSocket specifies an action involving a TCP port.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 28330,
          },
          "name": "tcpSocket",
          "optional": true,
          "type": Object {
            "fqn": "monitoringcoreoscom.ThanosRulerSpecContainersReadinessProbeTcpSocket",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecContainersReadinessProbe#timeoutSeconds",
            },
            "default": "1 second. Minimum value is 1. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes",
            "remarks": "Defaults to 1 second. Minimum value is 1. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes",
            "summary": "Number of seconds after which the probe times out.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 28338,
          },
          "name": "timeoutSeconds",
          "optional": true,
          "type": Object {
            "primitive": "number",
          },
        },
      ],
    },
    "monitoringcoreoscom.ThanosRulerSpecContainersReadinessProbeExec": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "ThanosRulerSpecContainersReadinessProbeExec",
        },
        "remarks": "Exec specifies the action to take.",
        "summary": "One and only one of the following should be specified.",
      },
      "fqn": "monitoringcoreoscom.ThanosRulerSpecContainersReadinessProbeExec",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 32011,
      },
      "name": "ThanosRulerSpecContainersReadinessProbeExec",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecContainersReadinessProbeExec#command",
            },
            "remarks": "The command is simply exec'd, it is not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use a shell, you need to explicitly call out to that shell. Exit status of 0 is treated as live/healthy and non-zero is unhealthy.",
            "summary": "Command is the command line to execute inside the container, the working directory for the command  is root ('/') in the container's filesystem.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 32017,
          },
          "name": "command",
          "optional": true,
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "primitive": "string",
              },
              "kind": "array",
            },
          },
        },
      ],
    },
    "monitoringcoreoscom.ThanosRulerSpecContainersReadinessProbeHttpGet": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "ThanosRulerSpecContainersReadinessProbeHttpGet",
        },
        "summary": "HTTPGet specifies the http request to perform.",
      },
      "fqn": "monitoringcoreoscom.ThanosRulerSpecContainersReadinessProbeHttpGet",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 32040,
      },
      "name": "ThanosRulerSpecContainersReadinessProbeHttpGet",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecContainersReadinessProbeHttpGet#port",
            },
            "remarks": "Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.",
            "summary": "Name or number of the port to access on the container.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 32067,
          },
          "name": "port",
          "type": Object {
            "fqn": "monitoringcoreoscom.ThanosRulerSpecContainersReadinessProbeHttpGetPort",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecContainersReadinessProbeHttpGet#host",
            },
            "remarks": "You probably want to set \\"Host\\" in httpHeaders instead.",
            "summary": "Host name to connect to, defaults to the pod IP.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 32046,
          },
          "name": "host",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecContainersReadinessProbeHttpGet#httpHeaders",
            },
            "remarks": "HTTP allows repeated headers.",
            "summary": "Custom headers to set in the request.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 32053,
          },
          "name": "httpHeaders",
          "optional": true,
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "fqn": "monitoringcoreoscom.ThanosRulerSpecContainersReadinessProbeHttpGetHttpHeaders",
              },
              "kind": "array",
            },
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecContainersReadinessProbeHttpGet#path",
            },
            "summary": "Path to access on the HTTP server.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 32060,
          },
          "name": "path",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecContainersReadinessProbeHttpGet#scheme",
            },
            "default": "HTTP.",
            "remarks": "Defaults to HTTP.",
            "summary": "Scheme to use for connecting to the host.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 32075,
          },
          "name": "scheme",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
      ],
    },
    "monitoringcoreoscom.ThanosRulerSpecContainersReadinessProbeHttpGetHttpHeaders": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "ThanosRulerSpecContainersReadinessProbeHttpGetHttpHeaders",
        },
        "summary": "HTTPHeader describes a custom header to be used in HTTP probes.",
      },
      "fqn": "monitoringcoreoscom.ThanosRulerSpecContainersReadinessProbeHttpGetHttpHeaders",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 34663,
      },
      "name": "ThanosRulerSpecContainersReadinessProbeHttpGetHttpHeaders",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecContainersReadinessProbeHttpGetHttpHeaders#name",
            },
            "summary": "The header field name.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 34669,
          },
          "name": "name",
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecContainersReadinessProbeHttpGetHttpHeaders#value",
            },
            "summary": "The header field value.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 34676,
          },
          "name": "value",
          "type": Object {
            "primitive": "string",
          },
        },
      ],
    },
    "monitoringcoreoscom.ThanosRulerSpecContainersReadinessProbeHttpGetPort": Object {
      "assembly": "monitoringcoreoscom",
      "docs": Object {
        "custom": Object {
          "schema": "ThanosRulerSpecContainersReadinessProbeHttpGetPort",
        },
        "remarks": "Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.",
        "summary": "Name or number of the port to access on the container.",
      },
      "fqn": "monitoringcoreoscom.ThanosRulerSpecContainersReadinessProbeHttpGetPort",
      "kind": "class",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 34700,
      },
      "methods": Array [
        Object {
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 34701,
          },
          "name": "fromNumber",
          "parameters": Array [
            Object {
              "name": "value",
              "type": Object {
                "primitive": "number",
              },
            },
          ],
          "returns": Object {
            "type": Object {
              "fqn": "monitoringcoreoscom.ThanosRulerSpecContainersReadinessProbeHttpGetPort",
            },
          },
          "static": true,
        },
        Object {
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 34704,
          },
          "name": "fromString",
          "parameters": Array [
            Object {
              "name": "value",
              "type": Object {
                "primitive": "string",
              },
            },
          ],
          "returns": Object {
            "type": Object {
              "fqn": "monitoringcoreoscom.ThanosRulerSpecContainersReadinessProbeHttpGetPort",
            },
          },
          "static": true,
        },
      ],
      "name": "ThanosRulerSpecContainersReadinessProbeHttpGetPort",
      "properties": Array [
        Object {
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 34707,
          },
          "name": "value",
          "type": Object {
            "primitive": "any",
          },
        },
      ],
    },
    "monitoringcoreoscom.ThanosRulerSpecContainersReadinessProbeTcpSocket": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "ThanosRulerSpecContainersReadinessProbeTcpSocket",
        },
        "remarks": "TCP hooks not yet supported TODO: implement a realistic TCP lifecycle hook",
        "summary": "TCPSocket specifies an action involving a TCP port.",
      },
      "fqn": "monitoringcoreoscom.ThanosRulerSpecContainersReadinessProbeTcpSocket",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 32102,
      },
      "name": "ThanosRulerSpecContainersReadinessProbeTcpSocket",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecContainersReadinessProbeTcpSocket#port",
            },
            "remarks": "Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.",
            "summary": "Number or name of the port to access on the container.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 32115,
          },
          "name": "port",
          "type": Object {
            "fqn": "monitoringcoreoscom.ThanosRulerSpecContainersReadinessProbeTcpSocketPort",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecContainersReadinessProbeTcpSocket#host",
            },
            "summary": "Optional: Host name to connect to, defaults to the pod IP.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 32108,
          },
          "name": "host",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
      ],
    },
    "monitoringcoreoscom.ThanosRulerSpecContainersReadinessProbeTcpSocketPort": Object {
      "assembly": "monitoringcoreoscom",
      "docs": Object {
        "custom": Object {
          "schema": "ThanosRulerSpecContainersReadinessProbeTcpSocketPort",
        },
        "remarks": "Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.",
        "summary": "Number or name of the port to access on the container.",
      },
      "fqn": "monitoringcoreoscom.ThanosRulerSpecContainersReadinessProbeTcpSocketPort",
      "kind": "class",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 34717,
      },
      "methods": Array [
        Object {
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 34718,
          },
          "name": "fromNumber",
          "parameters": Array [
            Object {
              "name": "value",
              "type": Object {
                "primitive": "number",
              },
            },
          ],
          "returns": Object {
            "type": Object {
              "fqn": "monitoringcoreoscom.ThanosRulerSpecContainersReadinessProbeTcpSocketPort",
            },
          },
          "static": true,
        },
        Object {
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 34721,
          },
          "name": "fromString",
          "parameters": Array [
            Object {
              "name": "value",
              "type": Object {
                "primitive": "string",
              },
            },
          ],
          "returns": Object {
            "type": Object {
              "fqn": "monitoringcoreoscom.ThanosRulerSpecContainersReadinessProbeTcpSocketPort",
            },
          },
          "static": true,
        },
      ],
      "name": "ThanosRulerSpecContainersReadinessProbeTcpSocketPort",
      "properties": Array [
        Object {
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 34724,
          },
          "name": "value",
          "type": Object {
            "primitive": "any",
          },
        },
      ],
    },
    "monitoringcoreoscom.ThanosRulerSpecContainersResources": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "ThanosRulerSpecContainersResources",
        },
        "remarks": "Cannot be updated. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/",
        "summary": "Compute Resources required by this container.",
      },
      "fqn": "monitoringcoreoscom.ThanosRulerSpecContainersResources",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 28368,
      },
      "name": "ThanosRulerSpecContainersResources",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecContainersResources#limits",
            },
            "remarks": "More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/",
            "summary": "Limits describes the maximum amount of compute resources allowed.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 28374,
          },
          "name": "limits",
          "optional": true,
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "primitive": "string",
              },
              "kind": "map",
            },
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecContainersResources#requests",
            },
            "remarks": "If Requests is omitted for a container, it defaults to Limits if that is explicitly specified, otherwise to an implementation-defined value. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/",
            "summary": "Requests describes the minimum amount of compute resources required.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 28381,
          },
          "name": "requests",
          "optional": true,
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "primitive": "string",
              },
              "kind": "map",
            },
          },
        },
      ],
    },
    "monitoringcoreoscom.ThanosRulerSpecContainersSecurityContext": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "ThanosRulerSpecContainersSecurityContext",
        },
        "remarks": "More info: https://kubernetes.io/docs/concepts/policy/security-context/ More info: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
        "summary": "Security options the pod should run with.",
      },
      "fqn": "monitoringcoreoscom.ThanosRulerSpecContainersSecurityContext",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 28405,
      },
      "name": "ThanosRulerSpecContainersSecurityContext",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecContainersSecurityContext#allowPrivilegeEscalation",
            },
            "remarks": "This bool directly controls if the no_new_privs flag will be set on the container process. AllowPrivilegeEscalation is true always when the container is: 1) run as Privileged 2) has CAP_SYS_ADMIN",
            "summary": "AllowPrivilegeEscalation controls whether a process can gain more privileges than its parent process.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 28411,
          },
          "name": "allowPrivilegeEscalation",
          "optional": true,
          "type": Object {
            "primitive": "boolean",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecContainersSecurityContext#capabilities",
            },
            "default": "the default set of capabilities granted by the container runtime.",
            "remarks": "Defaults to the default set of capabilities granted by the container runtime.",
            "summary": "The capabilities to add/drop when running containers.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 28419,
          },
          "name": "capabilities",
          "optional": true,
          "type": Object {
            "fqn": "monitoringcoreoscom.ThanosRulerSpecContainersSecurityContextCapabilities",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecContainersSecurityContext#privileged",
            },
            "default": "false.",
            "remarks": "Processes in privileged containers are essentially equivalent to root on the host. Defaults to false.",
            "summary": "Run container in privileged mode.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 28427,
          },
          "name": "privileged",
          "optional": true,
          "type": Object {
            "primitive": "boolean",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecContainersSecurityContext#procMount",
            },
            "remarks": "The default is DefaultProcMount which uses the container runtime defaults for readonly paths and masked paths. This requires the ProcMountType feature flag to be enabled.",
            "summary": "procMount denotes the type of proc mount to use for the containers.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 28434,
          },
          "name": "procMount",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecContainersSecurityContext#readOnlyRootFilesystem",
            },
            "default": "false.",
            "remarks": "Default is false.",
            "summary": "Whether this container has a read-only root filesystem.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 28442,
          },
          "name": "readOnlyRootFilesystem",
          "optional": true,
          "type": Object {
            "primitive": "boolean",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecContainersSecurityContext#runAsGroup",
            },
            "remarks": "Uses runtime default if unset. May also be set in PodSecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.",
            "summary": "The GID to run the entrypoint of the container process.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 28449,
          },
          "name": "runAsGroup",
          "optional": true,
          "type": Object {
            "primitive": "number",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecContainersSecurityContext#runAsNonRoot",
            },
            "remarks": "If true, the Kubelet will validate the image at runtime to ensure that it does not run as UID 0 (root) and fail to start the container if it does. If unset or false, no such validation will be performed. May also be set in PodSecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.",
            "summary": "Indicates that the container must run as a non-root user.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 28456,
          },
          "name": "runAsNonRoot",
          "optional": true,
          "type": Object {
            "primitive": "boolean",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecContainersSecurityContext#runAsUser",
            },
            "default": "user specified in image metadata if unspecified. May also be set in PodSecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.",
            "remarks": "Defaults to user specified in image metadata if unspecified. May also be set in PodSecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.",
            "summary": "The UID to run the entrypoint of the container process.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 28464,
          },
          "name": "runAsUser",
          "optional": true,
          "type": Object {
            "primitive": "number",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecContainersSecurityContext#seLinuxOptions",
            },
            "remarks": "If unspecified, the container runtime will allocate a random SELinux context for each container.  May also be set in PodSecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.",
            "summary": "The SELinux context to be applied to the container.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 28471,
          },
          "name": "seLinuxOptions",
          "optional": true,
          "type": Object {
            "fqn": "monitoringcoreoscom.ThanosRulerSpecContainersSecurityContextSeLinuxOptions",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecContainersSecurityContext#windowsOptions",
            },
            "remarks": "If unspecified, the options from the PodSecurityContext will be used. If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.",
            "summary": "The Windows specific settings applied to all containers.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 28478,
          },
          "name": "windowsOptions",
          "optional": true,
          "type": Object {
            "fqn": "monitoringcoreoscom.ThanosRulerSpecContainersSecurityContextWindowsOptions",
          },
        },
      ],
    },
    "monitoringcoreoscom.ThanosRulerSpecContainersSecurityContextCapabilities": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "ThanosRulerSpecContainersSecurityContextCapabilities",
        },
        "default": "the default set of capabilities granted by the container runtime.",
        "remarks": "Defaults to the default set of capabilities granted by the container runtime.",
        "summary": "The capabilities to add/drop when running containers.",
      },
      "fqn": "monitoringcoreoscom.ThanosRulerSpecContainersSecurityContextCapabilities",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 32140,
      },
      "name": "ThanosRulerSpecContainersSecurityContextCapabilities",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecContainersSecurityContextCapabilities#add",
            },
            "summary": "Added capabilities.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 32146,
          },
          "name": "add",
          "optional": true,
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "primitive": "string",
              },
              "kind": "array",
            },
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecContainersSecurityContextCapabilities#drop",
            },
            "summary": "Removed capabilities.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 32153,
          },
          "name": "drop",
          "optional": true,
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "primitive": "string",
              },
              "kind": "array",
            },
          },
        },
      ],
    },
    "monitoringcoreoscom.ThanosRulerSpecContainersSecurityContextSeLinuxOptions": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "ThanosRulerSpecContainersSecurityContextSeLinuxOptions",
        },
        "remarks": "If unspecified, the container runtime will allocate a random SELinux context for each container.  May also be set in PodSecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.",
        "summary": "The SELinux context to be applied to the container.",
      },
      "fqn": "monitoringcoreoscom.ThanosRulerSpecContainersSecurityContextSeLinuxOptions",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 32177,
      },
      "name": "ThanosRulerSpecContainersSecurityContextSeLinuxOptions",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecContainersSecurityContextSeLinuxOptions#level",
            },
            "summary": "Level is SELinux level label that applies to the container.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 32183,
          },
          "name": "level",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecContainersSecurityContextSeLinuxOptions#role",
            },
            "summary": "Role is a SELinux role label that applies to the container.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 32190,
          },
          "name": "role",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecContainersSecurityContextSeLinuxOptions#type",
            },
            "summary": "Type is a SELinux type label that applies to the container.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 32197,
          },
          "name": "type",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecContainersSecurityContextSeLinuxOptions#user",
            },
            "summary": "User is a SELinux user label that applies to the container.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 32204,
          },
          "name": "user",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
      ],
    },
    "monitoringcoreoscom.ThanosRulerSpecContainersSecurityContextWindowsOptions": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "ThanosRulerSpecContainersSecurityContextWindowsOptions",
        },
        "remarks": "If unspecified, the options from the PodSecurityContext will be used. If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.",
        "summary": "The Windows specific settings applied to all containers.",
      },
      "fqn": "monitoringcoreoscom.ThanosRulerSpecContainersSecurityContextWindowsOptions",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 32230,
      },
      "name": "ThanosRulerSpecContainersSecurityContextWindowsOptions",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecContainersSecurityContextWindowsOptions#gmsaCredentialSpec",
            },
            "summary": "GMSACredentialSpec is where the GMSA admission webhook (https://github.com/kubernetes-sigs/windows-gmsa) inlines the contents of the GMSA credential spec named by the GMSACredentialSpecName field.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 32236,
          },
          "name": "gmsaCredentialSpec",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecContainersSecurityContextWindowsOptions#gmsaCredentialSpecName",
            },
            "summary": "GMSACredentialSpecName is the name of the GMSA credential spec to use.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 32243,
          },
          "name": "gmsaCredentialSpecName",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecContainersSecurityContextWindowsOptions#runAsUserName",
            },
            "default": "the user specified in image metadata if unspecified. May also be set in PodSecurityContext. If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.",
            "remarks": "Defaults to the user specified in image metadata if unspecified. May also be set in PodSecurityContext. If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.",
            "summary": "The UserName in Windows to run the entrypoint of the container process.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 32251,
          },
          "name": "runAsUserName",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
      ],
    },
    "monitoringcoreoscom.ThanosRulerSpecContainersStartupProbe": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "ThanosRulerSpecContainersStartupProbe",
        },
        "remarks": "If specified, no other probes are executed until this completes successfully. If this probe fails, the Pod will be restarted, just as if the livenessProbe failed. This can be used to provide different probe parameters at the beginning of a Pod's lifecycle, when it might take a long time to load data or warm a cache, than during steady-state operation. This cannot be updated. This is a beta feature enabled by the StartupProbe feature flag. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes",
        "summary": "StartupProbe indicates that the Pod has successfully initialized.",
      },
      "fqn": "monitoringcoreoscom.ThanosRulerSpecContainersStartupProbe",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 28510,
      },
      "name": "ThanosRulerSpecContainersStartupProbe",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecContainersStartupProbe#exec",
            },
            "remarks": "Exec specifies the action to take.",
            "summary": "One and only one of the following should be specified.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 28516,
          },
          "name": "exec",
          "optional": true,
          "type": Object {
            "fqn": "monitoringcoreoscom.ThanosRulerSpecContainersStartupProbeExec",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecContainersStartupProbe#failureThreshold",
            },
            "default": "3. Minimum value is 1.",
            "remarks": "Defaults to 3. Minimum value is 1.",
            "summary": "Minimum consecutive failures for the probe to be considered failed after having succeeded.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 28524,
          },
          "name": "failureThreshold",
          "optional": true,
          "type": Object {
            "primitive": "number",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecContainersStartupProbe#httpGet",
            },
            "summary": "HTTPGet specifies the http request to perform.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 28531,
          },
          "name": "httpGet",
          "optional": true,
          "type": Object {
            "fqn": "monitoringcoreoscom.ThanosRulerSpecContainersStartupProbeHttpGet",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecContainersStartupProbe#initialDelaySeconds",
            },
            "remarks": "More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes",
            "summary": "Number of seconds after the container has started before liveness probes are initiated.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 28538,
          },
          "name": "initialDelaySeconds",
          "optional": true,
          "type": Object {
            "primitive": "number",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecContainersStartupProbe#periodSeconds",
            },
            "default": "10 seconds. Minimum value is 1.",
            "remarks": "Default to 10 seconds. Minimum value is 1.",
            "summary": "How often (in seconds) to perform the probe.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 28546,
          },
          "name": "periodSeconds",
          "optional": true,
          "type": Object {
            "primitive": "number",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecContainersStartupProbe#successThreshold",
            },
            "default": "1. Must be 1 for liveness and startup. Minimum value is 1.",
            "remarks": "Defaults to 1. Must be 1 for liveness and startup. Minimum value is 1.",
            "summary": "Minimum consecutive successes for the probe to be considered successful after having failed.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 28554,
          },
          "name": "successThreshold",
          "optional": true,
          "type": Object {
            "primitive": "number",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecContainersStartupProbe#tcpSocket",
            },
            "remarks": "TCP hooks not yet supported TODO: implement a realistic TCP lifecycle hook",
            "summary": "TCPSocket specifies an action involving a TCP port.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 28561,
          },
          "name": "tcpSocket",
          "optional": true,
          "type": Object {
            "fqn": "monitoringcoreoscom.ThanosRulerSpecContainersStartupProbeTcpSocket",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecContainersStartupProbe#timeoutSeconds",
            },
            "default": "1 second. Minimum value is 1. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes",
            "remarks": "Defaults to 1 second. Minimum value is 1. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes",
            "summary": "Number of seconds after which the probe times out.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 28569,
          },
          "name": "timeoutSeconds",
          "optional": true,
          "type": Object {
            "primitive": "number",
          },
        },
      ],
    },
    "monitoringcoreoscom.ThanosRulerSpecContainersStartupProbeExec": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "ThanosRulerSpecContainersStartupProbeExec",
        },
        "remarks": "Exec specifies the action to take.",
        "summary": "One and only one of the following should be specified.",
      },
      "fqn": "monitoringcoreoscom.ThanosRulerSpecContainersStartupProbeExec",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 32276,
      },
      "name": "ThanosRulerSpecContainersStartupProbeExec",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecContainersStartupProbeExec#command",
            },
            "remarks": "The command is simply exec'd, it is not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use a shell, you need to explicitly call out to that shell. Exit status of 0 is treated as live/healthy and non-zero is unhealthy.",
            "summary": "Command is the command line to execute inside the container, the working directory for the command  is root ('/') in the container's filesystem.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 32282,
          },
          "name": "command",
          "optional": true,
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "primitive": "string",
              },
              "kind": "array",
            },
          },
        },
      ],
    },
    "monitoringcoreoscom.ThanosRulerSpecContainersStartupProbeHttpGet": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "ThanosRulerSpecContainersStartupProbeHttpGet",
        },
        "summary": "HTTPGet specifies the http request to perform.",
      },
      "fqn": "monitoringcoreoscom.ThanosRulerSpecContainersStartupProbeHttpGet",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 32305,
      },
      "name": "ThanosRulerSpecContainersStartupProbeHttpGet",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecContainersStartupProbeHttpGet#port",
            },
            "remarks": "Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.",
            "summary": "Name or number of the port to access on the container.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 32332,
          },
          "name": "port",
          "type": Object {
            "fqn": "monitoringcoreoscom.ThanosRulerSpecContainersStartupProbeHttpGetPort",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecContainersStartupProbeHttpGet#host",
            },
            "remarks": "You probably want to set \\"Host\\" in httpHeaders instead.",
            "summary": "Host name to connect to, defaults to the pod IP.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 32311,
          },
          "name": "host",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecContainersStartupProbeHttpGet#httpHeaders",
            },
            "remarks": "HTTP allows repeated headers.",
            "summary": "Custom headers to set in the request.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 32318,
          },
          "name": "httpHeaders",
          "optional": true,
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "fqn": "monitoringcoreoscom.ThanosRulerSpecContainersStartupProbeHttpGetHttpHeaders",
              },
              "kind": "array",
            },
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecContainersStartupProbeHttpGet#path",
            },
            "summary": "Path to access on the HTTP server.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 32325,
          },
          "name": "path",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecContainersStartupProbeHttpGet#scheme",
            },
            "default": "HTTP.",
            "remarks": "Defaults to HTTP.",
            "summary": "Scheme to use for connecting to the host.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 32340,
          },
          "name": "scheme",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
      ],
    },
    "monitoringcoreoscom.ThanosRulerSpecContainersStartupProbeHttpGetHttpHeaders": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "ThanosRulerSpecContainersStartupProbeHttpGetHttpHeaders",
        },
        "summary": "HTTPHeader describes a custom header to be used in HTTP probes.",
      },
      "fqn": "monitoringcoreoscom.ThanosRulerSpecContainersStartupProbeHttpGetHttpHeaders",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 34734,
      },
      "name": "ThanosRulerSpecContainersStartupProbeHttpGetHttpHeaders",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecContainersStartupProbeHttpGetHttpHeaders#name",
            },
            "summary": "The header field name.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 34740,
          },
          "name": "name",
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecContainersStartupProbeHttpGetHttpHeaders#value",
            },
            "summary": "The header field value.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 34747,
          },
          "name": "value",
          "type": Object {
            "primitive": "string",
          },
        },
      ],
    },
    "monitoringcoreoscom.ThanosRulerSpecContainersStartupProbeHttpGetPort": Object {
      "assembly": "monitoringcoreoscom",
      "docs": Object {
        "custom": Object {
          "schema": "ThanosRulerSpecContainersStartupProbeHttpGetPort",
        },
        "remarks": "Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.",
        "summary": "Name or number of the port to access on the container.",
      },
      "fqn": "monitoringcoreoscom.ThanosRulerSpecContainersStartupProbeHttpGetPort",
      "kind": "class",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 34771,
      },
      "methods": Array [
        Object {
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 34772,
          },
          "name": "fromNumber",
          "parameters": Array [
            Object {
              "name": "value",
              "type": Object {
                "primitive": "number",
              },
            },
          ],
          "returns": Object {
            "type": Object {
              "fqn": "monitoringcoreoscom.ThanosRulerSpecContainersStartupProbeHttpGetPort",
            },
          },
          "static": true,
        },
        Object {
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 34775,
          },
          "name": "fromString",
          "parameters": Array [
            Object {
              "name": "value",
              "type": Object {
                "primitive": "string",
              },
            },
          ],
          "returns": Object {
            "type": Object {
              "fqn": "monitoringcoreoscom.ThanosRulerSpecContainersStartupProbeHttpGetPort",
            },
          },
          "static": true,
        },
      ],
      "name": "ThanosRulerSpecContainersStartupProbeHttpGetPort",
      "properties": Array [
        Object {
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 34778,
          },
          "name": "value",
          "type": Object {
            "primitive": "any",
          },
        },
      ],
    },
    "monitoringcoreoscom.ThanosRulerSpecContainersStartupProbeTcpSocket": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "ThanosRulerSpecContainersStartupProbeTcpSocket",
        },
        "remarks": "TCP hooks not yet supported TODO: implement a realistic TCP lifecycle hook",
        "summary": "TCPSocket specifies an action involving a TCP port.",
      },
      "fqn": "monitoringcoreoscom.ThanosRulerSpecContainersStartupProbeTcpSocket",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 32367,
      },
      "name": "ThanosRulerSpecContainersStartupProbeTcpSocket",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecContainersStartupProbeTcpSocket#port",
            },
            "remarks": "Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.",
            "summary": "Number or name of the port to access on the container.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 32380,
          },
          "name": "port",
          "type": Object {
            "fqn": "monitoringcoreoscom.ThanosRulerSpecContainersStartupProbeTcpSocketPort",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecContainersStartupProbeTcpSocket#host",
            },
            "summary": "Optional: Host name to connect to, defaults to the pod IP.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 32373,
          },
          "name": "host",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
      ],
    },
    "monitoringcoreoscom.ThanosRulerSpecContainersStartupProbeTcpSocketPort": Object {
      "assembly": "monitoringcoreoscom",
      "docs": Object {
        "custom": Object {
          "schema": "ThanosRulerSpecContainersStartupProbeTcpSocketPort",
        },
        "remarks": "Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.",
        "summary": "Number or name of the port to access on the container.",
      },
      "fqn": "monitoringcoreoscom.ThanosRulerSpecContainersStartupProbeTcpSocketPort",
      "kind": "class",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 34788,
      },
      "methods": Array [
        Object {
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 34789,
          },
          "name": "fromNumber",
          "parameters": Array [
            Object {
              "name": "value",
              "type": Object {
                "primitive": "number",
              },
            },
          ],
          "returns": Object {
            "type": Object {
              "fqn": "monitoringcoreoscom.ThanosRulerSpecContainersStartupProbeTcpSocketPort",
            },
          },
          "static": true,
        },
        Object {
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 34792,
          },
          "name": "fromString",
          "parameters": Array [
            Object {
              "name": "value",
              "type": Object {
                "primitive": "string",
              },
            },
          ],
          "returns": Object {
            "type": Object {
              "fqn": "monitoringcoreoscom.ThanosRulerSpecContainersStartupProbeTcpSocketPort",
            },
          },
          "static": true,
        },
      ],
      "name": "ThanosRulerSpecContainersStartupProbeTcpSocketPort",
      "properties": Array [
        Object {
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 34795,
          },
          "name": "value",
          "type": Object {
            "primitive": "any",
          },
        },
      ],
    },
    "monitoringcoreoscom.ThanosRulerSpecContainersVolumeDevices": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "ThanosRulerSpecContainersVolumeDevices",
        },
        "summary": "volumeDevice describes a mapping of a raw block device within a container.",
      },
      "fqn": "monitoringcoreoscom.ThanosRulerSpecContainersVolumeDevices",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 28599,
      },
      "name": "ThanosRulerSpecContainersVolumeDevices",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecContainersVolumeDevices#devicePath",
            },
            "summary": "devicePath is the path inside of the container that the device will be mapped to.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 28605,
          },
          "name": "devicePath",
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecContainersVolumeDevices#name",
            },
            "summary": "name must match the name of a persistentVolumeClaim in the pod.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 28612,
          },
          "name": "name",
          "type": Object {
            "primitive": "string",
          },
        },
      ],
    },
    "monitoringcoreoscom.ThanosRulerSpecContainersVolumeMounts": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "ThanosRulerSpecContainersVolumeMounts",
        },
        "summary": "VolumeMount describes a mounting of a Volume within a container.",
      },
      "fqn": "monitoringcoreoscom.ThanosRulerSpecContainersVolumeMounts",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 28636,
      },
      "name": "ThanosRulerSpecContainersVolumeMounts",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecContainersVolumeMounts#mountPath",
            },
            "remarks": "Must not contain ':'.",
            "summary": "Path within the container at which the volume should be mounted.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 28642,
          },
          "name": "mountPath",
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecContainersVolumeMounts#name",
            },
            "summary": "This must match the Name of a Volume.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 28656,
          },
          "name": "name",
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecContainersVolumeMounts#mountPropagation",
            },
            "remarks": "When not set, MountPropagationNone is used. This field is beta in 1.10.",
            "summary": "mountPropagation determines how mounts are propagated from the host to container and the other way around.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 28649,
          },
          "name": "mountPropagation",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecContainersVolumeMounts#readOnly",
            },
            "default": "false.",
            "remarks": "Defaults to false.",
            "summary": "Mounted read-only if true, read-write otherwise (false or unspecified).",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 28664,
          },
          "name": "readOnly",
          "optional": true,
          "type": Object {
            "primitive": "boolean",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecContainersVolumeMounts#subPath",
            },
            "default": "volume's root).",
            "remarks": "Defaults to \\"\\" (volume's root).",
            "summary": "Path within the volume from which the container's volume should be mounted.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 28672,
          },
          "name": "subPath",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecContainersVolumeMounts#subPathExpr",
            },
            "default": "volume's root). SubPathExpr and SubPath are mutually exclusive.",
            "remarks": "Behaves similarly to SubPath but environment variable references $(VAR_NAME) are expanded using the container's environment. Defaults to \\"\\" (volume's root). SubPathExpr and SubPath are mutually exclusive.",
            "summary": "Expanded path within the volume from which the container's volume should be mounted.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 28680,
          },
          "name": "subPathExpr",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
      ],
    },
    "monitoringcoreoscom.ThanosRulerSpecGrpcServerTlsConfig": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "ThanosRulerSpecGrpcServerTlsConfig",
        },
        "remarks": "Note: Currently only the CAFile, CertFile, and KeyFile fields are supported. Maps to the '--grpc-server-tls-*' CLI args.",
        "summary": "GRPCServerTLSConfig configures the gRPC server from which Thanos Querier reads recorded rule data.",
      },
      "fqn": "monitoringcoreoscom.ThanosRulerSpecGrpcServerTlsConfig",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 26825,
      },
      "name": "ThanosRulerSpecGrpcServerTlsConfig",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecGrpcServerTlsConfig#ca",
            },
            "summary": "Stuct containing the CA cert to use for the targets.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 26831,
          },
          "name": "ca",
          "optional": true,
          "type": Object {
            "fqn": "monitoringcoreoscom.ThanosRulerSpecGrpcServerTlsConfigCa",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecGrpcServerTlsConfig#caFile",
            },
            "summary": "Path to the CA cert in the Prometheus container to use for the targets.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 26838,
          },
          "name": "caFile",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecGrpcServerTlsConfig#cert",
            },
            "summary": "Struct containing the client cert file for the targets.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 26845,
          },
          "name": "cert",
          "optional": true,
          "type": Object {
            "fqn": "monitoringcoreoscom.ThanosRulerSpecGrpcServerTlsConfigCert",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecGrpcServerTlsConfig#certFile",
            },
            "summary": "Path to the client cert file in the Prometheus container for the targets.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 26852,
          },
          "name": "certFile",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecGrpcServerTlsConfig#insecureSkipVerify",
            },
            "summary": "Disable target certificate validation.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 26859,
          },
          "name": "insecureSkipVerify",
          "optional": true,
          "type": Object {
            "primitive": "boolean",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecGrpcServerTlsConfig#keyFile",
            },
            "summary": "Path to the client key file in the Prometheus container for the targets.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 26866,
          },
          "name": "keyFile",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecGrpcServerTlsConfig#keySecret",
            },
            "summary": "Secret containing the client key file for the targets.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 26873,
          },
          "name": "keySecret",
          "optional": true,
          "type": Object {
            "fqn": "monitoringcoreoscom.ThanosRulerSpecGrpcServerTlsConfigKeySecret",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecGrpcServerTlsConfig#serverName",
            },
            "summary": "Used to verify the hostname for the targets.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 26880,
          },
          "name": "serverName",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
      ],
    },
    "monitoringcoreoscom.ThanosRulerSpecGrpcServerTlsConfigCa": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "ThanosRulerSpecGrpcServerTlsConfigCa",
        },
        "summary": "Stuct containing the CA cert to use for the targets.",
      },
      "fqn": "monitoringcoreoscom.ThanosRulerSpecGrpcServerTlsConfigCa",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 28708,
      },
      "name": "ThanosRulerSpecGrpcServerTlsConfigCa",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecGrpcServerTlsConfigCa#configMap",
            },
            "summary": "ConfigMap containing data to use for the targets.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 28714,
          },
          "name": "configMap",
          "optional": true,
          "type": Object {
            "fqn": "monitoringcoreoscom.ThanosRulerSpecGrpcServerTlsConfigCaConfigMap",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecGrpcServerTlsConfigCa#secret",
            },
            "summary": "Secret containing data to use for the targets.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 28721,
          },
          "name": "secret",
          "optional": true,
          "type": Object {
            "fqn": "monitoringcoreoscom.ThanosRulerSpecGrpcServerTlsConfigCaSecret",
          },
        },
      ],
    },
    "monitoringcoreoscom.ThanosRulerSpecGrpcServerTlsConfigCaConfigMap": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "ThanosRulerSpecGrpcServerTlsConfigCaConfigMap",
        },
        "summary": "ConfigMap containing data to use for the targets.",
      },
      "fqn": "monitoringcoreoscom.ThanosRulerSpecGrpcServerTlsConfigCaConfigMap",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 32404,
      },
      "name": "ThanosRulerSpecGrpcServerTlsConfigCaConfigMap",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecGrpcServerTlsConfigCaConfigMap#key",
            },
            "summary": "The key to select.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 32410,
          },
          "name": "key",
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecGrpcServerTlsConfigCaConfigMap#name",
            },
            "remarks": "More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?",
            "summary": "Name of the referent.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 32417,
          },
          "name": "name",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecGrpcServerTlsConfigCaConfigMap#optional",
            },
            "summary": "Specify whether the ConfigMap or its key must be defined.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 32424,
          },
          "name": "optional",
          "optional": true,
          "type": Object {
            "primitive": "boolean",
          },
        },
      ],
    },
    "monitoringcoreoscom.ThanosRulerSpecGrpcServerTlsConfigCaSecret": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "ThanosRulerSpecGrpcServerTlsConfigCaSecret",
        },
        "summary": "Secret containing data to use for the targets.",
      },
      "fqn": "monitoringcoreoscom.ThanosRulerSpecGrpcServerTlsConfigCaSecret",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 32449,
      },
      "name": "ThanosRulerSpecGrpcServerTlsConfigCaSecret",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecGrpcServerTlsConfigCaSecret#key",
            },
            "remarks": "Must be a valid secret key.",
            "summary": "The key of the secret to select from.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 32455,
          },
          "name": "key",
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecGrpcServerTlsConfigCaSecret#name",
            },
            "remarks": "More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?",
            "summary": "Name of the referent.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 32462,
          },
          "name": "name",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecGrpcServerTlsConfigCaSecret#optional",
            },
            "summary": "Specify whether the Secret or its key must be defined.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 32469,
          },
          "name": "optional",
          "optional": true,
          "type": Object {
            "primitive": "boolean",
          },
        },
      ],
    },
    "monitoringcoreoscom.ThanosRulerSpecGrpcServerTlsConfigCert": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "ThanosRulerSpecGrpcServerTlsConfigCert",
        },
        "summary": "Struct containing the client cert file for the targets.",
      },
      "fqn": "monitoringcoreoscom.ThanosRulerSpecGrpcServerTlsConfigCert",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 28745,
      },
      "name": "ThanosRulerSpecGrpcServerTlsConfigCert",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecGrpcServerTlsConfigCert#configMap",
            },
            "summary": "ConfigMap containing data to use for the targets.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 28751,
          },
          "name": "configMap",
          "optional": true,
          "type": Object {
            "fqn": "monitoringcoreoscom.ThanosRulerSpecGrpcServerTlsConfigCertConfigMap",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecGrpcServerTlsConfigCert#secret",
            },
            "summary": "Secret containing data to use for the targets.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 28758,
          },
          "name": "secret",
          "optional": true,
          "type": Object {
            "fqn": "monitoringcoreoscom.ThanosRulerSpecGrpcServerTlsConfigCertSecret",
          },
        },
      ],
    },
    "monitoringcoreoscom.ThanosRulerSpecGrpcServerTlsConfigCertConfigMap": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "ThanosRulerSpecGrpcServerTlsConfigCertConfigMap",
        },
        "summary": "ConfigMap containing data to use for the targets.",
      },
      "fqn": "monitoringcoreoscom.ThanosRulerSpecGrpcServerTlsConfigCertConfigMap",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 32494,
      },
      "name": "ThanosRulerSpecGrpcServerTlsConfigCertConfigMap",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecGrpcServerTlsConfigCertConfigMap#key",
            },
            "summary": "The key to select.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 32500,
          },
          "name": "key",
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecGrpcServerTlsConfigCertConfigMap#name",
            },
            "remarks": "More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?",
            "summary": "Name of the referent.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 32507,
          },
          "name": "name",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecGrpcServerTlsConfigCertConfigMap#optional",
            },
            "summary": "Specify whether the ConfigMap or its key must be defined.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 32514,
          },
          "name": "optional",
          "optional": true,
          "type": Object {
            "primitive": "boolean",
          },
        },
      ],
    },
    "monitoringcoreoscom.ThanosRulerSpecGrpcServerTlsConfigCertSecret": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "ThanosRulerSpecGrpcServerTlsConfigCertSecret",
        },
        "summary": "Secret containing data to use for the targets.",
      },
      "fqn": "monitoringcoreoscom.ThanosRulerSpecGrpcServerTlsConfigCertSecret",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 32539,
      },
      "name": "ThanosRulerSpecGrpcServerTlsConfigCertSecret",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecGrpcServerTlsConfigCertSecret#key",
            },
            "remarks": "Must be a valid secret key.",
            "summary": "The key of the secret to select from.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 32545,
          },
          "name": "key",
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecGrpcServerTlsConfigCertSecret#name",
            },
            "remarks": "More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?",
            "summary": "Name of the referent.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 32552,
          },
          "name": "name",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecGrpcServerTlsConfigCertSecret#optional",
            },
            "summary": "Specify whether the Secret or its key must be defined.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 32559,
          },
          "name": "optional",
          "optional": true,
          "type": Object {
            "primitive": "boolean",
          },
        },
      ],
    },
    "monitoringcoreoscom.ThanosRulerSpecGrpcServerTlsConfigKeySecret": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "ThanosRulerSpecGrpcServerTlsConfigKeySecret",
        },
        "summary": "Secret containing the client key file for the targets.",
      },
      "fqn": "monitoringcoreoscom.ThanosRulerSpecGrpcServerTlsConfigKeySecret",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 28782,
      },
      "name": "ThanosRulerSpecGrpcServerTlsConfigKeySecret",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecGrpcServerTlsConfigKeySecret#key",
            },
            "remarks": "Must be a valid secret key.",
            "summary": "The key of the secret to select from.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 28788,
          },
          "name": "key",
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecGrpcServerTlsConfigKeySecret#name",
            },
            "remarks": "More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?",
            "summary": "Name of the referent.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 28795,
          },
          "name": "name",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecGrpcServerTlsConfigKeySecret#optional",
            },
            "summary": "Specify whether the Secret or its key must be defined.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 28802,
          },
          "name": "optional",
          "optional": true,
          "type": Object {
            "primitive": "boolean",
          },
        },
      ],
    },
    "monitoringcoreoscom.ThanosRulerSpecImagePullSecrets": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "ThanosRulerSpecImagePullSecrets",
        },
        "summary": "LocalObjectReference contains enough information to let you locate the referenced object inside the same namespace.",
      },
      "fqn": "monitoringcoreoscom.ThanosRulerSpecImagePullSecrets",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 26910,
      },
      "name": "ThanosRulerSpecImagePullSecrets",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecImagePullSecrets#name",
            },
            "remarks": "More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?",
            "summary": "Name of the referent.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 26916,
          },
          "name": "name",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
      ],
    },
    "monitoringcoreoscom.ThanosRulerSpecInitContainers": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "ThanosRulerSpecInitContainers",
        },
        "summary": "A single application container that you want to run within a pod.",
      },
      "fqn": "monitoringcoreoscom.ThanosRulerSpecInitContainers",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 26939,
      },
      "name": "ThanosRulerSpecInitContainers",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecInitContainers#name",
            },
            "remarks": "Each container in a pod must have a unique name (DNS_LABEL). Cannot be updated.",
            "summary": "Name of the container specified as a DNS_LABEL.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 27002,
          },
          "name": "name",
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecInitContainers#args",
            },
            "remarks": "The docker image's CMD is used if this is not provided. Variable references $(VAR_NAME) are expanded using the container's environment. If a variable cannot be resolved, the reference in the input string will be unchanged. The $(VAR_NAME) syntax can be escaped with a double $$, ie: $$(VAR_NAME). Escaped references will never be expanded, regardless of whether the variable exists or not. Cannot be updated. More info: https://kubernetes.io/docs/tasks/inject-data-application/define-command-argument-container/#running-a-command-in-a-shell",
            "summary": "Arguments to the entrypoint.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 26945,
          },
          "name": "args",
          "optional": true,
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "primitive": "string",
              },
              "kind": "array",
            },
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecInitContainers#command",
            },
            "remarks": "Not executed within a shell. The docker image's ENTRYPOINT is used if this is not provided. Variable references $(VAR_NAME) are expanded using the container's environment. If a variable cannot be resolved, the reference in the input string will be unchanged. The $(VAR_NAME) syntax can be escaped with a double $$, ie: $$(VAR_NAME). Escaped references will never be expanded, regardless of whether the variable exists or not. Cannot be updated. More info: https://kubernetes.io/docs/tasks/inject-data-application/define-command-argument-container/#running-a-command-in-a-shell",
            "summary": "Entrypoint array.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 26952,
          },
          "name": "command",
          "optional": true,
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "primitive": "string",
              },
              "kind": "array",
            },
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecInitContainers#env",
            },
            "remarks": "Cannot be updated.",
            "summary": "List of environment variables to set in the container.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 26959,
          },
          "name": "env",
          "optional": true,
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "fqn": "monitoringcoreoscom.ThanosRulerSpecInitContainersEnv",
              },
              "kind": "array",
            },
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecInitContainers#envFrom",
            },
            "remarks": "The keys defined within a source must be a C_IDENTIFIER. All invalid keys will be reported as an event when the container is starting. When a key exists in multiple sources, the value associated with the last source will take precedence. Values defined by an Env with a duplicate key will take precedence. Cannot be updated.",
            "summary": "List of sources to populate environment variables in the container.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 26966,
          },
          "name": "envFrom",
          "optional": true,
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "fqn": "monitoringcoreoscom.ThanosRulerSpecInitContainersEnvFrom",
              },
              "kind": "array",
            },
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecInitContainers#image",
            },
            "remarks": "More info: https://kubernetes.io/docs/concepts/containers/images This field is optional to allow higher level config management to default or override container images in workload controllers like Deployments and StatefulSets.",
            "summary": "Docker image name.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 26973,
          },
          "name": "image",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecInitContainers#imagePullPolicy",
            },
            "default": "Always if :latest tag is specified, or IfNotPresent otherwise. Cannot be updated. More info: https://kubernetes.io/docs/concepts/containers/images#updating-images",
            "remarks": "One of Always, Never, IfNotPresent. Defaults to Always if :latest tag is specified, or IfNotPresent otherwise. Cannot be updated. More info: https://kubernetes.io/docs/concepts/containers/images#updating-images",
            "summary": "Image pull policy.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 26981,
          },
          "name": "imagePullPolicy",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecInitContainers#lifecycle",
            },
            "remarks": "Cannot be updated.",
            "summary": "Actions that the management system should take in response to container lifecycle events.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 26988,
          },
          "name": "lifecycle",
          "optional": true,
          "type": Object {
            "fqn": "monitoringcoreoscom.ThanosRulerSpecInitContainersLifecycle",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecInitContainers#livenessProbe",
            },
            "remarks": "Container will be restarted if the probe fails. Cannot be updated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes",
            "summary": "Periodic probe of container liveness.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 26995,
          },
          "name": "livenessProbe",
          "optional": true,
          "type": Object {
            "fqn": "monitoringcoreoscom.ThanosRulerSpecInitContainersLivenessProbe",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecInitContainers#ports",
            },
            "remarks": "Exposing a port here gives the system additional information about the network connections a container uses, but is primarily informational. Not specifying a port here DOES NOT prevent that port from being exposed. Any port which is listening on the default \\"0.0.0.0\\" address inside a container will be accessible from the network. Cannot be updated.",
            "summary": "List of ports to expose from the container.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 27009,
          },
          "name": "ports",
          "optional": true,
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "fqn": "monitoringcoreoscom.ThanosRulerSpecInitContainersPorts",
              },
              "kind": "array",
            },
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecInitContainers#readinessProbe",
            },
            "remarks": "Container will be removed from service endpoints if the probe fails. Cannot be updated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes",
            "summary": "Periodic probe of container service readiness.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 27016,
          },
          "name": "readinessProbe",
          "optional": true,
          "type": Object {
            "fqn": "monitoringcoreoscom.ThanosRulerSpecInitContainersReadinessProbe",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecInitContainers#resources",
            },
            "remarks": "Cannot be updated. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/",
            "summary": "Compute Resources required by this container.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 27023,
          },
          "name": "resources",
          "optional": true,
          "type": Object {
            "fqn": "monitoringcoreoscom.ThanosRulerSpecInitContainersResources",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecInitContainers#securityContext",
            },
            "remarks": "More info: https://kubernetes.io/docs/concepts/policy/security-context/ More info: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
            "summary": "Security options the pod should run with.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 27030,
          },
          "name": "securityContext",
          "optional": true,
          "type": Object {
            "fqn": "monitoringcoreoscom.ThanosRulerSpecInitContainersSecurityContext",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecInitContainers#startupProbe",
            },
            "remarks": "If specified, no other probes are executed until this completes successfully. If this probe fails, the Pod will be restarted, just as if the livenessProbe failed. This can be used to provide different probe parameters at the beginning of a Pod's lifecycle, when it might take a long time to load data or warm a cache, than during steady-state operation. This cannot be updated. This is a beta feature enabled by the StartupProbe feature flag. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes",
            "summary": "StartupProbe indicates that the Pod has successfully initialized.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 27037,
          },
          "name": "startupProbe",
          "optional": true,
          "type": Object {
            "fqn": "monitoringcoreoscom.ThanosRulerSpecInitContainersStartupProbe",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecInitContainers#stdin",
            },
            "default": "false.",
            "remarks": "If this is not set, reads from stdin in the container will always result in EOF. Default is false.",
            "summary": "Whether this container should allocate a buffer for stdin in the container runtime.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 27045,
          },
          "name": "stdin",
          "optional": true,
          "type": Object {
            "primitive": "boolean",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecInitContainers#stdinOnce",
            },
            "default": "false",
            "remarks": "When stdin is true the stdin stream will remain open across multiple attach sessions. If stdinOnce is set to true, stdin is opened on container start, is empty until the first client attaches to stdin, and then remains open and accepts data until the client disconnects, at which time stdin is closed and remains closed until the container is restarted. If this flag is false, a container processes that reads from stdin will never receive an EOF. Default is false",
            "summary": "Whether the container runtime should close the stdin channel after it has been opened by a single attach.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 27053,
          },
          "name": "stdinOnce",
          "optional": true,
          "type": Object {
            "primitive": "boolean",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecInitContainers#terminationMessagePath",
            },
            "default": "dev/termination-log. Cannot be updated.",
            "remarks": "Message written is intended to be brief final status, such as an assertion failure message. Will be truncated by the node if greater than 4096 bytes. The total message length across all containers will be limited to 12kb. Defaults to /dev/termination-log. Cannot be updated.",
            "summary": "Optional: Path at which the file to which the container's termination message will be written is mounted into the container's filesystem.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 27061,
          },
          "name": "terminationMessagePath",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecInitContainers#terminationMessagePolicy",
            },
            "default": "File. Cannot be updated.",
            "remarks": "File will use the contents of terminationMessagePath to populate the container status message on both success and failure. FallbackToLogsOnError will use the last chunk of container log output if the termination message file is empty and the container exited with an error. The log output is limited to 2048 bytes or 80 lines, whichever is smaller. Defaults to File. Cannot be updated.",
            "summary": "Indicate how the termination message should be populated.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 27069,
          },
          "name": "terminationMessagePolicy",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecInitContainers#tty",
            },
            "default": "false.",
            "remarks": "Default is false.",
            "summary": "Whether this container should allocate a TTY for itself, also requires 'stdin' to be true.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 27077,
          },
          "name": "tty",
          "optional": true,
          "type": Object {
            "primitive": "boolean",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecInitContainers#volumeDevices",
            },
            "summary": "volumeDevices is the list of block devices to be used by the container.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 27084,
          },
          "name": "volumeDevices",
          "optional": true,
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "fqn": "monitoringcoreoscom.ThanosRulerSpecInitContainersVolumeDevices",
              },
              "kind": "array",
            },
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecInitContainers#volumeMounts",
            },
            "remarks": "Cannot be updated.",
            "summary": "Pod volumes to mount into the container's filesystem.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 27091,
          },
          "name": "volumeMounts",
          "optional": true,
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "fqn": "monitoringcoreoscom.ThanosRulerSpecInitContainersVolumeMounts",
              },
              "kind": "array",
            },
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecInitContainers#workingDir",
            },
            "remarks": "If not specified, the container runtime's default will be used, which might be configured in the container image. Cannot be updated.",
            "summary": "Container's working directory.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 27098,
          },
          "name": "workingDir",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
      ],
    },
    "monitoringcoreoscom.ThanosRulerSpecInitContainersEnv": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "ThanosRulerSpecInitContainersEnv",
        },
        "summary": "EnvVar represents an environment variable present in a Container.",
      },
      "fqn": "monitoringcoreoscom.ThanosRulerSpecInitContainersEnv",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 28827,
      },
      "name": "ThanosRulerSpecInitContainersEnv",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecInitContainersEnv#name",
            },
            "remarks": "Must be a C_IDENTIFIER.",
            "summary": "Name of the environment variable.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 28833,
          },
          "name": "name",
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecInitContainersEnv#value",
            },
            "default": ".",
            "remarks": "If a variable cannot be resolved, the reference in the input string will be unchanged. The $(VAR_NAME) syntax can be escaped with a double $$, ie: $$(VAR_NAME). Escaped references will never be expanded, regardless of whether the variable exists or not. Defaults to \\"\\".",
            "summary": "Variable references $(VAR_NAME) are expanded using the previous defined environment variables in the container and any service environment variables.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 28841,
          },
          "name": "value",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecInitContainersEnv#valueFrom",
            },
            "remarks": "Cannot be used if value is not empty.",
            "summary": "Source for the environment variable's value.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 28848,
          },
          "name": "valueFrom",
          "optional": true,
          "type": Object {
            "fqn": "monitoringcoreoscom.ThanosRulerSpecInitContainersEnvValueFrom",
          },
        },
      ],
    },
    "monitoringcoreoscom.ThanosRulerSpecInitContainersEnvFrom": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "ThanosRulerSpecInitContainersEnvFrom",
        },
        "summary": "EnvFromSource represents the source of a set of ConfigMaps.",
      },
      "fqn": "monitoringcoreoscom.ThanosRulerSpecInitContainersEnvFrom",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 28873,
      },
      "name": "ThanosRulerSpecInitContainersEnvFrom",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecInitContainersEnvFrom#configMapRef",
            },
            "summary": "The ConfigMap to select from.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 28879,
          },
          "name": "configMapRef",
          "optional": true,
          "type": Object {
            "fqn": "monitoringcoreoscom.ThanosRulerSpecInitContainersEnvFromConfigMapRef",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecInitContainersEnvFrom#prefix",
            },
            "remarks": "Must be a C_IDENTIFIER.",
            "summary": "An optional identifier to prepend to each key in the ConfigMap.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 28886,
          },
          "name": "prefix",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecInitContainersEnvFrom#secretRef",
            },
            "summary": "The Secret to select from.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 28893,
          },
          "name": "secretRef",
          "optional": true,
          "type": Object {
            "fqn": "monitoringcoreoscom.ThanosRulerSpecInitContainersEnvFromSecretRef",
          },
        },
      ],
    },
    "monitoringcoreoscom.ThanosRulerSpecInitContainersEnvFromConfigMapRef": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "ThanosRulerSpecInitContainersEnvFromConfigMapRef",
        },
        "summary": "The ConfigMap to select from.",
      },
      "fqn": "monitoringcoreoscom.ThanosRulerSpecInitContainersEnvFromConfigMapRef",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 32637,
      },
      "name": "ThanosRulerSpecInitContainersEnvFromConfigMapRef",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecInitContainersEnvFromConfigMapRef#name",
            },
            "remarks": "More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?",
            "summary": "Name of the referent.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 32643,
          },
          "name": "name",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecInitContainersEnvFromConfigMapRef#optional",
            },
            "summary": "Specify whether the ConfigMap must be defined.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 32650,
          },
          "name": "optional",
          "optional": true,
          "type": Object {
            "primitive": "boolean",
          },
        },
      ],
    },
    "monitoringcoreoscom.ThanosRulerSpecInitContainersEnvFromSecretRef": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "ThanosRulerSpecInitContainersEnvFromSecretRef",
        },
        "summary": "The Secret to select from.",
      },
      "fqn": "monitoringcoreoscom.ThanosRulerSpecInitContainersEnvFromSecretRef",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 32674,
      },
      "name": "ThanosRulerSpecInitContainersEnvFromSecretRef",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecInitContainersEnvFromSecretRef#name",
            },
            "remarks": "More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?",
            "summary": "Name of the referent.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 32680,
          },
          "name": "name",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecInitContainersEnvFromSecretRef#optional",
            },
            "summary": "Specify whether the Secret must be defined.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 32687,
          },
          "name": "optional",
          "optional": true,
          "type": Object {
            "primitive": "boolean",
          },
        },
      ],
    },
    "monitoringcoreoscom.ThanosRulerSpecInitContainersEnvValueFrom": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "ThanosRulerSpecInitContainersEnvValueFrom",
        },
        "remarks": "Cannot be used if value is not empty.",
        "summary": "Source for the environment variable's value.",
      },
      "fqn": "monitoringcoreoscom.ThanosRulerSpecInitContainersEnvValueFrom",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 32584,
      },
      "name": "ThanosRulerSpecInitContainersEnvValueFrom",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecInitContainersEnvValueFrom#configMapKeyRef",
            },
            "summary": "Selects a key of a ConfigMap.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 32590,
          },
          "name": "configMapKeyRef",
          "optional": true,
          "type": Object {
            "fqn": "monitoringcoreoscom.ThanosRulerSpecInitContainersEnvValueFromConfigMapKeyRef",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecInitContainersEnvValueFrom#fieldRef",
            },
            "summary": "Selects a field of the pod: supports metadata.name, metadata.namespace, metadata.labels, metadata.annotations, spec.nodeName, spec.serviceAccountName, status.hostIP, status.podIP, status.podIPs.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 32597,
          },
          "name": "fieldRef",
          "optional": true,
          "type": Object {
            "fqn": "monitoringcoreoscom.ThanosRulerSpecInitContainersEnvValueFromFieldRef",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecInitContainersEnvValueFrom#resourceFieldRef",
            },
            "summary": "Selects a resource of the container: only resources limits and requests (limits.cpu, limits.memory, limits.ephemeral-storage, requests.cpu, requests.memory and requests.ephemeral-storage) are currently supported.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 32604,
          },
          "name": "resourceFieldRef",
          "optional": true,
          "type": Object {
            "fqn": "monitoringcoreoscom.ThanosRulerSpecInitContainersEnvValueFromResourceFieldRef",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecInitContainersEnvValueFrom#secretKeyRef",
            },
            "summary": "Selects a key of a secret in the pod's namespace.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 32611,
          },
          "name": "secretKeyRef",
          "optional": true,
          "type": Object {
            "fqn": "monitoringcoreoscom.ThanosRulerSpecInitContainersEnvValueFromSecretKeyRef",
          },
        },
      ],
    },
    "monitoringcoreoscom.ThanosRulerSpecInitContainersEnvValueFromConfigMapKeyRef": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "ThanosRulerSpecInitContainersEnvValueFromConfigMapKeyRef",
        },
        "summary": "Selects a key of a ConfigMap.",
      },
      "fqn": "monitoringcoreoscom.ThanosRulerSpecInitContainersEnvValueFromConfigMapKeyRef",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 34805,
      },
      "name": "ThanosRulerSpecInitContainersEnvValueFromConfigMapKeyRef",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecInitContainersEnvValueFromConfigMapKeyRef#key",
            },
            "summary": "The key to select.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 34811,
          },
          "name": "key",
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecInitContainersEnvValueFromConfigMapKeyRef#name",
            },
            "remarks": "More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?",
            "summary": "Name of the referent.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 34818,
          },
          "name": "name",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecInitContainersEnvValueFromConfigMapKeyRef#optional",
            },
            "summary": "Specify whether the ConfigMap or its key must be defined.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 34825,
          },
          "name": "optional",
          "optional": true,
          "type": Object {
            "primitive": "boolean",
          },
        },
      ],
    },
    "monitoringcoreoscom.ThanosRulerSpecInitContainersEnvValueFromFieldRef": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "ThanosRulerSpecInitContainersEnvValueFromFieldRef",
        },
        "summary": "Selects a field of the pod: supports metadata.name, metadata.namespace, metadata.labels, metadata.annotations, spec.nodeName, spec.serviceAccountName, status.hostIP, status.podIP, status.podIPs.",
      },
      "fqn": "monitoringcoreoscom.ThanosRulerSpecInitContainersEnvValueFromFieldRef",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 34850,
      },
      "name": "ThanosRulerSpecInitContainersEnvValueFromFieldRef",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecInitContainersEnvValueFromFieldRef#fieldPath",
            },
            "summary": "Path of the field to select in the specified API version.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 34863,
          },
          "name": "fieldPath",
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecInitContainersEnvValueFromFieldRef#apiVersion",
            },
            "summary": "Version of the schema the FieldPath is written in terms of, defaults to \\"v1\\".",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 34856,
          },
          "name": "apiVersion",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
      ],
    },
    "monitoringcoreoscom.ThanosRulerSpecInitContainersEnvValueFromResourceFieldRef": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "ThanosRulerSpecInitContainersEnvValueFromResourceFieldRef",
        },
        "summary": "Selects a resource of the container: only resources limits and requests (limits.cpu, limits.memory, limits.ephemeral-storage, requests.cpu, requests.memory and requests.ephemeral-storage) are currently supported.",
      },
      "fqn": "monitoringcoreoscom.ThanosRulerSpecInitContainersEnvValueFromResourceFieldRef",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 34887,
      },
      "name": "ThanosRulerSpecInitContainersEnvValueFromResourceFieldRef",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecInitContainersEnvValueFromResourceFieldRef#resource",
            },
            "summary": "Required: resource to select.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 34907,
          },
          "name": "resource",
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecInitContainersEnvValueFromResourceFieldRef#containerName",
            },
            "summary": "Container name: required for volumes, optional for env vars.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 34893,
          },
          "name": "containerName",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecInitContainersEnvValueFromResourceFieldRef#divisor",
            },
            "summary": "Specifies the output format of the exposed resources, defaults to \\"1\\".",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 34900,
          },
          "name": "divisor",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
      ],
    },
    "monitoringcoreoscom.ThanosRulerSpecInitContainersEnvValueFromSecretKeyRef": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "ThanosRulerSpecInitContainersEnvValueFromSecretKeyRef",
        },
        "summary": "Selects a key of a secret in the pod's namespace.",
      },
      "fqn": "monitoringcoreoscom.ThanosRulerSpecInitContainersEnvValueFromSecretKeyRef",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 34932,
      },
      "name": "ThanosRulerSpecInitContainersEnvValueFromSecretKeyRef",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecInitContainersEnvValueFromSecretKeyRef#key",
            },
            "remarks": "Must be a valid secret key.",
            "summary": "The key of the secret to select from.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 34938,
          },
          "name": "key",
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecInitContainersEnvValueFromSecretKeyRef#name",
            },
            "remarks": "More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?",
            "summary": "Name of the referent.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 34945,
          },
          "name": "name",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecInitContainersEnvValueFromSecretKeyRef#optional",
            },
            "summary": "Specify whether the Secret or its key must be defined.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 34952,
          },
          "name": "optional",
          "optional": true,
          "type": Object {
            "primitive": "boolean",
          },
        },
      ],
    },
    "monitoringcoreoscom.ThanosRulerSpecInitContainersLifecycle": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "ThanosRulerSpecInitContainersLifecycle",
        },
        "remarks": "Cannot be updated.",
        "summary": "Actions that the management system should take in response to container lifecycle events.",
      },
      "fqn": "monitoringcoreoscom.ThanosRulerSpecInitContainersLifecycle",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 28918,
      },
      "name": "ThanosRulerSpecInitContainersLifecycle",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecInitContainersLifecycle#postStart",
            },
            "remarks": "If the handler fails, the container is terminated and restarted according to its restart policy. Other management of the container blocks until the hook completes. More info: https://kubernetes.io/docs/concepts/containers/container-lifecycle-hooks/#container-hooks",
            "summary": "PostStart is called immediately after a container is created.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 28924,
          },
          "name": "postStart",
          "optional": true,
          "type": Object {
            "fqn": "monitoringcoreoscom.ThanosRulerSpecInitContainersLifecyclePostStart",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecInitContainersLifecycle#preStop",
            },
            "remarks": "The handler is not called if the container crashes or exits. The reason for termination is passed to the handler. The Pod's termination grace period countdown begins before the PreStop hooked is executed. Regardless of the outcome of the handler, the container will eventually terminate within the Pod's termination grace period. Other management of the container blocks until the hook completes or until the termination grace period is reached. More info: https://kubernetes.io/docs/concepts/containers/container-lifecycle-hooks/#container-hooks",
            "summary": "PreStop is called immediately before a container is terminated due to an API request or management event such as liveness/startup probe failure, preemption, resource contention, etc.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 28931,
          },
          "name": "preStop",
          "optional": true,
          "type": Object {
            "fqn": "monitoringcoreoscom.ThanosRulerSpecInitContainersLifecyclePreStop",
          },
        },
      ],
    },
    "monitoringcoreoscom.ThanosRulerSpecInitContainersLifecyclePostStart": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "ThanosRulerSpecInitContainersLifecyclePostStart",
        },
        "remarks": "If the handler fails, the container is terminated and restarted according to its restart policy. Other management of the container blocks until the hook completes. More info: https://kubernetes.io/docs/concepts/containers/container-lifecycle-hooks/#container-hooks",
        "summary": "PostStart is called immediately after a container is created.",
      },
      "fqn": "monitoringcoreoscom.ThanosRulerSpecInitContainersLifecyclePostStart",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 32711,
      },
      "name": "ThanosRulerSpecInitContainersLifecyclePostStart",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecInitContainersLifecyclePostStart#exec",
            },
            "remarks": "Exec specifies the action to take.",
            "summary": "One and only one of the following should be specified.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 32717,
          },
          "name": "exec",
          "optional": true,
          "type": Object {
            "fqn": "monitoringcoreoscom.ThanosRulerSpecInitContainersLifecyclePostStartExec",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecInitContainersLifecyclePostStart#httpGet",
            },
            "summary": "HTTPGet specifies the http request to perform.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 32724,
          },
          "name": "httpGet",
          "optional": true,
          "type": Object {
            "fqn": "monitoringcoreoscom.ThanosRulerSpecInitContainersLifecyclePostStartHttpGet",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecInitContainersLifecyclePostStart#tcpSocket",
            },
            "remarks": "TCP hooks not yet supported TODO: implement a realistic TCP lifecycle hook",
            "summary": "TCPSocket specifies an action involving a TCP port.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 32731,
          },
          "name": "tcpSocket",
          "optional": true,
          "type": Object {
            "fqn": "monitoringcoreoscom.ThanosRulerSpecInitContainersLifecyclePostStartTcpSocket",
          },
        },
      ],
    },
    "monitoringcoreoscom.ThanosRulerSpecInitContainersLifecyclePostStartExec": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "ThanosRulerSpecInitContainersLifecyclePostStartExec",
        },
        "remarks": "Exec specifies the action to take.",
        "summary": "One and only one of the following should be specified.",
      },
      "fqn": "monitoringcoreoscom.ThanosRulerSpecInitContainersLifecyclePostStartExec",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 34977,
      },
      "name": "ThanosRulerSpecInitContainersLifecyclePostStartExec",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecInitContainersLifecyclePostStartExec#command",
            },
            "remarks": "The command is simply exec'd, it is not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use a shell, you need to explicitly call out to that shell. Exit status of 0 is treated as live/healthy and non-zero is unhealthy.",
            "summary": "Command is the command line to execute inside the container, the working directory for the command  is root ('/') in the container's filesystem.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 34983,
          },
          "name": "command",
          "optional": true,
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "primitive": "string",
              },
              "kind": "array",
            },
          },
        },
      ],
    },
    "monitoringcoreoscom.ThanosRulerSpecInitContainersLifecyclePostStartHttpGet": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "ThanosRulerSpecInitContainersLifecyclePostStartHttpGet",
        },
        "summary": "HTTPGet specifies the http request to perform.",
      },
      "fqn": "monitoringcoreoscom.ThanosRulerSpecInitContainersLifecyclePostStartHttpGet",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 35006,
      },
      "name": "ThanosRulerSpecInitContainersLifecyclePostStartHttpGet",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecInitContainersLifecyclePostStartHttpGet#port",
            },
            "remarks": "Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.",
            "summary": "Name or number of the port to access on the container.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 35033,
          },
          "name": "port",
          "type": Object {
            "fqn": "monitoringcoreoscom.ThanosRulerSpecInitContainersLifecyclePostStartHttpGetPort",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecInitContainersLifecyclePostStartHttpGet#host",
            },
            "remarks": "You probably want to set \\"Host\\" in httpHeaders instead.",
            "summary": "Host name to connect to, defaults to the pod IP.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 35012,
          },
          "name": "host",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecInitContainersLifecyclePostStartHttpGet#httpHeaders",
            },
            "remarks": "HTTP allows repeated headers.",
            "summary": "Custom headers to set in the request.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 35019,
          },
          "name": "httpHeaders",
          "optional": true,
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "fqn": "monitoringcoreoscom.ThanosRulerSpecInitContainersLifecyclePostStartHttpGetHttpHeaders",
              },
              "kind": "array",
            },
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecInitContainersLifecyclePostStartHttpGet#path",
            },
            "summary": "Path to access on the HTTP server.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 35026,
          },
          "name": "path",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecInitContainersLifecyclePostStartHttpGet#scheme",
            },
            "default": "HTTP.",
            "remarks": "Defaults to HTTP.",
            "summary": "Scheme to use for connecting to the host.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 35041,
          },
          "name": "scheme",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
      ],
    },
    "monitoringcoreoscom.ThanosRulerSpecInitContainersLifecyclePostStartHttpGetHttpHeaders": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "ThanosRulerSpecInitContainersLifecyclePostStartHttpGetHttpHeaders",
        },
        "summary": "HTTPHeader describes a custom header to be used in HTTP probes.",
      },
      "fqn": "monitoringcoreoscom.ThanosRulerSpecInitContainersLifecyclePostStartHttpGetHttpHeaders",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 36365,
      },
      "name": "ThanosRulerSpecInitContainersLifecyclePostStartHttpGetHttpHeaders",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecInitContainersLifecyclePostStartHttpGetHttpHeaders#name",
            },
            "summary": "The header field name.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 36371,
          },
          "name": "name",
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecInitContainersLifecyclePostStartHttpGetHttpHeaders#value",
            },
            "summary": "The header field value.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 36378,
          },
          "name": "value",
          "type": Object {
            "primitive": "string",
          },
        },
      ],
    },
    "monitoringcoreoscom.ThanosRulerSpecInitContainersLifecyclePostStartHttpGetPort": Object {
      "assembly": "monitoringcoreoscom",
      "docs": Object {
        "custom": Object {
          "schema": "ThanosRulerSpecInitContainersLifecyclePostStartHttpGetPort",
        },
        "remarks": "Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.",
        "summary": "Name or number of the port to access on the container.",
      },
      "fqn": "monitoringcoreoscom.ThanosRulerSpecInitContainersLifecyclePostStartHttpGetPort",
      "kind": "class",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 36402,
      },
      "methods": Array [
        Object {
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 36403,
          },
          "name": "fromNumber",
          "parameters": Array [
            Object {
              "name": "value",
              "type": Object {
                "primitive": "number",
              },
            },
          ],
          "returns": Object {
            "type": Object {
              "fqn": "monitoringcoreoscom.ThanosRulerSpecInitContainersLifecyclePostStartHttpGetPort",
            },
          },
          "static": true,
        },
        Object {
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 36406,
          },
          "name": "fromString",
          "parameters": Array [
            Object {
              "name": "value",
              "type": Object {
                "primitive": "string",
              },
            },
          ],
          "returns": Object {
            "type": Object {
              "fqn": "monitoringcoreoscom.ThanosRulerSpecInitContainersLifecyclePostStartHttpGetPort",
            },
          },
          "static": true,
        },
      ],
      "name": "ThanosRulerSpecInitContainersLifecyclePostStartHttpGetPort",
      "properties": Array [
        Object {
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 36409,
          },
          "name": "value",
          "type": Object {
            "primitive": "any",
          },
        },
      ],
    },
    "monitoringcoreoscom.ThanosRulerSpecInitContainersLifecyclePostStartTcpSocket": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "ThanosRulerSpecInitContainersLifecyclePostStartTcpSocket",
        },
        "remarks": "TCP hooks not yet supported TODO: implement a realistic TCP lifecycle hook",
        "summary": "TCPSocket specifies an action involving a TCP port.",
      },
      "fqn": "monitoringcoreoscom.ThanosRulerSpecInitContainersLifecyclePostStartTcpSocket",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 35068,
      },
      "name": "ThanosRulerSpecInitContainersLifecyclePostStartTcpSocket",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecInitContainersLifecyclePostStartTcpSocket#port",
            },
            "remarks": "Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.",
            "summary": "Number or name of the port to access on the container.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 35081,
          },
          "name": "port",
          "type": Object {
            "fqn": "monitoringcoreoscom.ThanosRulerSpecInitContainersLifecyclePostStartTcpSocketPort",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecInitContainersLifecyclePostStartTcpSocket#host",
            },
            "summary": "Optional: Host name to connect to, defaults to the pod IP.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 35074,
          },
          "name": "host",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
      ],
    },
    "monitoringcoreoscom.ThanosRulerSpecInitContainersLifecyclePostStartTcpSocketPort": Object {
      "assembly": "monitoringcoreoscom",
      "docs": Object {
        "custom": Object {
          "schema": "ThanosRulerSpecInitContainersLifecyclePostStartTcpSocketPort",
        },
        "remarks": "Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.",
        "summary": "Number or name of the port to access on the container.",
      },
      "fqn": "monitoringcoreoscom.ThanosRulerSpecInitContainersLifecyclePostStartTcpSocketPort",
      "kind": "class",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 36419,
      },
      "methods": Array [
        Object {
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 36420,
          },
          "name": "fromNumber",
          "parameters": Array [
            Object {
              "name": "value",
              "type": Object {
                "primitive": "number",
              },
            },
          ],
          "returns": Object {
            "type": Object {
              "fqn": "monitoringcoreoscom.ThanosRulerSpecInitContainersLifecyclePostStartTcpSocketPort",
            },
          },
          "static": true,
        },
        Object {
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 36423,
          },
          "name": "fromString",
          "parameters": Array [
            Object {
              "name": "value",
              "type": Object {
                "primitive": "string",
              },
            },
          ],
          "returns": Object {
            "type": Object {
              "fqn": "monitoringcoreoscom.ThanosRulerSpecInitContainersLifecyclePostStartTcpSocketPort",
            },
          },
          "static": true,
        },
      ],
      "name": "ThanosRulerSpecInitContainersLifecyclePostStartTcpSocketPort",
      "properties": Array [
        Object {
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 36426,
          },
          "name": "value",
          "type": Object {
            "primitive": "any",
          },
        },
      ],
    },
    "monitoringcoreoscom.ThanosRulerSpecInitContainersLifecyclePreStop": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "ThanosRulerSpecInitContainersLifecyclePreStop",
        },
        "remarks": "The handler is not called if the container crashes or exits. The reason for termination is passed to the handler. The Pod's termination grace period countdown begins before the PreStop hooked is executed. Regardless of the outcome of the handler, the container will eventually terminate within the Pod's termination grace period. Other management of the container blocks until the hook completes or until the termination grace period is reached. More info: https://kubernetes.io/docs/concepts/containers/container-lifecycle-hooks/#container-hooks",
        "summary": "PreStop is called immediately before a container is terminated due to an API request or management event such as liveness/startup probe failure, preemption, resource contention, etc.",
      },
      "fqn": "monitoringcoreoscom.ThanosRulerSpecInitContainersLifecyclePreStop",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 32756,
      },
      "name": "ThanosRulerSpecInitContainersLifecyclePreStop",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecInitContainersLifecyclePreStop#exec",
            },
            "remarks": "Exec specifies the action to take.",
            "summary": "One and only one of the following should be specified.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 32762,
          },
          "name": "exec",
          "optional": true,
          "type": Object {
            "fqn": "monitoringcoreoscom.ThanosRulerSpecInitContainersLifecyclePreStopExec",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecInitContainersLifecyclePreStop#httpGet",
            },
            "summary": "HTTPGet specifies the http request to perform.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 32769,
          },
          "name": "httpGet",
          "optional": true,
          "type": Object {
            "fqn": "monitoringcoreoscom.ThanosRulerSpecInitContainersLifecyclePreStopHttpGet",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecInitContainersLifecyclePreStop#tcpSocket",
            },
            "remarks": "TCP hooks not yet supported TODO: implement a realistic TCP lifecycle hook",
            "summary": "TCPSocket specifies an action involving a TCP port.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 32776,
          },
          "name": "tcpSocket",
          "optional": true,
          "type": Object {
            "fqn": "monitoringcoreoscom.ThanosRulerSpecInitContainersLifecyclePreStopTcpSocket",
          },
        },
      ],
    },
    "monitoringcoreoscom.ThanosRulerSpecInitContainersLifecyclePreStopExec": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "ThanosRulerSpecInitContainersLifecyclePreStopExec",
        },
        "remarks": "Exec specifies the action to take.",
        "summary": "One and only one of the following should be specified.",
      },
      "fqn": "monitoringcoreoscom.ThanosRulerSpecInitContainersLifecyclePreStopExec",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 35105,
      },
      "name": "ThanosRulerSpecInitContainersLifecyclePreStopExec",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecInitContainersLifecyclePreStopExec#command",
            },
            "remarks": "The command is simply exec'd, it is not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use a shell, you need to explicitly call out to that shell. Exit status of 0 is treated as live/healthy and non-zero is unhealthy.",
            "summary": "Command is the command line to execute inside the container, the working directory for the command  is root ('/') in the container's filesystem.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 35111,
          },
          "name": "command",
          "optional": true,
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "primitive": "string",
              },
              "kind": "array",
            },
          },
        },
      ],
    },
    "monitoringcoreoscom.ThanosRulerSpecInitContainersLifecyclePreStopHttpGet": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "ThanosRulerSpecInitContainersLifecyclePreStopHttpGet",
        },
        "summary": "HTTPGet specifies the http request to perform.",
      },
      "fqn": "monitoringcoreoscom.ThanosRulerSpecInitContainersLifecyclePreStopHttpGet",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 35134,
      },
      "name": "ThanosRulerSpecInitContainersLifecyclePreStopHttpGet",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecInitContainersLifecyclePreStopHttpGet#port",
            },
            "remarks": "Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.",
            "summary": "Name or number of the port to access on the container.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 35161,
          },
          "name": "port",
          "type": Object {
            "fqn": "monitoringcoreoscom.ThanosRulerSpecInitContainersLifecyclePreStopHttpGetPort",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecInitContainersLifecyclePreStopHttpGet#host",
            },
            "remarks": "You probably want to set \\"Host\\" in httpHeaders instead.",
            "summary": "Host name to connect to, defaults to the pod IP.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 35140,
          },
          "name": "host",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecInitContainersLifecyclePreStopHttpGet#httpHeaders",
            },
            "remarks": "HTTP allows repeated headers.",
            "summary": "Custom headers to set in the request.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 35147,
          },
          "name": "httpHeaders",
          "optional": true,
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "fqn": "monitoringcoreoscom.ThanosRulerSpecInitContainersLifecyclePreStopHttpGetHttpHeaders",
              },
              "kind": "array",
            },
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecInitContainersLifecyclePreStopHttpGet#path",
            },
            "summary": "Path to access on the HTTP server.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 35154,
          },
          "name": "path",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecInitContainersLifecyclePreStopHttpGet#scheme",
            },
            "default": "HTTP.",
            "remarks": "Defaults to HTTP.",
            "summary": "Scheme to use for connecting to the host.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 35169,
          },
          "name": "scheme",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
      ],
    },
    "monitoringcoreoscom.ThanosRulerSpecInitContainersLifecyclePreStopHttpGetHttpHeaders": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "ThanosRulerSpecInitContainersLifecyclePreStopHttpGetHttpHeaders",
        },
        "summary": "HTTPHeader describes a custom header to be used in HTTP probes.",
      },
      "fqn": "monitoringcoreoscom.ThanosRulerSpecInitContainersLifecyclePreStopHttpGetHttpHeaders",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 36436,
      },
      "name": "ThanosRulerSpecInitContainersLifecyclePreStopHttpGetHttpHeaders",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecInitContainersLifecyclePreStopHttpGetHttpHeaders#name",
            },
            "summary": "The header field name.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 36442,
          },
          "name": "name",
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecInitContainersLifecyclePreStopHttpGetHttpHeaders#value",
            },
            "summary": "The header field value.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 36449,
          },
          "name": "value",
          "type": Object {
            "primitive": "string",
          },
        },
      ],
    },
    "monitoringcoreoscom.ThanosRulerSpecInitContainersLifecyclePreStopHttpGetPort": Object {
      "assembly": "monitoringcoreoscom",
      "docs": Object {
        "custom": Object {
          "schema": "ThanosRulerSpecInitContainersLifecyclePreStopHttpGetPort",
        },
        "remarks": "Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.",
        "summary": "Name or number of the port to access on the container.",
      },
      "fqn": "monitoringcoreoscom.ThanosRulerSpecInitContainersLifecyclePreStopHttpGetPort",
      "kind": "class",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 36473,
      },
      "methods": Array [
        Object {
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 36474,
          },
          "name": "fromNumber",
          "parameters": Array [
            Object {
              "name": "value",
              "type": Object {
                "primitive": "number",
              },
            },
          ],
          "returns": Object {
            "type": Object {
              "fqn": "monitoringcoreoscom.ThanosRulerSpecInitContainersLifecyclePreStopHttpGetPort",
            },
          },
          "static": true,
        },
        Object {
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 36477,
          },
          "name": "fromString",
          "parameters": Array [
            Object {
              "name": "value",
              "type": Object {
                "primitive": "string",
              },
            },
          ],
          "returns": Object {
            "type": Object {
              "fqn": "monitoringcoreoscom.ThanosRulerSpecInitContainersLifecyclePreStopHttpGetPort",
            },
          },
          "static": true,
        },
      ],
      "name": "ThanosRulerSpecInitContainersLifecyclePreStopHttpGetPort",
      "properties": Array [
        Object {
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 36480,
          },
          "name": "value",
          "type": Object {
            "primitive": "any",
          },
        },
      ],
    },
    "monitoringcoreoscom.ThanosRulerSpecInitContainersLifecyclePreStopTcpSocket": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "ThanosRulerSpecInitContainersLifecyclePreStopTcpSocket",
        },
        "remarks": "TCP hooks not yet supported TODO: implement a realistic TCP lifecycle hook",
        "summary": "TCPSocket specifies an action involving a TCP port.",
      },
      "fqn": "monitoringcoreoscom.ThanosRulerSpecInitContainersLifecyclePreStopTcpSocket",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 35196,
      },
      "name": "ThanosRulerSpecInitContainersLifecyclePreStopTcpSocket",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecInitContainersLifecyclePreStopTcpSocket#port",
            },
            "remarks": "Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.",
            "summary": "Number or name of the port to access on the container.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 35209,
          },
          "name": "port",
          "type": Object {
            "fqn": "monitoringcoreoscom.ThanosRulerSpecInitContainersLifecyclePreStopTcpSocketPort",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecInitContainersLifecyclePreStopTcpSocket#host",
            },
            "summary": "Optional: Host name to connect to, defaults to the pod IP.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 35202,
          },
          "name": "host",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
      ],
    },
    "monitoringcoreoscom.ThanosRulerSpecInitContainersLifecyclePreStopTcpSocketPort": Object {
      "assembly": "monitoringcoreoscom",
      "docs": Object {
        "custom": Object {
          "schema": "ThanosRulerSpecInitContainersLifecyclePreStopTcpSocketPort",
        },
        "remarks": "Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.",
        "summary": "Number or name of the port to access on the container.",
      },
      "fqn": "monitoringcoreoscom.ThanosRulerSpecInitContainersLifecyclePreStopTcpSocketPort",
      "kind": "class",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 36490,
      },
      "methods": Array [
        Object {
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 36491,
          },
          "name": "fromNumber",
          "parameters": Array [
            Object {
              "name": "value",
              "type": Object {
                "primitive": "number",
              },
            },
          ],
          "returns": Object {
            "type": Object {
              "fqn": "monitoringcoreoscom.ThanosRulerSpecInitContainersLifecyclePreStopTcpSocketPort",
            },
          },
          "static": true,
        },
        Object {
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 36494,
          },
          "name": "fromString",
          "parameters": Array [
            Object {
              "name": "value",
              "type": Object {
                "primitive": "string",
              },
            },
          ],
          "returns": Object {
            "type": Object {
              "fqn": "monitoringcoreoscom.ThanosRulerSpecInitContainersLifecyclePreStopTcpSocketPort",
            },
          },
          "static": true,
        },
      ],
      "name": "ThanosRulerSpecInitContainersLifecyclePreStopTcpSocketPort",
      "properties": Array [
        Object {
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 36497,
          },
          "name": "value",
          "type": Object {
            "primitive": "any",
          },
        },
      ],
    },
    "monitoringcoreoscom.ThanosRulerSpecInitContainersLivenessProbe": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "ThanosRulerSpecInitContainersLivenessProbe",
        },
        "remarks": "Container will be restarted if the probe fails. Cannot be updated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes",
        "summary": "Periodic probe of container liveness.",
      },
      "fqn": "monitoringcoreoscom.ThanosRulerSpecInitContainersLivenessProbe",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 28955,
      },
      "name": "ThanosRulerSpecInitContainersLivenessProbe",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecInitContainersLivenessProbe#exec",
            },
            "remarks": "Exec specifies the action to take.",
            "summary": "One and only one of the following should be specified.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 28961,
          },
          "name": "exec",
          "optional": true,
          "type": Object {
            "fqn": "monitoringcoreoscom.ThanosRulerSpecInitContainersLivenessProbeExec",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecInitContainersLivenessProbe#failureThreshold",
            },
            "default": "3. Minimum value is 1.",
            "remarks": "Defaults to 3. Minimum value is 1.",
            "summary": "Minimum consecutive failures for the probe to be considered failed after having succeeded.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 28969,
          },
          "name": "failureThreshold",
          "optional": true,
          "type": Object {
            "primitive": "number",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecInitContainersLivenessProbe#httpGet",
            },
            "summary": "HTTPGet specifies the http request to perform.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 28976,
          },
          "name": "httpGet",
          "optional": true,
          "type": Object {
            "fqn": "monitoringcoreoscom.ThanosRulerSpecInitContainersLivenessProbeHttpGet",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecInitContainersLivenessProbe#initialDelaySeconds",
            },
            "remarks": "More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes",
            "summary": "Number of seconds after the container has started before liveness probes are initiated.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 28983,
          },
          "name": "initialDelaySeconds",
          "optional": true,
          "type": Object {
            "primitive": "number",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecInitContainersLivenessProbe#periodSeconds",
            },
            "default": "10 seconds. Minimum value is 1.",
            "remarks": "Default to 10 seconds. Minimum value is 1.",
            "summary": "How often (in seconds) to perform the probe.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 28991,
          },
          "name": "periodSeconds",
          "optional": true,
          "type": Object {
            "primitive": "number",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecInitContainersLivenessProbe#successThreshold",
            },
            "default": "1. Must be 1 for liveness and startup. Minimum value is 1.",
            "remarks": "Defaults to 1. Must be 1 for liveness and startup. Minimum value is 1.",
            "summary": "Minimum consecutive successes for the probe to be considered successful after having failed.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 28999,
          },
          "name": "successThreshold",
          "optional": true,
          "type": Object {
            "primitive": "number",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecInitContainersLivenessProbe#tcpSocket",
            },
            "remarks": "TCP hooks not yet supported TODO: implement a realistic TCP lifecycle hook",
            "summary": "TCPSocket specifies an action involving a TCP port.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 29006,
          },
          "name": "tcpSocket",
          "optional": true,
          "type": Object {
            "fqn": "monitoringcoreoscom.ThanosRulerSpecInitContainersLivenessProbeTcpSocket",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecInitContainersLivenessProbe#timeoutSeconds",
            },
            "default": "1 second. Minimum value is 1. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes",
            "remarks": "Defaults to 1 second. Minimum value is 1. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes",
            "summary": "Number of seconds after which the probe times out.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 29014,
          },
          "name": "timeoutSeconds",
          "optional": true,
          "type": Object {
            "primitive": "number",
          },
        },
      ],
    },
    "monitoringcoreoscom.ThanosRulerSpecInitContainersLivenessProbeExec": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "ThanosRulerSpecInitContainersLivenessProbeExec",
        },
        "remarks": "Exec specifies the action to take.",
        "summary": "One and only one of the following should be specified.",
      },
      "fqn": "monitoringcoreoscom.ThanosRulerSpecInitContainersLivenessProbeExec",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 32801,
      },
      "name": "ThanosRulerSpecInitContainersLivenessProbeExec",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecInitContainersLivenessProbeExec#command",
            },
            "remarks": "The command is simply exec'd, it is not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use a shell, you need to explicitly call out to that shell. Exit status of 0 is treated as live/healthy and non-zero is unhealthy.",
            "summary": "Command is the command line to execute inside the container, the working directory for the command  is root ('/') in the container's filesystem.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 32807,
          },
          "name": "command",
          "optional": true,
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "primitive": "string",
              },
              "kind": "array",
            },
          },
        },
      ],
    },
    "monitoringcoreoscom.ThanosRulerSpecInitContainersLivenessProbeHttpGet": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "ThanosRulerSpecInitContainersLivenessProbeHttpGet",
        },
        "summary": "HTTPGet specifies the http request to perform.",
      },
      "fqn": "monitoringcoreoscom.ThanosRulerSpecInitContainersLivenessProbeHttpGet",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 32830,
      },
      "name": "ThanosRulerSpecInitContainersLivenessProbeHttpGet",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecInitContainersLivenessProbeHttpGet#port",
            },
            "remarks": "Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.",
            "summary": "Name or number of the port to access on the container.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 32857,
          },
          "name": "port",
          "type": Object {
            "fqn": "monitoringcoreoscom.ThanosRulerSpecInitContainersLivenessProbeHttpGetPort",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecInitContainersLivenessProbeHttpGet#host",
            },
            "remarks": "You probably want to set \\"Host\\" in httpHeaders instead.",
            "summary": "Host name to connect to, defaults to the pod IP.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 32836,
          },
          "name": "host",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecInitContainersLivenessProbeHttpGet#httpHeaders",
            },
            "remarks": "HTTP allows repeated headers.",
            "summary": "Custom headers to set in the request.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 32843,
          },
          "name": "httpHeaders",
          "optional": true,
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "fqn": "monitoringcoreoscom.ThanosRulerSpecInitContainersLivenessProbeHttpGetHttpHeaders",
              },
              "kind": "array",
            },
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecInitContainersLivenessProbeHttpGet#path",
            },
            "summary": "Path to access on the HTTP server.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 32850,
          },
          "name": "path",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecInitContainersLivenessProbeHttpGet#scheme",
            },
            "default": "HTTP.",
            "remarks": "Defaults to HTTP.",
            "summary": "Scheme to use for connecting to the host.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 32865,
          },
          "name": "scheme",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
      ],
    },
    "monitoringcoreoscom.ThanosRulerSpecInitContainersLivenessProbeHttpGetHttpHeaders": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "ThanosRulerSpecInitContainersLivenessProbeHttpGetHttpHeaders",
        },
        "summary": "HTTPHeader describes a custom header to be used in HTTP probes.",
      },
      "fqn": "monitoringcoreoscom.ThanosRulerSpecInitContainersLivenessProbeHttpGetHttpHeaders",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 35233,
      },
      "name": "ThanosRulerSpecInitContainersLivenessProbeHttpGetHttpHeaders",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecInitContainersLivenessProbeHttpGetHttpHeaders#name",
            },
            "summary": "The header field name.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 35239,
          },
          "name": "name",
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecInitContainersLivenessProbeHttpGetHttpHeaders#value",
            },
            "summary": "The header field value.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 35246,
          },
          "name": "value",
          "type": Object {
            "primitive": "string",
          },
        },
      ],
    },
    "monitoringcoreoscom.ThanosRulerSpecInitContainersLivenessProbeHttpGetPort": Object {
      "assembly": "monitoringcoreoscom",
      "docs": Object {
        "custom": Object {
          "schema": "ThanosRulerSpecInitContainersLivenessProbeHttpGetPort",
        },
        "remarks": "Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.",
        "summary": "Name or number of the port to access on the container.",
      },
      "fqn": "monitoringcoreoscom.ThanosRulerSpecInitContainersLivenessProbeHttpGetPort",
      "kind": "class",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 35270,
      },
      "methods": Array [
        Object {
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 35271,
          },
          "name": "fromNumber",
          "parameters": Array [
            Object {
              "name": "value",
              "type": Object {
                "primitive": "number",
              },
            },
          ],
          "returns": Object {
            "type": Object {
              "fqn": "monitoringcoreoscom.ThanosRulerSpecInitContainersLivenessProbeHttpGetPort",
            },
          },
          "static": true,
        },
        Object {
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 35274,
          },
          "name": "fromString",
          "parameters": Array [
            Object {
              "name": "value",
              "type": Object {
                "primitive": "string",
              },
            },
          ],
          "returns": Object {
            "type": Object {
              "fqn": "monitoringcoreoscom.ThanosRulerSpecInitContainersLivenessProbeHttpGetPort",
            },
          },
          "static": true,
        },
      ],
      "name": "ThanosRulerSpecInitContainersLivenessProbeHttpGetPort",
      "properties": Array [
        Object {
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 35277,
          },
          "name": "value",
          "type": Object {
            "primitive": "any",
          },
        },
      ],
    },
    "monitoringcoreoscom.ThanosRulerSpecInitContainersLivenessProbeTcpSocket": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "ThanosRulerSpecInitContainersLivenessProbeTcpSocket",
        },
        "remarks": "TCP hooks not yet supported TODO: implement a realistic TCP lifecycle hook",
        "summary": "TCPSocket specifies an action involving a TCP port.",
      },
      "fqn": "monitoringcoreoscom.ThanosRulerSpecInitContainersLivenessProbeTcpSocket",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 32892,
      },
      "name": "ThanosRulerSpecInitContainersLivenessProbeTcpSocket",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecInitContainersLivenessProbeTcpSocket#port",
            },
            "remarks": "Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.",
            "summary": "Number or name of the port to access on the container.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 32905,
          },
          "name": "port",
          "type": Object {
            "fqn": "monitoringcoreoscom.ThanosRulerSpecInitContainersLivenessProbeTcpSocketPort",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecInitContainersLivenessProbeTcpSocket#host",
            },
            "summary": "Optional: Host name to connect to, defaults to the pod IP.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 32898,
          },
          "name": "host",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
      ],
    },
    "monitoringcoreoscom.ThanosRulerSpecInitContainersLivenessProbeTcpSocketPort": Object {
      "assembly": "monitoringcoreoscom",
      "docs": Object {
        "custom": Object {
          "schema": "ThanosRulerSpecInitContainersLivenessProbeTcpSocketPort",
        },
        "remarks": "Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.",
        "summary": "Number or name of the port to access on the container.",
      },
      "fqn": "monitoringcoreoscom.ThanosRulerSpecInitContainersLivenessProbeTcpSocketPort",
      "kind": "class",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 35287,
      },
      "methods": Array [
        Object {
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 35288,
          },
          "name": "fromNumber",
          "parameters": Array [
            Object {
              "name": "value",
              "type": Object {
                "primitive": "number",
              },
            },
          ],
          "returns": Object {
            "type": Object {
              "fqn": "monitoringcoreoscom.ThanosRulerSpecInitContainersLivenessProbeTcpSocketPort",
            },
          },
          "static": true,
        },
        Object {
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 35291,
          },
          "name": "fromString",
          "parameters": Array [
            Object {
              "name": "value",
              "type": Object {
                "primitive": "string",
              },
            },
          ],
          "returns": Object {
            "type": Object {
              "fqn": "monitoringcoreoscom.ThanosRulerSpecInitContainersLivenessProbeTcpSocketPort",
            },
          },
          "static": true,
        },
      ],
      "name": "ThanosRulerSpecInitContainersLivenessProbeTcpSocketPort",
      "properties": Array [
        Object {
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 35294,
          },
          "name": "value",
          "type": Object {
            "primitive": "any",
          },
        },
      ],
    },
    "monitoringcoreoscom.ThanosRulerSpecInitContainersPorts": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "ThanosRulerSpecInitContainersPorts",
        },
        "summary": "ContainerPort represents a network port in a single container.",
      },
      "fqn": "monitoringcoreoscom.ThanosRulerSpecInitContainersPorts",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 29044,
      },
      "name": "ThanosRulerSpecInitContainersPorts",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecInitContainersPorts#containerPort",
            },
            "remarks": "This must be a valid port number, 0 < x < 65536.",
            "summary": "Number of port to expose on the pod's IP address.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 29050,
          },
          "name": "containerPort",
          "type": Object {
            "primitive": "number",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecInitContainersPorts#hostIP",
            },
            "summary": "What host IP to bind the external port to.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 29057,
          },
          "name": "hostIp",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecInitContainersPorts#hostPort",
            },
            "remarks": "If specified, this must be a valid port number, 0 < x < 65536. If HostNetwork is specified, this must match ContainerPort. Most containers do not need this.",
            "summary": "Number of port to expose on the host.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 29064,
          },
          "name": "hostPort",
          "optional": true,
          "type": Object {
            "primitive": "number",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecInitContainersPorts#name",
            },
            "remarks": "Each named port in a pod must have a unique name. Name for the port that can be referred to by services.",
            "summary": "If specified, this must be an IANA_SVC_NAME and unique within the pod.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 29071,
          },
          "name": "name",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecInitContainersPorts#protocol",
            },
            "default": "TCP\\".",
            "remarks": "Must be UDP, TCP, or SCTP. Defaults to \\"TCP\\".",
            "summary": "Protocol for port.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 29079,
          },
          "name": "protocol",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
      ],
    },
    "monitoringcoreoscom.ThanosRulerSpecInitContainersReadinessProbe": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "ThanosRulerSpecInitContainersReadinessProbe",
        },
        "remarks": "Container will be removed from service endpoints if the probe fails. Cannot be updated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes",
        "summary": "Periodic probe of container service readiness.",
      },
      "fqn": "monitoringcoreoscom.ThanosRulerSpecInitContainersReadinessProbe",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 29106,
      },
      "name": "ThanosRulerSpecInitContainersReadinessProbe",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecInitContainersReadinessProbe#exec",
            },
            "remarks": "Exec specifies the action to take.",
            "summary": "One and only one of the following should be specified.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 29112,
          },
          "name": "exec",
          "optional": true,
          "type": Object {
            "fqn": "monitoringcoreoscom.ThanosRulerSpecInitContainersReadinessProbeExec",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecInitContainersReadinessProbe#failureThreshold",
            },
            "default": "3. Minimum value is 1.",
            "remarks": "Defaults to 3. Minimum value is 1.",
            "summary": "Minimum consecutive failures for the probe to be considered failed after having succeeded.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 29120,
          },
          "name": "failureThreshold",
          "optional": true,
          "type": Object {
            "primitive": "number",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecInitContainersReadinessProbe#httpGet",
            },
            "summary": "HTTPGet specifies the http request to perform.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 29127,
          },
          "name": "httpGet",
          "optional": true,
          "type": Object {
            "fqn": "monitoringcoreoscom.ThanosRulerSpecInitContainersReadinessProbeHttpGet",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecInitContainersReadinessProbe#initialDelaySeconds",
            },
            "remarks": "More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes",
            "summary": "Number of seconds after the container has started before liveness probes are initiated.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 29134,
          },
          "name": "initialDelaySeconds",
          "optional": true,
          "type": Object {
            "primitive": "number",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecInitContainersReadinessProbe#periodSeconds",
            },
            "default": "10 seconds. Minimum value is 1.",
            "remarks": "Default to 10 seconds. Minimum value is 1.",
            "summary": "How often (in seconds) to perform the probe.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 29142,
          },
          "name": "periodSeconds",
          "optional": true,
          "type": Object {
            "primitive": "number",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecInitContainersReadinessProbe#successThreshold",
            },
            "default": "1. Must be 1 for liveness and startup. Minimum value is 1.",
            "remarks": "Defaults to 1. Must be 1 for liveness and startup. Minimum value is 1.",
            "summary": "Minimum consecutive successes for the probe to be considered successful after having failed.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 29150,
          },
          "name": "successThreshold",
          "optional": true,
          "type": Object {
            "primitive": "number",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecInitContainersReadinessProbe#tcpSocket",
            },
            "remarks": "TCP hooks not yet supported TODO: implement a realistic TCP lifecycle hook",
            "summary": "TCPSocket specifies an action involving a TCP port.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 29157,
          },
          "name": "tcpSocket",
          "optional": true,
          "type": Object {
            "fqn": "monitoringcoreoscom.ThanosRulerSpecInitContainersReadinessProbeTcpSocket",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecInitContainersReadinessProbe#timeoutSeconds",
            },
            "default": "1 second. Minimum value is 1. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes",
            "remarks": "Defaults to 1 second. Minimum value is 1. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes",
            "summary": "Number of seconds after which the probe times out.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 29165,
          },
          "name": "timeoutSeconds",
          "optional": true,
          "type": Object {
            "primitive": "number",
          },
        },
      ],
    },
    "monitoringcoreoscom.ThanosRulerSpecInitContainersReadinessProbeExec": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "ThanosRulerSpecInitContainersReadinessProbeExec",
        },
        "remarks": "Exec specifies the action to take.",
        "summary": "One and only one of the following should be specified.",
      },
      "fqn": "monitoringcoreoscom.ThanosRulerSpecInitContainersReadinessProbeExec",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 32929,
      },
      "name": "ThanosRulerSpecInitContainersReadinessProbeExec",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecInitContainersReadinessProbeExec#command",
            },
            "remarks": "The command is simply exec'd, it is not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use a shell, you need to explicitly call out to that shell. Exit status of 0 is treated as live/healthy and non-zero is unhealthy.",
            "summary": "Command is the command line to execute inside the container, the working directory for the command  is root ('/') in the container's filesystem.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 32935,
          },
          "name": "command",
          "optional": true,
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "primitive": "string",
              },
              "kind": "array",
            },
          },
        },
      ],
    },
    "monitoringcoreoscom.ThanosRulerSpecInitContainersReadinessProbeHttpGet": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "ThanosRulerSpecInitContainersReadinessProbeHttpGet",
        },
        "summary": "HTTPGet specifies the http request to perform.",
      },
      "fqn": "monitoringcoreoscom.ThanosRulerSpecInitContainersReadinessProbeHttpGet",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 32958,
      },
      "name": "ThanosRulerSpecInitContainersReadinessProbeHttpGet",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecInitContainersReadinessProbeHttpGet#port",
            },
            "remarks": "Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.",
            "summary": "Name or number of the port to access on the container.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 32985,
          },
          "name": "port",
          "type": Object {
            "fqn": "monitoringcoreoscom.ThanosRulerSpecInitContainersReadinessProbeHttpGetPort",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecInitContainersReadinessProbeHttpGet#host",
            },
            "remarks": "You probably want to set \\"Host\\" in httpHeaders instead.",
            "summary": "Host name to connect to, defaults to the pod IP.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 32964,
          },
          "name": "host",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecInitContainersReadinessProbeHttpGet#httpHeaders",
            },
            "remarks": "HTTP allows repeated headers.",
            "summary": "Custom headers to set in the request.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 32971,
          },
          "name": "httpHeaders",
          "optional": true,
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "fqn": "monitoringcoreoscom.ThanosRulerSpecInitContainersReadinessProbeHttpGetHttpHeaders",
              },
              "kind": "array",
            },
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecInitContainersReadinessProbeHttpGet#path",
            },
            "summary": "Path to access on the HTTP server.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 32978,
          },
          "name": "path",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecInitContainersReadinessProbeHttpGet#scheme",
            },
            "default": "HTTP.",
            "remarks": "Defaults to HTTP.",
            "summary": "Scheme to use for connecting to the host.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 32993,
          },
          "name": "scheme",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
      ],
    },
    "monitoringcoreoscom.ThanosRulerSpecInitContainersReadinessProbeHttpGetHttpHeaders": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "ThanosRulerSpecInitContainersReadinessProbeHttpGetHttpHeaders",
        },
        "summary": "HTTPHeader describes a custom header to be used in HTTP probes.",
      },
      "fqn": "monitoringcoreoscom.ThanosRulerSpecInitContainersReadinessProbeHttpGetHttpHeaders",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 35304,
      },
      "name": "ThanosRulerSpecInitContainersReadinessProbeHttpGetHttpHeaders",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecInitContainersReadinessProbeHttpGetHttpHeaders#name",
            },
            "summary": "The header field name.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 35310,
          },
          "name": "name",
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecInitContainersReadinessProbeHttpGetHttpHeaders#value",
            },
            "summary": "The header field value.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 35317,
          },
          "name": "value",
          "type": Object {
            "primitive": "string",
          },
        },
      ],
    },
    "monitoringcoreoscom.ThanosRulerSpecInitContainersReadinessProbeHttpGetPort": Object {
      "assembly": "monitoringcoreoscom",
      "docs": Object {
        "custom": Object {
          "schema": "ThanosRulerSpecInitContainersReadinessProbeHttpGetPort",
        },
        "remarks": "Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.",
        "summary": "Name or number of the port to access on the container.",
      },
      "fqn": "monitoringcoreoscom.ThanosRulerSpecInitContainersReadinessProbeHttpGetPort",
      "kind": "class",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 35341,
      },
      "methods": Array [
        Object {
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 35342,
          },
          "name": "fromNumber",
          "parameters": Array [
            Object {
              "name": "value",
              "type": Object {
                "primitive": "number",
              },
            },
          ],
          "returns": Object {
            "type": Object {
              "fqn": "monitoringcoreoscom.ThanosRulerSpecInitContainersReadinessProbeHttpGetPort",
            },
          },
          "static": true,
        },
        Object {
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 35345,
          },
          "name": "fromString",
          "parameters": Array [
            Object {
              "name": "value",
              "type": Object {
                "primitive": "string",
              },
            },
          ],
          "returns": Object {
            "type": Object {
              "fqn": "monitoringcoreoscom.ThanosRulerSpecInitContainersReadinessProbeHttpGetPort",
            },
          },
          "static": true,
        },
      ],
      "name": "ThanosRulerSpecInitContainersReadinessProbeHttpGetPort",
      "properties": Array [
        Object {
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 35348,
          },
          "name": "value",
          "type": Object {
            "primitive": "any",
          },
        },
      ],
    },
    "monitoringcoreoscom.ThanosRulerSpecInitContainersReadinessProbeTcpSocket": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "ThanosRulerSpecInitContainersReadinessProbeTcpSocket",
        },
        "remarks": "TCP hooks not yet supported TODO: implement a realistic TCP lifecycle hook",
        "summary": "TCPSocket specifies an action involving a TCP port.",
      },
      "fqn": "monitoringcoreoscom.ThanosRulerSpecInitContainersReadinessProbeTcpSocket",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 33020,
      },
      "name": "ThanosRulerSpecInitContainersReadinessProbeTcpSocket",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecInitContainersReadinessProbeTcpSocket#port",
            },
            "remarks": "Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.",
            "summary": "Number or name of the port to access on the container.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 33033,
          },
          "name": "port",
          "type": Object {
            "fqn": "monitoringcoreoscom.ThanosRulerSpecInitContainersReadinessProbeTcpSocketPort",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecInitContainersReadinessProbeTcpSocket#host",
            },
            "summary": "Optional: Host name to connect to, defaults to the pod IP.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 33026,
          },
          "name": "host",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
      ],
    },
    "monitoringcoreoscom.ThanosRulerSpecInitContainersReadinessProbeTcpSocketPort": Object {
      "assembly": "monitoringcoreoscom",
      "docs": Object {
        "custom": Object {
          "schema": "ThanosRulerSpecInitContainersReadinessProbeTcpSocketPort",
        },
        "remarks": "Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.",
        "summary": "Number or name of the port to access on the container.",
      },
      "fqn": "monitoringcoreoscom.ThanosRulerSpecInitContainersReadinessProbeTcpSocketPort",
      "kind": "class",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 35358,
      },
      "methods": Array [
        Object {
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 35359,
          },
          "name": "fromNumber",
          "parameters": Array [
            Object {
              "name": "value",
              "type": Object {
                "primitive": "number",
              },
            },
          ],
          "returns": Object {
            "type": Object {
              "fqn": "monitoringcoreoscom.ThanosRulerSpecInitContainersReadinessProbeTcpSocketPort",
            },
          },
          "static": true,
        },
        Object {
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 35362,
          },
          "name": "fromString",
          "parameters": Array [
            Object {
              "name": "value",
              "type": Object {
                "primitive": "string",
              },
            },
          ],
          "returns": Object {
            "type": Object {
              "fqn": "monitoringcoreoscom.ThanosRulerSpecInitContainersReadinessProbeTcpSocketPort",
            },
          },
          "static": true,
        },
      ],
      "name": "ThanosRulerSpecInitContainersReadinessProbeTcpSocketPort",
      "properties": Array [
        Object {
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 35365,
          },
          "name": "value",
          "type": Object {
            "primitive": "any",
          },
        },
      ],
    },
    "monitoringcoreoscom.ThanosRulerSpecInitContainersResources": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "ThanosRulerSpecInitContainersResources",
        },
        "remarks": "Cannot be updated. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/",
        "summary": "Compute Resources required by this container.",
      },
      "fqn": "monitoringcoreoscom.ThanosRulerSpecInitContainersResources",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 29195,
      },
      "name": "ThanosRulerSpecInitContainersResources",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecInitContainersResources#limits",
            },
            "remarks": "More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/",
            "summary": "Limits describes the maximum amount of compute resources allowed.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 29201,
          },
          "name": "limits",
          "optional": true,
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "primitive": "string",
              },
              "kind": "map",
            },
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecInitContainersResources#requests",
            },
            "remarks": "If Requests is omitted for a container, it defaults to Limits if that is explicitly specified, otherwise to an implementation-defined value. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/",
            "summary": "Requests describes the minimum amount of compute resources required.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 29208,
          },
          "name": "requests",
          "optional": true,
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "primitive": "string",
              },
              "kind": "map",
            },
          },
        },
      ],
    },
    "monitoringcoreoscom.ThanosRulerSpecInitContainersSecurityContext": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "ThanosRulerSpecInitContainersSecurityContext",
        },
        "remarks": "More info: https://kubernetes.io/docs/concepts/policy/security-context/ More info: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
        "summary": "Security options the pod should run with.",
      },
      "fqn": "monitoringcoreoscom.ThanosRulerSpecInitContainersSecurityContext",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 29232,
      },
      "name": "ThanosRulerSpecInitContainersSecurityContext",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecInitContainersSecurityContext#allowPrivilegeEscalation",
            },
            "remarks": "This bool directly controls if the no_new_privs flag will be set on the container process. AllowPrivilegeEscalation is true always when the container is: 1) run as Privileged 2) has CAP_SYS_ADMIN",
            "summary": "AllowPrivilegeEscalation controls whether a process can gain more privileges than its parent process.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 29238,
          },
          "name": "allowPrivilegeEscalation",
          "optional": true,
          "type": Object {
            "primitive": "boolean",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecInitContainersSecurityContext#capabilities",
            },
            "default": "the default set of capabilities granted by the container runtime.",
            "remarks": "Defaults to the default set of capabilities granted by the container runtime.",
            "summary": "The capabilities to add/drop when running containers.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 29246,
          },
          "name": "capabilities",
          "optional": true,
          "type": Object {
            "fqn": "monitoringcoreoscom.ThanosRulerSpecInitContainersSecurityContextCapabilities",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecInitContainersSecurityContext#privileged",
            },
            "default": "false.",
            "remarks": "Processes in privileged containers are essentially equivalent to root on the host. Defaults to false.",
            "summary": "Run container in privileged mode.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 29254,
          },
          "name": "privileged",
          "optional": true,
          "type": Object {
            "primitive": "boolean",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecInitContainersSecurityContext#procMount",
            },
            "remarks": "The default is DefaultProcMount which uses the container runtime defaults for readonly paths and masked paths. This requires the ProcMountType feature flag to be enabled.",
            "summary": "procMount denotes the type of proc mount to use for the containers.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 29261,
          },
          "name": "procMount",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecInitContainersSecurityContext#readOnlyRootFilesystem",
            },
            "default": "false.",
            "remarks": "Default is false.",
            "summary": "Whether this container has a read-only root filesystem.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 29269,
          },
          "name": "readOnlyRootFilesystem",
          "optional": true,
          "type": Object {
            "primitive": "boolean",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecInitContainersSecurityContext#runAsGroup",
            },
            "remarks": "Uses runtime default if unset. May also be set in PodSecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.",
            "summary": "The GID to run the entrypoint of the container process.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 29276,
          },
          "name": "runAsGroup",
          "optional": true,
          "type": Object {
            "primitive": "number",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecInitContainersSecurityContext#runAsNonRoot",
            },
            "remarks": "If true, the Kubelet will validate the image at runtime to ensure that it does not run as UID 0 (root) and fail to start the container if it does. If unset or false, no such validation will be performed. May also be set in PodSecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.",
            "summary": "Indicates that the container must run as a non-root user.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 29283,
          },
          "name": "runAsNonRoot",
          "optional": true,
          "type": Object {
            "primitive": "boolean",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecInitContainersSecurityContext#runAsUser",
            },
            "default": "user specified in image metadata if unspecified. May also be set in PodSecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.",
            "remarks": "Defaults to user specified in image metadata if unspecified. May also be set in PodSecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.",
            "summary": "The UID to run the entrypoint of the container process.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 29291,
          },
          "name": "runAsUser",
          "optional": true,
          "type": Object {
            "primitive": "number",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecInitContainersSecurityContext#seLinuxOptions",
            },
            "remarks": "If unspecified, the container runtime will allocate a random SELinux context for each container.  May also be set in PodSecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.",
            "summary": "The SELinux context to be applied to the container.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 29298,
          },
          "name": "seLinuxOptions",
          "optional": true,
          "type": Object {
            "fqn": "monitoringcoreoscom.ThanosRulerSpecInitContainersSecurityContextSeLinuxOptions",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecInitContainersSecurityContext#windowsOptions",
            },
            "remarks": "If unspecified, the options from the PodSecurityContext will be used. If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.",
            "summary": "The Windows specific settings applied to all containers.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 29305,
          },
          "name": "windowsOptions",
          "optional": true,
          "type": Object {
            "fqn": "monitoringcoreoscom.ThanosRulerSpecInitContainersSecurityContextWindowsOptions",
          },
        },
      ],
    },
    "monitoringcoreoscom.ThanosRulerSpecInitContainersSecurityContextCapabilities": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "ThanosRulerSpecInitContainersSecurityContextCapabilities",
        },
        "default": "the default set of capabilities granted by the container runtime.",
        "remarks": "Defaults to the default set of capabilities granted by the container runtime.",
        "summary": "The capabilities to add/drop when running containers.",
      },
      "fqn": "monitoringcoreoscom.ThanosRulerSpecInitContainersSecurityContextCapabilities",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 33058,
      },
      "name": "ThanosRulerSpecInitContainersSecurityContextCapabilities",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecInitContainersSecurityContextCapabilities#add",
            },
            "summary": "Added capabilities.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 33064,
          },
          "name": "add",
          "optional": true,
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "primitive": "string",
              },
              "kind": "array",
            },
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecInitContainersSecurityContextCapabilities#drop",
            },
            "summary": "Removed capabilities.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 33071,
          },
          "name": "drop",
          "optional": true,
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "primitive": "string",
              },
              "kind": "array",
            },
          },
        },
      ],
    },
    "monitoringcoreoscom.ThanosRulerSpecInitContainersSecurityContextSeLinuxOptions": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "ThanosRulerSpecInitContainersSecurityContextSeLinuxOptions",
        },
        "remarks": "If unspecified, the container runtime will allocate a random SELinux context for each container.  May also be set in PodSecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.",
        "summary": "The SELinux context to be applied to the container.",
      },
      "fqn": "monitoringcoreoscom.ThanosRulerSpecInitContainersSecurityContextSeLinuxOptions",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 33095,
      },
      "name": "ThanosRulerSpecInitContainersSecurityContextSeLinuxOptions",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecInitContainersSecurityContextSeLinuxOptions#level",
            },
            "summary": "Level is SELinux level label that applies to the container.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 33101,
          },
          "name": "level",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecInitContainersSecurityContextSeLinuxOptions#role",
            },
            "summary": "Role is a SELinux role label that applies to the container.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 33108,
          },
          "name": "role",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecInitContainersSecurityContextSeLinuxOptions#type",
            },
            "summary": "Type is a SELinux type label that applies to the container.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 33115,
          },
          "name": "type",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecInitContainersSecurityContextSeLinuxOptions#user",
            },
            "summary": "User is a SELinux user label that applies to the container.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 33122,
          },
          "name": "user",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
      ],
    },
    "monitoringcoreoscom.ThanosRulerSpecInitContainersSecurityContextWindowsOptions": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "ThanosRulerSpecInitContainersSecurityContextWindowsOptions",
        },
        "remarks": "If unspecified, the options from the PodSecurityContext will be used. If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.",
        "summary": "The Windows specific settings applied to all containers.",
      },
      "fqn": "monitoringcoreoscom.ThanosRulerSpecInitContainersSecurityContextWindowsOptions",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 33148,
      },
      "name": "ThanosRulerSpecInitContainersSecurityContextWindowsOptions",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecInitContainersSecurityContextWindowsOptions#gmsaCredentialSpec",
            },
            "summary": "GMSACredentialSpec is where the GMSA admission webhook (https://github.com/kubernetes-sigs/windows-gmsa) inlines the contents of the GMSA credential spec named by the GMSACredentialSpecName field.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 33154,
          },
          "name": "gmsaCredentialSpec",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecInitContainersSecurityContextWindowsOptions#gmsaCredentialSpecName",
            },
            "summary": "GMSACredentialSpecName is the name of the GMSA credential spec to use.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 33161,
          },
          "name": "gmsaCredentialSpecName",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecInitContainersSecurityContextWindowsOptions#runAsUserName",
            },
            "default": "the user specified in image metadata if unspecified. May also be set in PodSecurityContext. If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.",
            "remarks": "Defaults to the user specified in image metadata if unspecified. May also be set in PodSecurityContext. If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.",
            "summary": "The UserName in Windows to run the entrypoint of the container process.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 33169,
          },
          "name": "runAsUserName",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
      ],
    },
    "monitoringcoreoscom.ThanosRulerSpecInitContainersStartupProbe": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "ThanosRulerSpecInitContainersStartupProbe",
        },
        "remarks": "If specified, no other probes are executed until this completes successfully. If this probe fails, the Pod will be restarted, just as if the livenessProbe failed. This can be used to provide different probe parameters at the beginning of a Pod's lifecycle, when it might take a long time to load data or warm a cache, than during steady-state operation. This cannot be updated. This is a beta feature enabled by the StartupProbe feature flag. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes",
        "summary": "StartupProbe indicates that the Pod has successfully initialized.",
      },
      "fqn": "monitoringcoreoscom.ThanosRulerSpecInitContainersStartupProbe",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 29337,
      },
      "name": "ThanosRulerSpecInitContainersStartupProbe",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecInitContainersStartupProbe#exec",
            },
            "remarks": "Exec specifies the action to take.",
            "summary": "One and only one of the following should be specified.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 29343,
          },
          "name": "exec",
          "optional": true,
          "type": Object {
            "fqn": "monitoringcoreoscom.ThanosRulerSpecInitContainersStartupProbeExec",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecInitContainersStartupProbe#failureThreshold",
            },
            "default": "3. Minimum value is 1.",
            "remarks": "Defaults to 3. Minimum value is 1.",
            "summary": "Minimum consecutive failures for the probe to be considered failed after having succeeded.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 29351,
          },
          "name": "failureThreshold",
          "optional": true,
          "type": Object {
            "primitive": "number",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecInitContainersStartupProbe#httpGet",
            },
            "summary": "HTTPGet specifies the http request to perform.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 29358,
          },
          "name": "httpGet",
          "optional": true,
          "type": Object {
            "fqn": "monitoringcoreoscom.ThanosRulerSpecInitContainersStartupProbeHttpGet",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecInitContainersStartupProbe#initialDelaySeconds",
            },
            "remarks": "More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes",
            "summary": "Number of seconds after the container has started before liveness probes are initiated.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 29365,
          },
          "name": "initialDelaySeconds",
          "optional": true,
          "type": Object {
            "primitive": "number",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecInitContainersStartupProbe#periodSeconds",
            },
            "default": "10 seconds. Minimum value is 1.",
            "remarks": "Default to 10 seconds. Minimum value is 1.",
            "summary": "How often (in seconds) to perform the probe.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 29373,
          },
          "name": "periodSeconds",
          "optional": true,
          "type": Object {
            "primitive": "number",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecInitContainersStartupProbe#successThreshold",
            },
            "default": "1. Must be 1 for liveness and startup. Minimum value is 1.",
            "remarks": "Defaults to 1. Must be 1 for liveness and startup. Minimum value is 1.",
            "summary": "Minimum consecutive successes for the probe to be considered successful after having failed.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 29381,
          },
          "name": "successThreshold",
          "optional": true,
          "type": Object {
            "primitive": "number",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecInitContainersStartupProbe#tcpSocket",
            },
            "remarks": "TCP hooks not yet supported TODO: implement a realistic TCP lifecycle hook",
            "summary": "TCPSocket specifies an action involving a TCP port.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 29388,
          },
          "name": "tcpSocket",
          "optional": true,
          "type": Object {
            "fqn": "monitoringcoreoscom.ThanosRulerSpecInitContainersStartupProbeTcpSocket",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecInitContainersStartupProbe#timeoutSeconds",
            },
            "default": "1 second. Minimum value is 1. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes",
            "remarks": "Defaults to 1 second. Minimum value is 1. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes",
            "summary": "Number of seconds after which the probe times out.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 29396,
          },
          "name": "timeoutSeconds",
          "optional": true,
          "type": Object {
            "primitive": "number",
          },
        },
      ],
    },
    "monitoringcoreoscom.ThanosRulerSpecInitContainersStartupProbeExec": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "ThanosRulerSpecInitContainersStartupProbeExec",
        },
        "remarks": "Exec specifies the action to take.",
        "summary": "One and only one of the following should be specified.",
      },
      "fqn": "monitoringcoreoscom.ThanosRulerSpecInitContainersStartupProbeExec",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 33194,
      },
      "name": "ThanosRulerSpecInitContainersStartupProbeExec",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecInitContainersStartupProbeExec#command",
            },
            "remarks": "The command is simply exec'd, it is not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use a shell, you need to explicitly call out to that shell. Exit status of 0 is treated as live/healthy and non-zero is unhealthy.",
            "summary": "Command is the command line to execute inside the container, the working directory for the command  is root ('/') in the container's filesystem.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 33200,
          },
          "name": "command",
          "optional": true,
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "primitive": "string",
              },
              "kind": "array",
            },
          },
        },
      ],
    },
    "monitoringcoreoscom.ThanosRulerSpecInitContainersStartupProbeHttpGet": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "ThanosRulerSpecInitContainersStartupProbeHttpGet",
        },
        "summary": "HTTPGet specifies the http request to perform.",
      },
      "fqn": "monitoringcoreoscom.ThanosRulerSpecInitContainersStartupProbeHttpGet",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 33223,
      },
      "name": "ThanosRulerSpecInitContainersStartupProbeHttpGet",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecInitContainersStartupProbeHttpGet#port",
            },
            "remarks": "Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.",
            "summary": "Name or number of the port to access on the container.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 33250,
          },
          "name": "port",
          "type": Object {
            "fqn": "monitoringcoreoscom.ThanosRulerSpecInitContainersStartupProbeHttpGetPort",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecInitContainersStartupProbeHttpGet#host",
            },
            "remarks": "You probably want to set \\"Host\\" in httpHeaders instead.",
            "summary": "Host name to connect to, defaults to the pod IP.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 33229,
          },
          "name": "host",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecInitContainersStartupProbeHttpGet#httpHeaders",
            },
            "remarks": "HTTP allows repeated headers.",
            "summary": "Custom headers to set in the request.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 33236,
          },
          "name": "httpHeaders",
          "optional": true,
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "fqn": "monitoringcoreoscom.ThanosRulerSpecInitContainersStartupProbeHttpGetHttpHeaders",
              },
              "kind": "array",
            },
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecInitContainersStartupProbeHttpGet#path",
            },
            "summary": "Path to access on the HTTP server.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 33243,
          },
          "name": "path",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecInitContainersStartupProbeHttpGet#scheme",
            },
            "default": "HTTP.",
            "remarks": "Defaults to HTTP.",
            "summary": "Scheme to use for connecting to the host.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 33258,
          },
          "name": "scheme",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
      ],
    },
    "monitoringcoreoscom.ThanosRulerSpecInitContainersStartupProbeHttpGetHttpHeaders": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "ThanosRulerSpecInitContainersStartupProbeHttpGetHttpHeaders",
        },
        "summary": "HTTPHeader describes a custom header to be used in HTTP probes.",
      },
      "fqn": "monitoringcoreoscom.ThanosRulerSpecInitContainersStartupProbeHttpGetHttpHeaders",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 35375,
      },
      "name": "ThanosRulerSpecInitContainersStartupProbeHttpGetHttpHeaders",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecInitContainersStartupProbeHttpGetHttpHeaders#name",
            },
            "summary": "The header field name.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 35381,
          },
          "name": "name",
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecInitContainersStartupProbeHttpGetHttpHeaders#value",
            },
            "summary": "The header field value.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 35388,
          },
          "name": "value",
          "type": Object {
            "primitive": "string",
          },
        },
      ],
    },
    "monitoringcoreoscom.ThanosRulerSpecInitContainersStartupProbeHttpGetPort": Object {
      "assembly": "monitoringcoreoscom",
      "docs": Object {
        "custom": Object {
          "schema": "ThanosRulerSpecInitContainersStartupProbeHttpGetPort",
        },
        "remarks": "Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.",
        "summary": "Name or number of the port to access on the container.",
      },
      "fqn": "monitoringcoreoscom.ThanosRulerSpecInitContainersStartupProbeHttpGetPort",
      "kind": "class",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 35412,
      },
      "methods": Array [
        Object {
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 35413,
          },
          "name": "fromNumber",
          "parameters": Array [
            Object {
              "name": "value",
              "type": Object {
                "primitive": "number",
              },
            },
          ],
          "returns": Object {
            "type": Object {
              "fqn": "monitoringcoreoscom.ThanosRulerSpecInitContainersStartupProbeHttpGetPort",
            },
          },
          "static": true,
        },
        Object {
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 35416,
          },
          "name": "fromString",
          "parameters": Array [
            Object {
              "name": "value",
              "type": Object {
                "primitive": "string",
              },
            },
          ],
          "returns": Object {
            "type": Object {
              "fqn": "monitoringcoreoscom.ThanosRulerSpecInitContainersStartupProbeHttpGetPort",
            },
          },
          "static": true,
        },
      ],
      "name": "ThanosRulerSpecInitContainersStartupProbeHttpGetPort",
      "properties": Array [
        Object {
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 35419,
          },
          "name": "value",
          "type": Object {
            "primitive": "any",
          },
        },
      ],
    },
    "monitoringcoreoscom.ThanosRulerSpecInitContainersStartupProbeTcpSocket": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "ThanosRulerSpecInitContainersStartupProbeTcpSocket",
        },
        "remarks": "TCP hooks not yet supported TODO: implement a realistic TCP lifecycle hook",
        "summary": "TCPSocket specifies an action involving a TCP port.",
      },
      "fqn": "monitoringcoreoscom.ThanosRulerSpecInitContainersStartupProbeTcpSocket",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 33285,
      },
      "name": "ThanosRulerSpecInitContainersStartupProbeTcpSocket",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecInitContainersStartupProbeTcpSocket#port",
            },
            "remarks": "Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.",
            "summary": "Number or name of the port to access on the container.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 33298,
          },
          "name": "port",
          "type": Object {
            "fqn": "monitoringcoreoscom.ThanosRulerSpecInitContainersStartupProbeTcpSocketPort",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecInitContainersStartupProbeTcpSocket#host",
            },
            "summary": "Optional: Host name to connect to, defaults to the pod IP.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 33291,
          },
          "name": "host",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
      ],
    },
    "monitoringcoreoscom.ThanosRulerSpecInitContainersStartupProbeTcpSocketPort": Object {
      "assembly": "monitoringcoreoscom",
      "docs": Object {
        "custom": Object {
          "schema": "ThanosRulerSpecInitContainersStartupProbeTcpSocketPort",
        },
        "remarks": "Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.",
        "summary": "Number or name of the port to access on the container.",
      },
      "fqn": "monitoringcoreoscom.ThanosRulerSpecInitContainersStartupProbeTcpSocketPort",
      "kind": "class",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 35429,
      },
      "methods": Array [
        Object {
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 35430,
          },
          "name": "fromNumber",
          "parameters": Array [
            Object {
              "name": "value",
              "type": Object {
                "primitive": "number",
              },
            },
          ],
          "returns": Object {
            "type": Object {
              "fqn": "monitoringcoreoscom.ThanosRulerSpecInitContainersStartupProbeTcpSocketPort",
            },
          },
          "static": true,
        },
        Object {
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 35433,
          },
          "name": "fromString",
          "parameters": Array [
            Object {
              "name": "value",
              "type": Object {
                "primitive": "string",
              },
            },
          ],
          "returns": Object {
            "type": Object {
              "fqn": "monitoringcoreoscom.ThanosRulerSpecInitContainersStartupProbeTcpSocketPort",
            },
          },
          "static": true,
        },
      ],
      "name": "ThanosRulerSpecInitContainersStartupProbeTcpSocketPort",
      "properties": Array [
        Object {
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 35436,
          },
          "name": "value",
          "type": Object {
            "primitive": "any",
          },
        },
      ],
    },
    "monitoringcoreoscom.ThanosRulerSpecInitContainersVolumeDevices": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "ThanosRulerSpecInitContainersVolumeDevices",
        },
        "summary": "volumeDevice describes a mapping of a raw block device within a container.",
      },
      "fqn": "monitoringcoreoscom.ThanosRulerSpecInitContainersVolumeDevices",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 29426,
      },
      "name": "ThanosRulerSpecInitContainersVolumeDevices",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecInitContainersVolumeDevices#devicePath",
            },
            "summary": "devicePath is the path inside of the container that the device will be mapped to.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 29432,
          },
          "name": "devicePath",
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecInitContainersVolumeDevices#name",
            },
            "summary": "name must match the name of a persistentVolumeClaim in the pod.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 29439,
          },
          "name": "name",
          "type": Object {
            "primitive": "string",
          },
        },
      ],
    },
    "monitoringcoreoscom.ThanosRulerSpecInitContainersVolumeMounts": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "ThanosRulerSpecInitContainersVolumeMounts",
        },
        "summary": "VolumeMount describes a mounting of a Volume within a container.",
      },
      "fqn": "monitoringcoreoscom.ThanosRulerSpecInitContainersVolumeMounts",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 29463,
      },
      "name": "ThanosRulerSpecInitContainersVolumeMounts",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecInitContainersVolumeMounts#mountPath",
            },
            "remarks": "Must not contain ':'.",
            "summary": "Path within the container at which the volume should be mounted.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 29469,
          },
          "name": "mountPath",
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecInitContainersVolumeMounts#name",
            },
            "summary": "This must match the Name of a Volume.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 29483,
          },
          "name": "name",
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecInitContainersVolumeMounts#mountPropagation",
            },
            "remarks": "When not set, MountPropagationNone is used. This field is beta in 1.10.",
            "summary": "mountPropagation determines how mounts are propagated from the host to container and the other way around.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 29476,
          },
          "name": "mountPropagation",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecInitContainersVolumeMounts#readOnly",
            },
            "default": "false.",
            "remarks": "Defaults to false.",
            "summary": "Mounted read-only if true, read-write otherwise (false or unspecified).",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 29491,
          },
          "name": "readOnly",
          "optional": true,
          "type": Object {
            "primitive": "boolean",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecInitContainersVolumeMounts#subPath",
            },
            "default": "volume's root).",
            "remarks": "Defaults to \\"\\" (volume's root).",
            "summary": "Path within the volume from which the container's volume should be mounted.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 29499,
          },
          "name": "subPath",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecInitContainersVolumeMounts#subPathExpr",
            },
            "default": "volume's root). SubPathExpr and SubPath are mutually exclusive.",
            "remarks": "Behaves similarly to SubPath but environment variable references $(VAR_NAME) are expanded using the container's environment. Defaults to \\"\\" (volume's root). SubPathExpr and SubPath are mutually exclusive.",
            "summary": "Expanded path within the volume from which the container's volume should be mounted.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 29507,
          },
          "name": "subPathExpr",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
      ],
    },
    "monitoringcoreoscom.ThanosRulerSpecObjectStorageConfig": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "ThanosRulerSpecObjectStorageConfig",
        },
        "summary": "ObjectStorageConfig configures object storage in Thanos.",
      },
      "fqn": "monitoringcoreoscom.ThanosRulerSpecObjectStorageConfig",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 27142,
      },
      "name": "ThanosRulerSpecObjectStorageConfig",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecObjectStorageConfig#key",
            },
            "remarks": "Must be a valid secret key.",
            "summary": "The key of the secret to select from.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 27148,
          },
          "name": "key",
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecObjectStorageConfig#name",
            },
            "remarks": "More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?",
            "summary": "Name of the referent.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 27155,
          },
          "name": "name",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecObjectStorageConfig#optional",
            },
            "summary": "Specify whether the Secret or its key must be defined.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 27162,
          },
          "name": "optional",
          "optional": true,
          "type": Object {
            "primitive": "boolean",
          },
        },
      ],
    },
    "monitoringcoreoscom.ThanosRulerSpecPodMetadata": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "ThanosRulerSpecPodMetadata",
        },
        "summary": "PodMetadata contains Labels and Annotations gets propagated to the thanos ruler pods.",
      },
      "fqn": "monitoringcoreoscom.ThanosRulerSpecPodMetadata",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 27187,
      },
      "name": "ThanosRulerSpecPodMetadata",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecPodMetadata#annotations",
            },
            "remarks": "They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations",
            "summary": "Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 27193,
          },
          "name": "annotations",
          "optional": true,
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "primitive": "string",
              },
              "kind": "map",
            },
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecPodMetadata#labels",
            },
            "remarks": "May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels",
            "summary": "Map of string keys and values that can be used to organize and categorize (scope and select) objects.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 27200,
          },
          "name": "labels",
          "optional": true,
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "primitive": "string",
              },
              "kind": "map",
            },
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecPodMetadata#name",
            },
            "remarks": "Is required when creating resources, although some resources may allow a client to request the generation of an appropriate name automatically. Name is primarily intended for creation idempotence and configuration definition. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names",
            "summary": "Name must be unique within a namespace.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 27207,
          },
          "name": "name",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
      ],
    },
    "monitoringcoreoscom.ThanosRulerSpecQueryConfig": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "ThanosRulerSpecQueryConfig",
        },
        "remarks": "If this is defined, the QueryEndpoints field will be ignored. Maps to the \`query.config\` CLI argument. Only available with thanos v0.11.0 and higher.",
        "summary": "Define configuration for connecting to thanos query instances.",
      },
      "fqn": "monitoringcoreoscom.ThanosRulerSpecQueryConfig",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 27232,
      },
      "name": "ThanosRulerSpecQueryConfig",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecQueryConfig#key",
            },
            "remarks": "Must be a valid secret key.",
            "summary": "The key of the secret to select from.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 27238,
          },
          "name": "key",
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecQueryConfig#name",
            },
            "remarks": "More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?",
            "summary": "Name of the referent.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 27245,
          },
          "name": "name",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecQueryConfig#optional",
            },
            "summary": "Specify whether the Secret or its key must be defined.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 27252,
          },
          "name": "optional",
          "optional": true,
          "type": Object {
            "primitive": "boolean",
          },
        },
      ],
    },
    "monitoringcoreoscom.ThanosRulerSpecResources": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "ThanosRulerSpecResources",
        },
        "remarks": "If not provided, no requests/limits will be set",
        "summary": "Resources defines the resource requirements for single Pods.",
      },
      "fqn": "monitoringcoreoscom.ThanosRulerSpecResources",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 27277,
      },
      "name": "ThanosRulerSpecResources",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecResources#limits",
            },
            "remarks": "More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/",
            "summary": "Limits describes the maximum amount of compute resources allowed.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 27283,
          },
          "name": "limits",
          "optional": true,
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "primitive": "string",
              },
              "kind": "map",
            },
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecResources#requests",
            },
            "remarks": "If Requests is omitted for a container, it defaults to Limits if that is explicitly specified, otherwise to an implementation-defined value. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/",
            "summary": "Requests describes the minimum amount of compute resources required.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 27290,
          },
          "name": "requests",
          "optional": true,
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "primitive": "string",
              },
              "kind": "map",
            },
          },
        },
      ],
    },
    "monitoringcoreoscom.ThanosRulerSpecRuleNamespaceSelector": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "ThanosRulerSpecRuleNamespaceSelector",
        },
        "remarks": "If unspecified, only the same namespace as the ThanosRuler object is in is used.",
        "summary": "Namespaces to be selected for Rules discovery.",
      },
      "fqn": "monitoringcoreoscom.ThanosRulerSpecRuleNamespaceSelector",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 27314,
      },
      "name": "ThanosRulerSpecRuleNamespaceSelector",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecRuleNamespaceSelector#matchExpressions",
            },
            "remarks": "The requirements are ANDed.",
            "summary": "matchExpressions is a list of label selector requirements.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 27320,
          },
          "name": "matchExpressions",
          "optional": true,
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "fqn": "monitoringcoreoscom.ThanosRulerSpecRuleNamespaceSelectorMatchExpressions",
              },
              "kind": "array",
            },
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecRuleNamespaceSelector#matchLabels",
            },
            "remarks": "A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is \\"key\\", the operator is \\"In\\", and the values array contains only \\"value\\". The requirements are ANDed.",
            "summary": "matchLabels is a map of {key,value} pairs.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 27327,
          },
          "name": "matchLabels",
          "optional": true,
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "primitive": "string",
              },
              "kind": "map",
            },
          },
        },
      ],
    },
    "monitoringcoreoscom.ThanosRulerSpecRuleNamespaceSelectorMatchExpressions": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "ThanosRulerSpecRuleNamespaceSelectorMatchExpressions",
        },
        "summary": "A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.",
      },
      "fqn": "monitoringcoreoscom.ThanosRulerSpecRuleNamespaceSelectorMatchExpressions",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 29535,
      },
      "name": "ThanosRulerSpecRuleNamespaceSelectorMatchExpressions",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecRuleNamespaceSelectorMatchExpressions#key",
            },
            "summary": "key is the label key that the selector applies to.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 29541,
          },
          "name": "key",
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecRuleNamespaceSelectorMatchExpressions#operator",
            },
            "remarks": "Valid operators are In, NotIn, Exists and DoesNotExist.",
            "summary": "operator represents a key's relationship to a set of values.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 29548,
          },
          "name": "operator",
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecRuleNamespaceSelectorMatchExpressions#values",
            },
            "remarks": "If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.",
            "summary": "values is an array of string values.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 29555,
          },
          "name": "values",
          "optional": true,
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "primitive": "string",
              },
              "kind": "array",
            },
          },
        },
      ],
    },
    "monitoringcoreoscom.ThanosRulerSpecRuleSelector": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "ThanosRulerSpecRuleSelector",
        },
        "summary": "A label selector to select which PrometheusRules to mount for alerting and recording.",
      },
      "fqn": "monitoringcoreoscom.ThanosRulerSpecRuleSelector",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 27351,
      },
      "name": "ThanosRulerSpecRuleSelector",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecRuleSelector#matchExpressions",
            },
            "remarks": "The requirements are ANDed.",
            "summary": "matchExpressions is a list of label selector requirements.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 27357,
          },
          "name": "matchExpressions",
          "optional": true,
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "fqn": "monitoringcoreoscom.ThanosRulerSpecRuleSelectorMatchExpressions",
              },
              "kind": "array",
            },
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecRuleSelector#matchLabels",
            },
            "remarks": "A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is \\"key\\", the operator is \\"In\\", and the values array contains only \\"value\\". The requirements are ANDed.",
            "summary": "matchLabels is a map of {key,value} pairs.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 27364,
          },
          "name": "matchLabels",
          "optional": true,
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "primitive": "string",
              },
              "kind": "map",
            },
          },
        },
      ],
    },
    "monitoringcoreoscom.ThanosRulerSpecRuleSelectorMatchExpressions": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "ThanosRulerSpecRuleSelectorMatchExpressions",
        },
        "summary": "A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.",
      },
      "fqn": "monitoringcoreoscom.ThanosRulerSpecRuleSelectorMatchExpressions",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 29580,
      },
      "name": "ThanosRulerSpecRuleSelectorMatchExpressions",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecRuleSelectorMatchExpressions#key",
            },
            "summary": "key is the label key that the selector applies to.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 29586,
          },
          "name": "key",
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecRuleSelectorMatchExpressions#operator",
            },
            "remarks": "Valid operators are In, NotIn, Exists and DoesNotExist.",
            "summary": "operator represents a key's relationship to a set of values.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 29593,
          },
          "name": "operator",
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecRuleSelectorMatchExpressions#values",
            },
            "remarks": "If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.",
            "summary": "values is an array of string values.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 29600,
          },
          "name": "values",
          "optional": true,
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "primitive": "string",
              },
              "kind": "array",
            },
          },
        },
      ],
    },
    "monitoringcoreoscom.ThanosRulerSpecSecurityContext": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "ThanosRulerSpecSecurityContext",
        },
        "remarks": "This defaults to the default PodSecurityContext.",
        "summary": "SecurityContext holds pod-level security attributes and common container settings.",
      },
      "fqn": "monitoringcoreoscom.ThanosRulerSpecSecurityContext",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 27388,
      },
      "name": "ThanosRulerSpecSecurityContext",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecSecurityContext#fsGroup",
            },
            "remarks": "Some volume types allow the Kubelet to change the ownership of that volume to be owned by the pod:
1. The owning GID will be the FSGroup 2. The setgid bit is set (new files created in the volume will be owned by FSGroup) 3. The permission bits are OR'd with rw-rw----
If unset, the Kubelet will not modify the ownership and permissions of any volume.",
            "summary": "A special supplemental group that applies to all containers in a pod.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 27396,
          },
          "name": "fsGroup",
          "optional": true,
          "type": Object {
            "primitive": "number",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecSecurityContext#fsGroupChangePolicy",
            },
            "remarks": "This field will only apply to volume types which support fsGroup based ownership(and permissions). It will have no effect on ephemeral volume types such as: secret, configmaps and emptydir. Valid values are \\"OnRootMismatch\\" and \\"Always\\". If not specified defaults to \\"Always\\".",
            "summary": "fsGroupChangePolicy defines behavior of changing ownership and permission of the volume before being exposed inside Pod.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 27403,
          },
          "name": "fsGroupChangePolicy",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecSecurityContext#runAsGroup",
            },
            "remarks": "Uses runtime default if unset. May also be set in SecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence for that container.",
            "summary": "The GID to run the entrypoint of the container process.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 27410,
          },
          "name": "runAsGroup",
          "optional": true,
          "type": Object {
            "primitive": "number",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecSecurityContext#runAsNonRoot",
            },
            "remarks": "If true, the Kubelet will validate the image at runtime to ensure that it does not run as UID 0 (root) and fail to start the container if it does. If unset or false, no such validation will be performed. May also be set in SecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.",
            "summary": "Indicates that the container must run as a non-root user.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 27417,
          },
          "name": "runAsNonRoot",
          "optional": true,
          "type": Object {
            "primitive": "boolean",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecSecurityContext#runAsUser",
            },
            "default": "user specified in image metadata if unspecified. May also be set in SecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence for that container.",
            "remarks": "Defaults to user specified in image metadata if unspecified. May also be set in SecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence for that container.",
            "summary": "The UID to run the entrypoint of the container process.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 27425,
          },
          "name": "runAsUser",
          "optional": true,
          "type": Object {
            "primitive": "number",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecSecurityContext#seLinuxOptions",
            },
            "remarks": "If unspecified, the container runtime will allocate a random SELinux context for each container.  May also be set in SecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence for that container.",
            "summary": "The SELinux context to be applied to all containers.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 27432,
          },
          "name": "seLinuxOptions",
          "optional": true,
          "type": Object {
            "fqn": "monitoringcoreoscom.ThanosRulerSpecSecurityContextSeLinuxOptions",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecSecurityContext#supplementalGroups",
            },
            "remarks": "If unspecified, no groups will be added to any container.",
            "summary": "A list of groups applied to the first process run in each container, in addition to the container's primary GID.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 27439,
          },
          "name": "supplementalGroups",
          "optional": true,
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "primitive": "number",
              },
              "kind": "array",
            },
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecSecurityContext#sysctls",
            },
            "remarks": "Pods with unsupported sysctls (by the container runtime) might fail to launch.",
            "summary": "Sysctls hold a list of namespaced sysctls used for the pod.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 27446,
          },
          "name": "sysctls",
          "optional": true,
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "fqn": "monitoringcoreoscom.ThanosRulerSpecSecurityContextSysctls",
              },
              "kind": "array",
            },
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecSecurityContext#windowsOptions",
            },
            "remarks": "If unspecified, the options within a container's SecurityContext will be used. If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.",
            "summary": "The Windows specific settings applied to all containers.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 27453,
          },
          "name": "windowsOptions",
          "optional": true,
          "type": Object {
            "fqn": "monitoringcoreoscom.ThanosRulerSpecSecurityContextWindowsOptions",
          },
        },
      ],
    },
    "monitoringcoreoscom.ThanosRulerSpecSecurityContextSeLinuxOptions": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "ThanosRulerSpecSecurityContextSeLinuxOptions",
        },
        "remarks": "If unspecified, the container runtime will allocate a random SELinux context for each container.  May also be set in SecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence for that container.",
        "summary": "The SELinux context to be applied to all containers.",
      },
      "fqn": "monitoringcoreoscom.ThanosRulerSpecSecurityContextSeLinuxOptions",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 29625,
      },
      "name": "ThanosRulerSpecSecurityContextSeLinuxOptions",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecSecurityContextSeLinuxOptions#level",
            },
            "summary": "Level is SELinux level label that applies to the container.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 29631,
          },
          "name": "level",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecSecurityContextSeLinuxOptions#role",
            },
            "summary": "Role is a SELinux role label that applies to the container.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 29638,
          },
          "name": "role",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecSecurityContextSeLinuxOptions#type",
            },
            "summary": "Type is a SELinux type label that applies to the container.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 29645,
          },
          "name": "type",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecSecurityContextSeLinuxOptions#user",
            },
            "summary": "User is a SELinux user label that applies to the container.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 29652,
          },
          "name": "user",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
      ],
    },
    "monitoringcoreoscom.ThanosRulerSpecSecurityContextSysctls": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "ThanosRulerSpecSecurityContextSysctls",
        },
        "summary": "Sysctl defines a kernel parameter to be set.",
      },
      "fqn": "monitoringcoreoscom.ThanosRulerSpecSecurityContextSysctls",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 29678,
      },
      "name": "ThanosRulerSpecSecurityContextSysctls",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecSecurityContextSysctls#name",
            },
            "summary": "Name of a property to set.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 29684,
          },
          "name": "name",
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecSecurityContextSysctls#value",
            },
            "summary": "Value of a property to set.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 29691,
          },
          "name": "value",
          "type": Object {
            "primitive": "string",
          },
        },
      ],
    },
    "monitoringcoreoscom.ThanosRulerSpecSecurityContextWindowsOptions": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "ThanosRulerSpecSecurityContextWindowsOptions",
        },
        "remarks": "If unspecified, the options within a container's SecurityContext will be used. If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.",
        "summary": "The Windows specific settings applied to all containers.",
      },
      "fqn": "monitoringcoreoscom.ThanosRulerSpecSecurityContextWindowsOptions",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 29715,
      },
      "name": "ThanosRulerSpecSecurityContextWindowsOptions",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecSecurityContextWindowsOptions#gmsaCredentialSpec",
            },
            "summary": "GMSACredentialSpec is where the GMSA admission webhook (https://github.com/kubernetes-sigs/windows-gmsa) inlines the contents of the GMSA credential spec named by the GMSACredentialSpecName field.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 29721,
          },
          "name": "gmsaCredentialSpec",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecSecurityContextWindowsOptions#gmsaCredentialSpecName",
            },
            "summary": "GMSACredentialSpecName is the name of the GMSA credential spec to use.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 29728,
          },
          "name": "gmsaCredentialSpecName",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecSecurityContextWindowsOptions#runAsUserName",
            },
            "default": "the user specified in image metadata if unspecified. May also be set in PodSecurityContext. If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.",
            "remarks": "Defaults to the user specified in image metadata if unspecified. May also be set in PodSecurityContext. If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.",
            "summary": "The UserName in Windows to run the entrypoint of the container process.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 29736,
          },
          "name": "runAsUserName",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
      ],
    },
    "monitoringcoreoscom.ThanosRulerSpecStorage": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "ThanosRulerSpecStorage",
        },
        "summary": "Storage spec to specify how storage shall be used.",
      },
      "fqn": "monitoringcoreoscom.ThanosRulerSpecStorage",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 27484,
      },
      "name": "ThanosRulerSpecStorage",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecStorage#disableMountSubPath",
            },
            "remarks": "DisableMountSubPath allows to remove any subPath usage in volume mounts.",
            "summary": "Deprecated: subPath usage will be disabled by default in a future release, this option will become unnecessary.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 27490,
          },
          "name": "disableMountSubPath",
          "optional": true,
          "type": Object {
            "primitive": "boolean",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecStorage#emptyDir",
            },
            "remarks": "If specified, used in place of any volumeClaimTemplate. More info: https://kubernetes.io/docs/concepts/storage/volumes/#emptydir",
            "summary": "EmptyDirVolumeSource to be used by the Prometheus StatefulSets.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 27497,
          },
          "name": "emptyDir",
          "optional": true,
          "type": Object {
            "fqn": "monitoringcoreoscom.ThanosRulerSpecStorageEmptyDir",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecStorage#volumeClaimTemplate",
            },
            "summary": "A PVC spec to be used by the Prometheus StatefulSets.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 27504,
          },
          "name": "volumeClaimTemplate",
          "optional": true,
          "type": Object {
            "fqn": "monitoringcoreoscom.ThanosRulerSpecStorageVolumeClaimTemplate",
          },
        },
      ],
    },
    "monitoringcoreoscom.ThanosRulerSpecStorageEmptyDir": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "ThanosRulerSpecStorageEmptyDir",
        },
        "remarks": "If specified, used in place of any volumeClaimTemplate. More info: https://kubernetes.io/docs/concepts/storage/volumes/#emptydir",
        "summary": "EmptyDirVolumeSource to be used by the Prometheus StatefulSets.",
      },
      "fqn": "monitoringcoreoscom.ThanosRulerSpecStorageEmptyDir",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 29761,
      },
      "name": "ThanosRulerSpecStorageEmptyDir",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecStorageEmptyDir#medium",
            },
            "remarks": "The default is \\"\\" which means to use the node's default medium. Must be an empty string (default) or Memory. More info: https://kubernetes.io/docs/concepts/storage/volumes#emptydir",
            "summary": "What type of storage medium should back this directory.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 29767,
          },
          "name": "medium",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecStorageEmptyDir#sizeLimit",
            },
            "remarks": "The size limit is also applicable for memory medium. The maximum usage on memory medium EmptyDir would be the minimum value between the SizeLimit specified here and the sum of memory limits of all containers in a pod. The default is nil which means that the limit is undefined. More info: http://kubernetes.io/docs/user-guide/volumes#emptydir",
            "summary": "Total amount of local storage required for this EmptyDir volume.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 29774,
          },
          "name": "sizeLimit",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
      ],
    },
    "monitoringcoreoscom.ThanosRulerSpecStorageVolumeClaimTemplate": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "ThanosRulerSpecStorageVolumeClaimTemplate",
        },
        "summary": "A PVC spec to be used by the Prometheus StatefulSets.",
      },
      "fqn": "monitoringcoreoscom.ThanosRulerSpecStorageVolumeClaimTemplate",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 29798,
      },
      "name": "ThanosRulerSpecStorageVolumeClaimTemplate",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecStorageVolumeClaimTemplate#apiVersion",
            },
            "remarks": "Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
            "summary": "APIVersion defines the versioned schema of this representation of an object.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 29804,
          },
          "name": "apiVersion",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecStorageVolumeClaimTemplate#kind",
            },
            "remarks": "Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
            "summary": "Kind is a string value representing the REST resource this object represents.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 29811,
          },
          "name": "kind",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecStorageVolumeClaimTemplate#metadata",
            },
            "summary": "EmbeddedMetadata contains metadata relevant to an EmbeddedResource.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 29818,
          },
          "name": "metadata",
          "optional": true,
          "type": Object {
            "fqn": "monitoringcoreoscom.ThanosRulerSpecStorageVolumeClaimTemplateMetadata",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecStorageVolumeClaimTemplate#spec",
            },
            "remarks": "More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims",
            "summary": "Spec defines the desired characteristics of a volume requested by a pod author.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 29825,
          },
          "name": "spec",
          "optional": true,
          "type": Object {
            "fqn": "monitoringcoreoscom.ThanosRulerSpecStorageVolumeClaimTemplateSpec",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecStorageVolumeClaimTemplate#status",
            },
            "remarks": "Read-only. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims",
            "summary": "Status represents the current information/status of a persistent volume claim.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 29832,
          },
          "name": "status",
          "optional": true,
          "type": Object {
            "fqn": "monitoringcoreoscom.ThanosRulerSpecStorageVolumeClaimTemplateStatus",
          },
        },
      ],
    },
    "monitoringcoreoscom.ThanosRulerSpecStorageVolumeClaimTemplateMetadata": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "ThanosRulerSpecStorageVolumeClaimTemplateMetadata",
        },
        "summary": "EmbeddedMetadata contains metadata relevant to an EmbeddedResource.",
      },
      "fqn": "monitoringcoreoscom.ThanosRulerSpecStorageVolumeClaimTemplateMetadata",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 33322,
      },
      "name": "ThanosRulerSpecStorageVolumeClaimTemplateMetadata",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecStorageVolumeClaimTemplateMetadata#annotations",
            },
            "remarks": "They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations",
            "summary": "Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 33328,
          },
          "name": "annotations",
          "optional": true,
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "primitive": "string",
              },
              "kind": "map",
            },
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecStorageVolumeClaimTemplateMetadata#labels",
            },
            "remarks": "May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels",
            "summary": "Map of string keys and values that can be used to organize and categorize (scope and select) objects.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 33335,
          },
          "name": "labels",
          "optional": true,
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "primitive": "string",
              },
              "kind": "map",
            },
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecStorageVolumeClaimTemplateMetadata#name",
            },
            "remarks": "Is required when creating resources, although some resources may allow a client to request the generation of an appropriate name automatically. Name is primarily intended for creation idempotence and configuration definition. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names",
            "summary": "Name must be unique within a namespace.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 33342,
          },
          "name": "name",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
      ],
    },
    "monitoringcoreoscom.ThanosRulerSpecStorageVolumeClaimTemplateSpec": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "ThanosRulerSpecStorageVolumeClaimTemplateSpec",
        },
        "remarks": "More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims",
        "summary": "Spec defines the desired characteristics of a volume requested by a pod author.",
      },
      "fqn": "monitoringcoreoscom.ThanosRulerSpecStorageVolumeClaimTemplateSpec",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 33367,
      },
      "name": "ThanosRulerSpecStorageVolumeClaimTemplateSpec",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecStorageVolumeClaimTemplateSpec#accessModes",
            },
            "remarks": "More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#access-modes-1",
            "summary": "AccessModes contains the desired access modes the volume should have.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 33373,
          },
          "name": "accessModes",
          "optional": true,
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "primitive": "string",
              },
              "kind": "array",
            },
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecStorageVolumeClaimTemplateSpec#dataSource",
            },
            "summary": "This field can be used to specify either: * An existing VolumeSnapshot object (snapshot.storage.k8s.io/VolumeSnapshot - Beta) * An existing PVC (PersistentVolumeClaim) * An existing custom resource/object that implements data population (Alpha) In order to use VolumeSnapshot object types, the appropriate feature gate must be enabled (VolumeSnapshotDataSource or AnyVolumeDataSource) If the provisioner or an external controller can support the specified data source, it will create a new volume based on the contents of the specified data source. If the specified data source is not supported, the volume will not be created and the failure will be reported as an event. In the future, we plan to support more data source types and the behavior of the provisioner may change.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 33380,
          },
          "name": "dataSource",
          "optional": true,
          "type": Object {
            "fqn": "monitoringcoreoscom.ThanosRulerSpecStorageVolumeClaimTemplateSpecDataSource",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecStorageVolumeClaimTemplateSpec#resources",
            },
            "remarks": "More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#resources",
            "summary": "Resources represents the minimum resources the volume should have.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 33387,
          },
          "name": "resources",
          "optional": true,
          "type": Object {
            "fqn": "monitoringcoreoscom.ThanosRulerSpecStorageVolumeClaimTemplateSpecResources",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecStorageVolumeClaimTemplateSpec#selector",
            },
            "summary": "A label query over volumes to consider for binding.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 33394,
          },
          "name": "selector",
          "optional": true,
          "type": Object {
            "fqn": "monitoringcoreoscom.ThanosRulerSpecStorageVolumeClaimTemplateSpecSelector",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecStorageVolumeClaimTemplateSpec#storageClassName",
            },
            "remarks": "More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#class-1",
            "summary": "Name of the StorageClass required by the claim.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 33401,
          },
          "name": "storageClassName",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecStorageVolumeClaimTemplateSpec#volumeMode",
            },
            "remarks": "Value of Filesystem is implied when not included in claim spec.",
            "summary": "volumeMode defines what type of volume is required by the claim.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 33408,
          },
          "name": "volumeMode",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecStorageVolumeClaimTemplateSpec#volumeName",
            },
            "summary": "VolumeName is the binding reference to the PersistentVolume backing this claim.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 33415,
          },
          "name": "volumeName",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
      ],
    },
    "monitoringcoreoscom.ThanosRulerSpecStorageVolumeClaimTemplateSpecDataSource": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "ThanosRulerSpecStorageVolumeClaimTemplateSpecDataSource",
        },
        "summary": "This field can be used to specify either: * An existing VolumeSnapshot object (snapshot.storage.k8s.io/VolumeSnapshot - Beta) * An existing PVC (PersistentVolumeClaim) * An existing custom resource/object that implements data population (Alpha) In order to use VolumeSnapshot object types, the appropriate feature gate must be enabled (VolumeSnapshotDataSource or AnyVolumeDataSource) If the provisioner or an external controller can support the specified data source, it will create a new volume based on the contents of the specified data source. If the specified data source is not supported, the volume will not be created and the failure will be reported as an event. In the future, we plan to support more data source types and the behavior of the provisioner may change.",
      },
      "fqn": "monitoringcoreoscom.ThanosRulerSpecStorageVolumeClaimTemplateSpecDataSource",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 35446,
      },
      "name": "ThanosRulerSpecStorageVolumeClaimTemplateSpecDataSource",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecStorageVolumeClaimTemplateSpecDataSource#kind",
            },
            "summary": "Kind is the type of resource being referenced.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 35459,
          },
          "name": "kind",
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecStorageVolumeClaimTemplateSpecDataSource#name",
            },
            "summary": "Name is the name of resource being referenced.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 35466,
          },
          "name": "name",
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecStorageVolumeClaimTemplateSpecDataSource#apiGroup",
            },
            "remarks": "If APIGroup is not specified, the specified Kind must be in the core API group. For any other third-party types, APIGroup is required.",
            "summary": "APIGroup is the group for the resource being referenced.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 35452,
          },
          "name": "apiGroup",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
      ],
    },
    "monitoringcoreoscom.ThanosRulerSpecStorageVolumeClaimTemplateSpecResources": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "ThanosRulerSpecStorageVolumeClaimTemplateSpecResources",
        },
        "remarks": "More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#resources",
        "summary": "Resources represents the minimum resources the volume should have.",
      },
      "fqn": "monitoringcoreoscom.ThanosRulerSpecStorageVolumeClaimTemplateSpecResources",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 35491,
      },
      "name": "ThanosRulerSpecStorageVolumeClaimTemplateSpecResources",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecStorageVolumeClaimTemplateSpecResources#limits",
            },
            "remarks": "More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/",
            "summary": "Limits describes the maximum amount of compute resources allowed.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 35497,
          },
          "name": "limits",
          "optional": true,
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "primitive": "string",
              },
              "kind": "map",
            },
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecStorageVolumeClaimTemplateSpecResources#requests",
            },
            "remarks": "If Requests is omitted for a container, it defaults to Limits if that is explicitly specified, otherwise to an implementation-defined value. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/",
            "summary": "Requests describes the minimum amount of compute resources required.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 35504,
          },
          "name": "requests",
          "optional": true,
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "primitive": "string",
              },
              "kind": "map",
            },
          },
        },
      ],
    },
    "monitoringcoreoscom.ThanosRulerSpecStorageVolumeClaimTemplateSpecSelector": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "ThanosRulerSpecStorageVolumeClaimTemplateSpecSelector",
        },
        "summary": "A label query over volumes to consider for binding.",
      },
      "fqn": "monitoringcoreoscom.ThanosRulerSpecStorageVolumeClaimTemplateSpecSelector",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 35528,
      },
      "name": "ThanosRulerSpecStorageVolumeClaimTemplateSpecSelector",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecStorageVolumeClaimTemplateSpecSelector#matchExpressions",
            },
            "remarks": "The requirements are ANDed.",
            "summary": "matchExpressions is a list of label selector requirements.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 35534,
          },
          "name": "matchExpressions",
          "optional": true,
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "fqn": "monitoringcoreoscom.ThanosRulerSpecStorageVolumeClaimTemplateSpecSelectorMatchExpressions",
              },
              "kind": "array",
            },
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecStorageVolumeClaimTemplateSpecSelector#matchLabels",
            },
            "remarks": "A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is \\"key\\", the operator is \\"In\\", and the values array contains only \\"value\\". The requirements are ANDed.",
            "summary": "matchLabels is a map of {key,value} pairs.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 35541,
          },
          "name": "matchLabels",
          "optional": true,
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "primitive": "string",
              },
              "kind": "map",
            },
          },
        },
      ],
    },
    "monitoringcoreoscom.ThanosRulerSpecStorageVolumeClaimTemplateSpecSelectorMatchExpressions": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "ThanosRulerSpecStorageVolumeClaimTemplateSpecSelectorMatchExpressions",
        },
        "summary": "A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.",
      },
      "fqn": "monitoringcoreoscom.ThanosRulerSpecStorageVolumeClaimTemplateSpecSelectorMatchExpressions",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 36507,
      },
      "name": "ThanosRulerSpecStorageVolumeClaimTemplateSpecSelectorMatchExpressions",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecStorageVolumeClaimTemplateSpecSelectorMatchExpressions#key",
            },
            "summary": "key is the label key that the selector applies to.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 36513,
          },
          "name": "key",
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecStorageVolumeClaimTemplateSpecSelectorMatchExpressions#operator",
            },
            "remarks": "Valid operators are In, NotIn, Exists and DoesNotExist.",
            "summary": "operator represents a key's relationship to a set of values.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 36520,
          },
          "name": "operator",
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecStorageVolumeClaimTemplateSpecSelectorMatchExpressions#values",
            },
            "remarks": "If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.",
            "summary": "values is an array of string values.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 36527,
          },
          "name": "values",
          "optional": true,
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "primitive": "string",
              },
              "kind": "array",
            },
          },
        },
      ],
    },
    "monitoringcoreoscom.ThanosRulerSpecStorageVolumeClaimTemplateStatus": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "ThanosRulerSpecStorageVolumeClaimTemplateStatus",
        },
        "remarks": "Read-only. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims",
        "summary": "Status represents the current information/status of a persistent volume claim.",
      },
      "fqn": "monitoringcoreoscom.ThanosRulerSpecStorageVolumeClaimTemplateStatus",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 33444,
      },
      "name": "ThanosRulerSpecStorageVolumeClaimTemplateStatus",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecStorageVolumeClaimTemplateStatus#accessModes",
            },
            "remarks": "More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#access-modes-1",
            "summary": "AccessModes contains the actual access modes the volume backing the PVC has.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 33450,
          },
          "name": "accessModes",
          "optional": true,
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "primitive": "string",
              },
              "kind": "array",
            },
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecStorageVolumeClaimTemplateStatus#capacity",
            },
            "summary": "Represents the actual resources of the underlying volume.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 33457,
          },
          "name": "capacity",
          "optional": true,
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "primitive": "string",
              },
              "kind": "map",
            },
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecStorageVolumeClaimTemplateStatus#conditions",
            },
            "remarks": "If underlying persistent volume is being resized then the Condition will be set to 'ResizeStarted'.",
            "summary": "Current Condition of persistent volume claim.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 33464,
          },
          "name": "conditions",
          "optional": true,
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "fqn": "monitoringcoreoscom.ThanosRulerSpecStorageVolumeClaimTemplateStatusConditions",
              },
              "kind": "array",
            },
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecStorageVolumeClaimTemplateStatus#phase",
            },
            "summary": "Phase represents the current phase of PersistentVolumeClaim.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 33471,
          },
          "name": "phase",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
      ],
    },
    "monitoringcoreoscom.ThanosRulerSpecStorageVolumeClaimTemplateStatusConditions": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "ThanosRulerSpecStorageVolumeClaimTemplateStatusConditions",
        },
        "summary": "PersistentVolumeClaimCondition contails details about state of pvc.",
      },
      "fqn": "monitoringcoreoscom.ThanosRulerSpecStorageVolumeClaimTemplateStatusConditions",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 35565,
      },
      "name": "ThanosRulerSpecStorageVolumeClaimTemplateStatusConditions",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecStorageVolumeClaimTemplateStatusConditions#status",
            },
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 35597,
          },
          "name": "status",
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecStorageVolumeClaimTemplateStatusConditions#type",
            },
            "summary": "PersistentVolumeClaimConditionType is a valid value of PersistentVolumeClaimCondition.Type.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 35604,
          },
          "name": "type",
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecStorageVolumeClaimTemplateStatusConditions#lastProbeTime",
            },
            "summary": "Last time we probed the condition.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 35571,
          },
          "name": "lastProbeTime",
          "optional": true,
          "type": Object {
            "primitive": "date",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecStorageVolumeClaimTemplateStatusConditions#lastTransitionTime",
            },
            "summary": "Last time the condition transitioned from one status to another.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 35578,
          },
          "name": "lastTransitionTime",
          "optional": true,
          "type": Object {
            "primitive": "date",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecStorageVolumeClaimTemplateStatusConditions#message",
            },
            "summary": "Human-readable message indicating details about last transition.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 35585,
          },
          "name": "message",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecStorageVolumeClaimTemplateStatusConditions#reason",
            },
            "remarks": "If it reports \\"ResizeStarted\\" that means the underlying persistent volume is being resized.",
            "summary": "Unique, this should be a short, machine understandable string that gives the reason for condition's last transition.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 35592,
          },
          "name": "reason",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
      ],
    },
    "monitoringcoreoscom.ThanosRulerSpecTolerations": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "ThanosRulerSpecTolerations",
        },
        "summary": "The pod this Toleration is attached to tolerates any taint that matches the triple <key,value,effect> using the matching operator <operator>.",
      },
      "fqn": "monitoringcoreoscom.ThanosRulerSpecTolerations",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 27529,
      },
      "name": "ThanosRulerSpecTolerations",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecTolerations#effect",
            },
            "remarks": "Empty means match all taint effects. When specified, allowed values are NoSchedule, PreferNoSchedule and NoExecute.",
            "summary": "Effect indicates the taint effect to match.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 27535,
          },
          "name": "effect",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecTolerations#key",
            },
            "remarks": "Empty means match all taint keys. If the key is empty, operator must be Exists; this combination means to match all values and all keys.",
            "summary": "Key is the taint key that the toleration applies to.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 27542,
          },
          "name": "key",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecTolerations#operator",
            },
            "default": "Equal. Exists is equivalent to wildcard for value, so that a pod can tolerate all taints of a particular category.",
            "remarks": "Valid operators are Exists and Equal. Defaults to Equal. Exists is equivalent to wildcard for value, so that a pod can tolerate all taints of a particular category.",
            "summary": "Operator represents a key's relationship to the value.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 27550,
          },
          "name": "operator",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecTolerations#tolerationSeconds",
            },
            "remarks": "By default, it is not set, which means tolerate the taint forever (do not evict). Zero and negative values will be treated as 0 (evict immediately) by the system.",
            "summary": "TolerationSeconds represents the period of time the toleration (which must be of effect NoExecute, otherwise this field is ignored) tolerates the taint.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 27557,
          },
          "name": "tolerationSeconds",
          "optional": true,
          "type": Object {
            "primitive": "number",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecTolerations#value",
            },
            "remarks": "If the operator is Exists, the value should be empty, otherwise just a regular string.",
            "summary": "Value is the taint value the toleration matches to.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 27564,
          },
          "name": "value",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
      ],
    },
    "monitoringcoreoscom.ThanosRulerSpecTracingConfig": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "ThanosRulerSpecTracingConfig",
        },
        "remarks": "This is an experimental feature, it may change in any upcoming release in a breaking way.",
        "summary": "TracingConfig configures tracing in Thanos.",
      },
      "fqn": "monitoringcoreoscom.ThanosRulerSpecTracingConfig",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 27591,
      },
      "name": "ThanosRulerSpecTracingConfig",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecTracingConfig#key",
            },
            "remarks": "Must be a valid secret key.",
            "summary": "The key of the secret to select from.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 27597,
          },
          "name": "key",
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecTracingConfig#name",
            },
            "remarks": "More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?",
            "summary": "Name of the referent.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 27604,
          },
          "name": "name",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecTracingConfig#optional",
            },
            "summary": "Specify whether the Secret or its key must be defined.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 27611,
          },
          "name": "optional",
          "optional": true,
          "type": Object {
            "primitive": "boolean",
          },
        },
      ],
    },
    "monitoringcoreoscom.ThanosRulerSpecVolumes": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "ThanosRulerSpecVolumes",
        },
        "summary": "Volume represents a named volume in a pod that may be accessed by any container in the pod.",
      },
      "fqn": "monitoringcoreoscom.ThanosRulerSpecVolumes",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 27636,
      },
      "name": "ThanosRulerSpecVolumes",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecVolumes#name",
            },
            "remarks": "Must be a DNS_LABEL and unique within the pod. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
            "summary": "Volume's name.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 27761,
          },
          "name": "name",
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecVolumes#awsElasticBlockStore",
            },
            "remarks": "More info: https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore",
            "summary": "AWSElasticBlockStore represents an AWS Disk resource that is attached to a kubelet's host machine and then exposed to the pod.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 27642,
          },
          "name": "awsElasticBlockStore",
          "optional": true,
          "type": Object {
            "fqn": "monitoringcoreoscom.ThanosRulerSpecVolumesAwsElasticBlockStore",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecVolumes#azureDisk",
            },
            "summary": "AzureDisk represents an Azure Data Disk mount on the host and bind mount to the pod.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 27649,
          },
          "name": "azureDisk",
          "optional": true,
          "type": Object {
            "fqn": "monitoringcoreoscom.ThanosRulerSpecVolumesAzureDisk",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecVolumes#azureFile",
            },
            "summary": "AzureFile represents an Azure File Service mount on the host and bind mount to the pod.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 27656,
          },
          "name": "azureFile",
          "optional": true,
          "type": Object {
            "fqn": "monitoringcoreoscom.ThanosRulerSpecVolumesAzureFile",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecVolumes#cephfs",
            },
            "summary": "CephFS represents a Ceph FS mount on the host that shares a pod's lifetime.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 27663,
          },
          "name": "cephfs",
          "optional": true,
          "type": Object {
            "fqn": "monitoringcoreoscom.ThanosRulerSpecVolumesCephfs",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecVolumes#cinder",
            },
            "remarks": "More info: https://examples.k8s.io/mysql-cinder-pd/README.md",
            "summary": "Cinder represents a cinder volume attached and mounted on kubelets host machine.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 27670,
          },
          "name": "cinder",
          "optional": true,
          "type": Object {
            "fqn": "monitoringcoreoscom.ThanosRulerSpecVolumesCinder",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecVolumes#configMap",
            },
            "summary": "ConfigMap represents a configMap that should populate this volume.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 27677,
          },
          "name": "configMap",
          "optional": true,
          "type": Object {
            "fqn": "monitoringcoreoscom.ThanosRulerSpecVolumesConfigMap",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecVolumes#csi",
            },
            "summary": "CSI (Container Storage Interface) represents storage that is handled by an external CSI driver (Alpha feature).",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 27684,
          },
          "name": "csi",
          "optional": true,
          "type": Object {
            "fqn": "monitoringcoreoscom.ThanosRulerSpecVolumesCsi",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecVolumes#downwardAPI",
            },
            "summary": "DownwardAPI represents downward API about the pod that should populate this volume.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 27691,
          },
          "name": "downwardApi",
          "optional": true,
          "type": Object {
            "fqn": "monitoringcoreoscom.ThanosRulerSpecVolumesDownwardApi",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecVolumes#emptyDir",
            },
            "remarks": "More info: https://kubernetes.io/docs/concepts/storage/volumes#emptydir",
            "summary": "EmptyDir represents a temporary directory that shares a pod's lifetime.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 27698,
          },
          "name": "emptyDir",
          "optional": true,
          "type": Object {
            "fqn": "monitoringcoreoscom.ThanosRulerSpecVolumesEmptyDir",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecVolumes#fc",
            },
            "summary": "FC represents a Fibre Channel resource that is attached to a kubelet's host machine and then exposed to the pod.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 27705,
          },
          "name": "fc",
          "optional": true,
          "type": Object {
            "fqn": "monitoringcoreoscom.ThanosRulerSpecVolumesFc",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecVolumes#flexVolume",
            },
            "summary": "FlexVolume represents a generic volume resource that is provisioned/attached using an exec based plugin.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 27712,
          },
          "name": "flexVolume",
          "optional": true,
          "type": Object {
            "fqn": "monitoringcoreoscom.ThanosRulerSpecVolumesFlexVolume",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecVolumes#flocker",
            },
            "remarks": "This depends on the Flocker control service being running",
            "summary": "Flocker represents a Flocker volume attached to a kubelet's host machine.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 27719,
          },
          "name": "flocker",
          "optional": true,
          "type": Object {
            "fqn": "monitoringcoreoscom.ThanosRulerSpecVolumesFlocker",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecVolumes#gcePersistentDisk",
            },
            "remarks": "More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk",
            "summary": "GCEPersistentDisk represents a GCE Disk resource that is attached to a kubelet's host machine and then exposed to the pod.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 27726,
          },
          "name": "gcePersistentDisk",
          "optional": true,
          "type": Object {
            "fqn": "monitoringcoreoscom.ThanosRulerSpecVolumesGcePersistentDisk",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecVolumes#gitRepo",
            },
            "remarks": "DEPRECATED: GitRepo is deprecated. To provision a container with a git repo, mount an EmptyDir into an InitContainer that clones the repo using git, then mount the EmptyDir into the Pod's container.",
            "summary": "GitRepo represents a git repository at a particular revision.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 27733,
          },
          "name": "gitRepo",
          "optional": true,
          "type": Object {
            "fqn": "monitoringcoreoscom.ThanosRulerSpecVolumesGitRepo",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecVolumes#glusterfs",
            },
            "remarks": "More info: https://examples.k8s.io/volumes/glusterfs/README.md",
            "summary": "Glusterfs represents a Glusterfs mount on the host that shares a pod's lifetime.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 27740,
          },
          "name": "glusterfs",
          "optional": true,
          "type": Object {
            "fqn": "monitoringcoreoscom.ThanosRulerSpecVolumesGlusterfs",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecVolumes#hostPath",
            },
            "remarks": "This is generally used for system agents or other privileged things that are allowed to see the host machine. Most containers will NOT need this. More info: https://kubernetes.io/docs/concepts/storage/volumes#hostpath --- TODO(jonesdl) We need to restrict who can use host directory mounts and who can/can not mount host directories as read/write.",
            "summary": "HostPath represents a pre-existing file or directory on the host machine that is directly exposed to the container.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 27747,
          },
          "name": "hostPath",
          "optional": true,
          "type": Object {
            "fqn": "monitoringcoreoscom.ThanosRulerSpecVolumesHostPath",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecVolumes#iscsi",
            },
            "remarks": "More info: https://examples.k8s.io/volumes/iscsi/README.md",
            "summary": "ISCSI represents an ISCSI Disk resource that is attached to a kubelet's host machine and then exposed to the pod.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 27754,
          },
          "name": "iscsi",
          "optional": true,
          "type": Object {
            "fqn": "monitoringcoreoscom.ThanosRulerSpecVolumesIscsi",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecVolumes#nfs",
            },
            "summary": "NFS represents an NFS mount on the host that shares a pod's lifetime More info: https://kubernetes.io/docs/concepts/storage/volumes#nfs.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 27768,
          },
          "name": "nfs",
          "optional": true,
          "type": Object {
            "fqn": "monitoringcoreoscom.ThanosRulerSpecVolumesNfs",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecVolumes#persistentVolumeClaim",
            },
            "remarks": "More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims",
            "summary": "PersistentVolumeClaimVolumeSource represents a reference to a PersistentVolumeClaim in the same namespace.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 27775,
          },
          "name": "persistentVolumeClaim",
          "optional": true,
          "type": Object {
            "fqn": "monitoringcoreoscom.ThanosRulerSpecVolumesPersistentVolumeClaim",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecVolumes#photonPersistentDisk",
            },
            "summary": "PhotonPersistentDisk represents a PhotonController persistent disk attached and mounted on kubelets host machine.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 27782,
          },
          "name": "photonPersistentDisk",
          "optional": true,
          "type": Object {
            "fqn": "monitoringcoreoscom.ThanosRulerSpecVolumesPhotonPersistentDisk",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecVolumes#portworxVolume",
            },
            "summary": "PortworxVolume represents a portworx volume attached and mounted on kubelets host machine.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 27789,
          },
          "name": "portworxVolume",
          "optional": true,
          "type": Object {
            "fqn": "monitoringcoreoscom.ThanosRulerSpecVolumesPortworxVolume",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecVolumes#projected",
            },
            "summary": "Items for all in one resources secrets, configmaps, and downward API.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 27796,
          },
          "name": "projected",
          "optional": true,
          "type": Object {
            "fqn": "monitoringcoreoscom.ThanosRulerSpecVolumesProjected",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecVolumes#quobyte",
            },
            "summary": "Quobyte represents a Quobyte mount on the host that shares a pod's lifetime.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 27803,
          },
          "name": "quobyte",
          "optional": true,
          "type": Object {
            "fqn": "monitoringcoreoscom.ThanosRulerSpecVolumesQuobyte",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecVolumes#rbd",
            },
            "remarks": "More info: https://examples.k8s.io/volumes/rbd/README.md",
            "summary": "RBD represents a Rados Block Device mount on the host that shares a pod's lifetime.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 27810,
          },
          "name": "rbd",
          "optional": true,
          "type": Object {
            "fqn": "monitoringcoreoscom.ThanosRulerSpecVolumesRbd",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecVolumes#scaleIO",
            },
            "summary": "ScaleIO represents a ScaleIO persistent volume attached and mounted on Kubernetes nodes.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 27817,
          },
          "name": "scaleIo",
          "optional": true,
          "type": Object {
            "fqn": "monitoringcoreoscom.ThanosRulerSpecVolumesScaleIo",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecVolumes#secret",
            },
            "remarks": "More info: https://kubernetes.io/docs/concepts/storage/volumes#secret",
            "summary": "Secret represents a secret that should populate this volume.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 27824,
          },
          "name": "secret",
          "optional": true,
          "type": Object {
            "fqn": "monitoringcoreoscom.ThanosRulerSpecVolumesSecret",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecVolumes#storageos",
            },
            "summary": "StorageOS represents a StorageOS volume attached and mounted on Kubernetes nodes.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 27831,
          },
          "name": "storageos",
          "optional": true,
          "type": Object {
            "fqn": "monitoringcoreoscom.ThanosRulerSpecVolumesStorageos",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecVolumes#vsphereVolume",
            },
            "summary": "VsphereVolume represents a vSphere volume attached and mounted on kubelets host machine.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 27838,
          },
          "name": "vsphereVolume",
          "optional": true,
          "type": Object {
            "fqn": "monitoringcoreoscom.ThanosRulerSpecVolumesVsphereVolume",
          },
        },
      ],
    },
    "monitoringcoreoscom.ThanosRulerSpecVolumesAwsElasticBlockStore": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "ThanosRulerSpecVolumesAwsElasticBlockStore",
        },
        "remarks": "More info: https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore",
        "summary": "AWSElasticBlockStore represents an AWS Disk resource that is attached to a kubelet's host machine and then exposed to the pod.",
      },
      "fqn": "monitoringcoreoscom.ThanosRulerSpecVolumesAwsElasticBlockStore",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 29859,
      },
      "name": "ThanosRulerSpecVolumesAwsElasticBlockStore",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecVolumesAwsElasticBlockStore#volumeID",
            },
            "remarks": "More info: https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore",
            "summary": "Unique ID of the persistent disk resource in AWS (Amazon EBS volume).",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 29886,
          },
          "name": "volumeId",
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecVolumesAwsElasticBlockStore#fsType",
            },
            "remarks": "Tip: Ensure that the filesystem type is supported by the host operating system. Examples: \\"ext4\\", \\"xfs\\", \\"ntfs\\". Implicitly inferred to be \\"ext4\\" if unspecified. More info: https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore TODO: how do we prevent errors in the filesystem from compromising the machine",
            "summary": "Filesystem type of the volume that you want to mount.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 29865,
          },
          "name": "fsType",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecVolumesAwsElasticBlockStore#partition",
            },
            "remarks": "If omitted, the default is to mount by volume name. Examples: For volume /dev/sda1, you specify the partition as \\"1\\". Similarly, the volume partition for /dev/sda is \\"0\\" (or you can leave the property empty).",
            "summary": "The partition in the volume that you want to mount.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 29872,
          },
          "name": "partition",
          "optional": true,
          "type": Object {
            "primitive": "number",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecVolumesAwsElasticBlockStore#readOnly",
            },
            "remarks": "If omitted, the default is \\"false\\". More info: https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore",
            "summary": "Specify \\"true\\" to force and set the ReadOnly property in VolumeMounts to \\"true\\".",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 29879,
          },
          "name": "readOnly",
          "optional": true,
          "type": Object {
            "primitive": "boolean",
          },
        },
      ],
    },
    "monitoringcoreoscom.ThanosRulerSpecVolumesAzureDisk": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "ThanosRulerSpecVolumesAzureDisk",
        },
        "summary": "AzureDisk represents an Azure Data Disk mount on the host and bind mount to the pod.",
      },
      "fqn": "monitoringcoreoscom.ThanosRulerSpecVolumesAzureDisk",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 29912,
      },
      "name": "ThanosRulerSpecVolumesAzureDisk",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecVolumesAzureDisk#diskName",
            },
            "summary": "The Name of the data disk in the blob storage.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 29925,
          },
          "name": "diskName",
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecVolumesAzureDisk#diskURI",
            },
            "summary": "The URI the data disk in the blob storage.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 29932,
          },
          "name": "diskUri",
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecVolumesAzureDisk#cachingMode",
            },
            "summary": "Host Caching mode: None, Read Only, Read Write.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 29918,
          },
          "name": "cachingMode",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecVolumesAzureDisk#fsType",
            },
            "remarks": "Must be a filesystem type supported by the host operating system. Ex. \\"ext4\\", \\"xfs\\", \\"ntfs\\". Implicitly inferred to be \\"ext4\\" if unspecified.",
            "summary": "Filesystem type to mount.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 29939,
          },
          "name": "fsType",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecVolumesAzureDisk#kind",
            },
            "remarks": "defaults to shared",
            "summary": "Expected values Shared: multiple blob disks per storage account  Dedicated: single blob disk per storage account  Managed: azure managed data disk (only in managed availability set).",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 29946,
          },
          "name": "kind",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecVolumesAzureDisk#readOnly",
            },
            "default": "false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts.",
            "remarks": "ReadOnly here will force the ReadOnly setting in VolumeMounts.",
            "summary": "Defaults to false (read/write).",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 29954,
          },
          "name": "readOnly",
          "optional": true,
          "type": Object {
            "primitive": "boolean",
          },
        },
      ],
    },
    "monitoringcoreoscom.ThanosRulerSpecVolumesAzureFile": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "ThanosRulerSpecVolumesAzureFile",
        },
        "summary": "AzureFile represents an Azure File Service mount on the host and bind mount to the pod.",
      },
      "fqn": "monitoringcoreoscom.ThanosRulerSpecVolumesAzureFile",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 29982,
      },
      "name": "ThanosRulerSpecVolumesAzureFile",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecVolumesAzureFile#secretName",
            },
            "summary": "the name of secret that contains Azure Storage Account Name and Key.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 29996,
          },
          "name": "secretName",
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecVolumesAzureFile#shareName",
            },
            "summary": "Share Name.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 30003,
          },
          "name": "shareName",
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecVolumesAzureFile#readOnly",
            },
            "default": "false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts.",
            "remarks": "ReadOnly here will force the ReadOnly setting in VolumeMounts.",
            "summary": "Defaults to false (read/write).",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 29989,
          },
          "name": "readOnly",
          "optional": true,
          "type": Object {
            "primitive": "boolean",
          },
        },
      ],
    },
    "monitoringcoreoscom.ThanosRulerSpecVolumesCephfs": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "ThanosRulerSpecVolumesCephfs",
        },
        "summary": "CephFS represents a Ceph FS mount on the host that shares a pod's lifetime.",
      },
      "fqn": "monitoringcoreoscom.ThanosRulerSpecVolumesCephfs",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 30028,
      },
      "name": "ThanosRulerSpecVolumesCephfs",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecVolumesCephfs#monitors",
            },
            "summary": "Required: Monitors is a collection of Ceph monitors More info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 30034,
          },
          "name": "monitors",
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "primitive": "string",
              },
              "kind": "array",
            },
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecVolumesCephfs#path",
            },
            "summary": "Optional: Used as the mounted root, rather than the full Ceph tree, default is /.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 30041,
          },
          "name": "path",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecVolumesCephfs#readOnly",
            },
            "default": "false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts. More info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it",
            "remarks": "ReadOnly here will force the ReadOnly setting in VolumeMounts. More info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it",
            "summary": "Optional: Defaults to false (read/write).",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 30049,
          },
          "name": "readOnly",
          "optional": true,
          "type": Object {
            "primitive": "boolean",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecVolumesCephfs#secretFile",
            },
            "summary": "Optional: SecretFile is the path to key ring for User, default is /etc/ceph/user.secret More info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 30056,
          },
          "name": "secretFile",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecVolumesCephfs#secretRef",
            },
            "remarks": "More info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it",
            "summary": "Optional: SecretRef is reference to the authentication secret for User, default is empty.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 30063,
          },
          "name": "secretRef",
          "optional": true,
          "type": Object {
            "fqn": "monitoringcoreoscom.ThanosRulerSpecVolumesCephfsSecretRef",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecVolumesCephfs#user",
            },
            "summary": "Optional: User is the rados user name, default is admin More info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 30070,
          },
          "name": "user",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
      ],
    },
    "monitoringcoreoscom.ThanosRulerSpecVolumesCephfsSecretRef": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "ThanosRulerSpecVolumesCephfsSecretRef",
        },
        "remarks": "More info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it",
        "summary": "Optional: SecretRef is reference to the authentication secret for User, default is empty.",
      },
      "fqn": "monitoringcoreoscom.ThanosRulerSpecVolumesCephfsSecretRef",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 33497,
      },
      "name": "ThanosRulerSpecVolumesCephfsSecretRef",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecVolumesCephfsSecretRef#name",
            },
            "remarks": "More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?",
            "summary": "Name of the referent.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 33503,
          },
          "name": "name",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
      ],
    },
    "monitoringcoreoscom.ThanosRulerSpecVolumesCinder": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "ThanosRulerSpecVolumesCinder",
        },
        "remarks": "More info: https://examples.k8s.io/mysql-cinder-pd/README.md",
        "summary": "Cinder represents a cinder volume attached and mounted on kubelets host machine.",
      },
      "fqn": "monitoringcoreoscom.ThanosRulerSpecVolumesCinder",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 30098,
      },
      "name": "ThanosRulerSpecVolumesCinder",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecVolumesCinder#volumeID",
            },
            "remarks": "More info: https://examples.k8s.io/mysql-cinder-pd/README.md",
            "summary": "volume id used to identify the volume in cinder.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 30126,
          },
          "name": "volumeId",
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecVolumesCinder#fsType",
            },
            "remarks": "Must be a filesystem type supported by the host operating system. Examples: \\"ext4\\", \\"xfs\\", \\"ntfs\\". Implicitly inferred to be \\"ext4\\" if unspecified. More info: https://examples.k8s.io/mysql-cinder-pd/README.md",
            "summary": "Filesystem type to mount.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 30104,
          },
          "name": "fsType",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecVolumesCinder#readOnly",
            },
            "default": "false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts. More info: https://examples.k8s.io/mysql-cinder-pd/README.md",
            "remarks": "ReadOnly here will force the ReadOnly setting in VolumeMounts. More info: https://examples.k8s.io/mysql-cinder-pd/README.md",
            "summary": "Optional: Defaults to false (read/write).",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 30112,
          },
          "name": "readOnly",
          "optional": true,
          "type": Object {
            "primitive": "boolean",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecVolumesCinder#secretRef",
            },
            "summary": "Optional: points to a secret object containing parameters used to connect to OpenStack.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 30119,
          },
          "name": "secretRef",
          "optional": true,
          "type": Object {
            "fqn": "monitoringcoreoscom.ThanosRulerSpecVolumesCinderSecretRef",
          },
        },
      ],
    },
    "monitoringcoreoscom.ThanosRulerSpecVolumesCinderSecretRef": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "ThanosRulerSpecVolumesCinderSecretRef",
        },
        "summary": "Optional: points to a secret object containing parameters used to connect to OpenStack.",
      },
      "fqn": "monitoringcoreoscom.ThanosRulerSpecVolumesCinderSecretRef",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 33526,
      },
      "name": "ThanosRulerSpecVolumesCinderSecretRef",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecVolumesCinderSecretRef#name",
            },
            "remarks": "More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?",
            "summary": "Name of the referent.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 33532,
          },
          "name": "name",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
      ],
    },
    "monitoringcoreoscom.ThanosRulerSpecVolumesConfigMap": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "ThanosRulerSpecVolumesConfigMap",
        },
        "summary": "ConfigMap represents a configMap that should populate this volume.",
      },
      "fqn": "monitoringcoreoscom.ThanosRulerSpecVolumesConfigMap",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 30152,
      },
      "name": "ThanosRulerSpecVolumesConfigMap",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecVolumesConfigMap#defaultMode",
            },
            "default": "0644. Directories within the path are not affected by this setting. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.",
            "remarks": "Must be a value between 0 and 0777. Defaults to 0644. Directories within the path are not affected by this setting. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.",
            "summary": "Optional: mode bits to use on created files by default.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 30159,
          },
          "name": "defaultMode",
          "optional": true,
          "type": Object {
            "primitive": "number",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecVolumesConfigMap#items",
            },
            "remarks": "If specified, the listed keys will be projected into the specified paths, and unlisted keys will not be present. If a key is specified which is not present in the ConfigMap, the volume setup will error unless it is marked optional. Paths must be relative and may not contain the '..' path or start with '..'.",
            "summary": "If unspecified, each key-value pair in the Data field of the referenced ConfigMap will be projected into the volume as a file whose name is the key and content is the value.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 30166,
          },
          "name": "items",
          "optional": true,
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "fqn": "monitoringcoreoscom.ThanosRulerSpecVolumesConfigMapItems",
              },
              "kind": "array",
            },
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecVolumesConfigMap#name",
            },
            "remarks": "More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?",
            "summary": "Name of the referent.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 30173,
          },
          "name": "name",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecVolumesConfigMap#optional",
            },
            "summary": "Specify whether the ConfigMap or its keys must be defined.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 30180,
          },
          "name": "optional",
          "optional": true,
          "type": Object {
            "primitive": "boolean",
          },
        },
      ],
    },
    "monitoringcoreoscom.ThanosRulerSpecVolumesConfigMapItems": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "ThanosRulerSpecVolumesConfigMapItems",
        },
        "summary": "Maps a string key to a path within a volume.",
      },
      "fqn": "monitoringcoreoscom.ThanosRulerSpecVolumesConfigMapItems",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 33555,
      },
      "name": "ThanosRulerSpecVolumesConfigMapItems",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecVolumesConfigMapItems#key",
            },
            "summary": "The key to project.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 33561,
          },
          "name": "key",
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecVolumesConfigMapItems#path",
            },
            "remarks": "May not be an absolute path. May not contain the path element '..'. May not start with the string '..'.",
            "summary": "The relative path of the file to map the key to.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 33575,
          },
          "name": "path",
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecVolumesConfigMapItems#mode",
            },
            "remarks": "If not specified, the volume defaultMode will be used. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.",
            "summary": "Optional: mode bits to use on this file, must be a value between 0 and 0777.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 33568,
          },
          "name": "mode",
          "optional": true,
          "type": Object {
            "primitive": "number",
          },
        },
      ],
    },
    "monitoringcoreoscom.ThanosRulerSpecVolumesCsi": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "ThanosRulerSpecVolumesCsi",
        },
        "summary": "CSI (Container Storage Interface) represents storage that is handled by an external CSI driver (Alpha feature).",
      },
      "fqn": "monitoringcoreoscom.ThanosRulerSpecVolumesCsi",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 30206,
      },
      "name": "ThanosRulerSpecVolumesCsi",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecVolumesCsi#driver",
            },
            "remarks": "Consult with your admin for the correct name as registered in the cluster.",
            "summary": "Driver is the name of the CSI driver that handles this volume.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 30212,
          },
          "name": "driver",
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecVolumesCsi#fsType",
            },
            "remarks": "Ex. \\"ext4\\", \\"xfs\\", \\"ntfs\\". If not provided, the empty value is passed to the associated CSI driver which will determine the default filesystem to apply.",
            "summary": "Filesystem type to mount.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 30219,
          },
          "name": "fsType",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecVolumesCsi#nodePublishSecretRef",
            },
            "remarks": "This field is optional, and  may be empty if no secret is required. If the secret object contains more than one secret, all secret references are passed.",
            "summary": "NodePublishSecretRef is a reference to the secret object containing sensitive information to pass to the CSI driver to complete the CSI NodePublishVolume and NodeUnpublishVolume calls.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 30226,
          },
          "name": "nodePublishSecretRef",
          "optional": true,
          "type": Object {
            "fqn": "monitoringcoreoscom.ThanosRulerSpecVolumesCsiNodePublishSecretRef",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecVolumesCsi#readOnly",
            },
            "default": "false (read/write).",
            "remarks": "Defaults to false (read/write).",
            "summary": "Specifies a read-only configuration for the volume.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 30234,
          },
          "name": "readOnly",
          "optional": true,
          "type": Object {
            "primitive": "boolean",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecVolumesCsi#volumeAttributes",
            },
            "remarks": "Consult your driver's documentation for supported values.",
            "summary": "VolumeAttributes stores driver-specific properties that are passed to the CSI driver.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 30241,
          },
          "name": "volumeAttributes",
          "optional": true,
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "primitive": "string",
              },
              "kind": "map",
            },
          },
        },
      ],
    },
    "monitoringcoreoscom.ThanosRulerSpecVolumesCsiNodePublishSecretRef": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "ThanosRulerSpecVolumesCsiNodePublishSecretRef",
        },
        "remarks": "This field is optional, and  may be empty if no secret is required. If the secret object contains more than one secret, all secret references are passed.",
        "summary": "NodePublishSecretRef is a reference to the secret object containing sensitive information to pass to the CSI driver to complete the CSI NodePublishVolume and NodeUnpublishVolume calls.",
      },
      "fqn": "monitoringcoreoscom.ThanosRulerSpecVolumesCsiNodePublishSecretRef",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 33600,
      },
      "name": "ThanosRulerSpecVolumesCsiNodePublishSecretRef",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecVolumesCsiNodePublishSecretRef#name",
            },
            "remarks": "More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?",
            "summary": "Name of the referent.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 33606,
          },
          "name": "name",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
      ],
    },
    "monitoringcoreoscom.ThanosRulerSpecVolumesDownwardApi": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "ThanosRulerSpecVolumesDownwardApi",
        },
        "summary": "DownwardAPI represents downward API about the pod that should populate this volume.",
      },
      "fqn": "monitoringcoreoscom.ThanosRulerSpecVolumesDownwardApi",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 30268,
      },
      "name": "ThanosRulerSpecVolumesDownwardApi",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecVolumesDownwardApi#defaultMode",
            },
            "default": "0644. Directories within the path are not affected by this setting. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.",
            "remarks": "Must be a value between 0 and 0777. Defaults to 0644. Directories within the path are not affected by this setting. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.",
            "summary": "Optional: mode bits to use on created files by default.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 30275,
          },
          "name": "defaultMode",
          "optional": true,
          "type": Object {
            "primitive": "number",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecVolumesDownwardApi#items",
            },
            "summary": "Items is a list of downward API volume file.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 30282,
          },
          "name": "items",
          "optional": true,
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "fqn": "monitoringcoreoscom.ThanosRulerSpecVolumesDownwardApiItems",
              },
              "kind": "array",
            },
          },
        },
      ],
    },
    "monitoringcoreoscom.ThanosRulerSpecVolumesDownwardApiItems": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "ThanosRulerSpecVolumesDownwardApiItems",
        },
        "summary": "DownwardAPIVolumeFile represents information to create the file containing the pod field.",
      },
      "fqn": "monitoringcoreoscom.ThanosRulerSpecVolumesDownwardApiItems",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 33629,
      },
      "name": "ThanosRulerSpecVolumesDownwardApiItems",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecVolumesDownwardApiItems#path",
            },
            "remarks": "Must not be absolute or contain the '..' path. Must be utf-8 encoded. The first item of the relative path must not start with '..'",
            "summary": "Required: Path is  the relative path name of the file to be created.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 33649,
          },
          "name": "path",
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecVolumesDownwardApiItems#fieldRef",
            },
            "summary": "Required: Selects a field of the pod: only annotations, labels, name and namespace are supported.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 33635,
          },
          "name": "fieldRef",
          "optional": true,
          "type": Object {
            "fqn": "monitoringcoreoscom.ThanosRulerSpecVolumesDownwardApiItemsFieldRef",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecVolumesDownwardApiItems#mode",
            },
            "remarks": "If not specified, the volume defaultMode will be used. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.",
            "summary": "Optional: mode bits to use on this file, must be a value between 0 and 0777.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 33642,
          },
          "name": "mode",
          "optional": true,
          "type": Object {
            "primitive": "number",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecVolumesDownwardApiItems#resourceFieldRef",
            },
            "summary": "Selects a resource of the container: only resources limits and requests (limits.cpu, limits.memory, requests.cpu and requests.memory) are currently supported.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 33656,
          },
          "name": "resourceFieldRef",
          "optional": true,
          "type": Object {
            "fqn": "monitoringcoreoscom.ThanosRulerSpecVolumesDownwardApiItemsResourceFieldRef",
          },
        },
      ],
    },
    "monitoringcoreoscom.ThanosRulerSpecVolumesDownwardApiItemsFieldRef": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "ThanosRulerSpecVolumesDownwardApiItemsFieldRef",
        },
        "summary": "Required: Selects a field of the pod: only annotations, labels, name and namespace are supported.",
      },
      "fqn": "monitoringcoreoscom.ThanosRulerSpecVolumesDownwardApiItemsFieldRef",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 35632,
      },
      "name": "ThanosRulerSpecVolumesDownwardApiItemsFieldRef",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecVolumesDownwardApiItemsFieldRef#fieldPath",
            },
            "summary": "Path of the field to select in the specified API version.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 35645,
          },
          "name": "fieldPath",
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecVolumesDownwardApiItemsFieldRef#apiVersion",
            },
            "summary": "Version of the schema the FieldPath is written in terms of, defaults to \\"v1\\".",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 35638,
          },
          "name": "apiVersion",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
      ],
    },
    "monitoringcoreoscom.ThanosRulerSpecVolumesDownwardApiItemsResourceFieldRef": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "ThanosRulerSpecVolumesDownwardApiItemsResourceFieldRef",
        },
        "summary": "Selects a resource of the container: only resources limits and requests (limits.cpu, limits.memory, requests.cpu and requests.memory) are currently supported.",
      },
      "fqn": "monitoringcoreoscom.ThanosRulerSpecVolumesDownwardApiItemsResourceFieldRef",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 35669,
      },
      "name": "ThanosRulerSpecVolumesDownwardApiItemsResourceFieldRef",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecVolumesDownwardApiItemsResourceFieldRef#resource",
            },
            "summary": "Required: resource to select.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 35689,
          },
          "name": "resource",
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecVolumesDownwardApiItemsResourceFieldRef#containerName",
            },
            "summary": "Container name: required for volumes, optional for env vars.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 35675,
          },
          "name": "containerName",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecVolumesDownwardApiItemsResourceFieldRef#divisor",
            },
            "summary": "Specifies the output format of the exposed resources, defaults to \\"1\\".",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 35682,
          },
          "name": "divisor",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
      ],
    },
    "monitoringcoreoscom.ThanosRulerSpecVolumesEmptyDir": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "ThanosRulerSpecVolumesEmptyDir",
        },
        "remarks": "More info: https://kubernetes.io/docs/concepts/storage/volumes#emptydir",
        "summary": "EmptyDir represents a temporary directory that shares a pod's lifetime.",
      },
      "fqn": "monitoringcoreoscom.ThanosRulerSpecVolumesEmptyDir",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 30306,
      },
      "name": "ThanosRulerSpecVolumesEmptyDir",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecVolumesEmptyDir#medium",
            },
            "remarks": "The default is \\"\\" which means to use the node's default medium. Must be an empty string (default) or Memory. More info: https://kubernetes.io/docs/concepts/storage/volumes#emptydir",
            "summary": "What type of storage medium should back this directory.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 30312,
          },
          "name": "medium",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecVolumesEmptyDir#sizeLimit",
            },
            "remarks": "The size limit is also applicable for memory medium. The maximum usage on memory medium EmptyDir would be the minimum value between the SizeLimit specified here and the sum of memory limits of all containers in a pod. The default is nil which means that the limit is undefined. More info: http://kubernetes.io/docs/user-guide/volumes#emptydir",
            "summary": "Total amount of local storage required for this EmptyDir volume.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 30319,
          },
          "name": "sizeLimit",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
      ],
    },
    "monitoringcoreoscom.ThanosRulerSpecVolumesFc": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "ThanosRulerSpecVolumesFc",
        },
        "summary": "FC represents a Fibre Channel resource that is attached to a kubelet's host machine and then exposed to the pod.",
      },
      "fqn": "monitoringcoreoscom.ThanosRulerSpecVolumesFc",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 30343,
      },
      "name": "ThanosRulerSpecVolumesFc",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecVolumesFc#fsType",
            },
            "remarks": "Must be a filesystem type supported by the host operating system. Ex. \\"ext4\\", \\"xfs\\", \\"ntfs\\". Implicitly inferred to be \\"ext4\\" if unspecified. TODO: how do we prevent errors in the filesystem from compromising the machine",
            "summary": "Filesystem type to mount.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 30349,
          },
          "name": "fsType",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecVolumesFc#lun",
            },
            "summary": "Optional: FC target lun number.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 30356,
          },
          "name": "lun",
          "optional": true,
          "type": Object {
            "primitive": "number",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecVolumesFc#readOnly",
            },
            "default": "false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts.",
            "remarks": "ReadOnly here will force the ReadOnly setting in VolumeMounts.",
            "summary": "Optional: Defaults to false (read/write).",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 30364,
          },
          "name": "readOnly",
          "optional": true,
          "type": Object {
            "primitive": "boolean",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecVolumesFc#targetWWNs",
            },
            "summary": "Optional: FC target worldwide names (WWNs).",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 30371,
          },
          "name": "targetWwNs",
          "optional": true,
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "primitive": "string",
              },
              "kind": "array",
            },
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecVolumesFc#wwids",
            },
            "summary": "Optional: FC volume world wide identifiers (wwids) Either wwids or combination of targetWWNs and lun must be set, but not both simultaneously.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 30378,
          },
          "name": "wwids",
          "optional": true,
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "primitive": "string",
              },
              "kind": "array",
            },
          },
        },
      ],
    },
    "monitoringcoreoscom.ThanosRulerSpecVolumesFlexVolume": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "ThanosRulerSpecVolumesFlexVolume",
        },
        "summary": "FlexVolume represents a generic volume resource that is provisioned/attached using an exec based plugin.",
      },
      "fqn": "monitoringcoreoscom.ThanosRulerSpecVolumesFlexVolume",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 30405,
      },
      "name": "ThanosRulerSpecVolumesFlexVolume",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecVolumesFlexVolume#driver",
            },
            "summary": "Driver is the name of the driver to use for this volume.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 30411,
          },
          "name": "driver",
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecVolumesFlexVolume#fsType",
            },
            "remarks": "Must be a filesystem type supported by the host operating system. Ex. \\"ext4\\", \\"xfs\\", \\"ntfs\\". The default filesystem depends on FlexVolume script.",
            "summary": "Filesystem type to mount.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 30418,
          },
          "name": "fsType",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecVolumesFlexVolume#options",
            },
            "summary": "Optional: Extra command options if any.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 30425,
          },
          "name": "options",
          "optional": true,
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "primitive": "string",
              },
              "kind": "map",
            },
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecVolumesFlexVolume#readOnly",
            },
            "default": "false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts.",
            "remarks": "ReadOnly here will force the ReadOnly setting in VolumeMounts.",
            "summary": "Optional: Defaults to false (read/write).",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 30433,
          },
          "name": "readOnly",
          "optional": true,
          "type": Object {
            "primitive": "boolean",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecVolumesFlexVolume#secretRef",
            },
            "remarks": "This may be empty if no secret object is specified. If the secret object contains more than one secret, all secrets are passed to the plugin scripts.",
            "summary": "Optional: SecretRef is reference to the secret object containing sensitive information to pass to the plugin scripts.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 30440,
          },
          "name": "secretRef",
          "optional": true,
          "type": Object {
            "fqn": "monitoringcoreoscom.ThanosRulerSpecVolumesFlexVolumeSecretRef",
          },
        },
      ],
    },
    "monitoringcoreoscom.ThanosRulerSpecVolumesFlexVolumeSecretRef": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "ThanosRulerSpecVolumesFlexVolumeSecretRef",
        },
        "remarks": "This may be empty if no secret object is specified. If the secret object contains more than one secret, all secrets are passed to the plugin scripts.",
        "summary": "Optional: SecretRef is reference to the secret object containing sensitive information to pass to the plugin scripts.",
      },
      "fqn": "monitoringcoreoscom.ThanosRulerSpecVolumesFlexVolumeSecretRef",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 33682,
      },
      "name": "ThanosRulerSpecVolumesFlexVolumeSecretRef",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecVolumesFlexVolumeSecretRef#name",
            },
            "remarks": "More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?",
            "summary": "Name of the referent.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 33688,
          },
          "name": "name",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
      ],
    },
    "monitoringcoreoscom.ThanosRulerSpecVolumesFlocker": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "ThanosRulerSpecVolumesFlocker",
        },
        "remarks": "This depends on the Flocker control service being running",
        "summary": "Flocker represents a Flocker volume attached to a kubelet's host machine.",
      },
      "fqn": "monitoringcoreoscom.ThanosRulerSpecVolumesFlocker",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 30467,
      },
      "name": "ThanosRulerSpecVolumesFlocker",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecVolumesFlocker#datasetName",
            },
            "summary": "Name of the dataset stored as metadata -> name on the dataset for Flocker should be considered as deprecated.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 30473,
          },
          "name": "datasetName",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecVolumesFlocker#datasetUUID",
            },
            "remarks": "This is unique identifier of a Flocker dataset",
            "summary": "UUID of the dataset.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 30480,
          },
          "name": "datasetUuid",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
      ],
    },
    "monitoringcoreoscom.ThanosRulerSpecVolumesGcePersistentDisk": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "ThanosRulerSpecVolumesGcePersistentDisk",
        },
        "remarks": "More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk",
        "summary": "GCEPersistentDisk represents a GCE Disk resource that is attached to a kubelet's host machine and then exposed to the pod.",
      },
      "fqn": "monitoringcoreoscom.ThanosRulerSpecVolumesGcePersistentDisk",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 30504,
      },
      "name": "ThanosRulerSpecVolumesGcePersistentDisk",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecVolumesGcePersistentDisk#pdName",
            },
            "remarks": "Used to identify the disk in GCE. More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk",
            "summary": "Unique name of the PD resource in GCE.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 30524,
          },
          "name": "pdName",
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecVolumesGcePersistentDisk#fsType",
            },
            "remarks": "Tip: Ensure that the filesystem type is supported by the host operating system. Examples: \\"ext4\\", \\"xfs\\", \\"ntfs\\". Implicitly inferred to be \\"ext4\\" if unspecified. More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk TODO: how do we prevent errors in the filesystem from compromising the machine",
            "summary": "Filesystem type of the volume that you want to mount.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 30510,
          },
          "name": "fsType",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecVolumesGcePersistentDisk#partition",
            },
            "remarks": "If omitted, the default is to mount by volume name. Examples: For volume /dev/sda1, you specify the partition as \\"1\\". Similarly, the volume partition for /dev/sda is \\"0\\" (or you can leave the property empty). More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk",
            "summary": "The partition in the volume that you want to mount.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 30517,
          },
          "name": "partition",
          "optional": true,
          "type": Object {
            "primitive": "number",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecVolumesGcePersistentDisk#readOnly",
            },
            "default": "false. More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk",
            "remarks": "Defaults to false. More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk",
            "summary": "ReadOnly here will force the ReadOnly setting in VolumeMounts.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 30532,
          },
          "name": "readOnly",
          "optional": true,
          "type": Object {
            "primitive": "boolean",
          },
        },
      ],
    },
    "monitoringcoreoscom.ThanosRulerSpecVolumesGitRepo": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "ThanosRulerSpecVolumesGitRepo",
        },
        "remarks": "DEPRECATED: GitRepo is deprecated. To provision a container with a git repo, mount an EmptyDir into an InitContainer that clones the repo using git, then mount the EmptyDir into the Pod's container.",
        "summary": "GitRepo represents a git repository at a particular revision.",
      },
      "fqn": "monitoringcoreoscom.ThanosRulerSpecVolumesGitRepo",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 30558,
      },
      "name": "ThanosRulerSpecVolumesGitRepo",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecVolumesGitRepo#repository",
            },
            "summary": "Repository URL.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 30571,
          },
          "name": "repository",
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecVolumesGitRepo#directory",
            },
            "remarks": "Must not contain or start with '..'.  If '.' is supplied, the volume directory will be the git repository.  Otherwise, if specified, the volume will contain the git repository in the subdirectory with the given name.",
            "summary": "Target directory name.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 30564,
          },
          "name": "directory",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecVolumesGitRepo#revision",
            },
            "summary": "Commit hash for the specified revision.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 30578,
          },
          "name": "revision",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
      ],
    },
    "monitoringcoreoscom.ThanosRulerSpecVolumesGlusterfs": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "ThanosRulerSpecVolumesGlusterfs",
        },
        "remarks": "More info: https://examples.k8s.io/volumes/glusterfs/README.md",
        "summary": "Glusterfs represents a Glusterfs mount on the host that shares a pod's lifetime.",
      },
      "fqn": "monitoringcoreoscom.ThanosRulerSpecVolumesGlusterfs",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 30603,
      },
      "name": "ThanosRulerSpecVolumesGlusterfs",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecVolumesGlusterfs#endpoints",
            },
            "remarks": "More info: https://examples.k8s.io/volumes/glusterfs/README.md#create-a-pod",
            "summary": "EndpointsName is the endpoint name that details Glusterfs topology.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 30609,
          },
          "name": "endpoints",
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecVolumesGlusterfs#path",
            },
            "remarks": "More info: https://examples.k8s.io/volumes/glusterfs/README.md#create-a-pod",
            "summary": "Path is the Glusterfs volume path.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 30616,
          },
          "name": "path",
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecVolumesGlusterfs#readOnly",
            },
            "default": "false. More info: https://examples.k8s.io/volumes/glusterfs/README.md#create-a-pod",
            "remarks": "Defaults to false. More info: https://examples.k8s.io/volumes/glusterfs/README.md#create-a-pod",
            "summary": "ReadOnly here will force the Glusterfs volume to be mounted with read-only permissions.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 30624,
          },
          "name": "readOnly",
          "optional": true,
          "type": Object {
            "primitive": "boolean",
          },
        },
      ],
    },
    "monitoringcoreoscom.ThanosRulerSpecVolumesHostPath": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "ThanosRulerSpecVolumesHostPath",
        },
        "remarks": "This is generally used for system agents or other privileged things that are allowed to see the host machine. Most containers will NOT need this. More info: https://kubernetes.io/docs/concepts/storage/volumes#hostpath --- TODO(jonesdl) We need to restrict who can use host directory mounts and who can/can not mount host directories as read/write.",
        "summary": "HostPath represents a pre-existing file or directory on the host machine that is directly exposed to the container.",
      },
      "fqn": "monitoringcoreoscom.ThanosRulerSpecVolumesHostPath",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 30649,
      },
      "name": "ThanosRulerSpecVolumesHostPath",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecVolumesHostPath#path",
            },
            "remarks": "If the path is a symlink, it will follow the link to the real path. More info: https://kubernetes.io/docs/concepts/storage/volumes#hostpath",
            "summary": "Path of the directory on the host.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 30655,
          },
          "name": "path",
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecVolumesHostPath#type",
            },
            "default": "More info: https://kubernetes.io/docs/concepts/storage/volumes#hostpath",
            "summary": "Type for HostPath Volume Defaults to \\"\\" More info: https://kubernetes.io/docs/concepts/storage/volumes#hostpath.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 30663,
          },
          "name": "type",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
      ],
    },
    "monitoringcoreoscom.ThanosRulerSpecVolumesIscsi": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "ThanosRulerSpecVolumesIscsi",
        },
        "remarks": "More info: https://examples.k8s.io/volumes/iscsi/README.md",
        "summary": "ISCSI represents an ISCSI Disk resource that is attached to a kubelet's host machine and then exposed to the pod.",
      },
      "fqn": "monitoringcoreoscom.ThanosRulerSpecVolumesIscsi",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 30687,
      },
      "name": "ThanosRulerSpecVolumesIscsi",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecVolumesIscsi#iqn",
            },
            "summary": "Target iSCSI Qualified Name.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 30721,
          },
          "name": "iqn",
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecVolumesIscsi#lun",
            },
            "summary": "iSCSI Target Lun number.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 30736,
          },
          "name": "lun",
          "type": Object {
            "primitive": "number",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecVolumesIscsi#targetPortal",
            },
            "remarks": "The Portal is either an IP or ip_addr:port if the port is other than default (typically TCP ports 860 and 3260).",
            "summary": "iSCSI Target Portal.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 30765,
          },
          "name": "targetPortal",
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecVolumesIscsi#chapAuthDiscovery",
            },
            "summary": "whether support iSCSI Discovery CHAP authentication.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 30693,
          },
          "name": "chapAuthDiscovery",
          "optional": true,
          "type": Object {
            "primitive": "boolean",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecVolumesIscsi#chapAuthSession",
            },
            "summary": "whether support iSCSI Session CHAP authentication.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 30700,
          },
          "name": "chapAuthSession",
          "optional": true,
          "type": Object {
            "primitive": "boolean",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecVolumesIscsi#fsType",
            },
            "remarks": "Tip: Ensure that the filesystem type is supported by the host operating system. Examples: \\"ext4\\", \\"xfs\\", \\"ntfs\\". Implicitly inferred to be \\"ext4\\" if unspecified. More info: https://kubernetes.io/docs/concepts/storage/volumes#iscsi TODO: how do we prevent errors in the filesystem from compromising the machine",
            "summary": "Filesystem type of the volume that you want to mount.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 30707,
          },
          "name": "fsType",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecVolumesIscsi#initiatorName",
            },
            "remarks": "If initiatorName is specified with iscsiInterface simultaneously, new iSCSI interface <target portal>:<volume name> will be created for the connection.",
            "summary": "Custom iSCSI Initiator Name.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 30714,
          },
          "name": "initiatorName",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecVolumesIscsi#iscsiInterface",
            },
            "default": "default' (tcp).",
            "remarks": "Defaults to 'default' (tcp).",
            "summary": "iSCSI Interface Name that uses an iSCSI transport.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 30729,
          },
          "name": "iscsiInterface",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecVolumesIscsi#portals",
            },
            "remarks": "The portal is either an IP or ip_addr:port if the port is other than default (typically TCP ports 860 and 3260).",
            "summary": "iSCSI Target Portal List.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 30743,
          },
          "name": "portals",
          "optional": true,
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "primitive": "string",
              },
              "kind": "array",
            },
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecVolumesIscsi#readOnly",
            },
            "default": "false.",
            "remarks": "Defaults to false.",
            "summary": "ReadOnly here will force the ReadOnly setting in VolumeMounts.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 30751,
          },
          "name": "readOnly",
          "optional": true,
          "type": Object {
            "primitive": "boolean",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecVolumesIscsi#secretRef",
            },
            "summary": "CHAP Secret for iSCSI target and initiator authentication.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 30758,
          },
          "name": "secretRef",
          "optional": true,
          "type": Object {
            "fqn": "monitoringcoreoscom.ThanosRulerSpecVolumesIscsiSecretRef",
          },
        },
      ],
    },
    "monitoringcoreoscom.ThanosRulerSpecVolumesIscsiSecretRef": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "ThanosRulerSpecVolumesIscsiSecretRef",
        },
        "summary": "CHAP Secret for iSCSI target and initiator authentication.",
      },
      "fqn": "monitoringcoreoscom.ThanosRulerSpecVolumesIscsiSecretRef",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 33711,
      },
      "name": "ThanosRulerSpecVolumesIscsiSecretRef",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecVolumesIscsiSecretRef#name",
            },
            "remarks": "More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?",
            "summary": "Name of the referent.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 33717,
          },
          "name": "name",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
      ],
    },
    "monitoringcoreoscom.ThanosRulerSpecVolumesNfs": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "ThanosRulerSpecVolumesNfs",
        },
        "summary": "NFS represents an NFS mount on the host that shares a pod's lifetime More info: https://kubernetes.io/docs/concepts/storage/volumes#nfs.",
      },
      "fqn": "monitoringcoreoscom.ThanosRulerSpecVolumesNfs",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 30798,
      },
      "name": "ThanosRulerSpecVolumesNfs",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecVolumesNfs#path",
            },
            "remarks": "More info: https://kubernetes.io/docs/concepts/storage/volumes#nfs",
            "summary": "Path that is exported by the NFS server.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 30804,
          },
          "name": "path",
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecVolumesNfs#server",
            },
            "remarks": "More info: https://kubernetes.io/docs/concepts/storage/volumes#nfs",
            "summary": "Server is the hostname or IP address of the NFS server.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 30819,
          },
          "name": "server",
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecVolumesNfs#readOnly",
            },
            "default": "false. More info: https://kubernetes.io/docs/concepts/storage/volumes#nfs",
            "remarks": "Defaults to false. More info: https://kubernetes.io/docs/concepts/storage/volumes#nfs",
            "summary": "ReadOnly here will force the NFS export to be mounted with read-only permissions.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 30812,
          },
          "name": "readOnly",
          "optional": true,
          "type": Object {
            "primitive": "boolean",
          },
        },
      ],
    },
    "monitoringcoreoscom.ThanosRulerSpecVolumesPersistentVolumeClaim": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "ThanosRulerSpecVolumesPersistentVolumeClaim",
        },
        "remarks": "More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims",
        "summary": "PersistentVolumeClaimVolumeSource represents a reference to a PersistentVolumeClaim in the same namespace.",
      },
      "fqn": "monitoringcoreoscom.ThanosRulerSpecVolumesPersistentVolumeClaim",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 30844,
      },
      "name": "ThanosRulerSpecVolumesPersistentVolumeClaim",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecVolumesPersistentVolumeClaim#claimName",
            },
            "remarks": "More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims",
            "summary": "ClaimName is the name of a PersistentVolumeClaim in the same namespace as the pod using this volume.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 30850,
          },
          "name": "claimName",
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecVolumesPersistentVolumeClaim#readOnly",
            },
            "remarks": "Default false.",
            "summary": "Will force the ReadOnly setting in VolumeMounts.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 30857,
          },
          "name": "readOnly",
          "optional": true,
          "type": Object {
            "primitive": "boolean",
          },
        },
      ],
    },
    "monitoringcoreoscom.ThanosRulerSpecVolumesPhotonPersistentDisk": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "ThanosRulerSpecVolumesPhotonPersistentDisk",
        },
        "summary": "PhotonPersistentDisk represents a PhotonController persistent disk attached and mounted on kubelets host machine.",
      },
      "fqn": "monitoringcoreoscom.ThanosRulerSpecVolumesPhotonPersistentDisk",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 30881,
      },
      "name": "ThanosRulerSpecVolumesPhotonPersistentDisk",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecVolumesPhotonPersistentDisk#pdID",
            },
            "summary": "ID that identifies Photon Controller persistent disk.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 30894,
          },
          "name": "pdId",
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecVolumesPhotonPersistentDisk#fsType",
            },
            "remarks": "Must be a filesystem type supported by the host operating system. Ex. \\"ext4\\", \\"xfs\\", \\"ntfs\\". Implicitly inferred to be \\"ext4\\" if unspecified.",
            "summary": "Filesystem type to mount.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 30887,
          },
          "name": "fsType",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
      ],
    },
    "monitoringcoreoscom.ThanosRulerSpecVolumesPortworxVolume": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "ThanosRulerSpecVolumesPortworxVolume",
        },
        "summary": "PortworxVolume represents a portworx volume attached and mounted on kubelets host machine.",
      },
      "fqn": "monitoringcoreoscom.ThanosRulerSpecVolumesPortworxVolume",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 30918,
      },
      "name": "ThanosRulerSpecVolumesPortworxVolume",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecVolumesPortworxVolume#volumeID",
            },
            "summary": "VolumeID uniquely identifies a Portworx volume.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 30939,
          },
          "name": "volumeId",
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecVolumesPortworxVolume#fsType",
            },
            "remarks": "Ex. \\"ext4\\", \\"xfs\\". Implicitly inferred to be \\"ext4\\" if unspecified.",
            "summary": "FSType represents the filesystem type to mount Must be a filesystem type supported by the host operating system.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 30924,
          },
          "name": "fsType",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecVolumesPortworxVolume#readOnly",
            },
            "default": "false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts.",
            "remarks": "ReadOnly here will force the ReadOnly setting in VolumeMounts.",
            "summary": "Defaults to false (read/write).",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 30932,
          },
          "name": "readOnly",
          "optional": true,
          "type": Object {
            "primitive": "boolean",
          },
        },
      ],
    },
    "monitoringcoreoscom.ThanosRulerSpecVolumesProjected": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "ThanosRulerSpecVolumesProjected",
        },
        "summary": "Items for all in one resources secrets, configmaps, and downward API.",
      },
      "fqn": "monitoringcoreoscom.ThanosRulerSpecVolumesProjected",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 30964,
      },
      "name": "ThanosRulerSpecVolumesProjected",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecVolumesProjected#sources",
            },
            "summary": "list of volume projections.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 30977,
          },
          "name": "sources",
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "fqn": "monitoringcoreoscom.ThanosRulerSpecVolumesProjectedSources",
              },
              "kind": "array",
            },
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecVolumesProjected#defaultMode",
            },
            "remarks": "Must be a value between 0 and 0777. Directories within the path are not affected by this setting. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.",
            "summary": "Mode bits to use on created files by default.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 30970,
          },
          "name": "defaultMode",
          "optional": true,
          "type": Object {
            "primitive": "number",
          },
        },
      ],
    },
    "monitoringcoreoscom.ThanosRulerSpecVolumesProjectedSources": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "ThanosRulerSpecVolumesProjectedSources",
        },
        "summary": "Projection that may be projected along with other supported volume types.",
      },
      "fqn": "monitoringcoreoscom.ThanosRulerSpecVolumesProjectedSources",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 33740,
      },
      "name": "ThanosRulerSpecVolumesProjectedSources",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecVolumesProjectedSources#configMap",
            },
            "summary": "information about the configMap data to project.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 33746,
          },
          "name": "configMap",
          "optional": true,
          "type": Object {
            "fqn": "monitoringcoreoscom.ThanosRulerSpecVolumesProjectedSourcesConfigMap",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecVolumesProjectedSources#downwardAPI",
            },
            "summary": "information about the downwardAPI data to project.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 33753,
          },
          "name": "downwardApi",
          "optional": true,
          "type": Object {
            "fqn": "monitoringcoreoscom.ThanosRulerSpecVolumesProjectedSourcesDownwardApi",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecVolumesProjectedSources#secret",
            },
            "summary": "information about the secret data to project.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 33760,
          },
          "name": "secret",
          "optional": true,
          "type": Object {
            "fqn": "monitoringcoreoscom.ThanosRulerSpecVolumesProjectedSourcesSecret",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecVolumesProjectedSources#serviceAccountToken",
            },
            "summary": "information about the serviceAccountToken data to project.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 33767,
          },
          "name": "serviceAccountToken",
          "optional": true,
          "type": Object {
            "fqn": "monitoringcoreoscom.ThanosRulerSpecVolumesProjectedSourcesServiceAccountToken",
          },
        },
      ],
    },
    "monitoringcoreoscom.ThanosRulerSpecVolumesProjectedSourcesConfigMap": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "ThanosRulerSpecVolumesProjectedSourcesConfigMap",
        },
        "summary": "information about the configMap data to project.",
      },
      "fqn": "monitoringcoreoscom.ThanosRulerSpecVolumesProjectedSourcesConfigMap",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 35714,
      },
      "name": "ThanosRulerSpecVolumesProjectedSourcesConfigMap",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecVolumesProjectedSourcesConfigMap#items",
            },
            "remarks": "If specified, the listed keys will be projected into the specified paths, and unlisted keys will not be present. If a key is specified which is not present in the ConfigMap, the volume setup will error unless it is marked optional. Paths must be relative and may not contain the '..' path or start with '..'.",
            "summary": "If unspecified, each key-value pair in the Data field of the referenced ConfigMap will be projected into the volume as a file whose name is the key and content is the value.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 35720,
          },
          "name": "items",
          "optional": true,
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "fqn": "monitoringcoreoscom.ThanosRulerSpecVolumesProjectedSourcesConfigMapItems",
              },
              "kind": "array",
            },
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecVolumesProjectedSourcesConfigMap#name",
            },
            "remarks": "More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?",
            "summary": "Name of the referent.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 35727,
          },
          "name": "name",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecVolumesProjectedSourcesConfigMap#optional",
            },
            "summary": "Specify whether the ConfigMap or its keys must be defined.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 35734,
          },
          "name": "optional",
          "optional": true,
          "type": Object {
            "primitive": "boolean",
          },
        },
      ],
    },
    "monitoringcoreoscom.ThanosRulerSpecVolumesProjectedSourcesConfigMapItems": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "ThanosRulerSpecVolumesProjectedSourcesConfigMapItems",
        },
        "summary": "Maps a string key to a path within a volume.",
      },
      "fqn": "monitoringcoreoscom.ThanosRulerSpecVolumesProjectedSourcesConfigMapItems",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 36552,
      },
      "name": "ThanosRulerSpecVolumesProjectedSourcesConfigMapItems",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecVolumesProjectedSourcesConfigMapItems#key",
            },
            "summary": "The key to project.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 36558,
          },
          "name": "key",
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecVolumesProjectedSourcesConfigMapItems#path",
            },
            "remarks": "May not be an absolute path. May not contain the path element '..'. May not start with the string '..'.",
            "summary": "The relative path of the file to map the key to.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 36572,
          },
          "name": "path",
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecVolumesProjectedSourcesConfigMapItems#mode",
            },
            "remarks": "If not specified, the volume defaultMode will be used. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.",
            "summary": "Optional: mode bits to use on this file, must be a value between 0 and 0777.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 36565,
          },
          "name": "mode",
          "optional": true,
          "type": Object {
            "primitive": "number",
          },
        },
      ],
    },
    "monitoringcoreoscom.ThanosRulerSpecVolumesProjectedSourcesDownwardApi": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "ThanosRulerSpecVolumesProjectedSourcesDownwardApi",
        },
        "summary": "information about the downwardAPI data to project.",
      },
      "fqn": "monitoringcoreoscom.ThanosRulerSpecVolumesProjectedSourcesDownwardApi",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 35759,
      },
      "name": "ThanosRulerSpecVolumesProjectedSourcesDownwardApi",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecVolumesProjectedSourcesDownwardApi#items",
            },
            "summary": "Items is a list of DownwardAPIVolume file.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 35765,
          },
          "name": "items",
          "optional": true,
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "fqn": "monitoringcoreoscom.ThanosRulerSpecVolumesProjectedSourcesDownwardApiItems",
              },
              "kind": "array",
            },
          },
        },
      ],
    },
    "monitoringcoreoscom.ThanosRulerSpecVolumesProjectedSourcesDownwardApiItems": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "ThanosRulerSpecVolumesProjectedSourcesDownwardApiItems",
        },
        "summary": "DownwardAPIVolumeFile represents information to create the file containing the pod field.",
      },
      "fqn": "monitoringcoreoscom.ThanosRulerSpecVolumesProjectedSourcesDownwardApiItems",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 36597,
      },
      "name": "ThanosRulerSpecVolumesProjectedSourcesDownwardApiItems",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecVolumesProjectedSourcesDownwardApiItems#path",
            },
            "remarks": "Must not be absolute or contain the '..' path. Must be utf-8 encoded. The first item of the relative path must not start with '..'",
            "summary": "Required: Path is  the relative path name of the file to be created.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 36617,
          },
          "name": "path",
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecVolumesProjectedSourcesDownwardApiItems#fieldRef",
            },
            "summary": "Required: Selects a field of the pod: only annotations, labels, name and namespace are supported.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 36603,
          },
          "name": "fieldRef",
          "optional": true,
          "type": Object {
            "fqn": "monitoringcoreoscom.ThanosRulerSpecVolumesProjectedSourcesDownwardApiItemsFieldRef",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecVolumesProjectedSourcesDownwardApiItems#mode",
            },
            "remarks": "If not specified, the volume defaultMode will be used. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.",
            "summary": "Optional: mode bits to use on this file, must be a value between 0 and 0777.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 36610,
          },
          "name": "mode",
          "optional": true,
          "type": Object {
            "primitive": "number",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecVolumesProjectedSourcesDownwardApiItems#resourceFieldRef",
            },
            "summary": "Selects a resource of the container: only resources limits and requests (limits.cpu, limits.memory, requests.cpu and requests.memory) are currently supported.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 36624,
          },
          "name": "resourceFieldRef",
          "optional": true,
          "type": Object {
            "fqn": "monitoringcoreoscom.ThanosRulerSpecVolumesProjectedSourcesDownwardApiItemsResourceFieldRef",
          },
        },
      ],
    },
    "monitoringcoreoscom.ThanosRulerSpecVolumesProjectedSourcesDownwardApiItemsFieldRef": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "ThanosRulerSpecVolumesProjectedSourcesDownwardApiItemsFieldRef",
        },
        "summary": "Required: Selects a field of the pod: only annotations, labels, name and namespace are supported.",
      },
      "fqn": "monitoringcoreoscom.ThanosRulerSpecVolumesProjectedSourcesDownwardApiItemsFieldRef",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 36785,
      },
      "name": "ThanosRulerSpecVolumesProjectedSourcesDownwardApiItemsFieldRef",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecVolumesProjectedSourcesDownwardApiItemsFieldRef#fieldPath",
            },
            "summary": "Path of the field to select in the specified API version.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 36798,
          },
          "name": "fieldPath",
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecVolumesProjectedSourcesDownwardApiItemsFieldRef#apiVersion",
            },
            "summary": "Version of the schema the FieldPath is written in terms of, defaults to \\"v1\\".",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 36791,
          },
          "name": "apiVersion",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
      ],
    },
    "monitoringcoreoscom.ThanosRulerSpecVolumesProjectedSourcesDownwardApiItemsResourceFieldRef": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "ThanosRulerSpecVolumesProjectedSourcesDownwardApiItemsResourceFieldRef",
        },
        "summary": "Selects a resource of the container: only resources limits and requests (limits.cpu, limits.memory, requests.cpu and requests.memory) are currently supported.",
      },
      "fqn": "monitoringcoreoscom.ThanosRulerSpecVolumesProjectedSourcesDownwardApiItemsResourceFieldRef",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 36822,
      },
      "name": "ThanosRulerSpecVolumesProjectedSourcesDownwardApiItemsResourceFieldRef",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecVolumesProjectedSourcesDownwardApiItemsResourceFieldRef#resource",
            },
            "summary": "Required: resource to select.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 36842,
          },
          "name": "resource",
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecVolumesProjectedSourcesDownwardApiItemsResourceFieldRef#containerName",
            },
            "summary": "Container name: required for volumes, optional for env vars.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 36828,
          },
          "name": "containerName",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecVolumesProjectedSourcesDownwardApiItemsResourceFieldRef#divisor",
            },
            "summary": "Specifies the output format of the exposed resources, defaults to \\"1\\".",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 36835,
          },
          "name": "divisor",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
      ],
    },
    "monitoringcoreoscom.ThanosRulerSpecVolumesProjectedSourcesSecret": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "ThanosRulerSpecVolumesProjectedSourcesSecret",
        },
        "summary": "information about the secret data to project.",
      },
      "fqn": "monitoringcoreoscom.ThanosRulerSpecVolumesProjectedSourcesSecret",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 35788,
      },
      "name": "ThanosRulerSpecVolumesProjectedSourcesSecret",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecVolumesProjectedSourcesSecret#items",
            },
            "remarks": "If specified, the listed keys will be projected into the specified paths, and unlisted keys will not be present. If a key is specified which is not present in the Secret, the volume setup will error unless it is marked optional. Paths must be relative and may not contain the '..' path or start with '..'.",
            "summary": "If unspecified, each key-value pair in the Data field of the referenced Secret will be projected into the volume as a file whose name is the key and content is the value.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 35794,
          },
          "name": "items",
          "optional": true,
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "fqn": "monitoringcoreoscom.ThanosRulerSpecVolumesProjectedSourcesSecretItems",
              },
              "kind": "array",
            },
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecVolumesProjectedSourcesSecret#name",
            },
            "remarks": "More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?",
            "summary": "Name of the referent.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 35801,
          },
          "name": "name",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecVolumesProjectedSourcesSecret#optional",
            },
            "summary": "Specify whether the Secret or its key must be defined.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 35808,
          },
          "name": "optional",
          "optional": true,
          "type": Object {
            "primitive": "boolean",
          },
        },
      ],
    },
    "monitoringcoreoscom.ThanosRulerSpecVolumesProjectedSourcesSecretItems": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "ThanosRulerSpecVolumesProjectedSourcesSecretItems",
        },
        "summary": "Maps a string key to a path within a volume.",
      },
      "fqn": "monitoringcoreoscom.ThanosRulerSpecVolumesProjectedSourcesSecretItems",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 36650,
      },
      "name": "ThanosRulerSpecVolumesProjectedSourcesSecretItems",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecVolumesProjectedSourcesSecretItems#key",
            },
            "summary": "The key to project.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 36656,
          },
          "name": "key",
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecVolumesProjectedSourcesSecretItems#path",
            },
            "remarks": "May not be an absolute path. May not contain the path element '..'. May not start with the string '..'.",
            "summary": "The relative path of the file to map the key to.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 36670,
          },
          "name": "path",
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecVolumesProjectedSourcesSecretItems#mode",
            },
            "remarks": "If not specified, the volume defaultMode will be used. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.",
            "summary": "Optional: mode bits to use on this file, must be a value between 0 and 0777.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 36663,
          },
          "name": "mode",
          "optional": true,
          "type": Object {
            "primitive": "number",
          },
        },
      ],
    },
    "monitoringcoreoscom.ThanosRulerSpecVolumesProjectedSourcesServiceAccountToken": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "ThanosRulerSpecVolumesProjectedSourcesServiceAccountToken",
        },
        "summary": "information about the serviceAccountToken data to project.",
      },
      "fqn": "monitoringcoreoscom.ThanosRulerSpecVolumesProjectedSourcesServiceAccountToken",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 35833,
      },
      "name": "ThanosRulerSpecVolumesProjectedSourcesServiceAccountToken",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecVolumesProjectedSourcesServiceAccountToken#path",
            },
            "summary": "Path is the path relative to the mount point of the file to project the token into.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 35854,
          },
          "name": "path",
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecVolumesProjectedSourcesServiceAccountToken#audience",
            },
            "remarks": "A recipient of a token must identify itself with an identifier specified in the audience of the token, and otherwise should reject the token. The audience defaults to the identifier of the apiserver.",
            "summary": "Audience is the intended audience of the token.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 35839,
          },
          "name": "audience",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecVolumesProjectedSourcesServiceAccountToken#expirationSeconds",
            },
            "default": "1 hour and must be at least 10 minutes.",
            "remarks": "As the token approaches expiration, the kubelet volume plugin will proactively rotate the service account token. The kubelet will start trying to rotate the token if the token is older than 80 percent of its time to live or if the token is older than 24 hours.Defaults to 1 hour and must be at least 10 minutes.",
            "summary": "ExpirationSeconds is the requested duration of validity of the service account token.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 35847,
          },
          "name": "expirationSeconds",
          "optional": true,
          "type": Object {
            "primitive": "number",
          },
        },
      ],
    },
    "monitoringcoreoscom.ThanosRulerSpecVolumesQuobyte": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "ThanosRulerSpecVolumesQuobyte",
        },
        "summary": "Quobyte represents a Quobyte mount on the host that shares a pod's lifetime.",
      },
      "fqn": "monitoringcoreoscom.ThanosRulerSpecVolumesQuobyte",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 31001,
      },
      "name": "ThanosRulerSpecVolumesQuobyte",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecVolumesQuobyte#registry",
            },
            "summary": "Registry represents a single or multiple Quobyte Registry services specified as a string as host:port pair (multiple entries are separated with commas) which acts as the central registry for volumes.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 31023,
          },
          "name": "registry",
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecVolumesQuobyte#volume",
            },
            "summary": "Volume is a string that references an already created Quobyte volume by name.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 31045,
          },
          "name": "volume",
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecVolumesQuobyte#group",
            },
            "default": "no group",
            "summary": "Group to map volume access to Default is no group.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 31008,
          },
          "name": "group",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecVolumesQuobyte#readOnly",
            },
            "default": "false.",
            "remarks": "Defaults to false.",
            "summary": "ReadOnly here will force the Quobyte volume to be mounted with read-only permissions.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 31016,
          },
          "name": "readOnly",
          "optional": true,
          "type": Object {
            "primitive": "boolean",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecVolumesQuobyte#tenant",
            },
            "summary": "Tenant owning the given Quobyte volume in the Backend Used with dynamically provisioned Quobyte volumes, value is set by the plugin.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 31030,
          },
          "name": "tenant",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecVolumesQuobyte#user",
            },
            "default": "serivceaccount user",
            "summary": "User to map volume access to Defaults to serivceaccount user.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 31038,
          },
          "name": "user",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
      ],
    },
    "monitoringcoreoscom.ThanosRulerSpecVolumesRbd": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "ThanosRulerSpecVolumesRbd",
        },
        "remarks": "More info: https://examples.k8s.io/volumes/rbd/README.md",
        "summary": "RBD represents a Rados Block Device mount on the host that shares a pod's lifetime.",
      },
      "fqn": "monitoringcoreoscom.ThanosRulerSpecVolumesRbd",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 31073,
      },
      "name": "ThanosRulerSpecVolumesRbd",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecVolumesRbd#image",
            },
            "remarks": "More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it",
            "summary": "The rados image name.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 31086,
          },
          "name": "image",
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecVolumesRbd#monitors",
            },
            "remarks": "More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it",
            "summary": "A collection of Ceph monitors.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 31101,
          },
          "name": "monitors",
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "primitive": "string",
              },
              "kind": "array",
            },
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecVolumesRbd#fsType",
            },
            "remarks": "Tip: Ensure that the filesystem type is supported by the host operating system. Examples: \\"ext4\\", \\"xfs\\", \\"ntfs\\". Implicitly inferred to be \\"ext4\\" if unspecified. More info: https://kubernetes.io/docs/concepts/storage/volumes#rbd TODO: how do we prevent errors in the filesystem from compromising the machine",
            "summary": "Filesystem type of the volume that you want to mount.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 31079,
          },
          "name": "fsType",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecVolumesRbd#keyring",
            },
            "default": "etc/ceph/keyring. More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it",
            "remarks": "Default is /etc/ceph/keyring. More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it",
            "summary": "Keyring is the path to key ring for RBDUser.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 31094,
          },
          "name": "keyring",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecVolumesRbd#pool",
            },
            "default": "rbd. More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it",
            "remarks": "Default is rbd. More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it",
            "summary": "The rados pool name.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 31109,
          },
          "name": "pool",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecVolumesRbd#readOnly",
            },
            "default": "false. More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it",
            "remarks": "Defaults to false. More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it",
            "summary": "ReadOnly here will force the ReadOnly setting in VolumeMounts.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 31117,
          },
          "name": "readOnly",
          "optional": true,
          "type": Object {
            "primitive": "boolean",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecVolumesRbd#secretRef",
            },
            "default": "nil. More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it",
            "remarks": "If provided overrides keyring. Default is nil. More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it",
            "summary": "SecretRef is name of the authentication secret for RBDUser.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 31125,
          },
          "name": "secretRef",
          "optional": true,
          "type": Object {
            "fqn": "monitoringcoreoscom.ThanosRulerSpecVolumesRbdSecretRef",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecVolumesRbd#user",
            },
            "default": "admin. More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it",
            "remarks": "Default is admin. More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it",
            "summary": "The rados user name.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 31133,
          },
          "name": "user",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
      ],
    },
    "monitoringcoreoscom.ThanosRulerSpecVolumesRbdSecretRef": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "ThanosRulerSpecVolumesRbdSecretRef",
        },
        "default": "nil. More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it",
        "remarks": "If provided overrides keyring. Default is nil. More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it",
        "summary": "SecretRef is name of the authentication secret for RBDUser.",
      },
      "fqn": "monitoringcoreoscom.ThanosRulerSpecVolumesRbdSecretRef",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 33794,
      },
      "name": "ThanosRulerSpecVolumesRbdSecretRef",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecVolumesRbdSecretRef#name",
            },
            "remarks": "More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?",
            "summary": "Name of the referent.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 33800,
          },
          "name": "name",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
      ],
    },
    "monitoringcoreoscom.ThanosRulerSpecVolumesScaleIo": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "ThanosRulerSpecVolumesScaleIo",
        },
        "summary": "ScaleIO represents a ScaleIO persistent volume attached and mounted on Kubernetes nodes.",
      },
      "fqn": "monitoringcoreoscom.ThanosRulerSpecVolumesScaleIo",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 31163,
      },
      "name": "ThanosRulerSpecVolumesScaleIo",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecVolumesScaleIo#gateway",
            },
            "summary": "The host address of the ScaleIO API Gateway.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 31177,
          },
          "name": "gateway",
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecVolumesScaleIo#secretRef",
            },
            "remarks": "If this is not provided, Login operation will fail.",
            "summary": "SecretRef references to the secret for ScaleIO user and other sensitive information.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 31199,
          },
          "name": "secretRef",
          "type": Object {
            "fqn": "monitoringcoreoscom.ThanosRulerSpecVolumesScaleIoSecretRef",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecVolumesScaleIo#system",
            },
            "summary": "The name of the storage system as configured in ScaleIO.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 31228,
          },
          "name": "system",
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecVolumesScaleIo#fsType",
            },
            "default": "xfs\\".",
            "remarks": "Must be a filesystem type supported by the host operating system. Ex. \\"ext4\\", \\"xfs\\", \\"ntfs\\". Default is \\"xfs\\".",
            "summary": "Filesystem type to mount.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 31170,
          },
          "name": "fsType",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecVolumesScaleIo#protectionDomain",
            },
            "summary": "The name of the ScaleIO Protection Domain for the configured storage.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 31184,
          },
          "name": "protectionDomain",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecVolumesScaleIo#readOnly",
            },
            "default": "false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts.",
            "remarks": "ReadOnly here will force the ReadOnly setting in VolumeMounts.",
            "summary": "Defaults to false (read/write).",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 31192,
          },
          "name": "readOnly",
          "optional": true,
          "type": Object {
            "primitive": "boolean",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecVolumesScaleIo#sslEnabled",
            },
            "summary": "Flag to enable/disable SSL communication with Gateway, default false.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 31206,
          },
          "name": "sslEnabled",
          "optional": true,
          "type": Object {
            "primitive": "boolean",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecVolumesScaleIo#storageMode",
            },
            "default": "ThinProvisioned.",
            "remarks": "Default is ThinProvisioned.",
            "summary": "Indicates whether the storage for a volume should be ThickProvisioned or ThinProvisioned.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 31214,
          },
          "name": "storageMode",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecVolumesScaleIo#storagePool",
            },
            "summary": "The ScaleIO Storage Pool associated with the protection domain.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 31221,
          },
          "name": "storagePool",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecVolumesScaleIo#volumeName",
            },
            "summary": "The name of a volume already created in the ScaleIO system that is associated with this volume source.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 31235,
          },
          "name": "volumeName",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
      ],
    },
    "monitoringcoreoscom.ThanosRulerSpecVolumesScaleIoSecretRef": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "ThanosRulerSpecVolumesScaleIoSecretRef",
        },
        "remarks": "If this is not provided, Login operation will fail.",
        "summary": "SecretRef references to the secret for ScaleIO user and other sensitive information.",
      },
      "fqn": "monitoringcoreoscom.ThanosRulerSpecVolumesScaleIoSecretRef",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 33823,
      },
      "name": "ThanosRulerSpecVolumesScaleIoSecretRef",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecVolumesScaleIoSecretRef#name",
            },
            "remarks": "More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?",
            "summary": "Name of the referent.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 33829,
          },
          "name": "name",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
      ],
    },
    "monitoringcoreoscom.ThanosRulerSpecVolumesSecret": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "ThanosRulerSpecVolumesSecret",
        },
        "remarks": "More info: https://kubernetes.io/docs/concepts/storage/volumes#secret",
        "summary": "Secret represents a secret that should populate this volume.",
      },
      "fqn": "monitoringcoreoscom.ThanosRulerSpecVolumesSecret",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 31267,
      },
      "name": "ThanosRulerSpecVolumesSecret",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecVolumesSecret#defaultMode",
            },
            "default": "0644. Directories within the path are not affected by this setting. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.",
            "remarks": "Must be a value between 0 and 0777. Defaults to 0644. Directories within the path are not affected by this setting. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.",
            "summary": "Optional: mode bits to use on created files by default.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 31274,
          },
          "name": "defaultMode",
          "optional": true,
          "type": Object {
            "primitive": "number",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecVolumesSecret#items",
            },
            "remarks": "If specified, the listed keys will be projected into the specified paths, and unlisted keys will not be present. If a key is specified which is not present in the Secret, the volume setup will error unless it is marked optional. Paths must be relative and may not contain the '..' path or start with '..'.",
            "summary": "If unspecified, each key-value pair in the Data field of the referenced Secret will be projected into the volume as a file whose name is the key and content is the value.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 31281,
          },
          "name": "items",
          "optional": true,
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "fqn": "monitoringcoreoscom.ThanosRulerSpecVolumesSecretItems",
              },
              "kind": "array",
            },
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecVolumesSecret#optional",
            },
            "summary": "Specify whether the Secret or its keys must be defined.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 31288,
          },
          "name": "optional",
          "optional": true,
          "type": Object {
            "primitive": "boolean",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecVolumesSecret#secretName",
            },
            "remarks": "More info: https://kubernetes.io/docs/concepts/storage/volumes#secret",
            "summary": "Name of the secret in the pod's namespace to use.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 31295,
          },
          "name": "secretName",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
      ],
    },
    "monitoringcoreoscom.ThanosRulerSpecVolumesSecretItems": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "ThanosRulerSpecVolumesSecretItems",
        },
        "summary": "Maps a string key to a path within a volume.",
      },
      "fqn": "monitoringcoreoscom.ThanosRulerSpecVolumesSecretItems",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 33852,
      },
      "name": "ThanosRulerSpecVolumesSecretItems",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecVolumesSecretItems#key",
            },
            "summary": "The key to project.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 33858,
          },
          "name": "key",
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecVolumesSecretItems#path",
            },
            "remarks": "May not be an absolute path. May not contain the path element '..'. May not start with the string '..'.",
            "summary": "The relative path of the file to map the key to.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 33872,
          },
          "name": "path",
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecVolumesSecretItems#mode",
            },
            "remarks": "If not specified, the volume defaultMode will be used. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.",
            "summary": "Optional: mode bits to use on this file, must be a value between 0 and 0777.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 33865,
          },
          "name": "mode",
          "optional": true,
          "type": Object {
            "primitive": "number",
          },
        },
      ],
    },
    "monitoringcoreoscom.ThanosRulerSpecVolumesStorageos": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "ThanosRulerSpecVolumesStorageos",
        },
        "summary": "StorageOS represents a StorageOS volume attached and mounted on Kubernetes nodes.",
      },
      "fqn": "monitoringcoreoscom.ThanosRulerSpecVolumesStorageos",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 31321,
      },
      "name": "ThanosRulerSpecVolumesStorageos",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecVolumesStorageos#fsType",
            },
            "remarks": "Must be a filesystem type supported by the host operating system. Ex. \\"ext4\\", \\"xfs\\", \\"ntfs\\". Implicitly inferred to be \\"ext4\\" if unspecified.",
            "summary": "Filesystem type to mount.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 31327,
          },
          "name": "fsType",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecVolumesStorageos#readOnly",
            },
            "default": "false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts.",
            "remarks": "ReadOnly here will force the ReadOnly setting in VolumeMounts.",
            "summary": "Defaults to false (read/write).",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 31335,
          },
          "name": "readOnly",
          "optional": true,
          "type": Object {
            "primitive": "boolean",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecVolumesStorageos#secretRef",
            },
            "remarks": "If not specified, default values will be attempted.",
            "summary": "SecretRef specifies the secret to use for obtaining the StorageOS API credentials.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 31342,
          },
          "name": "secretRef",
          "optional": true,
          "type": Object {
            "fqn": "monitoringcoreoscom.ThanosRulerSpecVolumesStorageosSecretRef",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecVolumesStorageos#volumeName",
            },
            "remarks": "Volume names are only unique within a namespace.",
            "summary": "VolumeName is the human-readable name of the StorageOS volume.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 31349,
          },
          "name": "volumeName",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecVolumesStorageos#volumeNamespace",
            },
            "remarks": "If no namespace is specified then the Pod's namespace will be used.  This allows the Kubernetes name scoping to be mirrored within StorageOS for tighter integration. Set VolumeName to any name to override the default behaviour. Set to \\"default\\" if you are not using namespaces within StorageOS. Namespaces that do not pre-exist within StorageOS will be created.",
            "summary": "VolumeNamespace specifies the scope of the volume within StorageOS.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 31356,
          },
          "name": "volumeNamespace",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
      ],
    },
    "monitoringcoreoscom.ThanosRulerSpecVolumesStorageosSecretRef": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "ThanosRulerSpecVolumesStorageosSecretRef",
        },
        "remarks": "If not specified, default values will be attempted.",
        "summary": "SecretRef specifies the secret to use for obtaining the StorageOS API credentials.",
      },
      "fqn": "monitoringcoreoscom.ThanosRulerSpecVolumesStorageosSecretRef",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 33897,
      },
      "name": "ThanosRulerSpecVolumesStorageosSecretRef",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecVolumesStorageosSecretRef#name",
            },
            "remarks": "More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?",
            "summary": "Name of the referent.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 33903,
          },
          "name": "name",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
      ],
    },
    "monitoringcoreoscom.ThanosRulerSpecVolumesVsphereVolume": Object {
      "assembly": "monitoringcoreoscom",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "ThanosRulerSpecVolumesVsphereVolume",
        },
        "summary": "VsphereVolume represents a vSphere volume attached and mounted on kubelets host machine.",
      },
      "fqn": "monitoringcoreoscom.ThanosRulerSpecVolumesVsphereVolume",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "monitoring.coreos.com.ts",
        "line": 31383,
      },
      "name": "ThanosRulerSpecVolumesVsphereVolume",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecVolumesVsphereVolume#volumePath",
            },
            "summary": "Path that identifies vSphere volume vmdk.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 31410,
          },
          "name": "volumePath",
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecVolumesVsphereVolume#fsType",
            },
            "remarks": "Must be a filesystem type supported by the host operating system. Ex. \\"ext4\\", \\"xfs\\", \\"ntfs\\". Implicitly inferred to be \\"ext4\\" if unspecified.",
            "summary": "Filesystem type to mount.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 31389,
          },
          "name": "fsType",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecVolumesVsphereVolume#storagePolicyID",
            },
            "summary": "Storage Policy Based Management (SPBM) profile ID associated with the StoragePolicyName.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 31396,
          },
          "name": "storagePolicyId",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ThanosRulerSpecVolumesVsphereVolume#storagePolicyName",
            },
            "summary": "Storage Policy Based Management (SPBM) profile name.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "monitoring.coreos.com.ts",
            "line": 31403,
          },
          "name": "storagePolicyName",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
      ],
    },
  },
  "version": "0.0.0",
}
`;
